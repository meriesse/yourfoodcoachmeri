{"version":3,"sources":["Components/Diet/NewDiet.js"],"names":["NewDiet","currentUser","useAuth","navigate","useNavigate","nutrizionista","setNutrizionista","useState","warning","setWarning","error","setError","activeSection","setActiveSection","section","setSection","disabled","loading","setLoading","progress","setProgress","checkAnagrafica","setCheckAnagrafica","checkObiettivi","setCheckObiettivi","checkLunedi","setCheckLunedi","checkMartedi","setCheckMartedi","checkMercoledi","setCheckMercoledi","checkGiovedi","setCheckGiovedi","checkVenerdi","setCheckVenerdi","checkSabato","setCheckSabato","checkDomenica","setCheckDomenica","showModalAnalysis","setShowModalAnalysis","showModalNewMeal","setShowModalNewMeal","showModalImportDiet","setShowModalImportDiet","reloadOptions","setReloadOptions","diets","setDiets","dietsSelect","setDietsSelect","dietCopy","setDietCopy","food","setFood","exists","setExists","nutrients","kcals","proteins","fats","carbohydrates","userInput","setUserInput","showDetails","setShowDetails","formDataNewMeal","setFormDataNewMeal","email_nutrizionista","email","data_inserimento","nome","sostituzioni","preparazione","colazione","pranzo","spuntino","cena","makeid","result","characters","i","charAt","Math","floor","random","useEffect","async","q","query","collection","db","where","orderBy","getDocs","then","querySnapshot","docs","map","doc","data","id","value","label","nome_paziente","cognome_paziente","catch","finally","getDiets","scrollToTop","fetchUser","dataSnap","info","cognome","telefono","ruolo","setFormData","formData","email_paziente","numero_telefono_paziente","console","numero_telefono_nutrizionista","telegram_bot_passcode","telegram_user_id","telegram_chat_id","telegram_alerts","telegram_alerts_acqua","tipologia_dieta","eta_paziente","sesso_paziente","codice_fiscale_paziente","peso_paziente","altezza_paziente","data_inizio_dieta","data_fine_dieta","obiettivo_peso","kcal_giornaliere","colazione_lunedi","colazione_unica","spuntino_lunedi_mattina","spuntino_unico_mattina","pranzo_lunedi","fascia_oraria_pranzo","spuntino_lunedi_pomeriggio","spuntino_unico_pomeriggio","cena_lunedi","fascia_oraria_cena","colazione_martedi","spuntino_martedi_mattina","pranzo_martedi","spuntino_martedi_pomeriggio","cena_martedi","colazione_mercoledi","spuntino_mercoledi_mattina","pranzo_mercoledi","spuntino_mercoledi_pomeriggio","cena_mercoledi","colazione_giovedi","spuntino_giovedi_mattina","pranzo_giovedi","spuntino_giovedi_pomeriggio","cena_giovedi","colazione_venerdi","spuntino_venerdi_mattina","pranzo_venerdi","spuntino_venerdi_pomeriggio","cena_venerdi","colazione_sabato","spuntino_sabato_mattina","pranzo_sabato","spuntino_sabato_pomeriggio","cena_sabato","colazione_domenica","spuntino_domenica_mattina","pranzo_domenica","spuntino_domenica_pomeriggio","cena_domenica","log","empty","checkExists","length","Validator","codiceFiscale","valid","cognome_paz","nome_paz","email_paz","tel_paz","sesso","cf_paz","_jsxs","_Fragment","children","_jsx","Container","className","style","background","backgroundSize","minHeight","padding","marginTop","Card","marginBottom","borderRadius","boxShadow","borderLeft","borderTop","fontFamily","marginLeft","LinkContainer","to","Button","height","width","variant","FontAwesomeIcon","icon","faAngleLeft","color","marginRight","type","onClick","e","faFileImport","src","NewDietImg","alt","margin","Alert","dismissible","onClose","SyncLoader","position","top","left","transform","zIndex","MealAnalysisModal","showModal","setShowModal","Nav","justify","defaultActiveKey","activeKey","Item","Link","eventKey","faCheck","faXmark","Form","onSubmit","preventDefault","addDiet","r","state","replace","DietSections","faAngleRight","faPlus","Modal","show","onHide","size","centered","Header","closeButton","Title","NewMealImg","Body","addMeal","MealSections","docRef","getDoc","getDiet","Select","inputId","options","placeholder","onChange","required"],"mappings":"iHAAA,gSA4Be,SAASA,IACpB,MAAM,YAACC,GAAeC,cAChBC,EAAWC,eACVC,EAAeC,GAAoBC,mBAAS,CAAC,MAC7CC,EAASC,GAAcF,mBAAS,KAChCG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAeC,GAAoBN,mBAAS,IAC5CO,EAASC,GAAcR,mBAAS,IAChCS,GAAYT,oBAAS,IACrBU,EAASC,GAAcX,oBAAS,IAChCY,EAAUC,GAAeb,oBAAS,IAClCc,EAAiBC,GAAsBf,oBAAS,IAChDgB,EAAgBC,GAAqBjB,oBAAS,IAC9CkB,EAAaC,GAAkBnB,oBAAS,IACxCoB,EAAcC,GAAmBrB,oBAAS,IAC1CsB,EAAgBC,IAAqBvB,oBAAS,IAC9CwB,GAAcC,IAAmBzB,oBAAS,IAC1C0B,GAAcC,IAAmB3B,oBAAS,IAC1C4B,GAAaC,IAAkB7B,oBAAS,IACxC8B,GAAeC,IAAoB/B,oBAAS,IAC5CgC,GAAmBC,IAAwBjC,oBAAS,IACpDkC,GAAkBC,IAAuBnC,oBAAS,IAClDoC,GAAqBC,IAA0BrC,oBAAS,IACxDsC,GAAeC,IAAoBvC,oBAAS,IAC5CwC,GAAOC,IAAYzC,mBAAS,KAC5B0C,GAAaC,IAAkB3C,mBAAS,KACxC4C,GAAUC,IAAe7C,mBAAS,KAGlC8C,GAAMC,IAAW/C,mBAAS,CAAC,MAG3BgD,GAAQC,IAAajD,oBAAS,IAC9BkD,IAAalD,mBAAS,KACtBmD,IAASnD,mBAAS,KAClBoD,IAAYpD,mBAAS,KACrBqD,IAAQrD,mBAAS,KACjBsD,IAAiBtD,mBAAS,KAC1BuD,GAAWC,IAAgBxD,mBAAS,KACpCyD,GAAaC,IAAkB1D,oBAAS,IAExC2D,GAAiBC,IAAsB5D,mBAAS,CACnD6D,oBAAqBnE,EAAYoE,MACjCC,iBAAkB,GAClBC,KAAM,GACNC,aAAc,GACdC,aAAc,GACdC,WAAW,EACXC,QAAQ,EACRC,UAAU,EACVC,MAAM,IAGV,SAASC,KACL,IAAIC,EAAS,GAGb,MAAMC,EAAa,aAEnB,IAAK,IAAIC,EAAI,EAAGA,EAJH,EAIeA,IACxBF,GAAUC,EAAWE,OAAOC,KAAKC,MAFdJ,GAEoBG,KAAKE,WAEhD,OAAON,CACX,CAEAO,qBAAU,KACWC,WACbnE,GAAY,GACZ,MAAMoE,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,sBAAuB,KAAM3F,EAAYoE,OAAQwB,YAAQ,mBAAoB,eACtHC,YAAQN,GACTO,MAAMC,IACHhD,GAASgD,EAAcC,KAAKC,KAAKC,IAAG,IAAUA,EAAIC,OAAQC,GAAIF,EAAIE,QAClEnD,GAAe8C,EAAcC,KAAKC,KAAKC,IAAG,CAAOG,MAAOH,EAAIE,GAAIE,MAAOJ,EAAIC,OAAOI,cAAgB,IAAML,EAAIC,OAAOK,qBAAoB,IACxIC,OAAOhG,GAAUC,EAAS,8CAC5BgG,SAAQ,IAAMvF,GAAY,IAAO,EAE1CwF,EAAU,GAEX,IAGHtB,qBAAU,KAENuB,cACAzF,GAAY,GACZ0F,YAAU7G,EAAYoE,OACjB0B,MAAMgB,IACH,MAAMC,EAAO,CACTzC,KAAMwC,EAASxC,KACf0C,QAASF,EAASE,QAClB5C,MAAO0C,EAAS1C,MAChB6C,SAAUH,EAASG,SACnBC,MAAOJ,EAASI,OAEpB7G,EAAiB0G,GACK,WAAnBD,EAASI,OACRC,GAAY,IAAIC,GAAUb,cAAeO,EAASxC,KAAMkC,iBAAkBM,EAASE,QAASK,eAAgBP,EAAS1C,MAAOkD,yBAA0BR,EAASG,UACnK,IAEHR,OAAOhG,IACJ8G,QAAQ9G,MAAMA,EAAM,IACrBqF,MAAK,KACR3E,GAAY,EAAM,GACpB,GAEH,IAEH,MAAOiG,GAAUD,IAAe7G,mBAAS,CACrC6D,oBAAqB,GACrBqD,8BAA+B,GAC/BC,sBAAuB5C,KACvB6C,iBAAkB,GAClBC,iBAAkB,GAClBC,iBAAiB,EACjBC,uBAAuB,EACvBC,gBAAiB,GACjBzD,iBAAkB,GAClBkC,cAAe,GACfC,iBAAkB,GAClBa,eAAgB,GAChBC,yBAA0B,GAC1BS,aAAc,GACdC,eAAgB,GAChBC,wBAAyB,GACzBC,cAAe,GACfC,iBAAkB,GAClBC,kBAAmB,GACnBC,gBAAiB,GACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,iBAAkB,GAClBC,iBAAiB,EACjBC,wBAAyB,GACzBC,wBAAwB,EACxBC,cAAe,GACfC,qBAAsB,GACtBC,2BAA4B,GAC5BC,2BAA2B,EAC3BC,YAAa,GACbC,mBAAoB,GAEpBC,kBAAmB,GACnBC,yBAA0B,GAC1BC,eAAgB,GAChBC,4BAA6B,GAC7BC,aAAc,GAEdC,oBAAqB,GACrBC,2BAA4B,GAC5BC,iBAAkB,GAClBC,8BAA+B,GAC/BC,eAAgB,GAEhBC,kBAAmB,GACnBC,yBAA0B,GAC1BC,eAAgB,GAChBC,4BAA6B,GAC7BC,aAAc,GAEdC,kBAAmB,GACnBC,yBAA0B,GAC1BC,eAAgB,GAChBC,4BAA6B,GAC7BC,aAAc,GAEdC,iBAAkB,GAClBC,wBAAyB,GACzBC,cAAe,GACfC,2BAA4B,GAC5BC,YAAa,GAEbC,mBAAoB,GACpBC,0BAA2B,GAC3BC,gBAAiB,GACjBC,6BAA8B,GAC9BC,cAAe,KAKnB1F,qBAAU,KACcC,WAChB,GAAgC,KAA5B8B,GAASC,eAAuB,CAChC3G,EAAS,IACT,MAAM6E,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,iBAAkB,KAAMyB,GAASC,gBAAiB1B,YAAM,sBAAuB,KAAM3F,EAAYoE,cAC1IyB,YAAQN,GACTO,MAAMC,IACHwB,QAAQyD,IAAIjF,EAAcC,MAErBD,EAAckF,MAKf1H,IAAU,IAJVA,IAAU,GACV7C,EAAS,qHAIb,IACD+F,OAAOhG,GAAUC,EAAS,8CAC5BgG,SAAQ,IAAMvF,GAAY,IACnC,GAEJ+J,EAAa,GAEd,CAAC9D,GAASC,iBAGbhC,qBAAU,KACcC,WACgC,KAA5C8B,GAASa,wBAAwBkD,SACjCzK,EAAS,IACJ0K,IAAUC,cAAcjE,GAASa,yBAAyBqD,OAC3D5K,EAAS,gDAEjB,EAEJwK,EAAa,GAEd,CAAC9D,GAASa,0BAIb5C,qBAAU,KACyB,KAA3B+B,GAASb,eAAiD,KAAzBa,GAASmE,aAAkD,KAA5BnE,GAASC,gBAAqE,IAA5CD,GAASE,yBAAyB6D,QAA0C,KAA1B/D,GAASW,cAAmD,KAA5BX,GAASY,gBAAyBoD,IAAUC,cAAcjE,GAASa,yBAAyBqD,MAI5QjK,GAHCiC,IAMLjC,GAAmB,EACvB,GACD,CAAC+F,GAASoE,SAAUpE,GAASmE,YAAanE,GAASqE,UAAWrE,GAASsE,QAAStE,GAASW,aAAcX,GAASuE,MAAOvE,GAASwE,OAAQtI,KAE3I+B,qBAAU,KACyB,KAA3B+B,GAASc,eAAsD,KAA9Bd,GAASe,kBAA0D,KAA/Bf,GAASgB,mBAAyD,KAA7BhB,GAASiB,iBAAsD,KAA5BjB,GAASkB,gBAAyBlB,GAASmB,iBACxLhH,GAAkB,GAElBA,GAAkB,EACtB,GACD,CAAC6F,GAASc,cAAed,GAASe,iBAAkBf,GAASgB,kBAC5DhB,GAASiB,gBAAiBjB,GAASkB,eAAgBlB,GAASmB,mBAEhElD,qBAAU,KAC4B,KAA9B+B,GAASoB,kBAAgE,KAArCpB,GAASsB,yBAA6D,KAA3BtB,GAASwB,eAAgE,KAAxCxB,GAAS0B,4BAA8D,KAAzB1B,GAAS4B,YACvKvH,GAAe,GAEfA,GAAe,EACnB,GACD,CAAC2F,GAASoB,iBAAkBpB,GAASsB,wBAAyBtB,GAASwB,cAAexB,GAAS0B,2BAC9F1B,GAAS4B,cAEb3D,qBAAU,KAC6B,KAA/B+B,GAAS8B,mBAA4B9B,GAAS+B,0BAAwD,KAA5B/B,GAASgC,gBAAkE,KAAzChC,GAASiC,6BAAgE,KAA1BjC,GAASkC,aACpK3H,GAAgB,GAEhBA,GAAgB,EACpB,GACD,CAACyF,GAAS8B,kBAAmB9B,GAAS+B,yBAA0B/B,GAASgC,eAAgBhC,GAASiC,4BACjGjC,GAASkC,eAEbjE,qBAAU,KAC+B,KAAjC+B,GAASmC,qBAAsE,KAAxCnC,GAASoC,4BAAmE,KAA9BpC,GAASqC,kBAAsE,KAA3CrC,GAASsC,+BAAoE,KAA5BtC,GAASuC,eACnL9H,IAAkB,GAElBA,IAAkB,EACtB,GACD,CAACuF,GAASmC,oBAAqBnC,GAASoC,2BAA4BpC,GAASqC,iBAAkBrC,GAASsC,8BACvGtC,GAASuC,iBAEbtE,qBAAU,KAC6B,KAA/B+B,GAASwC,mBAA4BxC,GAASyC,0BAAwD,KAA5BzC,GAAS0C,gBAAkE,KAAzC1C,GAAS2C,6BAAgE,KAA1B3C,GAAS4C,aACpKjI,IAAgB,GAEhBA,IAAgB,EACpB,GACD,CAACqF,GAASwC,kBAAmBxC,GAASyC,yBAA0BzC,GAAS0C,eAAgB1C,GAAS2C,4BACjG3C,GAAS4C,eAEb3E,qBAAU,KAC6B,KAA/B+B,GAAS6C,mBAAkE,KAAtC7C,GAAS8C,0BAA+D,KAA5B9C,GAAS+C,gBAAkE,KAAzC/C,GAASgD,6BAAgE,KAA1BhD,GAASiD,aAC3KpI,IAAgB,GAEhBA,IAAgB,EACpB,GACD,CAACmF,GAAS6C,kBAAmB7C,GAAS8C,yBAA0B9C,GAAS+C,eAAgB/C,GAASgD,4BACjGhD,GAASiD,eAEbhF,qBAAU,KAC4B,KAA9B+B,GAASkD,kBAA2BlD,GAASmD,yBAAsD,KAA3BnD,GAASoD,eAAgE,KAAxCpD,GAASqD,4BAA8D,KAAzBrD,GAASsD,YAChKvI,IAAe,GAEfA,IAAe,EACnB,GACD,CAACiF,GAASkD,iBAAkBlD,GAASmD,wBAAyBnD,GAASoD,cAAepD,GAASqD,2BAC9FrD,GAASsD,cAEbrF,qBAAU,KAC8B,KAAhC+B,GAASuD,oBAAoE,KAAvCvD,GAASwD,2BAAiE,KAA7BxD,GAASyD,iBAAoE,KAA1CzD,GAAS0D,8BAAkE,KAA3B1D,GAAS2D,cAC/K1I,IAAiB,GAEjBA,IAAiB,EACrB,GACD,CAAC+E,GAASuD,mBAAoBvD,GAASwD,0BAA2BxD,GAASyD,gBAAiBzD,GAAS0D,6BACpG1D,GAAS2D,gBAuIb,OACIc,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAACC,IAAS,CAACC,UAAW,mBACXC,MAAO,CACHC,WAAY,iGACZC,eAAgB,QAChBC,UAAW,UACXC,QAAS,GACXR,SACTC,cAACC,IAAS,CAACC,UAAW,+BAA+BH,SACjDC,cAACC,IAAS,CAACC,UAAW,4CACXC,MAAO,CAACG,UAAW,IAAKE,UAAW,IAAIT,SAC9CF,eAACY,IAAI,CAACP,UAAW,iBACXC,MAAO,CACHK,UAAW,GACXE,aAAc,GACdC,aAAc,GACdC,UAAW,oCACXC,WAAY,kCACZC,UAAW,mCACbf,SAAA,CACJF,eAAA,MAAIM,MAAO,CAACY,WAAY,QAASP,UAAW,IAAIT,SAAA,CAC5CC,cAAA,OAAKE,UAAW,wBAAwBH,SACpCF,eAAA,OAAKK,UAAW,SAASH,SAAA,CACrBC,cAAA,OAAKE,UAAW,cACXC,MAAO,CAACK,UAAW,GAAIQ,WAAY,IAAIjB,SACxCC,cAACiB,gBAAa,CAACC,GAAG,SACHhB,UAAW,UAAUH,SAChCC,cAACmB,IAAM,CAAChB,MAAO,CAACiB,OAAQ,GAAIC,MAAO,KAC3BC,QAAS,UAAUvB,SAC1BC,cAACuB,IAAe,CAACC,KAAMC,IACNC,MAAO,gBAGjC1B,cAAA,OAAKE,UAAW,YACXC,MAAO,CAACwB,YAAa,GAAInB,UAAW,IAAIT,SACzCC,cAAA,MAAIE,UAAW,uBAAuBH,SAClCF,eAAA,UAAQ9K,SAAUC,EACVmL,MAAO,CAACkB,MAAO,IAAKX,aAAc,IAClCkB,KAAK,SACL1B,UAAU,kBACV2B,QAAUC,GAAMnL,IAAuB,GAAMoJ,SAAA,CACpDC,cAACuB,IAAe,CACbC,KAAMO,IACN5B,MAAO,CAACwB,YAAa,KAAK,6BAM9C9B,eAACI,IAAS,CACNC,UAAW,kEAAkEH,SAAA,CAC7EC,cAAA,OAAKgC,IAAKC,IACL9B,MAAO,CAACiB,OAAQ,GAAIC,MAAO,GAAIM,YAAa,IAC5CO,IAAK,gBAAgBlC,cAAA,KAC1BE,UAAW,UACXC,MAAO,CAACgC,OAAQ,GAAGpC,SAAC,0BAG3BtL,GAASuL,cAACoC,IAAK,CAAClC,UAAW,8CACXoB,QAAQ,SACRe,aAAa,EACbC,QAASA,IAAM5N,EAAS,IAAIqL,SAAEtL,IAC9CF,GAAWyL,cAACoC,IAAK,CAAClC,UAAW,2BACXoB,QAAQ,UACRe,aAAa,EACbC,QAASA,IAAM9N,EAAW,IAAIuL,SAAExL,IACnDyL,cAACuC,IAAU,CAACb,MAAM,UACN1M,QAASE,EACTiL,MAAO,CACHqC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,MAErB5N,GAAWwC,GAAU2H,OAAS,GAC7Ba,cAAC6C,IAAiB,CACdC,UAAWxM,GACXyM,aAAcxM,GACdwB,YAAaA,GACbC,eAAgBA,GAChBhD,QAASA,EACT6C,UAAWA,GACXT,KAAMA,GACNI,UAAWA,GACXC,MAAOA,GACPC,SAAUA,GACVC,KAAMA,GACNC,cAAeA,KAGvBiI,eAACmD,IAAG,CAAC9C,UAAW,yCACX+C,SAAO,EACP3B,QAAQ,OACR4B,iBAAiB,IACjBC,UAAWxO,EACXwL,MAAO,CAACgC,OAAQ,GAAGpC,SAAA,CACpBC,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXC,MAAO,CAACuB,MAAO,OACf4B,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CACX,cACwB,IAApB3K,GACG4K,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZR,UAAW,GACXkB,MAAO,QACPN,OAAQ,OAEZ,IAApBhM,GACG4K,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAIzCpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,aACW,IAAnBzK,GACG0K,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAEb,IAAnB9L,GACG0K,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAIzCpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,aACQ,IAAhBvK,GAAwBwK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAErC,IAAhB5L,GAAyBwK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAI/DpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,cACS,IAAjBrK,GAAyBsK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAErC,IAAjB1L,GAA0BsK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAIhEpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,gBACW,IAAnBnK,GACGoK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAEb,IAAnBxL,GACGoK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAIzCpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,cACS,IAAjBjK,IAAyBkK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAErC,IAAjBtL,IAA0BkK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAIhEpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,cACS,IAAjB/J,IAAyBgK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAErC,IAAjBpL,IAA0BgK,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAIhEpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,UACQ,IAAhB7J,IAAwB8J,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAErC,IAAhBlL,IAAyB8J,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,WAI/DpB,cAACgD,IAAII,KAAI,CAAArD,SACLF,eAACmD,IAAIK,KAAI,CAACnD,UAAW,iDACXoD,SAAS,IACTzB,QAASA,KACL/M,EAAW,GACXF,EAAiB,GACjBJ,EAAW,GAAG,EAChBuL,SAAA,CAAC,YACU,IAAlB3J,IAA0B4J,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAM+B,IACNpD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,QACPN,OAAQ,OAErC,IAAlBhL,IACG4J,cAACuB,IAAe,CAACrB,UAAW,UACXsB,KAAMgC,IACNrD,MAAO,CACHwB,YAAa,EACbX,WAAY,GACZU,MAAO,MACPN,OAAQ,cAK7CvB,eAAC4D,IAAI,CAACC,SA3d9B,SAA0B5B,GAMtB,OALAA,EAAE6B,iBACF1O,GAAW,GACXE,GAAY,IAGY,IAApBC,IAAgD,IAAnBE,IAA4C,IAAhBE,IACrC,IAAjBE,IAA6C,IAAnBE,IAA6C,IAAjBE,KACrC,IAAjBE,KAA0C,IAAhBE,KAA2C,IAAlBE,IACtDjB,GAAY,GACZF,GAAW,GACX2F,cACOlG,EAAS,+JAIhB0G,GAASE,yBAAyB6D,OAAS,IAC3ChK,GAAY,GACZF,GAAW,GACX2F,cACOlG,EAAS,mDAIhB4C,IACAnC,GAAY,GACZF,GAAW,GACX2F,cACOlG,EAAS,2HAIrBkP,YAAQxI,GAAUhH,GACZ0F,MAAK+J,IAEF3P,EAAS,SAAU,CAAC4P,MAAO,iBAAkBC,SAAS,GAAM,IAC7DtJ,OAAM,IAAM/F,EAAS,8CACvBgG,SAAQ,KACLvF,GAAY,GACZF,GAAW,EAAM,GAE7B,EAmb8BiL,UAAW,qBAAqBH,SAAA,CAClCC,cAACgE,IAAY,CAACnP,QAASA,EACTuG,SAAUA,GACVD,YAAaA,GACbpG,SAAUA,EACVI,YAAaA,EACbF,WAAYA,EACZoC,QAASA,GACTS,aAAcA,GACdN,UAAWA,GACXC,MAAOA,GACPG,cAAeA,GACfD,KAAMA,GACND,SAAUA,GACVnB,qBAAsBA,GACtBE,oBAAqBA,GACrBjC,WAAYA,EACZE,SAAUA,EACVkC,cAAeA,GACfC,iBAAkBA,KAEhCgJ,eAACI,IAAS,CAACC,UAAW,0CACXC,MAAO,CAACO,aAAc,GAAIF,UAAW,IAAIT,SAAA,CAC/ClL,EAAU,GACPmL,cAACmB,IAAM,CAAChB,MAAO,CAACiB,OAAQ,GAAIC,MAAO,IAC3BC,QAAS,UACTO,QAASA,KACL/M,EAAWD,EAAU,GACrBD,EAAiBD,EAAgB,GACjCH,EAAW,GAAG,EAChBuL,SAACC,cAACuB,IAAe,CAACC,KAAMC,IACNC,MAAO,YACtC7M,EAAU,GACPmL,cAACmB,IAAM,CAAChB,MAAO,CAACiB,OAAQ,GAAIC,MAAO,IAC3BC,QAAS,UACTO,QAASA,KACL/M,EAAWD,EAAU,GACrBD,EAAiBD,EAAgB,GACjCH,EAAW,GAAG,EAChBuL,SAACC,cAACuB,IAAe,CAACC,KAAMyC,IACNvC,MAAO,YAC1B,IAAZ7M,GACGgL,eAAA,UAAQ9K,SAAUC,EACV4M,KAAK,SACL1B,UAAU,kBAAiBH,SAAA,CAC/BC,cAACuB,IAAe,CACZC,KAAM0C,IACN/D,MAAO,CAACwB,YAAa,KAAK,+BAQ9D9B,eAACsE,IAAK,CACFC,KAAM5N,GACN6N,OA1ZZ,WACI5N,IAAoB,EACxB,EAyZY6N,KAAM,KACN,kBAAgB,gCAChBC,UAAQ,EAAAxE,SAAA,CAGRC,cAACmE,IAAMK,OAAM,CAACC,aAAW,EAAA1E,SACrBC,cAACmE,IAAMO,MAAK,CAACxE,UAAW,oBAAoBH,SACxCF,eAACI,IAAS,CACNC,UAAW,kEAAkEH,SAAA,CAC7EC,cAAA,OAAKgC,IAAK2C,IACLxE,MAAO,CAACiB,OAAQ,GAAIC,MAAO,GAAIM,YAAa,IAC5CO,IAAK,gBACVlC,cAAA,KAAGE,UAAW,UACXC,MAAO,CAACgC,OAAQ,GAAGpC,SAAC,2BAInCF,eAACsE,IAAMS,KAAI,CAAA7E,SAAA,CACNtL,GAASuL,cAACoC,IAAK,CAAClC,UAAW,2BACXoB,QAAQ,SACRe,aAAa,EACbC,QAASA,IAAM5N,EAAS,IAAIqL,SAAEtL,IAC9CF,GAAWyL,cAACoC,IAAK,CAAClC,UAAW,2BACXoB,QAAQ,UACRe,aAAa,EACbC,QAASA,IAAM9N,EAAW,IAAIuL,SAAExL,IACnDyL,cAACuC,IAAU,CAACb,MAAM,UACN1M,QAASE,EACTiL,MAAO,CACHqC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,KAExB/C,eAAC4D,IAAI,CAACC,SA3etB,SAA0B5B,GAYtB,GAXAA,EAAE6B,iBACFxO,GAAY,GACZF,GAAW,IASuB,IAA9BgD,GAAgBQ,YAAkD,IAA3BR,GAAgBS,SAC1B,IAA7BT,GAAgBU,WAA+C,IAAzBV,GAAgBW,KAItD,OAHAzD,GAAY,GACZF,GAAW,GACX2F,cACOlG,EAAS,mEAGpBmQ,YAAQ5M,IACH6B,MAAK+J,IACFtI,QAAQyD,IAAI,8BACZnI,IAAiB,GACjB1B,GAAY,GACZF,GAAW,GACXwB,IAAoB,EAAM,IAE7BgE,OAAMhG,GAAS8G,QAAQ9G,MAAMA,KAC7BiG,SAAQ,KAELzC,GAAgBI,iBAAmB,GACnCJ,GAAgBK,KAAO,GACvBL,GAAgBM,aAAe,GAC/BN,GAAgBO,aAAe,GAC/BP,GAAgBQ,WAAY,EAC5BR,GAAgBS,QAAS,EACzBT,GAAgBU,UAAW,EAC3BV,GAAgBW,MAAO,EAC3BzD,GAAY,GACZF,GAAW,EAAM,GAEzB,EAkcsBiL,UAAW,qBAAqBH,SAAA,CAClCC,cAAC8E,IAAY,CAAC1J,SAAUnD,GACVkD,YAAajD,GACbnD,SAAUA,IAExBiL,cAACC,IAAS,CAACC,UAAW,0CACXC,MAAO,CAACO,aAAc,GAAIF,UAAW,IAAIT,SAMhDF,eAAA,UAAQ9K,SAAUC,EACVmL,MAAO,CAACkB,MAAO,IAAKX,aAAc,IAClCkB,KAAK,SACL1B,UAAU,kBAAiBH,SAAA,CAACC,cAACuB,IAAe,CAChDC,KAAM0C,IACN/D,MAAO,CAACwB,YAAa,KAAK,2BAO9C9B,eAACsE,IAAK,CACFC,KAAM1N,GACN2N,OApdZ,WACI1N,IAAuB,EAC3B,EAmdY2N,KAAM,KACN,kBAAgB,gCAChBC,UAAQ,EAAAxE,SAAA,CAGRC,cAACmE,IAAMK,OAAM,CAACC,aAAW,EAAA1E,SACrBC,cAACmE,IAAMO,MAAK,CAACxE,UAAW,oBAAoBH,SACxCF,eAACI,IAAS,CACNC,UAAW,kEAAkEH,SAAA,CAC7EC,cAAA,OAAKgC,IAAKC,IACL9B,MAAO,CAACiB,OAAQ,GAAIC,MAAO,GAAIM,YAAa,IAC5CO,IAAK,gBACVlC,cAAA,KAAGE,UAAW,UACXC,MAAO,CAACgC,OAAQ,GAAGpC,SAAC,0BAInCF,eAACsE,IAAMS,KAAI,CAAA7E,SAAA,CACPC,cAACC,IAAS,CAACC,UAAW,8DAA8DH,SAChFC,cAAA,KAAGE,UAAW,qCAAsCC,MAAO,CAACI,QAAQ,IAAIR,SAAC,8LAE5EtL,GAASuL,cAACoC,IAAK,CAAClC,UAAW,2BACXoB,QAAQ,SACRe,aAAa,EACbC,QAASA,IAAM5N,EAAS,IAAIqL,SAAEtL,IAC9CF,GAAWyL,cAACoC,IAAK,CAAClC,UAAW,2BACXoB,QAAQ,UACRe,aAAa,EACbC,QAASA,IAAM9N,EAAW,IAAIuL,SAAExL,IACnDyL,cAACuC,IAAU,CAACb,MAAM,UACN1M,QAASE,EACTiL,MAAO,CACHqC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,KAExB/C,eAAC4D,IAAI,CAACC,SApjBtB,SAAwB5B,GACpBA,EAAE6B,iBACFxO,GAAY,GACZF,GAAW,GA/BCqE,WACZrE,GAAW,GACXE,GAAY,GACZ,MAAM4P,EAAS7K,YAAIR,IAAI,QAASU,SAC1B4K,YAAOD,GACRjL,MAAMI,IACCA,EAAI5C,UACJ6D,GAAY,IAAIjB,EAAIC,OAAQI,cAAc,GACtCC,iBAAiB,GACjBa,eAAe,GACfC,yBAAyB,GACzBS,aAAa,GACbC,eAAe,GACfC,wBAAwB,GACxBP,iBAAiB,GACjBC,iBAAiB,GACjBF,sBAAuB5C,MAG/B,IACDiB,MAAK,KACJ3E,GAAY,GACZF,GAAW,GACX0B,IAAuB,EAAM,GAC/B,EAQNsO,CAAQ/N,GAASmD,MACrB,EAgjBsB6F,UAAW,iCAAiCH,SAAA,CAC9CC,cAACkF,IAAM,CACHC,QAAS,aACTC,QAASpO,GACTqO,YAAY,mCACZhL,MAAOnD,GACPoO,SAAWxD,IAAO3K,GAAY2K,EAAE,EAChC5B,UAAW,2BACXqF,UAAQ,IAEZvF,cAACC,IAAS,CAACC,UAAW,0CACXC,MAAO,CAACO,aAAc,GAAIF,UAAW,IAAIT,SAChDF,eAAA,UAAQ9K,SAAUC,EACVmL,MAAO,CAACkB,MAAO,IAAKX,aAAc,IAClCkB,KAAK,SACL1B,UAAU,kBAAiBH,SAAA,CAACC,cAACuB,IAAe,CAChDC,KAAMO,IACN5B,MAAO,CAACwB,YAAa,KAAK,wBAQ1D,C","file":"static/js/29.f78613e2.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Alert, Badge, Button, Card, Form, Modal, Nav} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport NewDietImg from \"../../img/newDietImage.svg\";\nimport {faAngleLeft, faAngleRight, faCheck, faFileImport, faPlus, faXmark} from \"@fortawesome/free-solid-svg-icons\";\nimport {addDiet} from \"../../context/DietContext\";\nimport {SyncLoader} from \"react-spinners\";\nimport DietSections from \"./DietSections\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport {Validator} from \"@marketto/codice-fiscale-utils\";\nimport {fetchUser} from \"../../context/UserContext\";\nimport MealAnalysisModal from \"../Meals/MealAnalysisModal\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport {collection, doc, getDoc, getDocs, orderBy, query, where} from \"firebase/firestore\";\nimport {db} from \"../../config/firebase-config\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport NewMealImg from \"../../img/showMealImg.svg\";\nimport MealSections from \"../Meals/MealSections\";\nimport {addMeal} from \"../../context/MealContext\";\nimport Select from \"react-select\";\n\n/*\n Una dieta è divisa in varie sezioni:\n Anagrafica, Obiettivi, Lunedì, Martedì, ..., Domenica\n L'utente potrà procedere con la creazione della dieta una volta che tutte le sezioni saranno complete\n */\nexport default function NewDiet() {\n    const {currentUser} = useAuth();\n    const navigate = useNavigate();\n    const [nutrizionista, setNutrizionista] = useState([\"\"]);\n    const [warning, setWarning] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [activeSection, setActiveSection] = useState(0);\n    const [section, setSection] = useState(0);\n    const [disabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [progress, setProgress] = useState(false);\n    const [checkAnagrafica, setCheckAnagrafica] = useState(false);\n    const [checkObiettivi, setCheckObiettivi] = useState(false);\n    const [checkLunedi, setCheckLunedi] = useState(false);\n    const [checkMartedi, setCheckMartedi] = useState(false);\n    const [checkMercoledi, setCheckMercoledi] = useState(false);\n    const [checkGiovedi, setCheckGiovedi] = useState(false);\n    const [checkVenerdi, setCheckVenerdi] = useState(false);\n    const [checkSabato, setCheckSabato] = useState(false);\n    const [checkDomenica, setCheckDomenica] = useState(false);\n    const [showModalAnalysis, setShowModalAnalysis] = useState(false);\n    const [showModalNewMeal, setShowModalNewMeal] = useState(false);\n    const [showModalImportDiet, setShowModalImportDiet] = useState(false);\n    const [reloadOptions, setReloadOptions] = useState(false);\n    const [diets, setDiets] = useState([]);\n    const [dietsSelect, setDietsSelect] = useState([]);\n    const [dietCopy, setDietCopy] = useState(\"\");\n\n\n    const [food, setFood] = useState([\"\"]);\n\n\n    const [exists, setExists] = useState(false);\n    const [nutrients] = useState([]);\n    const [kcals] = useState([]);\n    const [proteins] = useState([]);\n    const [fats] = useState([]);\n    const [carbohydrates] = useState([]);\n    const [userInput, setUserInput] = useState([]);\n    const [showDetails, setShowDetails] = useState(false);\n\n    const [formDataNewMeal, setFormDataNewMeal] = useState({\n        email_nutrizionista: currentUser.email,\n        data_inserimento: \"\",\n        nome: \"\",\n        sostituzioni: \"\",\n        preparazione: \"\",\n        colazione: false,\n        pranzo: false,\n        spuntino: false,\n        cena: false\n    });\n\n    function makeid() {\n        let result = \"\";\n        let length = 6;\n        //const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        const characters = \"0123456789\";\n        let charactersLength = characters.length;\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    useEffect(() => {\n        const getDiets = async () => {\n            setProgress(true);\n            const q = query(collection(db, \"diets\"), where(\"email_nutrizionista\", \"==\", currentUser.email), orderBy(\"data_inserimento\", \"desc\"));\n            await getDocs(q)\n                .then((querySnapshot) => {\n                    setDiets(querySnapshot.docs.map((doc) => ({...doc.data(), id: doc.id})));\n                    setDietsSelect(querySnapshot.docs.map((doc) => ({value: doc.id, label: doc.data().nome_paziente + \" \" + doc.data().cognome_paziente})));\n                }).catch((error) => setError(\"Si è verificato un errore inaspettato\"))\n                .finally(() => setProgress(false));\n        };\n        getDiets();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Recupero le informazioni del nutrizionista\n    useEffect(() => {\n        //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n        scrollToTop();\n        setProgress(true);\n        fetchUser(currentUser.email)\n            .then((dataSnap) => {\n                const info = {\n                    nome: dataSnap.nome,\n                    cognome: dataSnap.cognome,\n                    email: dataSnap.email,\n                    telefono: dataSnap.telefono,\n                    ruolo: dataSnap.ruolo\n                };\n                setNutrizionista(info);\n                if(dataSnap.ruolo === \"Utente\"){\n                    setFormData({...formData, nome_paziente: dataSnap.nome, cognome_paziente: dataSnap.cognome, email_paziente: dataSnap.email, numero_telefono_paziente: dataSnap.telefono});\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            }).then(()=>{\n            setProgress(false);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [formData, setFormData] = useState({\n        email_nutrizionista: \"\",\n        numero_telefono_nutrizionista: \"\",\n        telegram_bot_passcode: makeid(),\n        telegram_user_id: \"\",\n        telegram_chat_id: \"\",\n        telegram_alerts: true,\n        telegram_alerts_acqua: true,\n        tipologia_dieta: \"\",\n        data_inserimento: \"\",\n        nome_paziente: \"\",\n        cognome_paziente: \"\",\n        email_paziente: \"\",\n        numero_telefono_paziente: \"\",\n        eta_paziente: \"\",\n        sesso_paziente: \"\",\n        codice_fiscale_paziente: \"\",\n        peso_paziente: \"\",\n        altezza_paziente: \"\",\n        data_inizio_dieta: \"\",\n        data_fine_dieta: \"\",\n        obiettivo_peso: \"\",\n        kcal_giornaliere: \"\",\n        colazione_lunedi: \"\",\n        colazione_unica: false,\n        spuntino_lunedi_mattina: \"\",\n        spuntino_unico_mattina: false,\n        pranzo_lunedi: \"\",\n        fascia_oraria_pranzo: \"\",\n        spuntino_lunedi_pomeriggio: \"\",\n        spuntino_unico_pomeriggio: false,\n        cena_lunedi: \"\",\n        fascia_oraria_cena: \"\",\n\n        colazione_martedi: \"\",\n        spuntino_martedi_mattina: \"\",\n        pranzo_martedi: \"\",\n        spuntino_martedi_pomeriggio: \"\",\n        cena_martedi: \"\",\n\n        colazione_mercoledi: \"\",\n        spuntino_mercoledi_mattina: \"\",\n        pranzo_mercoledi: \"\",\n        spuntino_mercoledi_pomeriggio: \"\",\n        cena_mercoledi: \"\",\n\n        colazione_giovedi: \"\",\n        spuntino_giovedi_mattina: \"\",\n        pranzo_giovedi: \"\",\n        spuntino_giovedi_pomeriggio: \"\",\n        cena_giovedi: \"\",\n\n        colazione_venerdi: \"\",\n        spuntino_venerdi_mattina: \"\",\n        pranzo_venerdi: \"\",\n        spuntino_venerdi_pomeriggio: \"\",\n        cena_venerdi: \"\",\n\n        colazione_sabato: \"\",\n        spuntino_sabato_mattina: \"\",\n        pranzo_sabato: \"\",\n        spuntino_sabato_pomeriggio: \"\",\n        cena_sabato: \"\",\n\n        colazione_domenica: \"\",\n        spuntino_domenica_mattina: \"\",\n        pranzo_domenica: \"\",\n        spuntino_domenica_pomeriggio: \"\",\n        cena_domenica: \"\"\n\n    });\n\n    //controllo dieta già presente con stessa email paziente\n    useEffect(() => {\n        const checkExists = async () => {\n            if (formData.email_paziente !== \"\") {\n                setError(\"\");\n                const q = query(collection(db, \"diets\"), where(\"email_paziente\", \"==\", formData.email_paziente), where(\"email_nutrizionista\", \"==\", currentUser.email));\n                await getDocs(q)\n                    .then((querySnapshot) => {\n                        console.log(querySnapshot.docs);\n                        //Esistono diete con la stessa email_paziente\n                        if (!querySnapshot.empty) {\n                            setExists(true);\n                            setError(\"L'email immessa è già associato ad una dieta esistente,\" +\n                                \" puoi modificarla o eliminarla nell'apposita sezione\");\n                        } else {\n                            setExists(false);\n                        }\n                    }).catch((error) => setError(\"Si è verificato un errore inaspettato\"))\n                    .finally(() => setProgress(false));\n            }\n        };\n        checkExists();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formData.email_paziente]);\n\n    //controllo che il codice fiscale del paziente sia valido\n    useEffect(() => {\n        const checkExists = async () => {\n            if (formData.codice_fiscale_paziente.length === 16) {\n                setError(\"\");\n                if (!Validator.codiceFiscale(formData.codice_fiscale_paziente).valid) {\n                    setError(\"Il codice fiscale inserito non è corretto\");\n                }\n            }\n        };\n        checkExists();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formData.codice_fiscale_paziente]);\n\n\n    //Controllo che le sezioni siano state completate\n    useEffect(() => {\n        if (formData.nome_paziente !== \"\" && formData.cognome_paz !== \"\" && formData.email_paziente !== \"\" && formData.numero_telefono_paziente.length == 10 && formData.eta_paziente !== \"\" && formData.sesso_paziente !== \"\" && Validator.codiceFiscale(formData.codice_fiscale_paziente).valid) {\n            if (!exists) {\n                setCheckAnagrafica(true);\n            } else {\n                setCheckAnagrafica(false);\n            }\n        } else {\n            setCheckAnagrafica(false);\n        }\n    }, [formData.nome_paz, formData.cognome_paz, formData.email_paz, formData.tel_paz, formData.eta_paziente, formData.sesso, formData.cf_paz, exists]);\n\n    useEffect(() => {\n        if (formData.peso_paziente !== \"\" && formData.altezza_paziente !== \"\" && formData.data_inizio_dieta !== \"\" && formData.data_fine_dieta !== \"\" && formData.obiettivo_peso !== \"\" && formData.kcal_giornaliere) {\n            setCheckObiettivi(true);\n        } else {\n            setCheckObiettivi(false);\n        }\n    }, [formData.peso_paziente, formData.altezza_paziente, formData.data_inizio_dieta,\n        formData.data_fine_dieta, formData.obiettivo_peso, formData.kcal_giornaliere]);\n\n    useEffect(() => {\n        if (formData.colazione_lunedi !== \"\" && formData.spuntino_lunedi_mattina !== \"\" && formData.pranzo_lunedi !== \"\" && formData.spuntino_lunedi_pomeriggio !== \"\" && formData.cena_lunedi !== \"\") {\n            setCheckLunedi(true);\n        } else {\n            setCheckLunedi(false);\n        }\n    }, [formData.colazione_lunedi, formData.spuntino_lunedi_mattina, formData.pranzo_lunedi, formData.spuntino_lunedi_pomeriggio,\n        formData.cena_lunedi]);\n\n    useEffect(() => {\n        if (formData.colazione_martedi !== \"\" && formData.spuntino_martedi_mattina && formData.pranzo_martedi !== \"\" && formData.spuntino_martedi_pomeriggio !== \"\" && formData.cena_martedi !== \"\") {\n            setCheckMartedi(true);\n        } else {\n            setCheckMartedi(false);\n        }\n    }, [formData.colazione_martedi, formData.spuntino_martedi_mattina, formData.pranzo_martedi, formData.spuntino_martedi_pomeriggio,\n        formData.cena_martedi]);\n\n    useEffect(() => {\n        if (formData.colazione_mercoledi !== \"\" && formData.spuntino_mercoledi_mattina !== \"\" && formData.pranzo_mercoledi !== \"\" && formData.spuntino_mercoledi_pomeriggio !== \"\" && formData.cena_mercoledi !== \"\") {\n            setCheckMercoledi(true);\n        } else {\n            setCheckMercoledi(false);\n        }\n    }, [formData.colazione_mercoledi, formData.spuntino_mercoledi_mattina, formData.pranzo_mercoledi, formData.spuntino_mercoledi_pomeriggio,\n        formData.cena_mercoledi]);\n\n    useEffect(() => {\n        if (formData.colazione_giovedi !== \"\" && formData.spuntino_giovedi_mattina && formData.pranzo_giovedi !== \"\" && formData.spuntino_giovedi_pomeriggio !== \"\" && formData.cena_giovedi !== \"\") {\n            setCheckGiovedi(true);\n        } else {\n            setCheckGiovedi(false);\n        }\n    }, [formData.colazione_giovedi, formData.spuntino_giovedi_mattina, formData.pranzo_giovedi, formData.spuntino_giovedi_pomeriggio,\n        formData.cena_giovedi]);\n\n    useEffect(() => {\n        if (formData.colazione_venerdi !== \"\" && formData.spuntino_venerdi_mattina !== \"\" && formData.pranzo_venerdi !== \"\" && formData.spuntino_venerdi_pomeriggio !== \"\" && formData.cena_venerdi !== \"\") {\n            setCheckVenerdi(true);\n        } else {\n            setCheckVenerdi(false);\n        }\n    }, [formData.colazione_venerdi, formData.spuntino_venerdi_mattina, formData.pranzo_venerdi, formData.spuntino_venerdi_pomeriggio,\n        formData.cena_venerdi]);\n\n    useEffect(() => {\n        if (formData.colazione_sabato !== \"\" && formData.spuntino_sabato_mattina && formData.pranzo_sabato !== \"\" && formData.spuntino_sabato_pomeriggio !== \"\" && formData.cena_sabato !== \"\") {\n            setCheckSabato(true);\n        } else {\n            setCheckSabato(false);\n        }\n    }, [formData.colazione_sabato, formData.spuntino_sabato_mattina, formData.pranzo_sabato, formData.spuntino_sabato_pomeriggio,\n        formData.cena_sabato]);\n\n    useEffect(() => {\n        if (formData.colazione_domenica !== \"\" && formData.spuntino_domenica_mattina !== \"\" && formData.pranzo_domenica !== \"\" && formData.spuntino_domenica_pomeriggio !== \"\" && formData.cena_domenica !== \"\") {\n            setCheckDomenica(true);\n        } else {\n            setCheckDomenica(false);\n        }\n    }, [formData.colazione_domenica, formData.spuntino_domenica_mattina, formData.pranzo_domenica, formData.spuntino_domenica_pomeriggio,\n        formData.cena_domenica]);\n\n\n    function handleSubmitDiet(e) {\n        e.preventDefault();\n        setLoading(true);\n        setProgress(true);\n\n        //Controlle che tutte le sezioni siano complete\n        if (checkAnagrafica === false || checkObiettivi === false || checkLunedi === false\n            || checkMartedi === false || checkMercoledi === false || checkGiovedi === false\n            || checkVenerdi === false || checkSabato === false || checkDomenica === false) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setError(\"Per poter procedere con la creazione della dieta devi prima completare tutti i campi necessari, le sezioni non complete sono contrassegnate con una ❌\");\n        }\n\n        //Controllo che il numero di telefono inserito sia valido\n        if (formData.numero_telefono_paziente.length < 10) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setError(\"Il numero di telefono inserito non è valido\");\n        }\n\n        //Controllo che non vi sia già una dieta esistente con lo stessa email paziente\n        if (exists) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setError(\"L'email immessa è già associato ad una dieta esistente,\" +\n                \" puoi modificarla o eliminarla nell'apposita sezione\");\n        }\n\n       addDiet(formData, nutrizionista)\n            .then(r => {\n                //L'utente viene indirizzato alla pagina che visualizza tutte le diete create\n                navigate(\"/diete\", {state: \"success-create\", replace: true});\n            }).catch(() => setError(\"Si è verificato un errore inaspettato\"))\n            .finally(() => {\n                setProgress(false);\n                setLoading(false);\n            }); \n    }\n\n    const getDiet = async (id) => {\n        setLoading(true);\n        setProgress(true);\n        const docRef = doc(db, \"diets\", id);\n        await getDoc(docRef)\n            .then((doc) => {\n                if (doc.exists()) {\n                    setFormData({...doc.data(), nome_paziente:\"\",\n                        cognome_paziente:\"\",\n                        email_paziente:\"\",\n                        numero_telefono_paziente:\"\",\n                        eta_paziente:\"\",\n                        sesso_paziente:\"\",\n                        codice_fiscale_paziente:\"\",\n                        telegram_user_id:\"\",\n                        telegram_chat_id:\"\",\n                        telegram_bot_passcode: makeid()\n                    });\n                    //setFormData(doc.data());\n                }\n            }).then(()=>{\n                setProgress(false);\n                setLoading(false);\n                setShowModalImportDiet(false);\n            });\n    };\n\n\n    function handleDietCopy(e) {\n        e.preventDefault();\n        setProgress(true);\n        setLoading(true);\n        getDiet(dietCopy.value);\n    }\n\n    function handleSubmitMeal(e) {\n        e.preventDefault();\n        setProgress(true);\n        setLoading(true);\n\n        /*if (!mealNameRegex.test(formData.nome)) {\n         setProgress(false);\n         setLoading(false);\n         scrollToTop();\n         return setError(\"Il titolo del pasto deve contenere il nome dell'ingrediente e la sua quantità, in caso di più ingredienti questi devono essere separati da una virgola: es. pane 50 gr, petto di pollo 80 gr\");\n         }*/\n\n        if (formDataNewMeal.colazione === false && formDataNewMeal.pranzo === false &&\n            formDataNewMeal.spuntino === false && formDataNewMeal.cena === false) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setError(\"Per poter creare il pasto devi prima selezionare una categoria!\");\n        }\n\n        addMeal(formDataNewMeal)\n            .then(r => {\n                console.log(\"Pasto creato correttamente\");\n                setReloadOptions(true);\n                setProgress(false);\n                setLoading(false);\n                setShowModalNewMeal(false);\n            })\n            .catch(error => console.error(error))\n            .finally(() => {\n                //Inizializzo il form per un nuovo pasto\n                formDataNewMeal.data_inserimento = \"\";\n                formDataNewMeal.nome = \"\";\n                formDataNewMeal.sostituzioni = \"\";\n                formDataNewMeal.preparazione = \"\";\n                formDataNewMeal.colazione = false;\n                formDataNewMeal.pranzo = false;\n                formDataNewMeal.spuntino = false;\n                formDataNewMeal.cena = false;\n            setProgress(false);\n            setLoading(false);\n        });\n    }\n\n    //Il modal per la creazione di un nuovo pasto viene reso non più visibile\n    function onHideNewMealModal() {\n        setShowModalNewMeal(false);\n    }\n\n    //Il modal per l'importazione dei dati di una dieta esistente viene reso non più visibile\n    function onHideImportDietModal() {\n        setShowModalImportDiet(false);\n    }\n\n    return (\n        <>\n            <Container className={\"modal-fullscreen\"}\n                       style={{\n                           background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                           backgroundSize: \"cover\",\n                           minHeight: \"inherit\",\n                           padding: 0\n                       }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto col-12\"}\n                               style={{minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <h2 style={{fontFamily: \"Arial\", marginTop: 10}}>\n                                <div className={\"d-flex my-auto col-12\"}>\n                                    <div className={\"col-12\"}>\n                                        <div className={\"float-start\"}\n                                             style={{marginTop: 10, marginLeft: 20}}>\n                                            <LinkContainer to=\"/diete\"\n                                                           className={\"my-auto\"}>\n                                                <Button style={{height: 40, width: 100}}\n                                                        variant={\"warning\"}\n                                                ><FontAwesomeIcon icon={faAngleLeft}\n                                                                  color={\"black\"}/></Button>\n                                            </LinkContainer>\n                                        </div>\n                                        <div className={\"float-end\"}\n                                             style={{marginRight: 17, marginTop: 10}}>\n                                            <h4 className={\"align-self-end top-0\"}>\n                                                <button disabled={loading}\n                                                        style={{width: 157, marginBottom: 10}}\n                                                        type=\"submit\"\n                                                        className=\"btn btn-primary\"\n                                                        onClick={(e) => setShowModalImportDiet(true)}\n                                                ><FontAwesomeIcon\n                                                    icon={faFileImport}\n                                                    style={{marginRight: 5}}/>Copia da dieta\n                                                </button>\n                                            </h4>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Container\n                                    className={\"d-flex justify-content-center my-auto align-items-center col-12\"}>\n                                    <img src={NewDietImg}\n                                         style={{height: 70, width: 70, marginRight: 10}}\n                                         alt={\"Nuova dieta\"}/><p\n                                    className={\"my-auto\"}\n                                    style={{margin: 0}}>Creazione Dieta</p>\n                                </Container>\n                            </h2>\n                            {error && <Alert className={\"mx-auto col-10 col-md-10 col-lg-6 flex-wrap\"}\n                                             variant=\"danger\"\n                                             dismissible={true}\n                                             onClose={() => setError(\"\")}>{error}</Alert>}\n                            {warning && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                               variant=\"warning\"\n                                               dismissible={true}\n                                               onClose={() => setWarning(\"\")}>{warning}</Alert>}\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                            {(!loading && nutrients.length > 0) && (\n                                <MealAnalysisModal\n                                    showModal={showModalAnalysis}\n                                    setShowModal={setShowModalAnalysis}\n                                    showDetails={showDetails}\n                                    setShowDetails={setShowDetails}\n                                    loading={loading}\n                                    userInput={userInput}\n                                    food={food}\n                                    nutrients={nutrients}\n                                    kcals={kcals}\n                                    proteins={proteins}\n                                    fats={fats}\n                                    carbohydrates={carbohydrates}\n                                />\n                            )}\n                            <Nav className={\"d-flex flex-row justify-content-evenly\"}\n                                 justify\n                                 variant=\"tabs\"\n                                 defaultActiveKey=\"0\"\n                                 activeKey={activeSection}\n                                 style={{margin: 5}}>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              style={{color: \"red\"}}\n                                              eventKey=\"0\"\n                                              onClick={() => {\n                                                  setSection(0);\n                                                  setActiveSection(0);\n                                                  setWarning(\"\");\n                                              }}\n                                    >Anagrafica\n                                        {checkAnagrafica === true &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faCheck}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 marginTop: 10,\n                                                                 color: \"green\",\n                                                                 height: 15\n                                                             }}/>}\n                                        {checkAnagrafica === false &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faXmark}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 color: \"red\",\n                                                                 height: 15\n                                                             }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"1\"\n                                              onClick={() => {\n                                                  setSection(1);\n                                                  setActiveSection(1);\n                                                  setWarning(\"\");\n                                              }}>Obiettivi\n                                        {checkObiettivi === true &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faCheck}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 color: \"green\",\n                                                                 height: 15\n                                                             }}/>}\n                                        {checkObiettivi === false &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faXmark}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 color: \"red\",\n                                                                 height: 15\n                                                             }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"2\"\n                                              onClick={() => {\n                                                  setSection(2);\n                                                  setActiveSection(2);\n                                                  setWarning(\"\");\n                                              }}>Lunedì\n                                        {checkLunedi === true && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                  icon={faCheck}\n                                                                                  style={{\n                                                                                      marginRight: 0,\n                                                                                      marginLeft: 10,\n                                                                                      color: \"green\",\n                                                                                      height: 15\n                                                                                  }}/>}\n                                        {checkLunedi === false && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                   icon={faXmark}\n                                                                                   style={{\n                                                                                       marginRight: 0,\n                                                                                       marginLeft: 10,\n                                                                                       color: \"red\",\n                                                                                       height: 15\n                                                                                   }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"3\"\n                                              onClick={() => {\n                                                  setSection(3);\n                                                  setActiveSection(3);\n                                                  setWarning(\"\");\n                                              }}>Martedì\n                                        {checkMartedi === true && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                   icon={faCheck}\n                                                                                   style={{\n                                                                                       marginRight: 0,\n                                                                                       marginLeft: 10,\n                                                                                       color: \"green\",\n                                                                                       height: 15\n                                                                                   }}/>}\n                                        {checkMartedi === false && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                    icon={faXmark}\n                                                                                    style={{\n                                                                                        marginRight: 0,\n                                                                                        marginLeft: 10,\n                                                                                        color: \"red\",\n                                                                                        height: 15\n                                                                                    }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"4\"\n                                              onClick={() => {\n                                                  setSection(4);\n                                                  setActiveSection(4);\n                                                  setWarning(\"\");\n                                              }}>Mercoledì\n                                        {checkMercoledi === true &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faCheck}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 color: \"green\",\n                                                                 height: 15\n                                                             }}/>}\n                                        {checkMercoledi === false &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faXmark}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 color: \"red\",\n                                                                 height: 15\n                                                             }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"5\"\n                                              onClick={() => {\n                                                  setSection(5);\n                                                  setActiveSection(5);\n                                                  setWarning(\"\");\n                                              }}>Giovedì\n                                        {checkGiovedi === true && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                   icon={faCheck}\n                                                                                   style={{\n                                                                                       marginRight: 0,\n                                                                                       marginLeft: 10,\n                                                                                       color: \"green\",\n                                                                                       height: 15\n                                                                                   }}/>}\n                                        {checkGiovedi === false && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                    icon={faXmark}\n                                                                                    style={{\n                                                                                        marginRight: 0,\n                                                                                        marginLeft: 10,\n                                                                                        color: \"red\",\n                                                                                        height: 15\n                                                                                    }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"6\"\n                                              onClick={() => {\n                                                  setSection(6);\n                                                  setActiveSection(6);\n                                                  setWarning(\"\");\n                                              }}>Venerdì\n                                        {checkVenerdi === true && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                   icon={faCheck}\n                                                                                   style={{\n                                                                                       marginRight: 0,\n                                                                                       marginLeft: 10,\n                                                                                       color: \"green\",\n                                                                                       height: 15\n                                                                                   }}/>}\n                                        {checkVenerdi === false && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                    icon={faXmark}\n                                                                                    style={{\n                                                                                        marginRight: 0,\n                                                                                        marginLeft: 10,\n                                                                                        color: \"red\",\n                                                                                        height: 15\n                                                                                    }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"7\"\n                                              onClick={() => {\n                                                  setSection(7);\n                                                  setActiveSection(7);\n                                                  setWarning(\"\");\n                                              }}>Sabato\n                                        {checkSabato === true && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                  icon={faCheck}\n                                                                                  style={{\n                                                                                      marginRight: 0,\n                                                                                      marginLeft: 10,\n                                                                                      color: \"green\",\n                                                                                      height: 15\n                                                                                  }}/>}\n                                        {checkSabato === false && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                   icon={faXmark}\n                                                                                   style={{\n                                                                                       marginRight: 0,\n                                                                                       marginLeft: 10,\n                                                                                       color: \"red\",\n                                                                                       height: 15\n                                                                                   }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                              eventKey=\"8\"\n                                              onClick={() => {\n                                                  setSection(8);\n                                                  setActiveSection(8);\n                                                  setWarning(\"\");\n                                              }}>Domenica\n                                        {checkDomenica === true && <FontAwesomeIcon className={\"my-auto\"}\n                                                                                    icon={faCheck}\n                                                                                    style={{\n                                                                                        marginRight: 0,\n                                                                                        marginLeft: 10,\n                                                                                        color: \"green\",\n                                                                                        height: 15\n                                                                                    }}/>}\n                                        {checkDomenica === false &&\n                                            <FontAwesomeIcon className={\"my-auto\"}\n                                                             icon={faXmark}\n                                                             style={{\n                                                                 marginRight: 0,\n                                                                 marginLeft: 10,\n                                                                 color: \"red\",\n                                                                 height: 15\n                                                             }}/>}\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                            <Form onSubmit={handleSubmitDiet}\n                                  className={\"d-flex flex-column\"}>\n                                <DietSections section={section}\n                                              formData={formData}\n                                              setFormData={setFormData}\n                                              disabled={disabled}\n                                              setProgress={setProgress}\n                                              setLoading={setLoading}\n                                              setFood={setFood}\n                                              setUserInput={setUserInput}\n                                              nutrients={nutrients}\n                                              kcals={kcals}\n                                              carbohydrates={carbohydrates}\n                                              fats={fats}\n                                              proteins={proteins}\n                                              setShowModalAnalysis={setShowModalAnalysis}\n                                              setShowModalNewMeal={setShowModalNewMeal}\n                                              setWarning={setWarning}\n                                              setError={setError}\n                                              reloadOptions={reloadOptions}\n                                              setReloadOptions={setReloadOptions}\n                                />\n                                <Container className={\"d-flex flex-wrap justify-content-evenly\"}\n                                           style={{marginBottom: 20, marginTop: 20}}>\n                                    {section > 0 &&\n                                        <Button style={{height: 40, width: 85}}\n                                                variant={\"warning\"}\n                                                onClick={() => {\n                                                    setSection(section - 1);\n                                                    setActiveSection(activeSection - 1);\n                                                    setWarning(\"\");\n                                                }}><FontAwesomeIcon icon={faAngleLeft}\n                                                                    color={\"black\"}/></Button>}\n                                    {section < 8 &&\n                                        <Button style={{height: 40, width: 85}}\n                                                variant={\"warning\"}\n                                                onClick={() => {\n                                                    setSection(section + 1);\n                                                    setActiveSection(activeSection + 1);\n                                                    setWarning(\"\");\n                                                }}><FontAwesomeIcon icon={faAngleRight}\n                                                                    color={\"black\"}/></Button>}\n                                    {section === 8 &&\n                                        <button disabled={loading}\n                                                type=\"submit\"\n                                                className=\"btn btn-primary\">\n                                            <FontAwesomeIcon\n                                                icon={faPlus}\n                                                style={{marginRight: 5}}/>Crea\n                                                                          Dieta</button>}\n                                </Container>\n                            </Form>\n                        </Card>\n                    </Container>\n                </Container>\n            </Container>\n            <Modal\n                show={showModalNewMeal}\n                onHide={onHideNewMealModal}\n                size={\"lg\"}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title className={\"w-100 text-center\"}>\n                        <Container\n                            className={\"d-flex justify-content-center my-auto align-items-center col-12\"}>\n                            <img src={NewMealImg}\n                                 style={{height: 70, width: 70, marginRight: 10}}\n                                 alt={\"Nuovo pasto\"}/>\n                            <p className={\"my-auto\"}\n                               style={{margin: 0}}>Creazione Pasto</p>\n                        </Container>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {error && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                     variant=\"danger\"\n                                     dismissible={true}\n                                     onClose={() => setError(\"\")}>{error}</Alert>}\n                    {warning && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                       variant=\"warning\"\n                                       dismissible={true}\n                                       onClose={() => setWarning(\"\")}>{warning}</Alert>}\n                    <SyncLoader color=\"#eb6164\"\n                                loading={progress}\n                                style={{\n                                    position: \"absolute\",\n                                    top: \"50%\",\n                                    left: \"50%\",\n                                    transform: \"translate(-50%, -50%)\",\n                                    zIndex: 1\n                                }}/>\n                    <Form onSubmit={handleSubmitMeal}\n                          className={\"d-flex flex-column\"}>\n                        <MealSections formData={formDataNewMeal}\n                                      setFormData={setFormDataNewMeal}\n                                      disabled={disabled}\n                        />\n                        <Container className={\"d-flex flex-wrap justify-content-evenly\"}\n                                   style={{marginBottom: 20, marginTop: 20}}>\n                            {/*<Button variant=\"secondary\"\n                             style={{width: 157, marginBottom: 10}}\n                             onClick={(e) => handleSubmitAnalysis(e, formData.nome)}><FontAwesomeIcon\n                             icon={faChartSimple}\n                             style={{marginRight: 5}}/>Analizza Pasto</Button>*/}\n                            <button disabled={loading}\n                                    style={{width: 157, marginBottom: 10}}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\"><FontAwesomeIcon\n                                icon={faPlus}\n                                style={{marginRight: 5}}/>Crea Pasto\n                            </button>\n                        </Container>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n\n            <Modal\n                show={showModalImportDiet}\n                onHide={onHideImportDietModal}\n                size={\"lg\"}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title className={\"w-100 text-center\"}>\n                        <Container\n                            className={\"d-flex justify-content-center my-auto align-items-center col-12\"}>\n                            <img src={NewDietImg}\n                                 style={{height: 70, width: 70, marginRight: 10}}\n                                 alt={\"Nuovo pasto\"}/>\n                            <p className={\"my-auto\"}\n                               style={{margin: 0}}>Copia da Dieta</p>\n                        </Container>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container className={\"text-center d-flex flex-wrap mx-auto justify-content-center\"}>\n                        <p className={\"col-12 col-sm-10 col-md-8 col-lg-8\"} style={{padding:10}}>Copia i pasti che hai già impostato per un'altra dieta con un solo click. Una volta fatto, ti basterà inserire i tuoi dati anagrafici e, se necessario, modificare gli obiettivi.</p>\n                    </Container>\n                    {error && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                     variant=\"danger\"\n                                     dismissible={true}\n                                     onClose={() => setError(\"\")}>{error}</Alert>}\n                    {warning && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                       variant=\"warning\"\n                                       dismissible={true}\n                                       onClose={() => setWarning(\"\")}>{warning}</Alert>}\n                    <SyncLoader color=\"#eb6164\"\n                                loading={progress}\n                                style={{\n                                    position: \"absolute\",\n                                    top: \"50%\",\n                                    left: \"50%\",\n                                    transform: \"translate(-50%, -50%)\",\n                                    zIndex: 1\n                                }}/>\n                    <Form onSubmit={handleDietCopy}\n                          className={\"d-flex flex-column text-center\"}>\n                        <Select\n                            inputId={\"dietCopyId\"}\n                            options={dietsSelect}\n                            placeholder=\"Seleziona la dieta da copiare...\"\n                            value={dietCopy}\n                            onChange={(e) => {setDietCopy(e)}}\n                            className={\"col-12 col-lg-10 mx-auto\"}\n                            required\n                        />\n                        <Container className={\"d-flex flex-wrap justify-content-evenly\"}\n                                   style={{marginBottom: 20, marginTop: 20}}>\n                            <button disabled={loading}\n                                    style={{width: 157, marginBottom: 10}}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\"><FontAwesomeIcon\n                                icon={faFileImport}\n                                style={{marginRight: 5}}/>Copia\n                            </button>\n                        </Container>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n"],"sourceRoot":""}