{"version":3,"sources":["Components/Progress/ShowPatients.js"],"names":["ShowPatients","currentUser","useAuth","error","setError","useState","success","setSuccess","progress","setProgress","currentPage","setCurrentPage","searchInput","setSearchInput","showExpired","setShowExpired","diets","setDiets","lastDietNumber","firstDietIndex","useEffect","scrollToTop","async","getDocs","query","collection","db","where","email","orderBy","then","querySnapshot","docs","map","doc","data","id","catch","finally","getDiets","currentData","Date","filtered","filter","diet","toLowerCase","nome_paziente","includes","cognome_paziente","codice_fiscale_paziente","dataFineDieta","data_fine_dieta","_jsx","Spinner","_Fragment","children","Container","className","style","background","backgroundSize","minHeight","padding","marginTop","_jsxs","Card","marginBottom","borderRadius","boxShadow","borderLeft","borderTop","fontFamily","marginLeft","LinkContainer","to","Button","height","width","variant","FontAwesomeIcon","icon","faAngleLeft","color","src","AllProgressiImg","marginRight","alt","Alert","margin","onClose","dismissible","SyncLoader","loading","position","top","left","transform","zIndex","ListGroup","Navbar","expand","Form","Check","type","label","checked","onChange","InputGroup","Control","placeholder","value","e","target","slice","PatientPreview","nomePaziente","cognomePaziente","codiceFiscalePaziente","length","Pagination","itemsCount","itemsPerPage","alwaysShown"],"mappings":"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","file":"static/js/33.a6844fc4.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Alert, Button, Card, Form, InputGroup, ListGroup, Navbar} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport AllProgressiImg from \"../../img/AllProgressImg.svg\";\nimport {collection, getDocs, orderBy, query, where} from \"firebase/firestore\";\nimport {db} from \"../../config/firebase-config\";\nimport {SyncLoader} from \"react-spinners\";\nimport Pagination from \"../Utilities/Pagination\";\nimport PatientPreview from \"./PatientPreview\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport Spinner from \"../Utilities/Spinner\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\n\n/*\n Funzione che si occupa di mostrare un elenco contenente tutte i pazienti con una dieta attiva\n Gli elementi vengono impaginati in modo tale che ce ne siano 5 per pagina\n */\nexport default function ShowPatients() {\n    const {currentUser} = useAuth();\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n    const [progress, setProgress] = useState(true);\n    //Numero di diete visualizzate per pagina\n    const dietsPerPage = 5;\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [showExpired, setShowExpired] = useState(false);\n    const [diets, setDiets] = useState([]);\n    const lastDietNumber = currentPage * dietsPerPage;\n    const firstDietIndex = lastDietNumber - dietsPerPage;\n\n    useEffect(() => {\n        //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n        scrollToTop();\n        const getDiets = async () => {\n            setProgress(true);\n            await getDocs(query(collection(db, \"diets\"),\n                where(\"email_nutrizionista\", \"==\", currentUser.email),\n                orderBy(\"data_inserimento\", \"desc\")))\n                .then((querySnapshot) => {\n                    setDiets(querySnapshot.docs.map((doc) => ({...doc.data(), id: doc.id})));\n                    setCurrentPage(1);\n                }).catch((error) => setError(\"Si Ã¨ verificato un errore inaspettato\"))\n                .finally(() => setProgress(false));\n        };\n        getDiets();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Ottengo la data corrente es. 2022-08-12\n    const currentData = new Date();\n\n    const filtered = diets.filter(\n        //Funzione di ricerca: cerca la stringa data in input in Nome, Cognome e Codice Fiscale\n        (diet) => {\n            return searchInput.toLowerCase() === \"\" ? diet\n                : diet.nome_paziente.toLowerCase().includes(searchInput.toLowerCase())\n                || diet.cognome_paziente.toLowerCase().includes(searchInput.toLowerCase())\n                || diet.codice_fiscale_paziente.toLowerCase().includes(searchInput.toLowerCase());\n        }\n    ).filter(\n        //Funzione di ricerca diete scadute:\n        (diet) => {\n            //Converto stringa in oggetto date\n            const dataFineDieta = new Date(diet.data_fine_dieta);\n            return showExpired ? currentData > dataFineDieta : diet;\n        });\n\n    if (progress === true) {\n        return <Spinner/>;\n    }\n\n\n    return (\n        <>\n            {progress === false && <Container className={\"modal-fullscreen\"}\n                                              style={{\n                                                  background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                                                  backgroundSize: \"cover\",\n                                                  minHeight: \"inherit\",\n                                                  padding: 0\n                                              }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto\"}\n                               style={{minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 col-md-9 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <h2 style={{fontFamily: \"Arial\", marginTop: 10}}>\n                                <div className={\"d-flex my-auto col-12\"}>\n                                    <div className={\"col-12\"}>\n                                        <div className={\"float-start\"}\n                                             style={{marginTop: 10, marginLeft: 20}}>\n                                            <LinkContainer to=\"/dashboard\"\n                                                           className={\"my-auto\"}>\n                                                <Button style={{height: 40, width: 100}}\n                                                        variant={\"warning\"}\n                                                ><FontAwesomeIcon icon={faAngleLeft}\n                                                                  color={\"black\"}/></Button>\n                                            </LinkContainer>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Container className={\"d-flex justify-content-center my-auto align-items-center col-12\"}\n                                           style={{padding: 0}}>\n                                    <img src={AllProgressiImg}\n                                         id={\"ShowDietsImg\"}\n                                         style={{height: 70, width: 70, marginRight: 10}}\n                                         alt={\"Progressi\"}/>\n                                    <p className={\"my-auto\"}>Progressi</p>\n                                </Container>\n                            </h2>\n                            {error && !diets && <Alert variant=\"danger\">{error}</Alert>}\n                            {success && <Alert style={{margin: 20}}\n                                               variant=\"primary\"\n                                               onClose={() => setSuccess(false)}\n                                               dismissible={true}>{success}</Alert>}\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                            <Container style={{minHeight: 500}}>\n                                <ListGroup className={\"col-12 col-md-11 mx-auto\"}\n                                           style={{\n                                               marginBottom: 20,\n                                               minHeight: 500\n                                           }}>\n                                    <Navbar expand=\"lg\"\n                                            className={\"justify-content-end gap-2\"}\n                                            style={{marginBottom: 10}}>\n                                        <Form className={\"col-7 col-lg-5 col-xl-4 d-inline-block flex-wrap mx-auto\"}\n                                              style={{marginRight: 15}}>\n                                            <Form.Check\n                                                type=\"switch\"\n                                                id=\"custom-switch\"\n                                                label=\"Diete scadute\"\n                                                checked={showExpired}\n                                                onChange={() => {\n                                                    setShowExpired(!showExpired);\n                                                    setCurrentPage(1);\n                                                }}\n                                            />\n                                        </Form>\n                                        <Container className={\"col-12 col-sm-12 col-lg-5\"}\n                                                   style={{margin: 0, padding: 0}}>\n                                            <InputGroup className=\"d-flex \">\n                                                <Form.Control\n                                                    type=\"search\"\n                                                    placeholder={\"Cerca...\"}\n                                                    className={\"me-2\"}\n                                                    aria-label=\"Search\"\n                                                    value={searchInput}\n                                                    onChange={(e) => {\n                                                        setCurrentPage(1);\n                                                        setSearchInput(e.target.value);\n                                                    }}\n                                                />\n                                            </InputGroup>\n                                        </Container>\n                                    </Navbar>\n                                    {filtered.slice(firstDietIndex, lastDietNumber)\n                                             .map((diet) =>\n                                                 <PatientPreview key={diet.id}\n                                                                 id={diet.id}\n                                                                 nomePaziente={diet.nome_paziente}\n                                                                 cognomePaziente={diet.cognome_paziente}\n                                                                 codiceFiscalePaziente={diet.codice_fiscale_paziente}\n                                                 />)}\n                                    {diets.length === 0 && !error\n                                        ? (<Alert variant={\"warning\"}\n                                                  style={{margin: 30}}>Non hai inserito ancora nessuna\n                                                                       dieta</Alert>)\n                                        : (<></>)\n                                    }\n                                    {filtered.length === 0 && !error && diets.length > 0\n                                        ? (<Alert variant={\"warning\"}\n                                                  style={{margin: 30}}>Non ci sono al momento diete scadute</Alert>)\n                                        : (<></>)\n                                    }\n                                </ListGroup>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap justify-content-center mt-auto\"}>\n                                {diets.length !== 0 && <Pagination\n                                    itemsCount={filtered.length}\n                                    itemsPerPage={dietsPerPage}\n                                    currentPage={currentPage}\n                                    setCurrentPage={setCurrentPage}\n                                    alwaysShown={true}\n                                />\n                                }\n                            </Container>\n                        </Card>\n                    </Container>\n                </Container>\n            </Container>\n            }\n        </>\n    );\n}\n"],"sourceRoot":""}