{"version":3,"sources":["context/DietContext.js","context/MealContext.js","Components/Meals/MealAnalysisPreview.js","Components/Meals/MealAnalysisModal.js","img/showMealImg.svg","Components/Meals/MealSections.js","img/newDietImage.svg","Components/Diet/DietSections.js"],"names":["async","addDiet","formData","nutrizionista","data_inserimento","serverTimestamp","email_nutrizionista","email","numero_telefono_nutrizionista","telefono","tipologia_dieta","ruolo","setDoc","doc","collection","db","updateDiet","id","updateDoc","updateTelephone","deleteDiet","deleteDoc","urlEncoded","arr","regex","Array","isArray","join","replace","split","addMeal","updateMeal","deleteMeal","clearArray","array","length","pop","MealAnalysisPreview","_ref","index","item","userInput","_jsxs","Card","className","style","padding","marginBottom","children","_jsx","Header","Container","marginTop","marginLeft","Row","marginRight","ENERC_KCAL","quantity","_Fragment","Col","toFixed","CHOCDF_KCAL","FAT_KCAL","PROCNT_KCAL","Alert","variant","MealAnalysisModal","showModal","setShowModal","showDetails","setShowDetails","nutrients","kcals","proteins","fats","carbohydrates","loading","food","Modal","show","size","centered","Body","sumArrayObject","PieChart","data","type","value","color","Button","onClick","e","FontAwesomeIcon","icon","faEyeSlash","faMagnifyingGlass","map","Footer","MealSections","setFormData","disabled","background","as","Form","Group","Label","Control","placeholder","nome","onChange","target","required","verticalAlign","margin","Check","label","colazione","checked","pranzo","spuntino","cena","rows","preparazione","DietSections","section","setProgress","setLoading","setFood","setUserInput","setShowModalAnalysis","setShowModalNewMeal","setWarning","setError","reloadOptions","setReloadOptions","colazioni","setColazioni","useState","pranzi","setPranzi","spuntini","setSpuntini","cene","setCene","cardBackgroundColor","getColazioni","querySnapshot","getDocs","query","where","docs","empty","getPranzi","getSpuntini","getCene","useEffect","colazione_unica","colazione_martedi","colazione_lunedi","colazione_mercoledi","colazione_giovedi","colazione_venerdi","colazione_sabato","colazione_domenica","spuntino_unico_mattina","spuntino_martedi_mattina","spuntino_lunedi_mattina","spuntino_mercoledi_mattina","spuntino_giovedi_mattina","spuntino_venerdi_mattina","spuntino_sabato_mattina","spuntino_domenica_mattina","spuntino_unico_pomeriggio","spuntino_martedi_pomeriggio","spuntino_lunedi_pomeriggio","spuntino_mercoledi_pomeriggio","spuntino_giovedi_pomeriggio","spuntino_venerdi_pomeriggio","spuntino_sabato_pomeriggio","spuntino_domenica_pomeriggio","conditionalComponent","FloatingLabel","controlId","nome_paziente","cognome_paziente","email_paziente","toLowerCase","numero_telefono_paziente","eta_paziente","Select","sesso_paziente","codice_fiscale_paziente","toUpperCase","peso_paziente","altezza_paziente","data_inizio_dieta","data_fine_dieta","obiettivo_peso","kcal_giornaliere","inputId","options","isDisabled","faPlus","pranzo_lunedi","cena_lunedi","pranzo_martedi","cena_martedi","pranzo_mercoledi","cena_mercoledi","pranzo_giovedi","cena_giovedi","pranzo_venerdi","cena_venerdi","pranzo_sabato","cena_sabato","spuntino_unico","pranzo_domenica","cena_domenica"],"mappings":"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","file":"static/js/4.49d72838.chunk.js","sourcesContent":["import {collection, deleteDoc, doc, getDoc, serverTimestamp, setDoc, updateDoc} from \"firebase/firestore\";\nimport {db} from \"../config/firebase-config\";\n\n/*\n Funzione che si occupa di memorizzare i dati di una dieta su Firestore Database\n */\nexport async function addDiet(formData, nutrizionista) {\n    formData.data_inserimento = serverTimestamp();\n    formData.email_nutrizionista = nutrizionista.email;\n    formData.numero_telefono_nutrizionista = nutrizionista.telefono;\n    formData.tipologia_dieta = nutrizionista.ruolo;\n    await setDoc(doc(collection(db, \"diets\")), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare i dati di una dieta memorizzata su Firestore Database\n */\nexport async function updateDiet(formData, id) {\n    formData.data_inserimento = serverTimestamp();\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare il numero di telefono del nutrizionista su Firestore Database\n */\nexport async function updateTelephone(formData, id) {\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di eliminare una dieta memorizzata su Firestore Database\n */\nexport async function deleteDiet(id) {\n    await deleteDoc(doc(db, \"diets\", id));\n}\n\n/*\n Funzione che si occupa di ottenere i dati di una dieta memorizzata su Firestore Database\n */\nexport async function getDiet(id) {\n    const docRef = doc(db, \"diets\", id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        console.log(\"Documento letto correttamente \");\n        console.log(docSnap.data());\n        return docSnap.data();\n    } else {\n        console.log((\"Nessun documento trovato con il codice fiscale inserito!\"));\n    }\n}\n\n/*\n Funzione che si occupa di codificare l'url della richiesta ricevuto il pasto in input\n */\nexport const urlEncoded = arr => {\n    const regex = /,/gi;\n    if (Array.isArray(arr)) {\n        return arr.join(\",\").replace(regex, \" and \");\n    } else {\n        return arr.split(\" \").join(\"%20\");\n    }\n};\n","import {collection, deleteDoc, doc, serverTimestamp, setDoc, updateDoc} from \"firebase/firestore\";\nimport {db} from \"../config/firebase-config\";\n\n/*\n Funzione che si occupa di memorizzare i dati di un pasto su Firestore Database\n */\nexport async function addMeal(formData) {\n    formData.data_inserimento = serverTimestamp();\n    await setDoc(doc(collection(db, \"pasti\")), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare i dati di un pasto memorizzato su Firestore Database\n */\nexport async function updateMeal(formData, id) {\n    formData.data_inserimento = serverTimestamp();\n    await updateDoc(doc(db, \"pasti\", id), formData);\n}\n\n/*\n Funzione che si occupa di eliminare un pasto memorizzato su Firestore Database\n */\nexport async function deleteMeal(id) {\n    await deleteDoc(doc(db, \"pasti\", id));\n}\n\n/*\n Funzione per eliminare tutti gli elementi da un array\n */\nexport function clearArray(array) {\n    while (array.length > 0) {\n        array.pop();\n    }\n}\n","import {Alert, Card, Col, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport React from \"react\";\n\n\n/*\n Componente che visualizza i dettagli che caratterizzano l'analisi di un pasto\n L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n La traduzione dell'input dell'utente, da italiano ad inglese, viene effettuata sfruttando le API offerte da LIBRETRANSLATE (https://libretranslate.de/)\n */\nconst MealAnalysisPreview = ({index, item, userInput}) => {\n    return (\n        <Card className={\"col-12 mx-auto\"}\n              style={{padding: 0, marginBottom: 15}}>\n            <Card.Header className={\"text-center\"}><strong>{userInput[index]}</strong></Card.Header>\n            <Container className={\"d-flex flex-column mx-auto my-auto \"}>\n                <Container className={\"d-flex flex-wrap text-start\"}>\n                    <Container className={\"d-flex flex-wrap justify-content-evenly my-auto\"}\n                               style={{padding: 0, marginTop: 20}}>\n                        <Container style={{padding: 5}}\n                                   className={\"col-12 my-auto\"}>\n                            <Container className={\"d-flex flex-wrap\"}\n                                       style={{padding: 0, marginLeft: 10}}>\n                                <Container className={\"d-flex flex-wrap align-items-center col-12\"}\n                                           style={{padding: 0}}>\n                                    <Container className={\"justify-content-evenly mx-auto\"}>\n                                        <div className=\"col-md-12 mx-auto\"\n                                             style={{marginTop: 15}}>\n                                            <Row className={\"d-flex flew-row col-12 justify-content-evenly\"}\n                                                 style={{marginRight: 0}}>\n                                                {item.ENERC_KCAL.quantity > 0 ?\n                                                    //L'analisi dell'alimento ha prodotto risultati\n                                                    (<>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Energia:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.ENERC_KCAL.quantity.toFixed(1)} Kcal</p>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Carboidrati:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.CHOCDF_KCAL.quantity.toFixed(1)} gr.</p>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Grassi:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.FAT_KCAL.quantity.toFixed(1)} gr.</p>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Proteine:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.PROCNT_KCAL.quantity.toFixed(1)} gr.</p>\n                                                            </div>\n                                                        </Col>\n                                                    </>)\n                                                    //L'analisi dell'alimento non ha prodotto risultati\n                                                    :\n                                                    (<>\n                                                        <Alert className={\"text-center mx-auto col-12 flex-wrap\"}\n                                                               variant=\"warning\">\n                                                            Non è stato possibile effettuare l'analisi per questo ingrediente\n                                                        </Alert>\n                                                    </>)\n                                                }\n                                            </Row>\n                                        </div>\n                                    </Container>\n                                </Container>\n                            </Container>\n                        </Container>\n                    </Container>\n                </Container>\n            </Container>\n        </Card>\n    );\n};\n\nexport default MealAnalysisPreview;","import {Alert, Button, Card, Col, Modal, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport React from \"react\";\nimport PieChart from \"react-pie-graph-chart\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEyeSlash, faMagnifyingGlass} from \"@fortawesome/free-solid-svg-icons\";\nimport MealAnalysisPreview from \"./MealAnalysisPreview\";\nimport {sumArrayObject} from \"sum-any\";\n\n/*\n Componente che mostra i risultati dell'analisi di un pasto per mezzo di un Modal\n L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n La traduzione dell'input dell'utente, da italiano ad inglese, viene effettuata sfruttando le API offerte da LIBRETRANSLATE (https://libretranslate.de/)\n */\nconst MealAnalysisModal = ({\n                               showModal, setShowModal, showDetails, setShowDetails, nutrients,\n                               kcals, proteins, fats, carbohydrates, loading, userInput, food\n                           }) => {\n    return (\n        <>\n            <Modal\n                show={showModal}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header className={\"justify-content-center\"}>\n                    <h5 className={\"my-auto\"}>Pasto: \"<strong>{food}</strong>\"</h5>\n                </Modal.Header>\n                <Modal.Body>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{padding: 0, marginTop: 15}}>\n                        <Container style={{padding: 0}}>\n                            <Card.Header className={\"text-center\"}><strong>Valori nutrizionali\n                                                                           totali</strong></Card.Header>\n                            <Card.Body>\n                                <Container className={\"col-12 my-auto\"}\n                                           style={{marginLeft: 17}}>\n                                    <Row className={\"d-flex flew-row col-12 justify-content-center\"}\n                                         style={{marginRight: 0}}>\n                                        <Col>\n                                            <div className=\"text-start\">\n                                                <strong>Energia:</strong>\n                                            </div>\n                                            <div className=\"text-start\">\n                                                <p>{sumArrayObject(kcals, \"quantity\")} Kcal</p>\n                                            </div>\n                                        </Col>\n                                        <Col>\n                                            <div className=\"text-start\">\n                                                <strong>Carboidrati:</strong>\n                                            </div>\n                                            <div className=\"text-start\">\n                                                <p>{sumArrayObject(carbohydrates, \"quantity\")} gr.</p>\n                                            </div>\n                                        </Col>\n                                        <Col>\n                                            <div className=\"text-start\">\n                                                <strong>Grassi:</strong>\n                                            </div>\n                                            <div className=\"text-start\">\n                                                <p>{sumArrayObject(fats, \"quantity\")} gr.</p>\n                                            </div>\n                                        </Col>\n                                        <Col>\n                                            <div className=\"text-start\">\n                                                <strong>Proteine:</strong>\n                                            </div>\n                                            <div className=\"text-start\">\n                                                <p>{sumArrayObject(proteins, \"quantity\")}gr.</p>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Card.Body>\n                        </Container>\n                    </Card>\n                    <PieChart data={[\n                        {\n                            type: \"Carboidrati\",\n                            value: sumArrayObject(carbohydrates, \"quantity\"),\n                            color: \"#fbd464\"\n                        },\n                        {\n                            type: \"Grassi\",\n                            value: sumArrayObject(fats, \"quantity\"),\n                            color: \"#fb7270\"\n                        },\n                        {\n                            type: \"Proteine\",\n                            value: sumArrayObject(proteins, \"quantity\"),\n                            color: \"#3897f1\"\n                        }\n                    ]}/>\n                    <Container className={\"mx-auto col-5 text-center\"}>\n                        {showDetails\n                            ? (<Button variant=\"outline-secondary\"\n                                       className={\"btn d-block mx-auto\"}\n                                       onClick={(e) => setShowDetails(false)}><FontAwesomeIcon icon={faEyeSlash}\n                                                                                               style={{marginRight: 5}}/>Nascondi dettagli</Button>)\n                            : (<Button variant=\"outline-secondary\"\n                                       className={\"btn mx-auto\"}\n                                       onClick={(e) => setShowDetails(true)}><FontAwesomeIcon icon={faMagnifyingGlass}\n                                                                                              style={{marginRight: 5}}/>Mostra\n                                                                                                                        dettagli</Button>)\n                        }\n                    </Container>\n                    <Container style={{marginTop: 20}}>\n                        {showDetails && nutrients.map((item, index) => (\n                            <MealAnalysisPreview key={index}\n                                                 index={index}\n                                                 userInput={userInput}\n                                                 item={item}/>\n                        ))}\n                    </Container>\n                    {(nutrients.length === 0 && loading === false) ? (\n                        <Alert className={\"col-10 mx-auto\"}\n                               variant={\"warning\"}>La\n                                                   ricerca non ha prodotto risultati</Alert>) : (<></>)}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={() => setShowModal(false)}>Chiudi</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default MealAnalysisModal;","export default __webpack_public_path__ + \"static/media/showMealImg.bcf751a1.svg\";","import {Card, Form} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport React from \"react\";\n\n/*\n Componente che racchiude le sezioni che caratterizzano i campi di un singolo pasto\n */\nconst MealSections = ({formData, setFormData, disabled}) => {\n\n    const cardBackgroundColor = {\n        background: \"#FFEAD3\"\n    };\n\n    return (\n        <>\n            <div>\n                <Card className={\"col-10 mx-auto\"}\n                      style={{marginTop: 20}}>\n                    <Card.Header style={cardBackgroundColor}\n                                 className={\"text-start\"}\n                                 as=\"h5\">Dettagli\n                                         Pasto</Card.Header>\n                    <Card.Body>\n                        <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                            <Form.Group id=\"nome\"\n                                        style={{marginBottom: 15, padding: 5}}\n                                        className={\"col-12\"}>\n                                <Form.Label className={\"d-flex text-start\"}>Nome Pasto:</Form.Label>\n                                <Form.Control type=\"text\"\n                                              placeholder=\"es. pane 50 gr, petto di pollo 80 gr\"\n                                              value={formData.nome}\n                                              onChange={(e) => {\n                                                  setFormData({...formData, nome: e.target.value});\n                                              }}\n                                              disabled={disabled}\n                                              required/>\n                            </Form.Group>\n                            <small style={{color: \"grey\", verticalAlign: \"bottom\"}}>Per poter effettuare l'analisi del\n                                                                                    pasto inserisci gli ingredienti separandoli con la virgola</small>\n                            <Container className={\"d-flex d-inline flex-wrap justify-content-evenly\"}\n                                       style={{marginBottom: 20}}>\n                                <Container className={\"text-start col-6 col-md-3\"}\n                                           style={{margin: 0}}>\n                                    <Form.Group id=\"checkBoxColazione\"\n                                                style={{marginBottom: 5, marginTop: 15, padding: 0}}>\n                                        <Form.Check type=\"checkbox\"\n                                                    label=\"Colazione\"\n                                                    onChange={() => {\n                                                        setFormData({...formData, colazione: !formData.colazione});\n                                                    }}\n                                                    checked={formData.colazione}\n                                                    disabled={disabled}/>\n                                    </Form.Group>\n                                </Container>\n                                <Container className={\"text-start col-6 col-md-3\"}\n                                           style={{margin: 0}}>\n                                    <Form.Group id=\"checkBoxPranzo\"\n                                                style={{marginBottom: 5, marginTop: 15, padding: 0}}\n                                                className={\"col-6 col-sm-4\"}>\n                                        <Form.Check type=\"checkbox\"\n                                                    label=\"Pranzo\"\n                                                    onChange={() => {\n                                                        setFormData({...formData, pranzo: !formData.pranzo});\n                                                    }}\n                                                    checked={formData.pranzo}\n                                                    disabled={disabled}/>\n                                    </Form.Group>\n                                </Container>\n                                <Container className={\"text-start col-6 col-md-3\"}\n                                           style={{margin: 0}}>\n                                    <Form.Group id=\"checkBoxSpuntino\"\n                                                style={{marginBottom: 5, marginTop: 15, padding: 0}}\n                                                className={\"col-12 col-sm-10\"}>\n                                        <Form.Check type=\"checkbox\"\n                                                    label=\"Spuntino\"\n                                                    onChange={() => {\n                                                        setFormData({...formData, spuntino: !formData.spuntino});\n                                                    }}\n                                                    checked={formData.spuntino}\n                                                    disabled={disabled}/>\n                                    </Form.Group>\n                                </Container>\n                                <Container className={\"text-start col-6 col-md-3\"}\n                                           style={{margin: 0}}>\n                                    <Form.Group id=\"checkBoxCena\"\n                                                style={{marginBottom: 5, marginTop: 15, padding: 0}}\n                                                className={\"col-12 col-sm-10\"}>\n                                        <Form.Check type=\"checkbox\"\n                                                    label=\"Cena\"\n                                                    onChange={() => {\n                                                        setFormData({...formData, cena: !formData.cena});\n                                                    }}\n                                                    checked={formData.cena}\n                                                    disabled={disabled}/>\n                                    </Form.Group>\n                                </Container>\n                            </Container>\n                        </Container>\n                        <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                            <Form.Group id=\"preparazione\"\n                                        style={{marginBottom: 15, padding: 5}}\n                                        className={\"col-12\"}>\n                                <Form.Label className={\"d-flex text-start\"}>Preparazione Pasto:</Form.Label>\n                                <Form.Control as={\"textarea\"}\n                                              rows={9}\n                                              placeholder=\"Preparazione Pasto\"\n                                              value={formData.preparazione}\n                                              onChange={(e) => {\n                                                  setFormData({...formData, preparazione: e.target.value});\n                                              }}\n                                              disabled={disabled}/>\n                            </Form.Group>\n                        </Container>\n                        {/*<Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                         <Form.Group id=\"sostituzioni\"\n                         style={{marginBottom: 15, padding: 5}}\n                         className={\"col-12\"}>\n                         <Form.Label className={\"d-flex text-start\"}>Sostituzioni Pasto:</Form.Label>\n                         <Form.Control as={\"textarea\"}\n                         rows={5}\n                         placeholder=\"Sostituzioni Pasto\"\n                         value={formData.sostituzioni}\n                         onChange={(e) => {\n                         setFormData({...formData, sostituzioni: e.target.value});\n                         }}\n                         disabled={disabled}/>\n                         </Form.Group>\n                         </Container>*/}\n                    </Card.Body>\n                </Card>\n            </div>\n        </>\n    );\n};\n\nexport default MealSections;","export default __webpack_public_path__ + \"static/media/newDietImage.de2141ac.svg\";","import {Alert, Button, Card, FloatingLabel, Form, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport React, {useEffect, useState} from \"react\";\nimport {collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../config/firebase-config\";\nimport Select from \"react-select\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport {urlEncoded} from \"../../context/DietContext\";\nimport {clearArray} from \"../../context/MealContext\";\n\n\n/*\n Componente che racchiude le sezioni che caratterizzano i campi di una singola dieta\n */\nconst DietSections = ({\n                          section,\n                          formData,\n                          setFormData,\n                          disabled,\n                          setProgress,\n                          setLoading,\n                          setFood,\n                          setUserInput,\n                          nutrients,\n                          kcals,\n                          carbohydrates,\n                          fats,\n                          proteins,\n                          setShowModalAnalysis,\n                          setShowModalNewMeal,\n                          setWarning,\n                          setError,\n                          reloadOptions,\n                          setReloadOptions\n                      }) => {\n    const [colazioni, setColazioni] = useState([]);\n    const [pranzi, setPranzi] = useState([]);\n    const [spuntini, setSpuntini] = useState([]);\n    const [cene, setCene] = useState([]);\n\n    const cardBackgroundColor = {\n        background: \"#FFEAD3\"\n    };\n\n    //Ottengo tutti i pasti con categoria 'COLAZIONE'\n    const getColazioni = async () => {\n        setProgress(true);\n        const querySnapshot = await getDocs(query(collection(db, \"pasti\"), where(\"colazione\", \"==\", true)));\n        setColazioni(querySnapshot.docs.map((doc) => ({value: doc.id, label: doc.data().nome})));\n        if (querySnapshot.empty) {\n            setError(\"Per poter creare con successo una nuova dieta devi prima creare almeno un pasto per ogni categoria di pasto: Colazione, Pranzo, Spuntino e Cena. Puoi farlo subito andando nella sezione \\\"Gestione Pasti\\\"\");\n        }\n        setProgress(false);\n    };\n\n    //Ottengo tutti i pasti con categoria 'PRANZO'\n    const getPranzi = async () => {\n        setProgress(true);\n        const querySnapshot = await getDocs(query(collection(db, \"pasti\"), where(\"pranzo\", \"==\", true)));\n        setPranzi(querySnapshot.docs.map((doc) => ({value: doc.id, label: doc.data().nome})));\n        if (querySnapshot.empty) {\n            setError(\"Per poter creare con successo una nuova dieta devi prima creare almeno un pasto per ogni categoria di pasto: Colazione, Pranzo, Spuntino e Cena. Puoi farlo subito andando nella sezione \\\"Gestione Pasti\\\"\");\n        }\n        setProgress(false);\n    };\n\n    //Ottengo tutti i pasti con categoria 'SPUNTINO'\n    const getSpuntini = async () => {\n        setProgress(true);\n        const querySnapshot = await getDocs(query(collection(db, \"pasti\"), where(\"spuntino\", \"==\", true)));\n        setSpuntini(querySnapshot.docs.map((doc) => ({value: doc.id, label: doc.data().nome})));\n        if (querySnapshot.empty) {\n            setError(\"Per poter creare con successo una nuova dieta devi prima creare almeno un pasto per ogni categoria di pasto: Colazione, Pranzo, Spuntino e Cena. Puoi farlo subito andando nella sezione \\\"Gestione Pasti\\\"\");\n        }\n        setProgress(false);\n    };\n\n    //Ottengo tutti i pasti con categoria 'CENA'\n    const getCene = async () => {\n        setProgress(true);\n        const querySnapshot = await getDocs(query(collection(db, \"pasti\"), where(\"cena\", \"==\", true)));\n        setCene(querySnapshot.docs.map((doc) => ({value: doc.id, label: doc.data().nome})));\n        if (querySnapshot.empty) {\n            setError(\"Per poter creare con successo una nuova dieta devi prima creare almeno un pasto per ogni categoria di pasto: Colazione, Pranzo, Spuntino e Cena. Puoi farlo subito andando nella sezione \\\"Gestione Pasti\\\"\");\n        }\n        setProgress(false);\n    };\n\n    //Carico le opzioni al caricamento della pagina\n    useEffect(() => {\n        getColazioni();\n        getPranzi();\n        getSpuntini();\n        getCene();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Ricarico le opzioni ogni volta che viene aggiunto un nuovo pasto\n    useEffect(() => {\n        if (reloadOptions) {\n            getColazioni();\n            getPranzi();\n            getSpuntini();\n            getCene();\n            setReloadOptions(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [reloadOptions]);\n\n    //Gestione scelta relativa alla colazione unica\n    useEffect(() => {\n        if (formData.colazione_unica) {\n            setFormData({\n                ...formData,\n                colazione_martedi: formData.colazione_lunedi,\n                colazione_mercoledi: formData.colazione_lunedi,\n                colazione_giovedi: formData.colazione_lunedi,\n                colazione_venerdi: formData.colazione_lunedi,\n                colazione_sabato: formData.colazione_lunedi,\n                colazione_domenica: formData.colazione_lunedi\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formData.colazione_unica, formData.colazione_lunedi]);\n\n    //Gestione scelta relativa allo spuntino unico della mattina\n    useEffect(() => {\n        if (formData.spuntino_unico_mattina) {\n            setFormData({\n                ...formData,\n                spuntino_martedi_mattina: formData.spuntino_lunedi_mattina,\n                spuntino_mercoledi_mattina: formData.spuntino_lunedi_mattina,\n                spuntino_giovedi_mattina: formData.spuntino_lunedi_mattina,\n                spuntino_venerdi_mattina: formData.spuntino_lunedi_mattina,\n                spuntino_sabato_mattina: formData.spuntino_lunedi_mattina,\n                spuntino_domenica_mattina: formData.spuntino_lunedi_mattina\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formData.spuntino_unico_mattina, formData.spuntino_lunedi_mattina]);\n\n\n    //Gestione scelta relativa allo spuntino unico del pomeriggio\n    useEffect(() => {\n        if (formData.spuntino_unico_pomeriggio) {\n            setFormData({\n                ...formData,\n                spuntino_martedi_pomeriggio: formData.spuntino_lunedi_pomeriggio,\n                spuntino_mercoledi_pomeriggio: formData.spuntino_lunedi_pomeriggio,\n                spuntino_giovedi_pomeriggio: formData.spuntino_lunedi_pomeriggio,\n                spuntino_venerdi_pomeriggio: formData.spuntino_lunedi_pomeriggio,\n                spuntino_sabato_pomeriggio: formData.spuntino_lunedi_pomeriggio,\n                spuntino_domenica_pomeriggio: formData.spuntino_lunedi_pomeriggio\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formData.spuntino_unico_pomeriggio, formData.spuntino_lunedi_pomeriggio]);\n\n    /*\n     Funzione per l'analisi del pasto in input\n     L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n     */\n    const handleSubmitAnalysis = async (e, value) => {\n        e.preventDefault();\n        setWarning(\"\");\n\n        if (value !== \"\" && value !== undefined) {\n            //Inizializzo gli array per una nuova ricerca\n            clearArray(nutrients);\n            clearArray(kcals);\n            clearArray(proteins);\n            clearArray(carbohydrates);\n            clearArray(fats);\n\n            setProgress(true);\n            setLoading(true);\n            const req = {\n                q: value,\n                source: \"it\",\n                target: \"en\"\n            };\n            axios.post(`https://translate.argosopentech.com/translate`, req).then((response) => {\n                setFood(value);\n                setUserInput(value.split(\",\"));\n                response.data.translatedText.split(\",\").forEach((ingredient) => {\n                    let stringify = urlEncoded(ingredient);\n                    axios.get(`https://api.edamam.com/api/nutrition-data?app_id=b92c2025&app_key=e1942e617a37552b845d1db4d36d9522&ingr=${stringify}`)\n                         .then((res) => {\n                             nutrients.push(res.data.totalNutrientsKCal);\n                             proteins.push(res.data.totalNutrientsKCal.PROCNT_KCAL);\n                             carbohydrates.push(res.data.totalNutrientsKCal.CHOCDF_KCAL);\n                             fats.push(res.data.totalNutrientsKCal.FAT_KCAL);\n                             kcals.push(res.data.totalNutrientsKCal.ENERC_KCAL);\n\n                             if (nutrients.length === value.split(\",\").length) {\n                                 setProgress(false);\n                                 setLoading(false);\n                                 setShowModalAnalysis(true);\n                             }\n                         });\n                });\n            });\n        } else {\n            setWarning(\"Per poter effettuare la ricerca inserisci prima un pasto nel formato richiesto: \\nes. pane 50 gr, petto di pollo 80 gr\");\n        }\n    };\n\n    /*\n     Componente che si occupa della visualizzazione della sezione richiesta\n     */\n    const conditionalComponent = () => {\n        switch (section) {\n            case 0:\n                //ANAGRAFICA PAZIENTE\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>👤</p>Anagrafica</Card.Header>\n                        <Card.Body>\n                            <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                                <Form.Group id=\"nome_paziente\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Nome\">\n                                        <Form.Control type=\"text\"\n                                                      placeholder=\"Nome\"\n                                                      value={formData.nome_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, nome_paziente: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                <Form.Group id=\"cognome\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Cognome\">\n                                        <Form.Control type=\"text\"\n                                                      placeholder=\"Cognome\"\n                                                      value={formData.cognome_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, cognome_paziente: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                                <Form.Group id=\"email\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Email\">\n                                        <Form.Control type=\"email\"\n                                                      placeholder=\"name@example.com\"\n                                                      value={formData.email_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({\n                                                              ...formData,\n                                                              email_paziente: e.target.value.toLowerCase()\n                                                          });\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                <Form.Group id=\"numeroTelefono\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Numero di telefono\">\n                                        <Form.Control type=\"tel\"\n                                                      placeholder=\"Numero di telefono\"\n                                                      value={formData.numero_telefono_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({\n                                                              ...formData,\n                                                              numero_telefono_paziente: e.target.value\n                                                          });\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap\"}>\n                                <Form.Group id=\"eta\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Età\">\n                                        <Form.Control type=\"number\"\n                                                      placeholder=\"Età\"\n                                                      value={formData.eta_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, eta_paziente: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                <Form.Group id=\"sesso\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Sesso\">\n                                        <Form.Select value={formData.sesso_paziente}\n                                                     onChange={(e) => {\n                                                         setFormData({...formData, sesso_paziente: e.target.value});\n                                                     }}\n                                                     disabled={disabled}\n                                                     required>\n                                            <option value={\"\"}>-</option>\n                                            <option value={\"Maschio\"}>Maschio</option>\n                                            <option value={\"Femmina\"}>Femmina</option>\n                                        </Form.Select>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                                <Form.Group id=\"codiceFiscale\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Codice fiscale\">\n                                        <Form.Control type=\"text\"\n                                                      placeholder=\"Codice fiscale\"\n                                                      value={formData.codice_fiscale_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({\n                                                              ...formData,\n                                                              codice_fiscale_paziente: e.target.value.toUpperCase()\n                                                          });\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            //OBIETTIVI DIETA\n            case 1:\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>📏</p>Misure\n                                                                                                Anatomiche</Card.Header>\n                        <Card.Body>\n                            <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                                <Form.Group id=\"peso\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Peso\">\n                                        <Form.Control type=\"number\"\n                                                      placeholder=\"Peso\"\n                                                      value={formData.peso_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, peso_paziente: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                <Form.Group id=\"altezza\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Altezza\">\n                                        <Form.Control type=\"number\"\n                                                      placeholder=\"Altezza\"\n                                                      value={formData.altezza_paziente}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, altezza_paziente: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>📈</p>Obiettivi\n                                                                                                Dieta</Card.Header>\n                        <Card.Body>\n                            <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                                <Form.Group id=\"dataInizioDieta\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Data inizio dieta\">\n                                        <Form.Control type=\"date\"\n                                                      placeholder=\"Data inizio dieta\"\n                                                      value={formData.data_inizio_dieta}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, data_inizio_dieta: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                <Form.Group id=\"dataFineDieta\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Data dine dieta\">\n                                        <Form.Control type=\"date\"\n                                                      placeholder=\"Data fine dieta\"\n                                                      value={formData.data_fine_dieta}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, data_fine_dieta: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap justify-content-evenly\"}>\n                                <Form.Group id=\"obiettivoPeso\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Obiettivo Peso\">\n                                        <Form.Control type=\"number\"\n                                                      placeholder=\"Obiettivo Peso\"\n                                                      value={formData.obiettivo_peso}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, obiettivo_peso: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                <Form.Group id=\"kcalGiornaliere\"\n                                            style={{marginBottom: 15, padding: 5}}\n                                            className={\"col-12 col-sm-6\"}>\n                                    <FloatingLabel controlId=\"floatingInputGrid\"\n                                                   label=\"Kcal Giornaliere\">\n                                        <Form.Control type=\"number\"\n                                                      placeholder=\"Kcal Giornaliere\"\n                                                      value={formData.kcal_giornaliere}\n                                                      onChange={(e) => {\n                                                          setFormData({...formData, kcal_giornaliere: e.target.value});\n                                                      }}\n                                                      disabled={disabled}\n                                                      required/>\n                                    </FloatingLabel>\n                                </Form.Group>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            //LUNEDI\n            case 2:\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_lunedi\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_lunedi}\n                                    onChange={(e) => setFormData({...formData, colazione_lunedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_lunedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                            <Container className={\"text-start\"}\n                                       style={{margin: 0}}>\n                                <Form.Group id=\"checkBoxColazione\"\n                                            style={{marginBottom: 5, marginTop: 15, padding: 0}}\n                                            className={\"col-12 col-sm-10\"}>\n                                    <Form.Check type=\"checkbox\"\n                                                label=\"Imposta questa colazione per i restanti giorni\"\n                                                onChange={() => {\n                                                    setFormData({\n                                                        ...formData,\n                                                        colazione_unica: !formData.colazione_unica\n                                                    });\n                                                }}\n                                                checked={formData.colazione_unica}\n                                                disabled={disabled}/>\n                                </Form.Group>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_lunedi_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_lunedi_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_lunedi_mattina: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_lunedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                            <Container className={\"text-start\"}\n                                       style={{margin: 0}}>\n                                <Form.Group id=\"checkBoxSpuntinoMattutino\"\n                                            style={{marginBottom: 5, marginTop: 15, padding: 0}}\n                                            className={\"col-12 col-sm-10\"}>\n                                    <Form.Check type=\"checkbox\"\n                                                label=\"Imposta questo spuntino mattutino per i restanti giorni\"\n                                                onChange={() => {\n                                                    setFormData({\n                                                        ...formData,\n                                                        spuntino_unico_mattina: !formData.spuntino_unico_mattina\n                                                    });\n                                                }}\n                                                checked={formData.spuntino_unico_mattina}\n                                                disabled={disabled}/>\n                                </Form.Group>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_lunedi\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_lunedi}\n                                    onChange={(e) => setFormData({...formData, pranzo_lunedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_lunedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_lunedi_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_lunedi_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_lunedi_pomeriggio: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_lunedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                            <Container className={\"text-start\"}\n                                       style={{margin: 0}}>\n                                <Form.Group id=\"checkBoxSpuntinoPomeriggio\"\n                                            style={{marginBottom: 5, marginTop: 15, padding: 0}}\n                                            className={\"col-12 col-sm-10\"}>\n                                    <Form.Check type=\"checkbox\"\n                                                label=\"Imposta questo spuntino pomeridiano per i restanti giorni\"\n                                                onChange={() => {\n                                                    setFormData({\n                                                        ...formData,\n                                                        spuntino_unico_pomeriggio: !formData.spuntino_unico_pomeriggio\n                                                    });\n                                                }}\n                                                checked={formData.spuntino_unico_pomeriggio}\n                                                disabled={disabled}/>\n                                </Form.Group>\n                            </Container>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_lunedi\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_lunedi}\n                                    onChange={(e) => setFormData({...formData, cena_lunedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_lunedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            //MARTEDI\n            case 3:\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            {formData.colazione_unica && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato la colazione del Lunedì per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_martedi\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_unica ? formData.colazione_lunedi : formData.colazione_martedi}\n                                    onChange={(e) => setFormData({...formData, colazione_martedi: e})}\n                                    isDisabled={formData.colazione_unica ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_martedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_mattina && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì mattina per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_martedi_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_unico_mattina ? formData.spuntino_lunedi_mattina : formData.spuntino_martedi_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_martedi_mattina: e})}\n                                    isDisabled={formData.spuntino_unico_mattina ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_martedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_martedi\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_martedi}\n                                    onChange={(e) => setFormData({...formData, pranzo_martedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_martedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_pomeriggio && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì pomeriggio per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_martedi_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_unico_pomeriggio ? formData.spuntino_lunedi_pomeriggio : formData.spuntino_martedi_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_martedi_pomeriggio: e})}\n                                    isDisabled={formData.spuntino_unico_pomeriggio ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_martedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_martedi\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_martedi}\n                                    onChange={(e) => setFormData({...formData, cena_martedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_martedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            case 4:\n                //MERCOLEDI\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            {formData.colazione_unica && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato la colazione del Lunedì per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_mercoledi\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_unica ? formData.colazione_lunedi : formData.colazione_mercoledi}\n                                    onChange={(e) => setFormData({...formData, colazione_mercoledi: e})}\n                                    isDisabled={formData.colazione_unica ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_mercoledi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_mattina && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì mattina per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_mercoledi_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_unico_mattina ? formData.spuntino_lunedi_mattina : formData.spuntino_mercoledi_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_mercoledi_mattina: e})}\n                                    isDisabled={formData.spuntino_unico_mattina ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_mercoledi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_mercoledi\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_mercoledi}\n                                    onChange={(e) => setFormData({...formData, pranzo_mercoledi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_mercoledi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_pomeriggio && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì pomeriggio per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_mercoledi_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_unico_pomeriggio ? formData.spuntino_lunedi_pomeriggio : formData.spuntino_mercoledi_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_mercoledi_pomeriggio: e})}\n                                    isDisabled={formData.spuntino_unico_pomeriggio ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_mercoledi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_mercoledi\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_mercoledi}\n                                    onChange={(e) => setFormData({...formData, cena_mercoledi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_mercoledi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            case 5:\n                //GIOVEDI\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            {formData.colazione_unica && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato la colazione del Lunedì per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_giovedi\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_unica ? formData.colazione_lunedi : formData.colazione_giovedi}\n                                    onChange={(e) => setFormData({...formData, colazione_giovedi: e})}\n                                    isDisabled={formData.colazione_unica ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_giovedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_mattina && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì mattina per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_giovedi_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_unico_mattina ? formData.spuntino_lunedi_mattina : formData.spuntino_giovedi_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_giovedi_mattina: e})}\n                                    isDisabled={formData.spuntino_unico_mattina ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_giovedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_giovedi\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_giovedi}\n                                    onChange={(e) => setFormData({...formData, pranzo_giovedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_giovedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_pomeriggio && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì pomeriggio per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_giovedi_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_unico_pomeriggio ? formData.spuntino_lunedi_pomeriggio : formData.spuntino_giovedi_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_giovedi_pomeriggio: e})}\n                                    isDisabled={formData.spuntino_unico_pomeriggio ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_giovedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_giovedi\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_giovedi}\n                                    onChange={(e) => setFormData({...formData, cena_giovedi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_giovedi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            case 6:\n                //VENERDI\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            {formData.colazione_unica && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato la colazione del Lunedì per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_venerdi\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_unica ? formData.colazione_lunedi : formData.colazione_venerdi}\n                                    onChange={(e) => setFormData({...formData, colazione_venerdi: e})}\n                                    isDisabled={formData.colazione_unica ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_venerdi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_mattina && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì mattina per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_venerdi_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_unico_mattina ? formData.spuntino_lunedi_mattina : formData.spuntino_venerdi_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_venerdi_mattina: e})}\n                                    isDisabled={formData.spuntino_unico_mattina ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_venerdi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_venerdi\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_venerdi}\n                                    onChange={(e) => setFormData({...formData, pranzo_venerdi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_venerdi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_pomeriggio && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì pomeriggio per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_venerdi_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_unico_pomeriggio ? formData.spuntino_lunedi_pomeriggio : formData.spuntino_venerdi_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_venerdi_pomeriggio: e})}\n                                    isDisabled={formData.spuntino_unico_pomeriggio ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_venerdi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_venerdi\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_venerdi}\n                                    onChange={(e) => setFormData({...formData, cena_venerdi: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_venerdi.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            case 7:\n                //SABATO\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            {formData.colazione_unica && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato la colazione del Lunedì per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_sabato\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_unica ? formData.colazione_lunedi : formData.colazione_sabato}\n                                    onChange={(e) => setFormData({...formData, colazione_sabato: e})}\n                                    isDisabled={formData.colazione_unica ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_sabato.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_mattina && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì mattina per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_sabato_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_unico_mattina ? formData.spuntino_lunedi_mattina : formData.spuntino_sabato_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_sabato_mattina: e})}\n                                    isDisabled={formData.spuntino_unico_mattina ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_sabato.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_sabato\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_sabato}\n                                    onChange={(e) => setFormData({...formData, pranzo_sabato: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_sabato.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_pomeriggio && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì pomeriggio per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_sabato_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_unico_pomeriggio ? formData.spuntino_lunedi_pomeriggio : formData.spuntino_sabato_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_sabato_pomeriggio: e})}\n                                    isDisabled={formData.spuntino_unico_pomeriggio ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_sabato.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_sabato\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_sabato}\n                                    onChange={(e) => setFormData({...formData, cena_sabato: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_sabato.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            case 8:\n                //DOMENICA\n                return <div>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🥐</p>Colazione</Card.Header>\n                        <Card.Body>\n                            {formData.colazione_unica && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato la colazione del Lunedì per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"colazione_domenica\"}\n                                    options={colazioni}\n                                    placeholder=\"Seleziona colazione...\"\n                                    value={formData.colazione_unica ? formData.colazione_lunedi : formData.colazione_domenica}\n                                    onChange={(e) => setFormData({...formData, colazione_domenica: e})}\n                                    isDisabled={formData.colazione_unica ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.colazione_domenica.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🍎</p>Spuntino Mattutino</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì mattina per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_domenica_mattina\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino mattutino...\"\n                                    value={formData.spuntino_unico_mattina ? formData.spuntino_lunedi_mattina : formData.spuntino_domenica_mattina}\n                                    onChange={(e) => setFormData({...formData, spuntino_domenica_mattina: e})}\n                                    isDisabled={formData.spuntino_unico_mattina ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_domenica.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍝</p>Pranzo</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"pranzo_domenica\"}\n                                    options={pranzi}\n                                    placeholder=\"Seleziona pranzo...\"\n                                    value={formData.pranzo_domenica}\n                                    onChange={(e) => setFormData({...formData, pranzo_domenica: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.pranzo_domenica.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{\n                            marginRight: 20,\n                            marginBottom: 0\n                        }}>🧃</p>Spuntino Pomeridiano</Card.Header>\n                        <Card.Body>\n                            {formData.spuntino_unico_pomeriggio && !disabled\n                                ? (\n                                    <Alert className={\"col-12 col-sm-11 col-lg-8 mx-auto\"}\n                                           variant={\"warning\"}>Hai già\n                                                               impostato lo spuntino del Lunedì pomeriggio per i restanti\n                                                               giorni della settimana,\n                                                               se hai cambiato idea puoi modificare la tua scelta nella sezione dedicata del\n                                                               Lunedì </Alert>\n                                )\n                                : (<></>)}\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"spuntino_domenica_pomeriggio\"}\n                                    options={spuntini}\n                                    placeholder=\"Seleziona spuntino pomeridiano...\"\n                                    value={formData.spuntino_unico_pomeriggio ? formData.spuntino_lunedi_pomeriggio : formData.spuntino_domenica_pomeriggio}\n                                    onChange={(e) => setFormData({...formData, spuntino_domenica_pomeriggio: e})}\n                                    isDisabled={formData.spuntino_unico_pomeriggio ? true : disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.spuntino_domenica.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    <Card className={\"col-10 mx-auto\"}\n                          style={{marginTop: 20}}>\n                        <Card.Header style={cardBackgroundColor}\n                                     className={\"text-start d-flex d-inline\"}\n                                     as=\"h5\"><p style={{marginRight: 20, marginBottom: 0}}>🍖</p>Cena</Card.Header>\n                        <Card.Body>\n                            <Row className={\"mx-auto justify-content-evenly gap-3 gap-lg-0\"}>\n                                <Select\n                                    inputId={\"cena_domenica\"}\n                                    options={cene}\n                                    placeholder=\"Seleziona cena...\"\n                                    value={formData.cena_domenica}\n                                    onChange={(e) => setFormData({...formData, cena_domenica: e})}\n                                    isDisabled={disabled}\n                                    className={\"col-12 col-lg-10\"}\n                                    required\n                                />\n                                {!disabled && <Button variant=\"outline-secondary\"\n                                                      className={\"col-4 col-lg-2 mx-auto\"}\n                                                      onClick={(e) => setShowModalNewMeal(true)}><FontAwesomeIcon\n                                    icon={faPlus}\n                                    style={{marginRight: 5}}/>Crea Nuovo</Button>}\n                                {/*<Button variant=\"outline-secondary\"\n                                 className={\"col-4 col-lg-2 mx-auto\"}\n                                 onClick={(e) => handleSubmitAnalysis(e, formData.cena_domenica.label)}><FontAwesomeIcon\n                                 icon={faChartSimple}\n                                 style={{marginRight: 5}}/>Analizza</Button>*/}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </div>;\n            default:\n                return <div>Sezione non esistente</div>;\n        }\n    };\n\n    return (\n        <>\n            {conditionalComponent()}\n        </>\n    );\n};\n\nexport default DietSections;"],"sourceRoot":""}