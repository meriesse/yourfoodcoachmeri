{"version":3,"sources":["Components/Utilities/Pagination.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","../node_modules/react-bootstrap/esm/Badge.js","Components/Diet/DietPreview.js","Components/Diet/ShowDiets.js"],"names":["PaginationComponent","_ref","itemsCount","itemsPerPage","currentPage","setCurrentPage","alwaysShown","pagesCount","Math","ceil","isPaginationShown","isCurrentPageFirst","isCurrentPageLast","changePage","number","isPageNumberOutOfRange","pageNumbers","Array","map","_","index","pageNumber","isPageNumberFirst","isPageNumberLast","isCurrentPageWithinTwoPageNumbers","abs","_jsx","Pagination","Item","active","onClick","onPageNumberClick","children","Ellipsis","className","useEffect","setLastPageAsCurrent","_Fragment","_jsxs","Prev","onPreviousPageClick","disabled","Next","onNextPageClick","PageItem","React","ref","style","activeLabel","linkStyle","linkClassName","props","Component","Anchor","classNames","displayName","createButton","name","defaultValue","label","arguments","length","undefined","Button","_ref2","First","Last","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","concat","Object","assign","InputGroupText","as","InputGroup","hasValidation","contextValue","useMemo","InputGroupContext","Provider","value","Text","Radio","FormCheckInput","type","Checkbox","ListGroupItem","eventKey","variant","action","navItemProps","meta","useNavItem","key","makeEventKey","href","handleClick","useEventCallback","event","preventDefault","stopPropagation","tabIndex","isActive","ListGroup","initialBsPrefix","horizontal","numbered","controlledProps","useUncontrolled","activeKey","horizontalVariant","BaseNav","Badge","bg","pill","text","prefix","DietPreview","id","nomePaziente","cognomePaziente","codiceFiscalePaziente","dataInizio","dataFine","navigate","useNavigate","currentData","Date","dataFineDieta","padding","cursor","Container","marginTop","margin","ShowDietImg","maxHeight","maxWidth","marginLeft","marginRight","FontAwesomeIcon","icon","faAngleRight","ShowDiets","currentUser","useAuth","error","setError","useState","success","setSuccess","progress","setProgress","location","useLocation","searchInput","setSearchInput","showExpired","setShowExpired","diets","setDiets","lastDietNumber","firstDietIndex","scrollToTop","async","q","query","collection","db","where","email","orderBy","getDocs","then","querySnapshot","docs","doc","data","catch","finally","getDiets","state","filtered","filter","diet","toLowerCase","nome_paziente","includes","cognome_paziente","codice_fiscale_paziente","data_fine_dieta","Spinner","background","backgroundSize","minHeight","Card","marginBottom","borderRadius","boxShadow","borderLeft","borderTop","fontFamily","LinkContainer","to","height","width","faAngleLeft","color","src","ShowDietsImg","alt","Alert","onClose","dismissible","SyncLoader","loading","position","top","left","transform","zIndex","Navbar","expand","Form","Control","placeholder","onChange","e","target","Check","checked","replace","faPlus","slice","data_inizio_dieta"],"mappings":"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","file":"static/js/20.b815ed07.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport PropTypes from \"prop-types\";\n\n/*\n Componente che si occupa di impaginare gli elementi di una collezione\n */\nconst PaginationComponent = ({itemsCount, itemsPerPage, currentPage, setCurrentPage, alwaysShown = true}) => {\n    const pagesCount = Math.ceil(itemsCount / itemsPerPage);\n    const isPaginationShown = alwaysShown ? true : pagesCount > 1;\n    const isCurrentPageFirst = currentPage === 1;\n    const isCurrentPageLast = currentPage === pagesCount;\n\n    const changePage = number => {\n        if (currentPage === number) return;\n        setCurrentPage(number);\n    };\n\n    const onPageNumberClick = pageNumber => {\n        changePage(pageNumber);\n    };\n\n    const onPreviousPageClick = () => {\n        changePage(currentPage => currentPage - 1);\n    };\n\n    const onNextPageClick = () => {\n        changePage(currentPage => currentPage + 1);\n    };\n\n    const setLastPageAsCurrent = () => {\n        if (currentPage > pagesCount) {\n            setCurrentPage(pagesCount);\n        }\n    };\n\n    let isPageNumberOutOfRange;\n\n    const pageNumbers = [...new Array(pagesCount)].map((_, index) => {\n        const pageNumber = index + 1;\n        const isPageNumberFirst = pageNumber === 1;\n        const isPageNumberLast = pageNumber === pagesCount;\n        const isCurrentPageWithinTwoPageNumbers =\n            Math.abs(pageNumber - currentPage) <= 2;\n\n        if (\n            isPageNumberFirst ||\n            isPageNumberLast ||\n            isCurrentPageWithinTwoPageNumbers\n        ) {\n            isPageNumberOutOfRange = false;\n            return (\n                <Pagination.Item\n                    key={pageNumber}\n                    active={pageNumber === currentPage}\n                    onClick={() => onPageNumberClick(pageNumber)}\n                >\n                    {pageNumber}\n                </Pagination.Item>\n            );\n        }\n\n        if (!isPageNumberOutOfRange) {\n            isPageNumberOutOfRange = true;\n            return <Pagination.Ellipsis key={pageNumber}\n                                        className=\"muted\"/>;\n        }\n\n        return null;\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(setLastPageAsCurrent, [pagesCount]);\n\n    return (\n        <>\n            {isPaginationShown && (\n                <Pagination>\n                    <Pagination.Prev\n                        onClick={onPreviousPageClick}\n                        disabled={isCurrentPageFirst}\n                    />\n                    {pageNumbers}\n                    <Pagination.Next\n                        onClick={onNextPageClick}\n                        disabled={isCurrentPageLast}\n                    />\n                </Pagination>\n            )}\n        </>\n    );\n};\n\nPaginationComponent.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    alwaysShown: PropTypes.bool\n};\n\nexport default PaginationComponent;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import {Badge, ListGroup} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport {ReactComponent as ShowDietImg} from \"../../img/showDietImg.svg\";\nimport React from \"react\";\nimport {faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {useNavigate} from \"react-router-dom\";\n\n/*\n Componente che visualizza i dettagli di una singola dieta in un ListGroup\n */\nconst DietPreview = ({id, nomePaziente, cognomePaziente, codiceFiscalePaziente, dataInizio, dataFine}) => {\n    const navigate = useNavigate();\n    //Ottengo la data corrente es. 2022-08-12\n    const currentData = new Date();\n    //Converto stringa in oggetto date\n    const dataFineDieta = new Date(dataFine);\n    return (\n        //L'utente viene indirizzato alla pagina che visualizza i dettagli della dieta\n        <ListGroup.Item onClick={() => navigate(`/dieta/${id}`)}\n                        className={\"col-12 mx-auto\"}\n                        style={{padding: 0, cursor: \"pointer\"}}>\n            <Container className={\"d-flex flex-column mx-auto my-auto \"}>\n                <Container className={\"d-flex flex-wrap text-start\"}\n                           style={{padding: 0}}>\n                    <Container className={\"d-flex flex-row justify-content-evenly my-auto\"}\n                               style={{padding: 0, marginTop: 20}}>\n                        <Container style={{margin: 0}}\n                                   className={\"d-flex justify-content-center col-4 col-lg-2 my-auto\"}>\n                            <ShowDietImg\n                                id={\"ShowDietImg\"}\n                                style={{maxHeight: 80, maxWidth: 80, margin: 10}}\n                            />\n                        </Container>\n                        <Container style={{padding: 5}}\n                                   className={\"col-8 my-auto mt-2 mt-sm-3 mt-lg-1\"}>\n                            <div className={\"flex-row\"}>\n                                <h5 className={\"col-12\"}><p>Dieta di: <strong\n                                    style={{margin: 15}}>{cognomePaziente} {nomePaziente}</strong></p></h5>\n                            </div>\n                            <Container className={\"d-flex flex-wrap text-start\"}\n                                       style={{padding: 0, marginTop: 25}}>\n                                <Container style={{padding: 0}}\n                                           className={\"col-12 col-sm-12 mb-3\"}>\n                                    <p style={{margin: 0}}>C.F.: <strong>{codiceFiscalePaziente}</strong></p>\n                                </Container>\n                                <Container className={\"d-flex flex-wrap align-items-center col-12\"}\n                                           style={{padding: 0}}>\n                                    <Container style={{padding: 0, margin: 0}}\n                                               className={\"col-12 col-lg-6 my-auto\"}>\n                                        <div style={{margin: 0}}>Data di inizio: <strong>{dataInizio}</strong></div>\n                                    </Container>\n                                    <Container style={{padding: 0}}\n                                               className={\"col-12 col-lg-6 mb-2 mb-sm-3 mb-lg-0\"}>\n                                        <Container className={\"d-flex flex-wrap float-start col-12 p-0\"}>Data di\n                                                                                                         fine: <strong style={{marginLeft: 4}}>{dataFine}</strong>\n                                            <Container style={{padding: 0}}\n                                                       className={\"col-1\"}>\n                                                {currentData > dataFineDieta ? (\n                                                    <div className={\"d-inline-block\"}><Badge pill\n                                                                                             bg=\"danger\"\n                                                                                             style={{marginLeft: 20}}>Scaduta</Badge>\n                                                    </div>) : (<></>)}\n                                            </Container>\n                                        </Container>\n                                    </Container>\n                                </Container>\n                            </Container>\n                        </Container>\n                        <Container className={\"col-1 my-auto\"}\n                                   style={{marginRight: 10}}>\n                            <FontAwesomeIcon icon={faAngleRight}/>\n                        </Container>\n                    </Container>\n                </Container>\n            </Container>\n        </ListGroup.Item>\n    );\n};\n\nexport default DietPreview;","import React, {useEffect, useState} from \"react\";\nimport {Alert, Button, Card, Form, InputGroup, ListGroup, Navbar} from \"react-bootstrap\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport ShowDietsImg from \"../../img/showDietsImg.svg\";\nimport {collection, getDocs, orderBy, query, where} from \"firebase/firestore\";\nimport {db} from \"../../config/firebase-config\";\nimport DietPreview from \"./DietPreview\";\nimport {SyncLoader} from \"react-spinners\";\nimport Pagination from \"../Utilities/Pagination\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport Spinner from \"../Utilities/Spinner\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport {faAngleLeft, faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\n/*\n Funzione che si occupa di mostrare un elenco contenente tutte le diete create\n Le diete vengono impaginate in modo tale che ce ne siano 5 per pagina\n */\nexport default function ShowDiets() {\n    const {currentUser} = useAuth();\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n    const [progress, setProgress] = useState(true);\n    const location = useLocation();\n    //Numero di diete visualizzate per pagina\n    const dietsPerPage = 5;\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [showExpired, setShowExpired] = useState(false);\n    const [diets, setDiets] = useState([]);\n    const lastDietNumber = currentPage * dietsPerPage;\n    const firstDietIndex = lastDietNumber - dietsPerPage;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n        scrollToTop();\n        const getDiets = async () => {\n            setProgress(true);\n            const q = query(collection(db, \"diets\"), where(\"email_nutrizionista\", \"==\", currentUser.email), orderBy(\"data_inserimento\", \"desc\"));\n            await getDocs(q)\n                .then((querySnapshot) => {\n                    setDiets(querySnapshot.docs.map((doc) => ({...doc.data(), id: doc.id})));\n                    setCurrentPage(1);\n                }).catch((error) => setError(\"Si è verificato un errore inaspettato\"))\n                .finally(() => setProgress(false));\n        };\n        getDiets();\n\n        //Controllo se aggiornamento avvenuto con successo\n        if (location.state === \"success-delete\") {\n            setSuccess(\"Dieta eliminata con successo\");\n        } else if (location.state === \"success-create\") {\n            setSuccess(\"Dieta creata con successo\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Ottengo la data corrente es. 2022-08-12\n    const currentData = new Date();\n\n    //Funzione di ricerca tra le diete: cerca la stringa data in input in Nome, Cognome e Codice Fiscale\n    const filtered = diets.filter(\n        (diet) => {\n            return searchInput.toLowerCase() === \"\" ? diet\n                : diet.nome_paziente.toLowerCase().includes(searchInput.toLowerCase())\n                || diet.cognome_paziente.toLowerCase().includes(searchInput.toLowerCase())\n                || diet.codice_fiscale_paziente.toLowerCase().includes(searchInput.toLowerCase());\n        }\n    ).filter(\n        //Funzione di ricerca diete scadute:\n        (diet) => {\n            //Converto stringa in oggetto date\n            const dataFineDieta = new Date(diet.data_fine_dieta);\n            return showExpired ? currentData > dataFineDieta : diet;\n        });\n\n    if (progress === true) {\n        return <Spinner/>;\n    }\n\n    return (\n        <>\n            {progress === false && <Container className={\"modal-fullscreen\"}\n                                              style={{\n                                                  background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                                                  backgroundSize: \"cover\",\n                                                  minHeight: \"inherit\",\n                                                  padding: 0\n                                              }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto\"}\n                               style={{minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 col-md-11 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <h2 style={{fontFamily: \"Arial\", marginTop: 10}}>\n                                <div className={\"d-flex my-auto col-12\"}>\n                                    <div className={\"col-12\"}>\n                                        <div className={\"float-start\"}\n                                             style={{marginTop: 10, marginLeft: 20}}>\n                                            <LinkContainer to=\"/dashboard\"\n                                                           className={\"my-auto\"}>\n                                                <Button style={{height: 40, width: 100}}\n                                                        variant={\"warning\"}\n                                                ><FontAwesomeIcon icon={faAngleLeft}\n                                                                  color={\"black\"}/></Button>\n                                            </LinkContainer>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Container className={\"d-flex justify-content-center my-auto align-items-center col-12\"}\n                                           style={{padding: 0}}>\n                                    <img src={ShowDietsImg}\n                                         id={\"ShowDietsImg\"}\n                                         style={{height: 70, width: 70, marginRight: 10}}\n                                         alt={\"Diete pazienti\"}/>\n                                    <p className={\"my-auto\"}>Diete Create</p>\n                                </Container>\n                            </h2>\n                            {error && !diets && <Alert variant=\"danger\">{error}</Alert>}\n                            {success && <Alert style={{margin: 20}}\n                                               variant=\"primary\"\n                                               onClose={() => setSuccess(false)}\n                                               dismissible={true}>{success}</Alert>}\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                            <Container style={{minHeight: 500}}>\n                                <ListGroup className={\"col-12 col-md-11 mx-auto\"}\n                                           style={{\n                                               marginBottom: 20\n                                           }}>\n                                    <Navbar expand=\"lg\"\n                                            className={\"justify-content-evenly\"}\n                                            style={{marginBottom: 10}}>\n                                        <Container className={\"d-flex col-12 gap-3\"}>\n                                            <Container className={\"col-12 col-lg-6\"}\n                                                       style={{margin: 0, padding: 0}}>\n                                                <InputGroup className=\"d-flex\">\n                                                    <Form.Control\n                                                        type=\"search\"\n                                                        placeholder={\"Cerca...\"}\n                                                        className={\"me-2\"}\n                                                        aria-label=\"Search\"\n                                                        value={searchInput}\n                                                        onChange={(e) => {\n                                                            setCurrentPage(1);\n                                                            setSearchInput(e.target.value);\n                                                        }}\n                                                    />\n                                                </InputGroup>\n                                            </Container>\n                                            <Form className={\"d-flex flex-wrap col-5 col-sm-5 col-lg-3\"}\n                                                  style={{marginRight: 15}}>\n                                                <Form.Check\n                                                    type=\"switch\"\n                                                    id=\"custom-switch\"\n                                                    label=\"Diete Scadute\"\n                                                    checked={showExpired}\n                                                    onChange={() => {\n                                                        setShowExpired(!showExpired);\n                                                        setCurrentPage(1);\n                                                    }}\n                                                    className={\"mx-auto\"}\n                                                />\n                                            </Form>\n                                            <Container className={\"col-5 col-sm-6 col-lg-2 d-flex my-auto flex-wrap\"}\n                                                       style={{marginBottom: 10, padding: 0}}>\n                                                <Button variant=\"outline-danger\"\n                                                        className={\"flex-wrap mx-auto\"}\n                                                        onClick={() => navigate(\"/nuova-dieta\", {replace: true})}><FontAwesomeIcon icon={faPlus}\n                                                                                                                                   style={{marginRight: 5}}/>Crea\n                                                                                                                                                             Dieta</Button>\n                                            </Container>\n                                        </Container>\n                                    </Navbar>\n                                    {filtered.slice(firstDietIndex, lastDietNumber)\n                                             .map((diet) =>\n                                                 <DietPreview key={diet.id}\n                                                              id={diet.id}\n                                                              nomePaziente={diet.nome_paziente}\n                                                              cognomePaziente={diet.cognome_paziente}\n                                                              codiceFiscalePaziente={diet.codice_fiscale_paziente}\n                                                              dataInizio={diet.data_inizio_dieta}\n                                                              dataFine={diet.data_fine_dieta}\n                                                 />)}\n                                    {diets.length === 0 && !error\n                                        ? (<Alert variant={\"warning\"}\n                                                  style={{margin: 30}}>Non hai inserito ancora nessuna\n                                                                       dieta</Alert>)\n                                        : (<></>)\n                                    }\n                                    {filtered.length === 0 && !error && diets.length > 0\n                                        ? (<Alert variant={\"warning\"}\n                                                  style={{margin: 30}}>Nessuna dieta soddisfa i\n                                                                       parametri di ricerca</Alert>)\n                                        : (<></>)\n                                    }\n                                </ListGroup>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap justify-content-center mt-auto\"}>\n                                {diets.length !== 0 && <Pagination\n                                    itemsCount={filtered.length}\n                                    itemsPerPage={dietsPerPage}\n                                    currentPage={currentPage}\n                                    setCurrentPage={setCurrentPage}\n                                    alwaysShown={true}\n                                />}\n                            </Container>\n                        </Card>\n                    </Container>\n                </Container>\n            </Container>\n            }\n        </>\n    );\n}\n"],"sourceRoot":""}