{"version":3,"sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../../src/functions/generator-wrapper.function.ts","../../src/belfiore-connector/classes/belfiore-connector.class.ts","../../src/belfiore-connector/index.ts","../../asset/cities-countries.ts","../../src/date-utils/date-matcher.const.ts","../../src/date-utils/date-utils.class.ts","../../src/const/matcher.const.ts","../../src/enums/crc.enum.ts","../../src/enums/birth-month.enum.ts","../../src/classes/check-digitizer.class.ts","../../src/const/cf-offsets.const.ts","../../src/enums/gender-weight.enum.ts","../../src/enums/omocodes.enum.ts","../../src/classes/gender.class.ts","../../src/classes/parser.class.ts","../../src/const/error-messages.const.ts","../../src/classes/cfu-error.class.ts","../../src/classes/pattern.class.ts","../../src/classes/cf-mismatch-validator.class.ts","../../src/classes/validator.class.ts","../../../../../../node_modules/moment/moment.js","../../../../../../node_modules/@marketto/diacritic-remover/dist/diacritic-remover.js"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","ModalBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","ModalDialog","contentClassName","centered","fullscreen","children","scrollable","dialogClass","concat","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","useCallbackRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","value","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","n","a","Symbol","iterator","i","constructor","fromDate","toDate","o","codeMatcher","data","licenses","province","l","sources","r","Error","this","Proxy","get","BELFIORE_CODE_MATCHER","test","belfioreToInt","toString","padStart","binaryfindIndex","belfioreCode","locationByIndex","includes","RegExp","Reflect","arguments","length","Math","max","min","b","floor","t","substr","ceil","toUpperCase","charCodeAt","parseInt","belfioreFromInt","String","fromCharCode","decodeDate","ITALY_KINGDOM_BIRTHDATE","add","nameByIndex","indexOf","substring","toArray","scanData","provinces","COUNTRY_CODE_MATCHER","parseProvinces","searchByName","findByName","next","active","config","from","byProvince","cities","CITY_CODE_MATCHER","countries","scanDataSourceIndex","name","scanDataGenerator","done","provinceOrCountry","creationDate","startOf","s","expirationDate","endOf","isAfter","isBefore","c","C","dataSource","g","S","iso3166","Set","has","trim","Array","url","license","licenseUrl","termsAndConditions","authors","freeze","__proto__","DAY","DAYS_30_MONTHS","DAYS_31_MONTHS","HOURS","ISO8601_DATE_TIME","ISO8601_SHORT_DATE","LEAP_MONTH","MILLISECONDS","MINUTES","MONTH","MONTH_DAY","SECONDS","TIME","TIMEZONE","YEAR","u","parseDate","Date","isArray","some","isNaN","UTC","isValid","ymdToDate","d","m","M","B","A","P","V","v","T","p","R","O","N","h","D","f","L","z","G","CONSONANT_LIST","VOWEL_LIST","OMOCODE_NUMBER_LIST","OMOCODE_NON_ZERO_NUMBER_LIST","OMOCODE_ZERO_LIST","MONTH_LIST","MONTH_30DAYS_LIST","MONTH_31DAYS_LIST","CITY_CODE_LIST","COUNTRY_CODE_LIST","CF_NAME_MATCHER","CF_SURNAME_MATCHER","CF_FULL_NAME_MATCHER","YEAR_MATCHER","LEAP_YEAR_MATCHER","MONTH_MATCHER","DAY_2X_MATCHER","DAY_3X_MATCHER","DAY_29_MATCHER","DAY_30_MATCHER","DAY_31_MATCHER","DAY_MATCHER","MALE_DAY_MATCHER","FEMALE_DAY_MATCHER","MONTH_DAY_MATCHER","FULL_DATE_MATCHER","MALE_FULL_DATE_MATCHER","FEMALE_FULL_DATE_MATCHER","CHECK_DIGIT","CODICE_FISCALE","PARTIAL_CF_NAME_MATCHER","PARTIAL_CF_FULL_NAME","PARTIAL_YEAR","PARTIAL_MONTH_DAY","PARTIAL_FULL_DATE","PARTIAL_BELFIORE_CODE_MATCHER","PARTIAL_CF","K","Q","E","F","U","H","I","J","W","Z","Y","X","k","q","checkDigit","evaluateChar","CRC_MOD","CHAR_OFFSET","evaluateCharGenerator","_this","j","getDay","MAX_MONTH_DAY","getGender","find","genderizeDay","_","y","cfDeomocode","partialCfDeomocode","appyCaseToChar","cfOmocode","split","OMOCODE_BITMAP","slice","join","cfOmocodeId","filter","map","cfToLastName","match","JOLLY_CHAR","cfToFirstName","cfToGender","cfToBirthYear","format","subtract","year","cfToBirthMonth","cfToBirthDay","cfToBirthDate","cfToBirthPlace","isSameOrAfter","cfDecode","firstName","lastName","day","month","date","gender","place","omocodeId","lastNameToCf","replace","charExtractor","padEnd","firstNameToCf","yearToCf","monthToCf","dayGenderToCf","yearMonthDayToDate","parsePlace","dateGenderToCf","getFullYear","getMonth","getDate","placeToCf","encodeCf","_ref2","checkBitmap","charOmocode","toLowerCase","$","w","x","INVALID_DATE","INVALID_DAY","INVALID_DAY_OR_GENDER","INVALID_GENDER","INVALID_NAME","INVALID_PLACE_NAME","INVALID_SURNAME","INVALID_YEAR","super","entries","_ref3","aa","cfLastName","isolatedInsensitiveTailor","cfFirstName","cfYear","deomocode","cfMonth","cfDay","cfDayGender","cfDateGender","cfPlace","codiceFiscale","matcherBy","insensitiveMatcher","toJSON","diff","oa","hasLastName","hasFirstName","hasBirthYear","hasBirthDate","hasGender","hasBirthPlace","hasCRC","matchPersonalInfo","mismatchPersonalInfo","matchLastName","mismatchLastName","matchFirstName","mismatchFirstName","matchBirthDate","isSame","mismatchBirthDate","matchGender","mismatchGender","matchBirthPlace","mismatchBirthPlace","valid","invalid","na","isLastNameValid","isLastNameInvalid","isFirstNameValid","isFirstNameInvalid","isBirthDateValid","isBirthDateInvalid","isGenderValid","isGenderInvalid","isBirthPlaceValid","isBirthPlaceInvalid","birthDatePlaceMatch","birthDatePlaceMismatch","birthPlaceDateMatch","birthPlaceDateMismatch","module","exports","hookCallback","hooks","apply","setHookCallback","callback","input","prototype","call","isObject","hasOwnProp","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","isUndefined","isNumber","isDate","arr","fn","res","arrLen","push","extend","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","fun","len","momentProperties","updateInProgress","copyConfig","to","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","args","argLen","stack","keys","deprecations","deprecateSimple","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","mom","now","output","_calendar","zeroFill","number","targetLength","forceSign","absNumber","abs","zerosToFill","pow","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","localeData","removeFormattingTokens","makeFormatFunction","array","formatMoment","expandFormat","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","defaultLongDateFormat","LTS","LT","LL","LLL","LLLL","_longDateFormat","formatUpper","tok","defaultInvalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","future","past","ss","mm","hh","dd","ww","MM","yy","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","aliases","addUnitAlias","unit","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","sort","isLeapYear","absFloor","toInt","argumentForCoercion","coercedNumber","isFinite","makeGetSet","keepTime","set$1","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","_a","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","_months","isFormat","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","parseTwoDigitYear","getSetYear","getIsLeapYear","createDate","ms","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getSetLocaleDayOfWeek","getSetISODayOfWeek","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower","globalLocale","baseConfig","dayOfMonthOrdinalParse","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","loadLocale","isLocaleNameSane","oldLocale","_abbr","aliasedRequire","getSetGlobalLocale","values","getLocale","defineLocale","abbr","parentLocale","forEach","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","exec","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","weekdayOverflow","curWeek","GG","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","orderLen","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","parts","matches","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","createAdder","direction","period","tmp","isAdding","isString","isMomentInput","isNumberOrStringArray","isMomentInputObject","property","objectTest","propertyTest","properties","propertyLen","arrayTest","dataTypeTest","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","calendarFormat","localInput","isBetween","inclusivity","localFrom","localTo","inputMs","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","toISOString","keepOffset","inspect","prefix","datetime","suffix","zone","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOfDate","isoWeekday","unix","toObject","isValid$2","parsingFlags","invalidAt","creationData","localeEras","eras","_eras","since","until","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","_eraYearOrdinalRegex","abbrPieces","namePieces","narrowPieces","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","isoWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","erasParse","eraYearOrdinalParse","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetMillisecond","getSetSecond","parseMs","getZoneAbbr","getZoneName","proto","createUnix","createInZone","parseZone","preParsePostFormat","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","firstDayOfYear","firstDayOfWeek","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME_SECONDS","TIME_MS","factory","DiacriticAbstractHandler","USE_VALIDATOR","FALLBACK_MARKER_MATCHER","LOWERCASE_MARKER_MATCHER","UPPERCASE_MARKER_MATCHER","IS_MARKER_REPLACING_AVAILABLE","err","receiver","diacriticValidatorTrap","diacriticTrap","char","INSENSITIVE_MARKER_REGEXP","INSENSITIVE_MARKER_MATCHER","DiacriticInsensitiveMatcherHandler","lowerCaseChar","lowerCaseDiacritics","dictionary","DiacriticValidatorHandler","cleanChar","diacritics","charMatcher","markerMatcher","isUpperCase","DiacriticInsensitiveValidatorHandler","DiacriticMatcherHandler","DiacriticMapperCore","validator","insensitiveValidator","regexp","_ref4","text","isLowerCase","DiacriticRemoverHandler","plainChar","_ref5","letter","i18nGlobal","LATIN_DICT","ae","db","dz","eo","ij","lj","nj","oe","qp","ue","uo","ut","_len","dictionaries","_key","mergedDictionaries","reduce","dictMerge","currentDict","accumulator","_ref6","targetSet","_ref7","targetLetter","_ref8","defineProperty","configurable","enumerable"],"mappings":"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","file":"static/js/24.a1cb862a.chunk.js","sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import IGeneratorWrapper from \"../interfaces/generator-wrapper.interface\";\nexport default function generatorWrapper<T = unknown, TReturn = any, TNext = unknown>(\n    generator: Generator): IGeneratorWrapper<T, TReturn, TNext> {\n    generator[Symbol.iterator] = () => generator;\n    return generator as IGeneratorWrapper<T, TReturn, TNext>;\n}\n","import moment, { Moment } from \"moment\";\nimport { MultiFormatDate } from \"../../date-utils\";\nimport generatorWrapper from \"../../functions/generator-wrapper.function\";\nimport IGeneratorWrapper from \"../../interfaces/generator-wrapper.interface\";\nimport IBelfioreCity from \"../interfaces/belfiore-city.interface\";\nimport IBelfioreCommonPlace from \"../interfaces/belfiore-common-place.interface\";\nimport IBelfioreCountry from \"../interfaces/belfiore-country.interface\";\nimport IBelfioreDbData from \"../interfaces/belfiore-db-data.interface\";\nimport IBelfioreDbLicense from \"../interfaces/belfiore-db-license.interface\";\nimport BelfioreConnectorConfig from \"../types/belfiore-connector-config.type\";\nimport BelfiorePlace from \"../types/belfiore-place.type\";\n\n/**\n * Handler for cities and countries Dataset\n */\nexport default class BelfioreConnector {\n    [belfioreCode: string]: BelfiorePlace | any;\n\n    /**\n     * Get Proxy\n     * @param resource target resource\n     * @param paramName property name to proxy\n     * @returns Proxied property\n     */\n    public static get(resource: BelfioreConnector, paramName: string, receiver: any): BelfiorePlace | any {\n        if (this.BELFIORE_CODE_MATCHER.test(paramName)) {\n            const base32name: string = this.belfioreToInt(paramName)\n                .toString(32)\n                .padStart(3, \"0\");\n\n            for (const sourceData of resource.data || []) {\n                const index: number = this.binaryfindIndex(sourceData.belfioreCode, base32name);\n                if (index >= 0) {\n                    return resource.locationByIndex(sourceData, index);\n                }\n            }\n        }\n\n        if (\n            (resource.codeMatcher || resource.province) && [\"cities\", \"countries\"].includes(paramName) ||\n            paramName === \"byProvince\" && (\n                resource.codeMatcher instanceof RegExp && resource.codeMatcher.test(\"Z000\")\n                || resource.province\n            )\n        ) {\n            return;\n        }\n        return Reflect.get(resource, paramName, receiver);\n    }\n\n    /**\n     * Binary find Index (works ONLY in sorted arrays)\n     * @param text Unique string of values of the same length (step)\n     * @param value Exact text to find\n     * @param start text start index for seeking the value\n     * @param end text end index for seeking the value\n     * @param step length of a single value to seek properly the text string\n     * @returns Found value Index or -1 if not found\n     * @private\n     */\n    public static binaryfindIndex(\n        sourceString: string,\n        targetText: string,\n        start: number = 0,\n        end: number = sourceString.length - 1,\n    ): number {\n        if (!sourceString.length) {\n            return -1;\n        }\n        const rangedStart: number = Math.max(start, 0);\n        const rangedEnd: number = Math.min(end, sourceString.length - 1);\n        const currentLength: number = rangedEnd - rangedStart + 1;\n        if (rangedStart > rangedEnd || currentLength % targetText.length) {\n            return -1;\n        }\n        const targetIndex: number =\n            rangedStart + Math.floor(currentLength / (2 * targetText.length)) * targetText.length;\n        const targetValue: string = sourceString.substr(targetIndex, targetText.length);\n        if (targetValue === targetText) {\n            return Math.ceil((targetIndex + 1) / targetText.length) - 1;\n        }\n        if (targetText > targetValue) {\n            return this.binaryfindIndex(sourceString, targetText, targetIndex + targetText.length, rangedEnd);\n        }\n        return this.binaryfindIndex(sourceString, targetText, rangedStart, targetIndex - 1);\n    }\n\n    /**\n     * Converts belfiore code into an int\n     */\n    public static belfioreToInt(code: string): number {\n        const upperCaseCode: string = code.toUpperCase();\n        return (upperCaseCode.charCodeAt(0) - 65) * 10 ** 3 + parseInt(upperCaseCode.substr(1), 10);\n    }\n\n    private static ITALY_KINGDOM_BIRTHDATE = \"1861-01-01\";\n    private static BELFIORE_CODE_MATCHER: RegExp = /^[A-Z]\\d{3}$/iu;\n\n    private static CITY_CODE_MATCHER: RegExp = /^[A-Y]\\d{3}$/iu;\n    private static COUNTRY_CODE_MATCHER: RegExp = /^Z\\d{3}$/iu;\n\n    /**\n     * Converts int to belfiore code\n     * @param code Belfiore int code\n     * @returns Standard belfiore code\n     */\n    private static belfioreFromInt(code: number): string {\n        const charIndex: number = Math.floor(code / 10 ** 3);\n        const char: string = String.fromCharCode(charIndex + 65);\n        const numValue: string = code.toString().substr(-3);\n        return `${char}${numValue.padStart(3, \"0\")}`;\n    }\n\n    /**\n     * Converst Base 32 number of days since 01/01/1861 to Moment instance\n     * @param base32daysFrom1861 Base 32 number of days from 1861-01-01\n     * @returns Moment instance date\n     */\n    private static decodeDate(base32daysFrom1861: string): Moment {\n        const italyBirthDatePastDays = parseInt(base32daysFrom1861, 32);\n        return moment(this.ITALY_KINGDOM_BIRTHDATE).add(italyBirthDatePastDays, \"days\");\n    }\n\n    /**\n     * Retrieve string at index posizion\n     * @param list concatenation of names\n     * @param index target name index\n     * @returns index-th string\n     */\n    private static nameByIndex(list: string, index: number): string {\n        if (typeof list !== \"string\") {\n            throw new Error(\"[BelfioreConnector.nameByIndex] Provided list is not a string\");\n        }\n        if (!list.length) {\n            throw new Error(\"[BelfioreConnector.nameByIndex] Provided list empty\");\n        }\n        let startIndex: number = 0;\n        let endIndex: number = list.indexOf(\"|\", startIndex + 1);\n        let counter: number = index;\n\n        while (counter > 0 && endIndex > startIndex) {\n            counter--;\n            startIndex = endIndex + 1;\n            endIndex = list.indexOf(\"|\", startIndex + 1);\n        }\n\n        if (index < 0 || counter > 0) {\n            throw new Error(`[BelfioreConnector.nameByIndex] Provided index ${index} is out range`);\n        }\n\n        if (!counter && endIndex < 0) {\n            return list.substring(startIndex);\n        }\n\n        return list.substring(startIndex, endIndex);\n    }\n\n    private data: IBelfioreDbData[];\n    private licenses: IBelfioreDbLicense[];\n    private sources: string[];\n    private toDate: Moment | undefined;\n    private fromDate: Moment | undefined;\n    private codeMatcher: RegExp | undefined;\n    private province: string | undefined;\n\n    constructor({\n        fromDate,\n        toDate,\n        codeMatcher,\n        data,\n        licenses,\n        province,\n        sources,\n    }: BelfioreConnectorConfig) {\n        if (codeMatcher && province) {\n            throw new Error(\"Both codeMatcher and province were provided to Bolfiore, only one is allowed\");\n        }\n\n        if (toDate && !fromDate) {\n            throw new Error(\"Parameter fromDate is mandatory passing toDate\");\n        }\n\n        this.fromDate = fromDate;\n        this.toDate = toDate;\n        this.codeMatcher = codeMatcher;\n        this.data = data;\n        this.licenses = licenses;\n        this.province = province;\n        this.sources = sources;\n\n        return new Proxy<BelfioreConnector>(this, this.constructor as typeof BelfioreConnector);\n    }\n\n    /**\n     * Return belfiore places list\n     */\n    public toArray(): BelfiorePlace[] {\n        return [...this.scanData()] as BelfiorePlace[];\n    }\n\n    public get provinces(): string[] {\n        if (this.province) {\n            return [this.province];\n        } else if (this.codeMatcher !== BelfioreConnector.COUNTRY_CODE_MATCHER) {\n            return this.parseProvinces();\n        }\n        return [];\n    }\n\n    /**\n     * Search places matching given name\n     */\n    public searchByName(name: string): BelfiorePlace[] | null {\n        return name ? [...this.scanData(name)] as BelfiorePlace[] : null;\n    }\n\n    /**\n     * Find place matching given name, retuns place object if provided name match only 1 result\n     */\n    public findByName(name: string): BelfiorePlace | null {\n        if (!name) {\n            return null;\n        }\n        const startingNameMatcher = new RegExp(`^${name}$`, \"i\");\n        return this.scanData(startingNameMatcher).next().value;\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by given date\n     * @param date Target date to filter places active only for the given date\n     * @returns Belfiore instance filtered by active date\n     * @public\n     */\n    public active(date: MultiFormatDate = moment()): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            fromDate: moment(date),\n            toDate: moment(date),\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by given date ahead\n     * @param date Target date to filter places active only for the given date\n     * @returns Belfiore instance filtered by active date\n     * @public\n     */\n     public from(date: MultiFormatDate = moment()): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            fromDate: moment(date),\n        });\n    }\n\n    /**\n     * Returns a Belfiore instance filtered by the given province\n     * @param code Province Code (2 A-Z char)\n     * @returns Belfiore instance filtered by province code\n     * @public\n     */\n    public byProvince(code: string): BelfioreConnector | undefined {\n        if (typeof code !== \"string\" || !(/^[A-Z]{2}$/u).test(code)) {\n            return;\n        }\n        return new BelfioreConnector({\n            ...this.config,\n            codeMatcher: undefined,\n            province: code,\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     */\n    public get cities(): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            codeMatcher: BelfioreConnector.CITY_CODE_MATCHER,\n            province: undefined,\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     */\n    public get countries(): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            codeMatcher: BelfioreConnector.COUNTRY_CODE_MATCHER,\n            province: undefined,\n        });\n    }\n\n    private get config(): BelfioreConnectorConfig {\n        const {\n            codeMatcher,\n            data,\n            fromDate,\n            licenses,\n            sources,\n            toDate,\n        } = this;\n        return {\n            codeMatcher,\n            data,\n            fromDate,\n            licenses,\n            sources,\n            toDate,\n        } as BelfioreConnectorConfig;\n    }\n\n    private* scanDataSourceIndex(dataSource: IBelfioreDbData, matcher?: RegExp): Generator {\n        if (matcher) {\n            for (let startIndex = 0, entryIndex = 0; startIndex < dataSource.name.length; entryIndex++) {\n                const endIndex = dataSource.name.indexOf(\"|\", startIndex + 1) + 1 || dataSource.name.length;\n                const targetName = dataSource.name.substring(startIndex, endIndex - 1);\n                if (matcher.test(targetName)) {\n                    yield entryIndex;\n                }\n                // Moving to next entry to check\n                startIndex = endIndex;\n            }\n        } else {\n            const dsLength = dataSource.belfioreCode.length / 3;\n            for (let index = 0; index < dsLength; index++) {\n                yield index;\n            }\n        }\n        return -1;\n    }\n\n    private scanData(name?: string | RegExp): IGeneratorWrapper<BelfiorePlace, null, void> {\n      return generatorWrapper(this.scanDataGenerator(name));\n    }\n    private* scanDataGenerator(name?: string | RegExp): Generator {\n        const nameMatcher = typeof name === \"string\" ? new RegExp(name, \"i\") : name;\n\n        for (const sourceData of this.data) {\n            const dataSourceScan = this.scanDataSourceIndex(sourceData, nameMatcher);\n            for (let dss = dataSourceScan.next(); !dss.done; dss = dataSourceScan.next()) {\n                const index = dss.value as number;\n                const parsedPlace: BelfiorePlace | null = this.locationByIndex(sourceData, index);\n                if (parsedPlace) {\n                    yield parsedPlace;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Retrieve location for the given index in the given subset\n     * @param resourceData concatenation of names\n     * @param index target name index\n     * @returns location\n     */\n    private locationByIndex(\n        resourceData: IBelfioreDbData,\n        index: number,\n    ): BelfiorePlace | null {\n        const belfioreIndex = index * 3;\n        if (resourceData.belfioreCode.length - belfioreIndex < 3) {\n            return null;\n        }\n        const belFioreInt = parseInt(resourceData.belfioreCode.substr(belfioreIndex, 3), 32);\n        const belfioreCode = BelfioreConnector.belfioreFromInt(belFioreInt);\n        const code = resourceData.provinceOrCountry.substr(index * 2, 2);\n        if (\n            this.province && this.province !== code ||\n            this.codeMatcher && !this.codeMatcher.test(belfioreCode)\n        ) {\n            return null;\n        }\n\n        const dateIndex = index * 4;\n        const creationDate = BelfioreConnector.decodeDate((resourceData.creationDate || \"\")\n            .substr(dateIndex, 4) || \"0\").startOf(\"day\");\n        const expirationDate = BelfioreConnector.decodeDate((resourceData.expirationDate || \"\")\n            .substr(dateIndex, 4) || \"2qn13\").endOf(\"day\");\n        if (\n            (this.fromDate && resourceData.expirationDate && this.fromDate.isAfter(expirationDate, \"day\")) ||\n            (this.toDate && resourceData.creationDate && this.toDate.isBefore(creationDate, \"day\"))\n        ) {\n            return null;\n        }\n        const name = BelfioreConnector.nameByIndex(resourceData.name, index);\n        const licenseIndex = parseInt(resourceData.dataSource, 32)\n            .toString(2).padStart(resourceData.belfioreCode.length * 2 / 3, \"0\")\n            .substr(index * 2, 2);\n        const dataSource = this.licenses[parseInt(licenseIndex, 2)];\n\n        const location: IBelfioreCommonPlace = {\n            belfioreCode,\n            creationDate: creationDate.toDate(),\n            dataSource,\n            expirationDate: expirationDate.toDate(),\n            name,\n        };\n        const isCountry = belfioreCode[0] === \"Z\";\n        if (isCountry) {\n            return {\n                ...location,\n                iso3166: code,\n            } as IBelfioreCountry;\n        }\n        return {\n            ...location,\n            province: code,\n        } as IBelfioreCity;\n    }\n\n    private parseProvinces(): string[] {\n        const provinceList = new Set<string>();\n        for (const sourceData of this.data) {\n            const dataSourceScan = this.scanDataSourceIndex(sourceData);\n            for (let dss = dataSourceScan.next(); !dss.done; dss = dataSourceScan.next()) {\n                const index = dss.value as number;\n                const province = sourceData.provinceOrCountry.substr(index * 2, 2);\n                if (!provinceList.has(province)) {\n                    const belFioreInt = parseInt(sourceData.belfioreCode.substr(index * 3, 3), 32);\n                    const belfioreCode = BelfioreConnector.belfioreFromInt(belFioreInt);\n                    if (BelfioreConnector.CITY_CODE_MATCHER.test(belfioreCode)) {\n                        if (province.trim()) {\n                            provinceList.add(province);\n                        }\n                    }\n                }\n            }\n        }\n        return Array.from(provinceList);\n    }\n}\n","import CITIES_COUNTRIES from \"../../asset/cities-countries\";\nimport BelfioreConnector from \"./classes/belfiore-connector.class\";\nimport BelfioreConnectorConfig from \"./types/belfiore-connector-config.type\";\nimport BelfiorePlace from \"./types/belfiore-place.type\";\n\nexport const Belfiore = new BelfioreConnector(CITIES_COUNTRIES as BelfioreConnectorConfig);\nexport {\n    BelfioreConnector,\n};\nexport type {\n    BelfiorePlace,\n};\n","const CITIES_COUNTRIES = {\n    \"data\": [\n        {\n            \"belfioreCode\": \"oghognoguohfoi5ol2\",\n            \"dataSource\": \"1al\",\n            \"expirationDate\": \"1f2k1ebp1j051en61k2d1ebp\",\n            \"name\": \"Cecoslovacchia|Repubblica Democratica Tedesca|Repubblica Socialista Federale di Jugoslavia|Unione Sovietica|Serbia e Montenegro|Yemen del Sud\",\n            \"provinceOrCountry\": \"  DDYUSU  YD\"\n        },\n        {\n            \"belfioreCode\": \"ogcogdogeogfoggogiogjogkoglogmogoogpogqogrogsogtogvoh0oh1oh2oh3oh5oh6oh7oh8oh9ohaohbohcohdoheohiohjohkohoohpohqohsohtohuoi1oi2oi3oi4oi6oi7oi8oi9ojgojjojkojlojmojnojoojpojqojrojtojuojvok0ok1ok3ok4ok6ok7ok8ok9okaokbokcokdokgokhokiokjokkoklokookpokqokrokuokvol0ol1ol3ol4ol5ol6ol7ol8ol9olaolbomkomlommompomqomromsomtomuomvon0on1on2on3on4on5on6on7on8on9onaondoneonfongonhonionjonkonlonmonnonoonponqonronsontonuonvoo0oo1oo3oo4oo5oo7oo8oo9ooaooboodooeoofoohoooopooppopqopropsostosuosvot0ot1ot2ot3ot5ot6ot7ot8otaotbotcotfotiotkotlotmotnotootpotqotrotsottp00p01p02p03p04p05p06p08p09p0ap0bp0cp0dp0ep34p37p38p3fp3hp3kp3np3qp3rp3sp3up40p41p42p43p44p45p46p47p9j\",\n            \"dataSource\": \"1alalal\",\n            \"name\": \"Albania|Andorra|Austria|Belgio|Bulgaria|Stato della Città del Vaticano|Danimarca|Isole Fær Øer|Finlandia|Francia|Germania|Gibilterra|Regno Unito|Grecia|Irlanda|Islanda|Liechtenstein|Lussemburgo|Malta|Isola di Man|Monaco|Norvegia|Paesi Bassi|Polonia|Portogallo|Romania|San Marino|Spagna|Svezia|Svizzera|Ungheria|Ucraina|Bielorussia|Moldova|Estonia|Lettonia|Lituania|Macedonia del Nord|Croazia|Slovenia|Bosnia-Erzegovina|Federazione russa|Slovacchia|Repubblica ceca|Serbia|Montenegro|Kosovo|Palestina|Afghanistan|Arabia Saudita|Bahrein|Bhutan|Myanmar/Birmania|Brunei Darussalam|Cambogia|Sri Lanka|Cina|Cipro|Corea del Sud|Corea del Nord|Emirati Arabi Uniti|Filippine|Taiwan|Giappone|Giordania|India|Indonesia|Iran|Iraq|Israele|Kuwait|Laos|Libano|Maldive|Mongolia|Nepal|Oman|Pakistan|Qatar|Siria|Thailandia|Timor Leste|Turchia|Yemen|Malaysia|Singapore|Bangladesh|Vietnam|Armenia|Azerbaigian|Georgia|Kazakhstan|Kirghizistan|Tagikistan|Turkmenistan|Uzbekistan|Namibia|Algeria|Angola|Burundi|Camerun|Capo Verde|Repubblica Centrafricana|Ciad|Comore|Congo|Repubblica Democratica del Congo|Costa d'Avorio|Benin|Etiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Guinea equatoriale|Kenya|Liberia|Libia|Madagascar|Malawi|Mali|Marocco|Mauritania|Maurizio|Mozambico|Niger|Nigeria|Egitto|Zimbabwe|Ruanda|Sahara occidentale|Sant'Elena|Sao Tomé e Principe|Seychelles|Senegal|Sierra Leone|Somalia|Sudafrica|Sudan|Eswatini|Togo|Tunisia|Uganda|Burkina Faso|Zambia|Tanzania|Botswana|Lesotho|Gibuti|Eritrea|Bermuda|Canada|Groenlandia|Saint Pierre e Miquelon|Stati Uniti d'America|Aruba|Bahamas|Costa Rica|Cuba|Repubblica Dominicana|El Salvador|Giamaica|Guatemala|Haiti|Honduras|Belize|Messico|Nicaragua|Panama|Isole Turks e Caicos|Barbados|Grenada|Isole Vergini britanniche|Dominica|Santa Lucia|Saint Vincent e Grenadine|Anguilla|Isole Cayman|Montserrat|Antigua e Barbuda|Saint Kitts e Nevis|Argentina|Bolivia|Brasile|Cile|Colombia|Ecuador|Guyana|Suriname|Isole Falkland (Malvine)|Paraguay|Perù|Trinidad e Tobago|Uruguay|Venezuela|Australia|Isole Cook (NZ)|Figi|Isole Marshall|Nauru|Nuova Caledonia|Nuova Zelanda|Isole Pitcairn|Polinesia francese|Isole Salomone|Samoa|Tonga|Wallis e Futuna|Papua Nuova Guinea|Kiribati|Tuvalu|Vanuatu|Palau|Stati Federati di Micronesia|Sud Sudan\",\n            \"provinceOrCountry\": \"ALADATBEBGVADKFOFIFRDEGIUKGRIEISLILUMTIMMCNONLPLPTROSMESSECHHUUABYMDEELVLTMKHRSIBARUSKCZRSME  PSAFSABHBTMMBNKHLKCNCYKRKPAEPHTWJPJOINIDIRIQILKWLALBMVMNNPOMPKQASYTHTLTRYEMYSGBDVNAMAZGEKZKGTJTMUZNADZAOBICMCVCFTDKMCGCDCIBJETGAGMGHGNGWGQKELRLYMGMWMLMAMRMUMZNENGEGZWRWEHSHSTSCSNSLSOZASDSZTGTNUGBFZMTZBWLSDJERBMCAGLPMUSAWBSCRCUDOSVJMGTHTHNBZMXNIPATCBBGDVGDMLCVCAIKYMSAGKNARBOBRCLCOECGYSRFKPYPETTUYVEAUCKFJMHNRNCNZPNPFSBWSTOWFPGKITVVUPWFMSS\"\n        },\n        {\n            \"belfioreCode\": \"00200300900b00c00l00v01401a01e01v02202e02f02m02q02v03303803i04504c04e04g04k04n04o05805905a06706h06j06k06l06r07n07o07q08408k08l08n09109a09j09n09s0a20ab0ag0am0at0b10b40bc0bq0bt0cb0ck0cm0co0cq0cr0d00d10d40da0dc0dq0e20e80e90el0f30fd0fi0fk0fo0fp0fu0g10gc0gv0h10h40hc0he0hf0hj0i60i70i90ij0ik0im0iq0j00jg0jj0jp0jv0k10k20k40k80k90ke0kj0l30l70l80la0ld0lg0ll0ln0m70mb0mj0mk0mm0mn0n80nh0ni0nm0nv0om0ot0p30p60p70p80pm0po0ps0q10q60q70q80qq0qu0r10r20r30r40r50r70r90ro0rq0s30s40s50sb0sc0sj0sl0sr0ss0su0sv0t00t50t70t80tf0tn0u60u70u90uk0up0v20v50vc0vj0vl0vu10310f10l10n10s10t11311411911a11g11i11m12112412512712812f12k12p13213513713d13f13g13j13k13q13s13v14314b14c14g14m14p15115215515615m15o15q15r16616816a16p16s16t17417517917c17f17p17t18318a18b18i18s19419619819919d19m19r19s19u19v1a01a31a41a91af1as1at1ba1bp1bv1c61cd1ce1cu1d91de1dg1di1dj1e61e71e81ef1eg1eh1en1ev1f41fd1fe1fj1g91gb1go1h01h31h71hf1hh1hs1hv1i01i11ib1ie1im1ip1j61jk1jm1jp1k11k41k91l41l61lh1li1lp1m01m91mb1mj1mm1mn1mp1mt1n11n41na1nd1nf1nq1o11o81oe1oj1om1ot1p71p91pa1pj1ps1pv1q71qi1qs1rk1rl1s61sm1tc1ti1tl1tn1to1tv1u81ub1uh1ul1v01vd1vr20d20k20n20t21721j22022c22j22k22q22s23023223723j23k23o23r24324424624f24g24h24k25u26926g26o27527927n27r28128m28t29e29j29m29q29u29v2a62ab2an2at2b12b22bg2bn2bp2br2bv2c22cd2ci2ck2cm2cn2cu2d02d12d32d92db2dr2en2eq2eu2f72fi2g22gc2gf2gj2gq2gu2h02h52h92ha2hb2hf2hj2hp2hu2i22ic2in2ja2jb2jf2jq2jv2k02k22k42k62ki2l02l12lb2le2lh2ls2m12m22m92ma2n22n42ne2nf2nl2np2o62o92ob2oc2oe2of2og2oh2oi2ol2oo2oq2pd2pp2pq2q12q92qb2qc2qg2qi2qq2qr2r12r32r42r92rb2rc2rk2ru2s02s12s52s92sh2sl2sm2sn2sq2td2ti2tl2tq2tt2u92uh2un2uo2uv2v72vd2vj2vn2vr2vt30130230830b30c30i30j30p30q31031c31l31q31v32232432a32c32g32h32j32l32m32o32r32s32v33133533633833e33f33n33q34634c34d34f34k34o34p35335935a35g35h35i35k35m35u35v36a36c36i36j36l36o36u36v37537637a37b37c37h37o37q37u38738838938c38e38f38l38v39239339839939a39f39i39m39r39t3a13a43a53a83ac3ad3ah3al3ap3aq3b13b33b83bb3bd3be3bf3bm3bo3bp3c43ca3cm3cn3cp3ct3da3di3dr3ds3dt3dv3e13e53e93ef3eg3f63fb3fk3ft3fv3g03ge3gh3gi3gj3gp3gq3h03h23h43h93hb3hf3hg3hh3hq3i03i93ib3ig3il3ji3jj3k13k43k93ka3kb3kc3ke3kh3kr3kv3l33ls3m23m33mg3mj3mo3mu3n13n83nc3nn3np3nt3nu3o03o63oh3oq3p53p83pf3q43qc3qf3qi3r13r33r53re3ri3s53sh3si3sl3sn3t23ti3u03u33ua3uj3ur3v93vb3vc3vd3vg3vv40340940e40g40l40n40p41141741a41c41m41n42242642e42f42g42l42n42q42u43643j43q43s43u44144n45145645c45j45k45l45m45n45u46546846a46e46f46k46o46r46s46u46v47247447b47o47r48348748948q49149f49k49o49r4a24ab4ao4aq4as4au4b14b44b74bc4bd4bk4bt4bu4cf4cj4cl4cn4cs4d44d94dd4dh4dl4dm4e14e84ec4en4eo4es4f14f44f64f94fa4fm4fp4fr4fs4g14g64g84gb4gk4gn4gq4gs4gt4h14h24h34hd4hh4hi4hn4hr4i04i44ie4ig4io4ip4ir4it4iu4iv4j64j84jd4jg4jh4jl4jn4jo4js4k34k44k54k84kj4kq4kt4ku4l04l64l74l84ld4lo4ls4lt4m24mn4mo4mq4mr4ms4mv4n04ne4nh4np4nt4o34o74oq4ov4p24pd4ph4pk4pu4q74q94qe4qf4qk4qm4r44r64rp4sg4sm4sq4sr4t24t74tc4tf4tg4tp4u04u14u44u64ud4uf4ug4uj4uk4ul4un4v34v64vf50150450850n50u51751851c51h51m51p51t52152b52e52f52k52r52s52v53653b53j53l54454554754g54p55255555655955b55c55g55i55k55m55n55q56256j56m56r56t57557657957i58k58q58u59459h59n59s59u5aj5aq5au5b05b45bd5c15cl5dj5e95eg5ek5ep5ff5fh5g15g35g95gd5gf5gh5gi5gk5gr5gv5he5hj5hr5ht5hu5i35i45i65ii5in5jd5je5jp5jr5jt5jv5k35k85k95ku5l05l25lb5lc5lf5lk5lr5lt5lv5m15m35ma5md5mq5mt5mu5mv5n45nd5nh5nj5nn5nt5o05o85o95oh5ol5ov5p85pg5pp5pq5q15q25qh5qj5ql5r05ru5s15s85sb5sd5sh5sj5t35t45t55t75t95tc5tj5tl5to5tp5tt5u55u95uc5ue5uj5uk5uq5v05vf5vk5vq60u60v61061161461662662862b62d62n62s63663g63t64764t65665965a65i65p65s66566766966k66l67167567767m67s67v68068168968e68m68p68r69869g69j69s6a06a46a66a86aq6b76c56c86c96cb6cg6ck6cm6co6cq6d26d36d76d96dd6di6dl6do6dp6dq6e36e76ep6f96fd6fe6fg6fh6fk6fu6gb6gc6gj6gl6h16h76hc6hd6hi6hk6hl6hn6hq6hr6i36ia6ib6ic6ii6ij6io6ip6is6iu6j36j76jq6jt6jv6kq6l36l86lc6lg6lp6lt6mf6ms6n06nl6ns6nv6o36o66og6oi6ot6p26p46p66pc6pn6q76q86qd6qk6qr6r06r16r46r86rf6rg6rh6rr6rv6s46s76s96sa6sd6se6sh6si6sk6so6sp6sq6sr6t76t86ta6tc6tk6tl6tr6tv6u16u76u86ub6uj6uk6ul6ut6uv6v36v66v96vd6vj6vm6vq6vs6vv70170270370470a70b70d70m70n70p70t71171871h71v72072272772972g72h72j72s72t73e73f73j73q73r73s73v74074174974a74l74q75175475b75h75l75n75o75u76076l76s77577n77r78679179879f79k79q79v7a87ag7am7ap7ar7bn7bp7bs7bu7bv7c57cb7cj7co7cr7cu7d27d37dc7dd7dg7dj7dl7dt7e07e37e87ea7ek7el7em7eo7f07f17f37f57f87fc7ff7fg7fk7g07g57gc7gh7gi7gp7gt7gv7h67h97ha7hg7hp7hs7ht7hu7i37i47i67i77ii7j07k97km7ko7kt7l97le7ln7lo7lq7lt7lv7m27m77me7mu7n17n47n57n77nb7nl7ns7nu7oa7ob7oc7oe7oi7ou7p07p47pc7pr7pu7q17q67q97qa7qd7qk7ql7qm7r17r67r77r97rc7rf7s07s47s57s67sa7se7sh7sj7sl7sn7sr7su7t47t57t87ta7tg7tv7u67uv7v17v77vk7vq80380880c80h80j80q80u80v81281381581b81f81h81l81m81q81s82182d82e82g82t83983b83f83p84e84i84k84n84p84t85385685h85q85r85v86186286386b86e86m87387b87o87u88288888a88b88q89189889b89f89k89m89p89t8a18a28a38a48a58a68ac8ad8ag8au8b38b68b88bd8bg8bo8bs8bu8bv8c38c78c88cb8ck8d88d98db8dc8df8du8ea8ei8ep8eu8f08f28f88fm8g68g98gf8gi8gr8gt8h18h48ha8ho8hq8hr8hs8hu8i08i18i28i48i58i88ig8io8ir8j78jb8je8jg8ji8k18k28k38k48k58ka8kd8ke8kr8l68li8lj8lp8m18m28m48mh8mj8mo8n38n58nc8ng8no8nu8o18o78ob8oc8oj8on8or8os8otantao4aodaokaolaopap1ap3ap4ap5apbapcapdapeapkapraq0aq4aq5aq7aq8aqjaqkaqnaqqaqraqtar3ar6araarfaroarqartarvas1as5ascasnaspasqasrat2at3atbatsatuau1au8au9av0av2av4avhavsavtb00b0bb0jb0ob0pb1fb1hb1mb1ob21b2ab2db2fb2gb2mb2nb2qb30b38b3ab3bb3db3eb3fb3gb3lb3pb3rb3ub3vb42b43b4db4pb4ub5cb5jb60b61b69b6bb6kb6pb6ub73b75b7gb7ub80b8ab8eb8nb8sb8tb8ub91b97b98ba1ba3baibambaobaqbavbb2bb5bb6bbebbgbbjbbkbblbbtbbubc0bc1bc2bc4bc9bcbbcdbcebcfbcqbcvbd3bd8bdcbdebdfbdhbdlbdpbe2be5be6be9bekbfabfbbfcbfdbffbfgbfhbfjbfnbfobfqbg6bgabgdbgebgfbghbgibgkbgmbgobh5bhabhdbhebhgbhhbhobhvbi9bifbinbiobiubivbj3bjcbjjbjlbjnbjobjvbk6bk7bkabkebkhbklbknbkqbksbkvbl5bljblobmpbn6bnabnkbnobntbo1bo2bo3bo4bo5bo6bo7bo8boebofbohbombotbp0bp2bp4bpabpbbpcbpkbpnbq3bqbbqgbqibqlbr0br1br6br7brebrkbrlbrnbrqbrtbs0bs4bsebslbsqbsvbt0bt1bt3bt6btebuuc0bc0gc0hc0j\",\n            \"creationDate\": \"00of01520pa1002b0quf0lad002b002b002b002b08dr002b002b002b002b0lad0lcu0lcu0152002b0o1500pi002b002b0lcu0lad002b002b002b0lcu002b0lad002b002b0lad002b002b002b00qa0lad0lad002b002b002b0lcu0lad0lcu002b002b002b0lcu0rpq002b002b002b002b002b002b04fq0o52002b002b0i0d0i0d002b0lad0lad0nuc002b0rd3002b02340a0e002b0o1b002b0lcu0lcu002b0lcu002b0234002b002b02tq03ii002b07qb0nrq002b002b002b0o8i002b002b06e5002b0lad0lcu02340bd9002b002b002b002b002b002b002b002b002b002b002b002b02gh002b0lad002b002b0lcu002b002b002b002b002b002b0mfe023400nj0lcu0lcu00mn0h4h002b0lad0oao0lp7002b002b0nvv0lad0lad002b06ub002b02340lcu0lcu002b002b002b002b0lcu002b0o280lad02lu002b002b002b0nuc0lcu002b002b002b0lad0lad002b0lad067c002b0lad002b002b002b00nj0lad002b03th029t02bl002b002b0o2b0lcu002b002b0ihi02340lad002b00of002b0lad0caj002b002b023407kl002b0lad0nv9002b0lcu002b002b0lad002b002b002b00of017l023402340lcu0lcu002b00md00of0lad0q1v002b002b002b002b002b002b002b002b0nvj002b0lcu0lcu002b002b002b0lcu002b02340lad002b02ap002b01bu002b002b0lo602s5002b0guo060b02n6002b0234002b0lad002b07ko002b002b002b002b0lad0lcu002b002b002b0b8501pf109000mu002b002b002b002b002b0lad00qn0ben002b00of00mn00qa00mu0lad002b0lcu067u0lcu0o6g002b0lcu002b002b002b002b0lad0lcu00nc002b002b002b002b002b002b0nvh0lcu002b0lcu0nsh0a360lcu002b00l600mn00nc029t002b0lad002b002b002b002b002b002b002b002b002b0lcu002b002b02fs002b0472002b02340234002b0ocb002b0o7i00md0o15002b002b014d00of0lad002b002b00of002b01bu0lad002b00mn002b002b002b0lad0lad03ii002b0lad002b0o0q002b0lcu002b00sr0lad002b002b0234002b002b03oq002b0o3m00mn034j0lad00md002b002b0o0q0lcu002b002b00o800l600o800o800sr00mn02r9002b04jd02570lad002b00mn0nsl002b002b0lcu002b0lad002b0lcu00tn0lcu0lad002b013j0lad01og0lad0nrn0ocd002b0lad002b0lad0nt7002b002b0lcu0o1400qa00sr002b027k0nr0057i002b0nrq0lad0o1s002b0lcu002b00nu002b0lcu03dc073m0lad00mn02340lad0lad0lad002b002b002b002b0nse0lad002b0lcu002b023402340lad0lcu002b002b0o14002b002b0n2r04gb0lad0lcu002b0lad0lad002b02r902ut002b002b0lad07l30lad03vn06910lad002b002b0lad002b0lad0lad00sr002b002b0lad002b0lad0lad0lcu002b002b002b023410mr002b02340lad002b002b002b04c2002b002b0lad014d0lcu00nu002b06tb0lcu0lad0234002b0b850lad002b002b002b00jl002b0lad0lad0lcu0lcu00of002b002b00l60lad0lad002b002b0lcu02lu002b002b002b0lcu002b02en002b0er7002b0lad002b00mn002b002b0234002b0234002b00o80lad002b0lad0nq6002b002b0ntf002b002b002b0lad0lad0lad0lad002b002b0lad0lad0lad0lcu00sr002b0nub002b002b0lcu0lad002b0sfs0nov002b0lcu0lcu0lcu002b0lad0234002b00js00js0lad002b0lp7002b0lcu002b02fs002b02fs0lcu002b0lcu0ctn0lad002b0lcu002b002b0lad0lad0gbf002b0m4q0lcu002b002b002b002b002b002b00of002b002b002b0lad002b002b0lcu002b023404k90lad002b0lad0nqq02c30234002b002b0obk0lcu0lad0nu90133002b05qt002b031t002b002b09st0lad002b0mh5002b0lcu0lad002b0lad002b0lad002b002b002b0lcu00mn014d0h4h08d90n7s002b0lad04ch0234002b002b080e002b002b0o3q002b0lad002b002b002b0o52017l0lad0lcu002b0lcu0lcu01pf002b0o1r002b002b04jd01kl002b0lad002b0lcu0603002b002b002b002b002b002b002b00of002b002b0s5h0lcu002b0lcu002b002b0lcu002b002b002b002b0lcu014d002b002b002b002b0lcu0lcu00mn002b0234002b0lad002b00of0o2b0lad002b02ap0lad0lcu002b002b002b03ii002b002b0lad0lad0ntf0lad002b002b002b0lad0lcu0lcu0lcu002b002b00q006em002b002b002b002b002b002b002b0lcu02340ntm0lad002b0o690lcu002b002b0lad0b4o0lad0lcu02340lcu0o01002b0oc20o4i00mn002b0lad0lad002b0lcu0lad002b0lad0lcu002b002b0lad002b0lo60lad002b002b0b790lad0lad0nvv002b06qf002b002b0lcu08ul002b0o1r002b0234002b002b002b002b002b0lad002b002b0lad002b002b002b00sr0lcu0lcu0lad0lad002b0nvj0lad002b02340lad002b002b0lcu002b002b00of00mn0lad002b002b002b0lcu002b002b002b00qn0lcu002b0lgg002b0lad002b02340lcu0lcu0lad002b002b002b002b002b0lad0o3802sg002b002b0lad0lad02340lad0lad0lcu0lcu0lad0lad002b002b002b0lad0lad0lad002b0lad02340lad002b0lcu0lad0lad00sr002b002b00qa00ht0lad002b0307002b002b0234002b05mg0lad0lad0lcu0lcu0lad00kv002b002b002b0lad0lad0lcu02340234002b002b0o2t002b002b0lcu02340lad002b0eke002b0nth002b0lad002b086114ip002b0lad002b002b002b0lad1374080e0234002b002b0lad002b002b002b0lad002b0lad0o200lad002b00nj043m03oq0a5m00sr00mu002b0nvv0lad002b002b002b0lad0lad002b013q002b00sr0lad0lad0lad002b045k0lad0ocs002b0lcu0lad002b00l30lcu002b0lad002b0lad0lad002b0lcu00if002b0lu40lcu002b0lcu002b002b002b0lcu02bs002b002b002b002b002b002b002b002b002b002b0lad0lad002b0lcu0234002b002b002b002b0lad02sg0234002b002b0lcu002b002b02s90lcu0lad002b0lad002b0lad02340mg6002b002b0s51002b002b002b002b0lad002b0lad0lad0lad0lad0234002b00of002b002b002b002b002b002b002b0nmg002b00nj002b002b0lad0lcu002b014d052j002b0lad002b00lo0lcu002b002b002b002b002b00of0nof0lad0lcu00qa002b002b0lcu0lcu0lcu002b002b0lad002b06cj02en002b002b002b002b0ock06ub0o0i0lcu0lad002b002b002b0lcu02bs002b002b02c3002b00of0lad002b00o8002b002b002b0ob90lad04tm002b0234002b002b03cc032h002b0lad02fs0lad0lcu00sr00of002b002b002b002b002b002b0o9n002b00qa002b002b00sr0lad002b023400of002b002b002b002b0lcu002b029t002b023402vn0nuo0lad049i0lad002b0lcu00of0ni3002b0lcu002b002b002b0lcu002b002b002b002b0lad0lcu0lad0lcu0lcu0lcu002b0lcu002b002b057i0lcu002b02sg0r170nsh002b00mn0lcu0a4q002b002b002b0lad002b002b0in10lcu002b002b002b0lcu0lcu0lad0lad00l3002b002b0lad0lad0lad0lad002b0oaa0lad002b0lad0lad002b0lad0lad002b002b0lad002b002b0lcu0lad002b0oao0lcu002b0nrg0lad002b002b002b02340234002b002b002b0nuo002b002b002b07tr02340lad02bs002b002b02bs002b0234002b002b0lad01or0lad0234002b0nub00of0lcu002b0lad0lad0lad0lcu01330lad002b002b002b002b0ob8002b0lad02340lad00mu002b0o0q002b0lad0lcu002b002b002b0lad002b07kh07kh0lad052j002b00mn0lad03450nuo002b0nvj0234002b0h4h00mn002b0nr5002b03ii002b002b002b023403070lcu014d00qn0lad00mn0lcu0lad0lad0lad002b0lcu0lad002b002b002b0o37002b002b002b002b002b002b002b002b0lad002b0oc90lcu0lcu002b002b002b002b002b002b0137002b0lcu02tj0lcu0arc0lcu002b00of002b0lcu002b002b0234017l026o0o0q002b002b02340lcu0lcu002b002b0o38002b0lad0o37014d052j0lcu002b00nj0lad002b002b02bs00sr0lad0lad0lcu0nvj0lad002b0lad002b002b002b05so002b002b00qa017l00l600lo03cc0lad01v20lad002b0lad00q0046400nj0lad0np902n30lad0lcu0obh002b02bs00o800md04as02bs0lcu0234002b01pm002b00o800qa0lcu002b00pt002b0lad0lcu002b0lcu0234002b002b002b00pi00qa0lad002b002b0lcu00jl00mn002b06ub002b00pi0nhk0lcu0lad02bs013j0lad052j002b0o7g002b0234002b0o3m00of0lcu00mn0lad002b00sr00lo02ap0nvj0qhf002b00qa002b0adp0nnv0lcu00sr002b0lad0lad002b002b0lcu00nu002b00q00lcu0lad0lad002b00of002b00l60lad002b002b002b0lad00md002b002b00tn002b002b0o37002b002b0lad002b0lad0lcu002b002b0lcu0lcu002b0lcu0lcu002b0lcu002b002b0lad0lad002b0lcu002b00qa0lcu0lad002b0o50002b0lcu002b00o80lad04260lad0lcu002b002b0lad002b0v0c02h8002b0lp7002b002b0lcu0lad002b0298002b002b0lcu0lad0lcu0lad0lcu002b002b002b002b002b002b002b002b002b0lcu0lad002b002b002b002b002b002b002b002b002b002b0lad002b002b0lad00sr002b002b002b002b0lad0o01002b0lad0lcu0lad0o1s0lad0lad002b002b0lad0lcu002b0lad0lad0nti002b0lad0lad002b0lcu002b0lad02340lcu0lad0lad0bd902ut0lad002b0lad002b0lad0lcu002b0lad002b02340lad0lad0lad0lcu0lcu002b002b002b0lad002b0lad002b0nub0lad0lad002b002b0lad0lcu0lcu0lad002b002b0lad002b002b002b03mr002b002b002b002b002b0472002b0lad002b002b0lad002b002b002b002b00pi002b029801pn002b0o9a002b02s90lad002b0lcu02sg0lad0g4u140j002b0234002b002b0lcu0234002b002b0lad0lad0lad002b014d0lcu002b0lcu002b002b002b0lcu002b08c90lad00mu002b0lad0lp70lad0ocn002b0lad0lcu002b0lad02340lad0lad0lad002b023400l6002b002b0o5e002b02340nqr002b0234002b0234002b0lad0lad0lad002b002b002b002b02340lad002b0lad002b0o3h002b0820002b002b0o5203uv0fpn0fpn0lad002b00of00qa002b002b002b002b0lcu00q00lcu0lad002b0lcu0lcu0lcu002b0lad002b0lad0lad002b002b02fs0lad002b0bnq002b0lad002b01pm02s9002b0lad0lad0lad0lad0lad0lad0lad0lad0lcu02ap002b002b0o2t002b0lcu0ns60lad002b002b002b0lad002b0lad0lcu002b002b0lcu0nuu0lad0lad0lcu002b002b002b002b002b002b002b0lad0lcu00md0lcu0lcu002b00nu002b0lad002b0lcu002b0lcu002b002b0lcu0lcu0lad002b0lcu0o9q02340nvv002b002b002b002b0lcu002b002b002b002b0lad002b0sp11fc81h730nns0o5o\",\n            \"dataSource\": \"8\",\n            \"expirationDate\": \"0nuo0o7a0utk0o201nki0o9b1nki0nsm1ofi0mfc0mci0o5o0o1r0o4f0nva0nuo0nuu0utk0o110nr10ucp0o1d0tet0o7i0nqf0o4i0o500nm90o2a0utk1obc0oca1nvv0o1d0o5e0nvj0nm60nm60o1r1n940ntf0o840och0o0r0o0q0o5p0utk0o1e0o3i0n700pa10uc40ntb0o4f0o3q0o7i0nt70o4f0o5e0ul80npg0nkr0nrq0nst0o3h0o9v0o4f0ulp0nst0utk0nup1mtn0oaf0o770udp1obc0nm10o4i0nub0nuu0o750nin0nt70ntj0mci0o110o1s1n941mia0npg0nt80oa111kj0np70np70nst0o6916co0utk1o1e1obc1nki0nse0nsf0o390o8r0o8r0nrg067c0n4s0nsh0ntu0o1s0o290o1d16b00o9a1mjc0o3q0ocs0n701mia0o0i1mjc0rme0o8h0o5o0o710moh0utk0rc81obc0nuu1mtn0urg0och0nu90o5o0uu31l4l0nvk0o3h0o640o371obc0nvv0o0q0nq30nvn0no304c10ns60nsj0uls1l4l0nov0nsj0ni40nt20ul60utk0nst0nst0ntb1n940o4f0nup0o9v0n700nq41n940nu40nss0nrg0nvk0o010pq81mjc1obc0o380re10me00uv60o420nq20nqq0o140nov0o650n700ntb0o671n940o5e0nve0nve0o8g0o7i0o0f0o840v4e0o7d0o4i0tet0o2t1n941nvv0o3p1mjc0o5o0occ0o5o0o8s0o420o0i0ntv0utk0o201n940utk0nj50nss0o530oba0o7l0nse0nnt0oci12e00ntf0utk0o0d0o2c0o0q0nub19et0o1r0mfe0ntg1n940nov0nvk0o390o2a0nm80n1p1obc0nup0o3q0o3h0nrg03jv0nlc0ntf0ned1ocp0o8h0ntq1obc0mff0nve1n940utk0no10nqq0o000nk50ocs12nn0nqe1nvv0npg0oa00o521nvv0o9b0tet0o0q1obc0nst0obb1n940obv0nvj0ocn1kp81oc90o1t0v1j0rko0utk0n6h0ob80o4i1obc0o8s0utk0nr00nnv02fr02fr0qss0o7k0o3q0uc019et0nsj0utk12dn0nub0nog0o1d0me00nse0nva1obc0o380o4f0ntp0ntb0o5o0nnc0o2t0nuo0o5o0o0i0o0q0ntb0nu90nt10o7j1nvv0o9a0o531fsf1fsf0oaf0vqp0nu40udp0q370v1e02l004i00o0i1nvv16co06r50o0j0o1r0rc81noe0sdl0nm70o501nvv0ntf0obv0o8s0o9h0nsl1mia0oan0o290utk1mia0utk04710nhl0o9n1obc0o371mju0omh0ouu0o7d0ocu0v4v0nm90mfc0o4i1mia0o020o1s0qhq0utk0qb90ob90oci0me00o3i0ocv1nvv0o4g0o140o370nnv0nnv0nhm1nvv0nsm1obc1nki0nqq0utk0o0i0o0r0nu40o420nva0moh0o3m0nst0oco0o3m1nvv1n940ocd0ur00ocu0oca0nvv1n940v3p0no00o280utk15mn1obc0nth0oa01oc911o30nhl0oc00uqr0p9i0uij0o7i0utk0o0f0nbk0nth0utk0mci0scc0mff0nj50nd70o4f0o030o9h0nu40o010nuo0o390v0m1n940o690utk0nva0o0e1oc90nup19et0o1d1mjc0uv60tet0nrq0utk0nsj0ntg0nuu0nlr0ned0o3m0o2a0o711mia1h39083e0o7e0nvk0n2h1n940o0e0ocb0nhk0nhl0oap0ntv0ob90nuo0njf0o380nqc0o9h03mr0nvj0o3m0utk0nvj0nrq0o000nov1l4l0o8q1ocu1n940o7c1lhb0o3q1fpe0o0r0o0h1mtn0ntg0utk1o2o1mjc0n700o4i0o1t0o1s0nsf0nk50oan0no91n940o750o370tch0o1t0o0r0nuo0utk0o140scc0o8r0me00o8s0o140nva0o6h0o0g0o380nsi0ocb0mff0utk0mci1oc91mia1mia0nm90nuo0ntf0oa00o270oda0nvo1n940rpu0nva1ocb1n940o7j0mdc0uun0o7i0ntg1obc1nki0o380nue1mtn0o8r1n940o010nm90o1r0o5e0o650o8r0o0q0nu40o7i0uq00me70me70utk1n940o2c0utk0sfs0o4f0o420o420o370nnp1n941fpe0ocp0nr10npb1mtn0nq30o750nm90o0g1mjc1obc0oco0l360o4i0nua0utk0njk0o7j0ob90utk0nvc0o380ntt0o8q0ntf0obv0utk0o0d0nq30nq30nq30ntg0nuo0o5f0o521mia0o0f02tp0o8s0o2t1obc0nm10nsm1nap0nd71n940nu40o290ugc0o0s1nmd0nqf0o7i0ul80utk1n940v3g1mia0o1e0nhl0nhl0nhl0o2c1nki0ob80o650n400utk0nq41o0u1n940nuv0o9h04in0oce0o2c0o390o3p0utk0o4f0o6g1obc0ntg0sdl0ntg0o5e0nss1nap0o5202fs0s0a0o0h0o200vp30qtt0o030nrd10gg0nse0ub90o020oan0o1t0nvn0nuu0o420o110o0q0uft0o9a0nnv0nnv0o7l0nst0ned02s80utk1obc0oca1nvv0nmu0o011n940mfc1lhb0o841mjc0o0h0u820utk0ob80ntb1mjc1mtn0ntf0o3p0o3p0o4f0tch0o420mci0nt10nvn0obv0o0q0o0d0utk0o531n941nm10nq61n941lhb0mci0uec0mr00o3p0nov0nup19et0v4n0nq60o500o120nvc0njf1n940o140u0d0ocv0o530nt70nvc0o290o0g0utk0o420o660gbf1mia0o180o7k0rv31nvv0o1d0nvj0nvj0nrq0p4k0o000uc80o8s02sj0vqp19et0o7i0o4f1ner0gim0o9h0o1202mc0utk0uvr0mci0utk0uns1nki0mfc0o211n941mia0nf91n941nvv0ntg0utk0nth0nvv0ocv0rk40o420nvk0o0q1mjc1ocp0o9g0ntt0v0m1n9410pg0o750o180o0g0oba0o5e12641n941o0u0nsk0q3h0nun0nuo0nvj1n940nsj0o710nnc0nm10o820oa00nss0o370ntf0ntt0o010o0r1l4l0o031kbu1mju0o1t0o7i1mia0o0d0r690o8p0o6g0oc90o650o3i1ocb0o280nhl0o1s0nr01obc0nu90o0g0nss0nss0nss0nvj0oba1ocu0utk0utk0o9o0ntg1mjc0nst0o1d0o380o8s11210o2u0nrq0o1c0o4f0o290o110mdc0mdc0o3i0o4i0o710ntg0o0q0o7j0o0f0o7j0mff0o9g0o1s0ocq0nth0nnc0nvk19et0nvt0o030nog0obb0n6h0od70oa10o7q0nsj1ocu1mia0nr10o3o02u40ff70o5e0ned0utk0utk0ntg0o280no00o0r0o1d0ned0o4i0o0q1o1e1oc90nno1n7v0vpa0nqu0nue0utk0nd70o5e1obc0nrq1obc0uob1mjc0nvk0o391mia1mia02sl0o4i0nno0nrv0ocp0o4i1nki0s0a0ptd0o4f0qtt0o9v0o7k0n700o0q1l4l0nip0o9b0ugc0o8r0o7i0o290o7j0o7j1ocu0nth0nvv0nov0uns1n940nmh0ob30o0q0oan1n941nki1nvv0o3o0o1s0o1c0o0r0o0r0see0rd10oca0uft1n9419et0o9h0ntb1nki0utk0nst0o4i1mia0o4f0o7e06kt0o0r1n940o140o710utk0oc00ntb1mia0o3h1h390utk0nin1mhd1mhd0nub0nr00rrc0oa002t80oa00odd0mfe0o650o7e0m9v0sp11o1e1h730o6h0no90o3q0o7e1nvv0mfe0obv0o3q0o0h0o520nst0mci0nov1n940ntq1obc0o710o9h0o8s0utk0n700s2e0u3k1nvv16fk0o380mci0o9n0o3n0o8s0mff0nnc0oc30o420oco0nm90ob80o520rr20nr10od70ntg0o2c11210ntb0o150me70nnc0o9g0o0i0oc90nt10o1b0me00o7j0nsk0o750utk0ntg1nki0oco0nm10nsi0nm711t10oca0utk0o7i01oq0o110nss0nss0utk0o8s1mjc1n940nsm0o8s1oc90npg0o8p0o6g0o0q0uld0rv30uu30o0r17f30o010nhl1mjc0utk0nlc0oa00o7i0o1t0obb0o140o9g025c0o5k1obc1nvv1noe0uue0o9n0n700nnv0m8l1nki0nnc1muk1nvv0ouu0nc60o7j0o9v0o000nu40nsf0nsl1obc1nki0o9c0o010nuv12931mia0nq20o380me00o0q0o5e0nbk0ob90obu0o0f0nir0jlm0nhl0nhl048e1nvv1nki1nap0o111n941l4l1n940o4f0nsj0utk1mjc0nlr1nvv19et0o0q01of0r820utk046g1h731nki0o3h0ntg0o370o1t0utk0o420ntf0nnv0ntb0me01mia0nu90utk02c61n940uvs12520nrq0o180mmk0n700o520n4s0o500nuo0o2b03dc0rmr0utk0me00nrv0nvd0utk0nm80ned1nvv0ob80n700o520ob91mtn0p9i0o7e1mia0q9k0nvk0l7h0n2g0o650nup0nuu1n940o6g1ofi0o4f1ncm0npg0o011n940o530uob0utk0obb0uma0o7i0o1s0o1s0o3o0o8s1nap0nm90nvv1obc0uu40o2802sj0n701mjc1mi60o650nlc0n700o370nin1n940o0g0nvc0o531n940nhk0nvl0nno0nub1nki0mfc0utk0o8s0o030o5p0o5p0moh0ntq0ned0r7n0njf0ntb0ntb11vb02te0o1t1nvv0o9g0o820o3m0ucp0o0f0nvt0utk0nrd1nvv1nvv0o9h0o751nvv1nvv0o1c0o1c1mia1obc0o9b0n7011dk0nun16uf1mia0ndv1obc0oa00oam120m02fs0o120o1d0nno0o2t0o8s0nrg0nhl0nss0npg0ned0ocb0o0g0o9g0o8s1n940nn60nuu0mff0nnv0nof0o3o0uc81o2o0o7i0nm20nm21muk0o1s0o640obu0n2r0n460uq00utk0utk0o380oco1obc0o390o141nvv0nog0nuc0nuu0o140o0i0ocn0nqf0nrg0ntu0o380nhk0o7o0o5o1o1e0nnv0hfi0utk1nki0o530nvn0ntf0utk0nnv16fk0uls0ntg0o840uc90ntu0o1b0utk1nvv0o2b18ht04in0o021nm10nub0o9o0o840utk0um70nvl1nki0o9o0mfc0n4s0me01nki0n88051o0och0nnv0o7c0m9v0tch0nvo0o291mtn02ll0n7p1nki0o110o0f0o7e123o0o280ocb0utk0ur00ocv0nin0nua0o0q0nqq0nin0utk1oc903db0tch0fs50nua1n940o4i0n700o0i1mia0o9o0nhk0n4s0utk0o9n0obh0o010nth0o3h0n700oan06hh1iko0utk0o710ntu0nqc0oba1nki0od912e10utk0ocb1o1e0ocn0o4f0o1b0nsj112203db0nlc0o2a1iko0nsj0nhl0gic0sha1mia0np30m9v0nov0uu416fk0npb0n700o641nap1mjc0o3q0nu90o010o9h0o1t0nuv0ntp0utk0o0202c60o970utk0nuc0ned0me70nuc0npg0nvk0o9n1obc1mia0o0i0oc30oam1h390obv0o110nof0o0f0uq11mia0nsi0o9h0o7j0nuu0o420nmu0o1e0o0h0nog1mia0nuu0o380nbk0nss0o2c0ocp0o8r0o3h0no00o420o9g1nki0utk0nuu1n9411220rf30o0i1noe0ocv0o4f1nki0o8s0utk0ocv0n700o4i0nog18hn0fs50nr10oc21mtn02ls0nf91n940noo1mia0npb0nu40o0d0ntg0o4i1mtn0moh0nbk0ntu1obc0nua0o7i0nuo0o500ntg0nvc0utk0nfu1obc0o5g0o5g153h1obc0o2b0o650o710od706kt1n940o111noe0ocq0nvc0o390nsm0nvc0o730o7b11b41mia0o7e0nm80nuo0ulb0mss1n940o530n700nvj0o370nqq0o8s0o7b0ur00no11mtn0oca0o0h1kp80o390ntg0o8s0utk0o7e1n941obc0no20ntf0o010o8r0nuo0nvt0utk0utk0nvl0n401mia1n940o4i0o650o0g0ns60o730nt70o281n940o0r0oca0o7i0urg1l4l1l4l0o380nup0ob90utk0utk1n940nvn0o3o0o8r046v0me00o370oaj0o730o290nhl0nvn0o010oaj0o380o7q0o3p0ntu1n941obc0nov0o0f0o0f0o3h0o9g1mia0o281nvv0uu61mjc0mci0o7e1noe0nu91o0u1mtn0o3h1obc0nok16o50rfc0nlr0ntf1oc91obc0nrq0o8r1n940p9i0o9a0kbv0o3i0rfc19et0ock0nse0o0q0o370ocv0o0j0o831obc0obh1n940utk0nvt0qhf0nu40oan0utk1obc0o1t0on60ocq0mfe0nuv0rhs0rpu0o010oa01obc11o20o8q0rp211c81mjc1oc90njf1mtn1obc0oan0oan0o1t0nt70o2t0o5002641mi60o2b0nsk1n940o381mjc0nsj0o9g0oba0nrq13if0fpo1mjc1mjc0o290pq80rcq0o031mia0nu41oci0nub0o0d0obg0o0g0o7e0ocp19et0o7g0ntb1obc1mtn1nvv0o0r1n9403jv0o3n0o0i0o8s0o6h0o3q0q370o8s1n94141q0mci0o4j0o8s0o7q1nvv16b01n941n941n940nuu0nf90nvn0o7o0ntp0uun0nrq19et0utk0o1c0nu90o380o0f1n940ocb0nvl0utk0o010nu91o0u0udc0ned0ob90o010o7c0o7c0nqr0nqs0nnc0nsf0nq20o7i0utk0o0q0utk0utk0ntf0eqa0oco0p9i0o2a0o3o0ntt0pa10nt10n700o0q0o421obc0o1b0utk11vc0nd70v3l1oci0nn01n9402t50utk0oco0o2c0o1s0nrq1n940nnp0utk1g1l1obc10b411ip\",\n            \"name\": \"Abbadia Sopra Adda|Abbadia Alpina|Abbazia|Abbiateguazzone|Abetone|Acereto|Acquacanina|Acqualunga|Acquarica Del Capo|Acquate|Affori|Agaro|Agnellengo|Agnona|Agrano|Agrone|Aiba|Aidussina|Aiello In Calabria|Aizurro|Albanova|Albaretto Valle Di Macra|Albate|Albegno|Alber Di Sesana|Albes|Albese|Albogasio|Albogno|Albona|Alice Superiore|Alliz|Alluvioni Cambio|Alma|Almazzago|Alone|Alzano Maggiore|Alzano Sopra|Alzate Con Linduno|Amblar|Andogno|Andonno|Andorno Cacciorna|Anfurro|Anicova Corada|Anterselva|Antignana|Antronapiana|Anzino|Apparizione|Apriano|Apuania|Ara|Aranco|Arbizzo|Arcellasco|Arcumeggia|Ardena|Bressana|Arienzo San Felice|Arischia|Arixi|Arizzano Inferiore|Arizzano Superiore|Armio|Armo|Arnago|Bondo Breguzzo|Arolo|Arsia|Arto|Arzene|Arzeno Doneglia|Asnago|Atella Di Napoli|Auditore|Auremo Di Sopra|Aurisina|Auzate|Auzza|Avenone|Avesa|Avuglione E Vernone|Bagaggera|Baggio|Bagnaja|Bagnasco Dasti|Porretta Terme|Casciana Terme|Bagno|Baiedo|Baio Dora|Bairo Torre|Ballabio Inferiore|Ballabio Superiore|Ballarate|Balsamo|Banco|Barbana Distria|Barbarano Vicentino|Barberino Val Delsa|Barchi|Barco|Barcone|Bardassano|Bardino Nuovo|Bardino Vecchio|Baresi|Bargano|Barra|Barsizza|Bartesate|Barza|Barzaniga|Barzola|Baselga Di Vezzano|Baselica Bologna|Bastida De Dossi|Battaglia Della Bainsizza|Bauso|Bavari|Bazzano|Beaulard|Bellagio|Bellizzi Irpino|Bellombra|Belluno Veronese|Bel Prato|Berdo San Giovanni|Bergogna|Bernate Rosales|Berra|Bersezio|Bersone|Beseno|Bersezio Del Quarnaro|Bestagno|Beura|Bevilacqua Boschi|Bezzecca|Biacesa|Biegno|Bieno|Biestro|Bigarello|Biglia|Bigliana|Biglio|Binanuova|Bindo|Bisio|Bisterza|Bizzozero|Bleggio|Bleggio Inferiore|Boara Polesine|Bobbiate|Boccolo De Tassi|Bodio|Bogliasco Pieve|Bogliuno|Bognanco Dentro|Bognanco Fuori|Bogno|Bolbeno|Bolentina|Boleto|Bollone|Bolzaneto|Bondione|Bondo|Bondo Petello|Bonzo|Bordogna|Borghetto San Nicolo|Borghetto|Borgio|Borgoforte|Borgofranco Sul Po|Borgonato|Borgo Panigale|Borgo Santagata|Borgounito|Boriano|Bornate|Bornato|Borsano|Borsea|Borzago|Borzoli|Bosco Valtravaglia|Boscomare|Bosentino|Bottarone|Botticino Mattina|Botticino Sera|Bottrighe|Bousson|Bovile|Bozzana|Bracca Di Costa Serina|Branduzzo|Brazzano|Breccia|Breglia|Breguzzo|Breia|Brembate Di Sotto|Brembilla|Brenno Useria|Sombreno|Brentino|Breonio|Brestovizza In Valle|Bretto|Brianzola|Briga Marittima|Brignano Del Curone|Brione|Brioni Maggiore|Brisino|Brissago|Brovello|Brovida|Brozzi|Brozzo|Bruntino|Brusaschetto|Brusasco Cavagnolo|Buccinigo|Bucuie|Budagne|Buggiolo|Bugiallo|Bugnate|Buie Distria|Bulgorello|Burano|Burgusio|Busana|Buso Sarzano|Bussana|Bussolino Gassinese|Buttogno|Campoverde|Caccia|Ca Dandrea|Caddo|Cadegliano|Cadero Con Graglio|Ca De Stefani|Ca De Tedioli|Ca Di David|Cadignano|Cadine|Cadrezzate|Ca Emo|Cagliano|Cagno|Cajello|Cajonvico|Calavino|Cal Di Canale|Calepio|Calino|Calogna|Calolzio|Calvaruso|Calvi San Nazzaro|Camagna Di Torino|Camairago|Camarda|Camasco|Camignone|Caminata|Caminata In Tures|Camnago Volta|Camnago Faloppia|Camo|Campagnano Vedasca|Campello Monti|Campiglia Cervo|Campo Canavese|Campo|Campochiesa|Campolongo Al Torre|Campolongo Sul Brenta|Camporosso In Valcanale|Campospinoso Albaredo|Campovico|Canale Disonzo|Candeasco|Candelara|Canepa|Canevino|Canezza|Canfanaro|Canneto Di Bari|Cannitello|Canova Del Morbasco|Cansero|Cantonale|Capiago|Capiate|Capitello|Capodistria|Capolago|Caporetto|Capriano Azzano|Capriate Dadda|Capriva Nel Carso|Capronno|Caramagna Ligure|Carate Lario|Carbonara Di Bari|Carbonara Di Po|Carcano|Carciato|Carcina|Cardana|Cardezza|Carella Con Mariaga|Careno|Carezzano Superiore|Cargiago|Carida|Carlazzo Valsolda|Camigna|Carobbio|Caronno Corbellaro|Carpaneta Con Dosimo|Carpasio|Carpignago|Carpugnino|Carrara San Giorgio|Carrara Santo Stefano|Cartari E Calderara|Carugo Arosio|Carzago Della Riviera|Casalba|Casale Cremasco|Casaleggio Castellazzo|Casalorzo Geroldi|Casalpoglio|Casanova Lanza|Casasco Dintelvi|Casez|Casirago|Casletto|Caslino Al Piano|Casnate|Casole Bruzio|Casotto|Cassago|Cassano Albese|Cassano Spinola|Cassina Mariaga|Cassine Gandine|Castagne|Castelbello|Castel Cellesi|Castel Colonna|Casteldarne|Castel De Ratti|Castel Dobra|Castelfranco Di Sopra|Castel Iablanizza|Castel Lambro|Castellammare Adriatico|Castellano|Castellar|Castellaro De Giorgi|Castellavazzo|Castellengo|Castelletto Monforte|Castelletto Po|Castelletto Villa|Castelli Cusiani|Castello Valsolda|Castello Sopra Lecco|Castello|Castello Di Serravalle|Castellone Al Volturno|Castellonorato|Castelluccio|Castelnuovo Distria|Castelponzone|Castelruggiero|Castel San Pietro Monferrato|Castelvecchio Di Santa Maria Maggiore|Castelvero Dasti|Castiglione Dasti|Castiglione Dintelvi|Castiglione Dossola|Castione Veronese|Castrezzone|Cataforio|Catona|Cauria|Cavacurta|Cavaglio San Donnino|Cavaglio Spoccia|Cavallasca|Cavandone|Cave Auremiane|Caversaccio|Covelano|Cavona|Ceconico|Ceglie Del Campo|Ceglie|Celentino|Cellina|Cella Di Bobbio|Celledizzo|Cellio|Cembra|Cenate|Cenate Dargon|Cenesi|Cengles|Cenova|Centa San Nicolo|Centrisola|Cepino|Cerchiate|Cernizza Goriziana|Cernusco Montevecchia|Cerreto Castello|Cerro Lago Maggiore|Cervarolo|Lentiai|Cesello Brianza|Cesi|Cesnola|Ceto Cerveno|Ceves|Challant Saint Anselme Et Challant Saint Victor|Champlas Du Col|Cherso|Chiabrano|Chiaiano Ed Uniti|Chianchetelle|Chiapovano|Chiaravalle Milanese|Chiavazza|Chienis|Chignolo Verbano|Chirignago|Chizzola|Ciago|Ciardes|Cignano|Ciliverghe|Cima|Cimamulera|Cimbergo Paspardo|Cimego|Cinisello|Circhina|Cireggio|Ciseriis|Cismon Del Grappa|Issengo|Cittanova Distria|Civello|Civenna|Cividate Malegno|Civiglio|Cizzago|Clana|Clusane Sul Lago|Clusio|Cobbia|Cocquio|Cognola|Cogolo|Coimo|Coiromonte|Colbordolo|Colcavagno|Colciago|Coldrano|Col Di Rodi|Colfosco|Collagna|Segnacco|Colle In Casies|Collescipoli|Collestatte|Colli In Pusteria|Cologna|Cologna Gavazzo|Cologna In Giudicarie|Colognola Del Piano|Colombaro|Col San Giovanni|Colsano|Comairano|Comano|Comasine|Comeno|Comero|Comezzano|Comnago|Concadirame|Concei|Concenedo|Conco|Condino|Conio|Consiglio Di Rumo|Consonno|Contarina|Contra|Corciago|Coredo|Corenno Plinio|Corgnale|Corigliano Calabro|Cornale|Cornigliano Ligure|Corona|Curon|Correzzo|Cortabbio|Corte|Corti In Pusteria|Cortenedolo|Corteolona|Corteranzo|Corticelle Pieve|Cortile San Martino|Corvara In Passiria|Corzes|Cosbana Del Collio|Cossana|Due Cossani|Cossila|Cossirano|Costa Doneglia|Costasavina|Covelo|Crana Gattugno|Cravegna|Creda|Credera|Cremezzano|Cremnago|Crenna|Crenovizza|Crescenzago|Crespano Del Grappa|Crespellano|Crespina|Cressogno|Creto|Crevenna|Crevola Sesia|Croce|Croce Di Mosso|Crocetta|Crosa|Crosara|Crusinallo|Cuccaro Monferrato|Cunevo|Cuquello|Quarazze|Curdomo|Curnasco|Cursolo|Cursolo Orasso|Cutigliano|Cuzzago|Dagnente|Daone|Dardine|Dare|Darzo|Dasio|Degagna|Deggiano|Dercolo|Dermulo|Descla|Desenzano Al Serio|Desertes|Dezzo Di Scalve|Diano Borello|Diano Calderina|Dignano Distria|Dimaro|Dissimo|Divaccia Grotte Del Timavo|Divaccia San Canziano|Doccio|Dole|Dol Grande|Dol Ottelza|Domusnovas Canales|Don|Donada|Donelasco|Donigala Fenughedu|Donigala Siurgus|Dorsino|Dozio|Draguccio|Drano|Dresenza|Drezzo|Drizzona|Drusacco|Duemiglia|Duino|Dusino|Duttogliano|Elena|Elle|Ellera|Elsane|Endenna|Endine|Enguiso|Eores|Erba Incino|Erbanno|Erpelle Cosina|Ersel In Monte|Escovedu|Esino Inferiore|Esino Superiore|Esio|Esmate|Fabiasco|Fabbrica Durini|Fabbriche Di Vallico|Faetto|Fagnano Sul Naviglio|Falesina|Fallascoso|Falmenta|Famie|Farvengo|Farra Dalpago|Favaro Veneto|Faver|Faverzano|Favogna Di Sotto|Favria Oglianico|Feletto Umberto|Felonica|Fenile|Fenils|Fertilia|Fianona|Fiera Di Primiero|Mirabello Comasco|Figline Valdarno|Figu|Finalborgo|Finale Marina|Finale Pia|Finero|Fiordimonte|Fiorenzuola Di Focara|Fisto|Fiumana|Fiume|Fiumenero|Fiumicello|Flavon|Flecchia|Fleres|Foce|Foiana|Folsogno|Fomarco|Fondra|Fontana Del Conte|Foresto Sesia|Foresto Di Susa|Formignana|Fornero|Forni Di Val Dastico|Forno|Forno|Forno Alpi Graje|Forno Di Zoldo|Forotondo|Fossa Guazzona|Fossarmato|Fosseno|Frascata|Frassinello Olivola|Frassinere|Fraveggio|Frerola|Frignano Maggiore|Frontignano|Frontone Serra|Fuipiano Al Brembo|Fundres|Fusine In Valromana|Gabbioneta|Gabria|Gabrovizza|Gadesco|Gaggino|Gaiola Moiola|Galdo|Gallico|Gallina|Galluzzo|Garabiolo|Gardolo Al Piano|Garegnano|Gargaro|Gattico|Gauna|Gavazzana|Gazzada|Gazzelli|Genzone|Germanedo|Germasino|Gerolanuova|Gerosa|Ghevio|Ionia|Gimino|Ginestreto|Goiaci|Gironico|Giuncugnano|Godovici|Goglione Sopra|Goglione Sotto|Goido|Golese|Goriano|Gorlaprecotto|Gornate Superiore|Gorrino|Gorzone|Gottro|Gozza|Gracova Serravalle|Graglia Piana|Granaglione|Grancona|Grandola|Grauno|Gravedona|Greco Milanese|Gressoney|Gries|Grignano|Grignano Di Polesine|Grimaldo|Grisignana|Grisolia Cipollina|Grona|Groppo|Grotte Santo Stefano|Grumello De Zanchi|Grumello Del Piano|Grumes|Grumo|Guardia Piemontese Terme|Gudon|Guidomandri|Gurone|Iatrinoli|Iavre|Idresca Disonzo|Idria|Idria Di Sotto|Imberido|Incino|Incisa In Val Darno|Indovero|Intimiano|Intra|Introzzo|Inverso Porte|Invorio Inferiore|Invorio Superiore|Inzino|Ioannis|Ipplis|Irgoli Di Galtelli|Ischia|Isola Balba|Isola Comacina|Isola Distria|Isola San Giulio|Isolella|Ivano Fracena|Jerago Con Besnate Ed Orago|Lacinigo|Laglesie San Leopoldo|San Giorgio Di Lago|Lagosta|Laino Bruzio|Lambrate|Lanischie|Lanza|Lanzo Dintelvi|Laorca|Lappago|Lardaro|Lari|Lase|Lasino|Laterina|Laudes|Laurana|Laveno|Lavina|Lazfons|Villabella|Ledine|Legos|Lemna|Lenno|Osmate|Lenzima|Lenzumo|Lesa Belgirate|Lessona|Letojanni Gallodoro|Levrange|Lezza|Libussina|Licignano Di Napoli|Licusati|Lieto Colle|Ligonchio|Ligosullo|Limonta|Linate Al Lambro|Lingueglietta|Linzanico|Lisanza|Lisignago|Lissago|Livemmo|Lizzana|Lizzola|Locadi|Locarno|Locate Bergamasco|Locavizza Di Aidussina|Locavizza Di Canale|Locca|Lodrone|Lomaniga|Lomaso|Lon|Lonato|Longarone|Longiaru|Lorentino|Lorenzana|Lose|Loseto|Lottulo|Loveno Grumello|Loveno Sopra Menaggio|Lover|Lozzo|Lu|Lucernate|Lucinico|Lucino|Ludriano|Lugnacco|Vazia|Luico|Lumezzane Pieve|Lumezzane San Sebastiano|Lumezzane Santapollonio|Lundo|Lusciano E Ducenta|Lusiana|Lussingrande|Lussinpiccolo|Lutago|Luzzogno|Maccagno|Maccagno Inferiore|Maccio|Maderno|Madrano|Madruzzo|Maggianico|Magno Sopra Inzino|Magognino|Magras|Magre|Magre Vicentino|Maia Alta|Maia Bassa|Malborghetto|Malchina|Malgolo|Mallas|Malpotremo|Malvino|Maniglia|Mantana|Manzano|Marano|Maranola|Maranza|Marcellise|Marco|Marcorengo|Maresego|Mareta|Margone|Mariano Al Brembo|Marmorito|Maro Castello|Martina Olba|Masciago Milanese|Masi Di Vigo|Masnago|Mason Vicentino|Massa Fiscaglia|Massama|Massa Superiore|Masse Di San Martino|Masse Di Siena|Mastellina|Mattarello|Matteria|Mattuglie|Mazia|Mazzo Milanese|Mazzoleni E Falghera|Mazzunno|Meano|Meano|Mechel|Medana|Megliadino San Fidenzio|Mel|Melezet|Menarola|Mendatica Montegrosso|Mentoulles|Mercurago|Merna|Mestre|Mestriago|Meugliano|Mezzana Superiore|Mezzani|Mezzano Imer|Mezzegra|Mezzolago|Migiandone|Migliarino|Migliaro|Mignette|Millan Sarnes|Millaures|Milzanello|Minoprio|Miola|Mirabello|Mirabello Ed Uniti Di Pavia|Mizzole|Moano|Mocchie|Moerna|Moiana|Molassana|Molina|Molina Di Ledro|Molini Di Colognola|Molini Di Tures|Molino Alzano|Mollaro|Mollieres|Molo Di Borbera|Montegrazie|Moltedo Superiore|Molvena|Mombello Lago Maggiore|Monasterolo Torinese|Monate|Novello Monchiero|Monclassico|Mondonico|Mondonio|Mondrone|Monghezzo Di Fuori|Montagne|Montalcino|Montalto Ligure|Montalero|Montano Comasco|Montassilone|Monte Di Mezzodi|Monte Di Tramontana|Montecatini Di Val Di Nievole|Montecelio|Montechiaro|Montechiaro Denice|Monte Colombo|Monte Di Capodistria|Montefontana|Montegrino|Montemaggiore Al Metauro|Montenero Didria|Monte Ossolano|Monteponente|Monterado|Montes|Monte San Candido|Montesanto Vigi|Monte San Vito|Montescudo|Montesicuro|Montesilvano Marina|Montespino|Montestrutto|Monte Urabice|Monteveglio|Monteviasco|Montiglio|Montona|Montorio Veronese|Montoro Inferiore|Montoro Superiore|Montrigiasco|Montrone|Montu Berchielli|Morca|Moregnano|Morondo|Morosolo|Mortano|Mortaso|Morter|Mortizza|Moschiena|Mossano|Mosso Santa Maria|Mozzio|Mu|Muceno|Mules|Villa Poma|Murano|Muriaglio|Musadino|Muscoli Strassoldo|Musellaro|Musignano|Musocco|Nacla San Maurizio|Nanno|Nava|Nave San Rocco|Navono|Naz|Negarine|Neresine|Nervi|Nese|Nettunia|Nibbiano|Nicastro|Nigoline|Niguarda|Noarna|Nocco|Nogare|Nomesino|Noriglio|Novacella|Novale|Novareglia|Novate Brianza|Novillara|Nozza|Nuchis|Nuraxinieddu|Olba|Olcio|Olgia|Olgiate Calco|Olginasio|Tavernette|Olivastri|Oltrepovo|Oltresarca|Oltresonzia|Oltressenda Bassa|Oltrona Al Lago|Ombriano|Oneglia|Onies|Onno|Ono Degno|Opacchiasella|Orasso|Orciano Di Pesaro|Oreno|Orezzo|Oriano|Oriano Di Brianza|Orino Azzio|Oris|Orsera|Orta Novarese|Orti|Ossanesga|Ossecca Vittuglie|Ossegliano San Michele|Ossero|Ossolaro|Ossuccio|Padergnone|Padernello|Paderno Cremonese|Paderno Del Grappa|Paganica|Paglieres|Paisco|Palanzo|Palazzo Piverone|Pallanza|Palvareto|Paniqua|Pannone|Pantasina|Papigno|Pare|Parenzo|Parona Di Valpolicella|Parone|Parravicino|Rivolto|Passerano|Paterno Dancona|Patone|Patrignone|Pavone Dalessandria|Pecco|Pecorara|Pedace|Pedanea|Pederzano|Pegli|Pellaro|Pellestrina|Pellio Intelvi|Penzano|Perego|Pergine Valdarno|Perno|Perra|Persico|Persone|Perteole|Peschiera Maraglio|Pessina Valsassina|Pezzoro|Piadena|Piagge|Piaggine Soprane|Pianavia|Pianceri|Pian Dartogne|Pian Di Sco|Piane Sesia|Pian Gaiano|Piani|Piano Porlezza|Piano|Pianura|Piavon|Piazza Santo Stefano|Piazzo|Piazzo Alto|Piazzo Basso|Piediluco|Piedimonte Del Calvario|Pietra Gavina|Pieve Di Coriano|Pievebovigliana|Pieve Dalpago|Pieve Delmona|Pieve Di Bono|Pieve Di Ledro|Ramiseto|Pilcante|Pilzone|Pinguente|Pino Sulla Sponda Del Lago Maggiore|Pione|Piovera|Pirano|Pirri|Piscinola|Piscopio|Pisino|Pissarello|Pistolesa|Piteglio|Pizzocorno|Planol|Planina|Plata|Plezzo|Pliscovizza Della Madonna|Pocrai Del Piro|Podargoni|Podraga|Poggi|Poggio Berni|Poggio Fidoni|Pola|Polengo|Polesine Parmense|Pometo|Poncarale Flero|Pontagna|Ponte Lambro|Pontebba Nova|Pontedecimo|Ponte Di Nossa|Ponticelli|Ponzate|Por|Portese|Porto Dadda|Porto Civitanova|Portole|Porto Maurizio|Porzano|Poscante|Postumia Grotte|Poverio|Povo|Pozza Di Fassa|Pozzo Alto|Pra|Prandaglio|Pranzo|Praso|Prati|Prato Alla Drava|Pratovecchio|Pratovecchio Stia|Pre|Precotto|Pregasina|Preghena|Preglia|Premione|Preore|Presegno|Presicce|Presson|Prestine|Preturo|Prevacina|Prezzo|Priacco|Priero Montezemolo|Primano|Primeglio Schierano|Primiero|Prio|Provaglio Sopra|Provaglio Sotto|Provezze|Prun|Puos Dalpago|Puria|Quaglietta|Quaregna|Quarna|Quarti|Quartiano|Quarto Dei Mille|Virgilio|Quero|Quetta|Quinto Di Valpantena|Quinto Al Mare|Quinzanello|Quinzano Veronese|Quittengo|Raccolana|Radicena|Raffa|Ragoli|Ragusa Ibla|Riscone|Ramo Di Palo|Ramponio|Ramponio Verna|Rancio Di Lecco|Ranziano|Ranzi Pietra|Ranzo|Rasun Di Sopra|Rasun Di Sotto|Retacevo In Monte|Ravellino|Ravina|Rebbio|Redona|Remedello Sopra|Remedello Sotto|Renate Veduggio|Rescalda|Resia|Revere|Reviano Folas|Revigliasco Torinese|Rezzonico|Rhemes|Riclaretto|Ridanna|Rifembergo|Rigosa|Rima San Giuseppe|Rimasco|Rina|Rinco|Rio Nellelba|Rio Marina|Riomolino|Ripalta Nuova|Ripe|Riva Valdobbia|Riva Di Tures|Rivarolo Ligure|Riva Santo Stefano|Rivera|Riviera Dadda|Rivignano|Rivoltella|Ro|Rocca Pietra|Roccacaramanico|Rocca Del Colle|Roccaguglielma|Roccalvecce|Roccapiatta|Rochemolles|Rocchetta Cengio|Rodda|Rodengo|Roditti|Roggiano Valtravaglia|Roio Piano|Romagnano|Romano Brianza|Romans|Romarzolo|Roncogno|Roncone|Rongio|Ronzina|Ronzo|Rosali|Rosciate|Rosingo|Rosora Mergo|Rossano|Rossino|Rota Dentro|Rota Fuori|Rovagnate|Rovate|Rovegro|Rovenna|Rover Carbonare|Roversano|Rovetta Con Fino|Rovigno Distria|Rozzo|Rubbiano|Ruginello|Ruino|Rumianca|Runo|Sabbia|Sabbio Bergamasco|Sabbioncello|Sable Grande|Sacconago|Saga|Sagliano Di Crenna|Sagoria San Martino|Saiano|Sala Al Barro|Salabue|Salcano|Sale Castelnuovo|Salecchio|Saletto|Salice Calabro|Salina|Salona Disonzo|Saltara|Salto|Salvaterra|Samaria|Sambasso|Sambatello|Sambiase|Sambuco Pietraporzio|Sambughetto|Samoclevo|Samo Di Calabria|San Bartolomeo Valmara|San Bernardino|San Daniele Del Carso|San Fedele Intelvi|San Felice Di Scovolo|San Felice|San Francesco Dalbaro|San Gallo|San Germano Dei Berici|San Gervasio Dadda|San Giacomo|San Giacomo|San Giacomo In Colle|San Gillio Torinese|San Giorgio|San Giorgio Di Pesaro|San Giovanni|San Giovanni Alla Castagna|San Giovanni A Teduccio|San Giovanni Battista|San Giovanni Dasso|San Giovanni Di Galermo|San Giovanni Reatino|San Giuseppe Di Casto|Villa San Giuseppe|San Lazzaro Reale|San Lazzaro Alberoni|San Lazzaro Parmense|San Leonardo|San Leucio|San Lorenzo In Banale|San Lorenzo Mondinari|San Lugano|San Marcello Pistoiese|San Martino Al Cimino|San Martino Di Perrero|San Martino Al Monte|San Martino De Calvi|San Martino In Beliseto|San Martino In Casies|San Martino Quisca|San Marzano Moasca|San Marzanotto|San Massimo Alladige|San Michele Dasti|San Michele Prazzo|San Michele In Teverina|San Michele Extra|San Michele Di Postumia|San Nazario|San Novo|San Pancrazio Parmense|San Pantaleo|San Paolo Della Valle|San Paolo Cervo|San Pelagio|San Pier Darena|San Pier Fedele|San Piero A Sieve|San Pietro|San Pietro Di Gorizia|San Pietro A Patierno|San Pietro Del Carso|San Pietro Di Barbozza|San Pietro Di Monterosso|San Pietro Dorzio|San Pietro Irpino|San Ponzo Semola|San Quirico In Val Polcevera|San Sigismondo|San Silvestro|Santabbondio|Santa Croce Di Aidussina|Santeufemia Della Fonte|Santagata Sopra Cannobio|Santagata Irpina|Santa Giulia|Santagostino|Santalbano Di Bobbio|Santa Luce Orciano|Santa Lucia Disonzo|Santa Maddalena In Casies|Santa Margherita Dadige|Santa Margherita Di Bobbio|Santa Margherita|Santa Maria Della Croce|Santa Maria Del Monte|Santa Maria Di Rovagnate|Santa Maria In Prato|Santa Maria In Stelle|Santa Maria Maggiore E Crana|Santa Maria Rezzonico|Santambrogio Olona|Santandrea Di Gorizia|Santandrea Di Vallefredda|Santandrea In Monte|Santangelo In Lizzola|Santantonio Dadda|Santantonio A Trebbia|Santapollinare Con Selva|Santa Valeria|Santeufemia Lamezia|Santicolo|Santilario Ligure|Santino|Zoldo Alto|Santomobono Terme|Santo Spirito Della Bainsizza|Santo Stefano Del Monte Degli Angeli|Santo Stefano Di Briga|San Valentino Al Brennero|San Valentino Alla Mutta|San Vero Congius|San Vigilio|Sanvincenti|San Vincenzo Al Volturno|San Vito E Modesto|San Vito In Monte|San Vito Di Vipacco|Saone|Sardagna|Sarola|Sartirana Briantea|Sassa|Sasso Di Bordighera|Sasso|Sassocorvaro|Savigno|Savoulx|Scaleres|Scaletta Uzzone|Scandeluzza|Scannabue|Scano Al Brembo|Scanzo|Scaria|Scarnafigi Ruffia|Scarperia|Scarpizzolo|Sciaves|Scavolino|Scelmo|Scherbina|Schianno|Schieranco|Scodovacca|Scoppo|Torriana|Scrilla|Sebreghe|Secondigliano|Sedula|Seghebbia|Segno|Segno|Seio|Selino|Sella Delle Trincee|Sellere|Selve Marcone|Senosecchia|Seo|Seppiana|Seprio|Serbariu|Serpenizza|Serra Pedace|Serravalle Dasti|Serravalle Alladige|Serrungarina|Serso|Sesana|Sessant|Sestri Ponente|Sevignano|Sforzatica|Siamanna Siapiccia|Sicci San Biagio|Sili|Silun Montaquila|Sillano|Silvella|Senadole|Siror|Sisini|Sissa|Siurgus|Siviano|Slappe Zorzi|Slingia|Slivia|Smarano|Smeria|Soccavo|Solanas|Solbiate|Solbrito|Solomiac|Solto|Solzago|Somana|Somendenna|Sonzia|Sopramonte|Soprana|Sopraponte|Soprazocco|Sorbano|Sorbolo|Sorbolongo|Sorli|Sovazza|Spadafora San Martino|Spadafora San Pietro|Spera|Spezzano Grande|Spezzano Piccolo|Spinga|Spino Al Brembo|Spinone|Spoccia|Stabello|Staghiglione|Stava|Stazzona Germasino|Stia|Stilves|Storie|Strada|Strambino Romano|Stramentizzo|Strigno|Stropino|Struppa|Stumiaga|Sturia Delle Fusine|Suna|Susa|Tabla|Tagliolo Belforte|Tagliuno|Taio|Tanas|Tapigliano|Tapogliano|Tappia|Tarces|Tarcetta|Tarnova Della Selva|Tarres|Tassullo|Tavarnelle Val Di Pesa|Tavernola San Felice|Tavodo|Tavole|Tavon|Tavordo|Telves|Temenizza|Tenda|Teodone|Teodorano|Teor|Terlago|Termenago|Termon|Ternova Disonzo|Torrenova Di Bisterza|Terrasa|Terrati|Terrazzano|Terres|Terzano|Tesido|Thures|Tiarno|Tiarno Di Sopra|Tiarno Di Sotto|Timoline|Tina|Tiso|Tolmino|Tomadio|Tonadico|Torba|Torbiato|Torra|Torradello|Torrazza|Torre Beretti|Torre Del Mangano|Torre Del Monte|Torre De Ratti|Torre Orsina|Torre Uzzone|Torria|Torriano|Toscolano|Toss|Trabuchello|Traffiume|Transacqua|Trausella|Travedona|Traversa|Traverse|Trebbiano Nizza|Trebecco|Trecasali|Tredossi|Tremenico|Tremezzina|Tremezzo|Trenno|Trens|Trenta|Trenta Disonzo|Treppo Carnico|Tres|Tresche Conca|Tresigallo|Tresilico|Tretto|Trevano|Trevisago|Tribussa|Trichiana|Trivero|Trobaso|Tuenetto|Tuenno|Tunes|Turago Bordone|Turro Milanese|Ugovizza Valbruna|Uggiate|Umago|Unchio|Urio|Ussolo|Ustie|Vaglierano|Vagna|Valas|Vico Canavese|Valchiusella|Valda|Valdarsa|Valgiovo|Valdigna Daosta|Vallalta|Vallarga|Valle Distria|Valle Mosso|Vallelunga|Vallenoncello|Valles|Valle San Felice|Valle San Silvestro|Valle Superiore Mosso|Vallonara|Valloria Marittima|Valmaggia|Valmala|Val Marchirolo|Valprato|Valrovina|Valsaviore|Valsecca|Valstagna|Valtesse|Valvasone|Valverde|Vandoies Di Sopra|Vandoies Di Sotto|Vanga|Vararo|Varengo|Vargo|Varoni|Vas|Vasio|Vassena|Vattaro|Veccana|Veddasca|Velate|Vellano|Vellego|Vello|Venegono|Verderio|Verderio Inferiore|Verderio Superiore|Verdesina|Verezzi|Villa Vergano|Vergano Novarese|Vergemoli|Vergobbio|Vermezzo|Verna|Verpogliano|Verrua Siccomario|Versa|Versciaco|Vertemate|Verteneglio|Vertoiba In Campi Santi|Vertovino|Veruno|Vervo|Vestreno|Vezzano|Vezzano|Vezzi|Vezzo|Vho|Viarago|Viceno|Viconago|Vidolasco|Vigalzano|Viganella|Vigatto|Vigentino|Viggiona|Vignola|Vigo Danaunia|Vigo Di Fassa|Vigolo Baselga|Vigolo Vattaro|Vigo Rendena|Villa Agnedo|Villa Banale|Villabassa Di Senosecchia|Villa Dadige|Villa Castelnuovo|Villa Cogozzo|Villa Corsione|Villa Dallegno|Villa Decani|Villa Del Nevoso|Villa Ottone|Villaguardia|Villalbese|Villanovetta|Villa Rendena|Villa Romano|Villa Santa Caterina|Villa Slavina|Villatalla|Villaviani|Villa Vicentina|Villa Volturno|Villazzano|Ville Del Monte|Ville Montevecchio|Ville San Pietro|Ville San Sebastiano|Villongo San Filastro|Villongo Santalessandro|Vilminore|Vimogno|Vintebbio|Vion|Vipacco|Virle Treponti|Visignano Distria|Visinada|Visino|Viticuso Ed Acquafondata|Vittadone|Vizze|Vocogno E Prestinone|Voissizza Di Comeno|Voldomino|Volosca Abbazia|Voltore|Voltri|Volzana|Voschia|Zambana|Zappello|Zara|Zavattarello Valverde|Zelarino|Zelbio Veleso|Zelo Surrigone|Zeppara|Zibello|Zivido|Zolla|Zorlesco|Zornasco|Zorzino|Zoverallo|Zuclo|Zuri|Valsantamarina|Boville|Mosso|Alme Con Villa|Rasun Valdaora\",\n            \"provinceOrCountry\": \"COTOFUVAPTBZMCBSLECOMINONOVCNOTNGOGOCSCOCECNCOBGTSBZCOCONOPLTOBZALCNTNBSBGBGNOTNTNCNVCBSGOBZPLNONOGEFUMSNOVCVACOVAVAPVCEAQCANONOVABSTNTNVAPLNOPNIMCOCEPUTSTSNOGOBSVRTOCOMIVTALBOPIAQCOTOTOCOCOVAMITNPLVIFIPUBSCOTOSVSVBGMINABGCOVACRVATNPVPVGOMEGEBOTOCOAVROVRBSFUGOCOFECNTNTNFUIMNOVRTNTNVANOSVMNGOGOCOCRCOALFUVATNTNROVAPRVAGEPLNONOVATNTNNOBSGEBGTNBGTOBGIMTNSVMNMNBSBOIMBGGOVCBSVAROTNGEVAIMTNPVBSBSROTOTOTNBGPVGOCOCOTNVCBGBGVABGVRVRGOGOCOCNALTNPLNOVANOSVFIBSBGALTOCOTSGOCOCONOPLCOVEBZREROIMTONOBSTSCRNOVAVACRPVVRBSTNVAROCOCOMIBSTNGOBGBSNOBGMEBNTOLOAQVCBSPCBZCOCOCNVANOBITOTNSVUDVIUDPVSOGOIMPSGEPVTNPLBARCCRCRMICOCOSAPLVAGOBSBGTSVAIMCOBAMNCOTNBSVANOCOCOALNORCCOGOBGVACRIMPVNOPDPDIMCOBSCECRNOCRMNCOCOTNCOCOCOCOCSVICOCOALCOCRTNBZVTANBZALGOARFUPVTETNCNPVBLVCCNPVVCNOCOCOTNBOCBLTPZFUCRSAALIMALALCONOVRBSRCRCBZLONOVBCONOTSCOBZVAGOBAFUTNVAPVTNVCTNBGBGSVBZIMTNBGBGMIGOCOBIVAVCBLCOPGTOBSBZAOTOPLTONAAVGOMIVCTNNOVETNTNBZBSBSCONOBSTNMIGONOUDVIBZPLCOCOBSCOBSFUBSBZGOVATNTNNONOPUATCOBZIMBZREUDBZPGPGBZCOTNTNBGBSTOBZPVTNTNGOBSBSNOROTNCOVITNIMCOCOROCONOTNCOTSCSPVGEGOBZVRCOBGBZBSPVALBSPRBZBZGOTSVAVCBSIMTNTNNONOGOCRBSCOMITSMITVBOPICOTNCOVCCOVCROBIVINOALTNALBZBGBGNOVBPTNONOTNTNTNTNCOBSTNTNTNGOBGTOBGIMIMPLTNNOTSTSVCGOGOGOCATNROPVCACATNCOPLCOGOCOCRTOCRTSALTSLTBZSVFUBGBGTNBZCOBSPLGOCACOCONOBGVACOLUTOMITNCHVBTSBSBLVETNBSBZTOUDMNTOTOCEPLTNCOFICAGEGEGENOMCPSTNFOFUBGUDTNVCBZGEBZNONOBGFUVCTOFENOVINOTNTOBLALCRPVNOALALTOTNBGCEBSPSBGBZUDCRGOGOCRCOCNSARCRCFIVATNMIGONOTOALVAIMPVCOCOBSBGNOCTPLPSGOCOLUGOBSBSPVPRGOMIVACNBSCOGOGONOBOVICOTNCOMIAOBZBGROBZPLCSCOALVTBGBGTNTNCSBZMEVARCTNGOGOGOCOCOFICOCONOLCTONONOBSUDUDNUTNMICOPLNOVCTNMIBZUDTVZACSMIPLMECOCOBZTNPITSTNARBZFUVAIMBZALGOTNCOCOVATNTNNOBIMEBSCOGONASACOREUDCOMIIMCOVATNVABSTNBGMEVCBGGOGOTNTNCOTNTNBSBLBZBGPIGOBACNBSCOTNVAALMIUDCOBSTORIGOBSBSBSTNCEVIPLPLBZNOVAVACOBSTNTNCOBSNOTNBZVIBZBZUDTSTNBZCNALTOBZTNTNLTBZVRTNTOPLBZTNBGALIMSVMITNVAVIFECAROSISITNTNFUFUBZMIBGBSTOTNTNGOPDBLTOSOIMTONOGOVETNTOVAPRTNCOTNNOFEFEMIBZTOBSCOTNFEPVVRIMTOTNCOGECOTNBGBZALTNTOALIMIMVIVATOVACNTNCOALTOBZTNSIIMALCOBZBZBZPTRMBZALRNPLBZVAPUGONOBZANTNBZPGGORNANPEGOTOGOBOVAATPLVRAVAVNOBAPVVCAPVCVAFOTNBZPCFUVIBINOBSVABZMNVETOVAUDPEVAMITSTNCOTNBSBZVRPLGEBGRMPCCZBSMITNNOTNTNTNBZVITOCOPSBSSSCASVCONOCOVATOIMBGTNGOBGVACRIMBZCOBSGONOPUMIBGBSCOVABZPLNORCBGGOGOPLCRCOTNBSCRTVAQCNBSCOTONOCRGOTNIMPGCOPLVRVCCOUDALANTNAPALTOPCCSTOTNGERCVECOCOLCARCNTNCRBSUDBSCOBSCRPUSAIMVCBSARVCBGIMCOTNNATVCOTOBGBGPGUDPVMNMCBLCRTNTNRETNBSPLVAPRALPLCANACZPLPVBIPTPVBZGOBZGOGOGORCGOIMRNRIPLCRPRPVBSBSCOUDGEBGNACOTNBSMIMCPLIMBSBGTSTSTNTNPSGEBSTNTNBZBZARARTNMITNTNNOTNTNBSLETNBSAQGOTNTOCNFUALTNTNBSBSBSVRBLCOAVBINOALMIGEMNBLTNVRGEBSVRBIUDRCBSTNSRBZROCOCOCOGOSVTNBZBZFUCOTNCOBGBSBSMIMIBZMNTNTOCOAOTOBZGOBGVCVCBZALLILIBZCRANVCBZGEIMTOBGUDBSFEVCPEBGFRVTTOTOSVUDBSTSVAAQTNCOGOTNTNTNCOGOTNRCBGALANCSBGBGBGLCVANOCOTNFOBGPLPLCRMIPVNOVAVCBGCOGOVAGOPVFUBSCOALGOTONOPDRCMEGOPUTOROGOGORCCZCNNOTNRCNOCRGOCOBSBZGEBGVIBGBZTNTSTOBZPUBZCONAGESICTPGVCRCIMPCPRBZCETNCRBZPTVTTOBZBGCRBZGOATALVRALCNVTVRTSVIMIPRCAALBITSGERCFIBZGONATSTVCNBGAVPVGEBZCHCOGOBSNOAVSVFEPVPIGOBZPDPVTNCRVACOMIVRNOCOVAUDFRBZPUBGPCROCOCZBSGENOBLBGGOBGMEBZBZCABSPLCBCRTRGOTNTNIMCOAQIMTNPUBOTOBZCNATCRBGBGCOCNFIBSBZPSTNGOVANOUDTSRNGOGONAGOCOSVTNTNBGGOBGBITSTNVBCOCAGOCSALTNPUTNTSALGETNBGCACACAPLLUCRTSTNCAPRCABSGOBZTSTNFUNACACOALTOBGCOCOBGGOTNBIBSBSFOPRPSALNOMEMETNCSCSBZBGBGNOBGPVBZCOARBZTSTNTOTNTNNOGETNGONOTNBZALBGTNBZNOUDNOBZUDGOBZTNFIAVTNIMTNCOBZGOCNBZFOUDTNTNTNGOFUPVCSMITNBSBZTOTNTNTNBSTOBZGOTSTNVABSTNPVIMPVPVPVALPGCNIMPVBSTNBGNOTNTOVACOTOPVPCPRCRLCCOCOMIBZCSGOUDTNVIFERCVICOVAGOBLBINOTNTNBZPVMIUDCOPLNOCOCNGOALNOBZTOTOTNPLBZAOBGBZPLBIBZUDBZTNBZVCVIIMVCCNVATOVIBSBGVIBGPNPVBZBZBZVAALALBNBLTNCOTNVAVAVAPTSVBSVACOLCLCTNSVCONOLUVAMICOGOPVGOBZCOPLGOGONOTNLCBZTNGENOCRTNNOVACRTNVBPRMINOTNTNTNTNTNTNTNTNTSROTOBSATBSPLFUBZIMCOCNTNCOBZTSIMIMUDCETNTNGOIMIMBGBGBGCOVCTNGOBSPLPLCOFRMIBZNOGOVAFUVAGEGOGOTNCRZAPVVECOMICAPRMIGOMINOBGNOTNCAFURMBIBGBZ\"\n        },\n        {\n            \"belfioreCode\": \"00100400500600700800a00d00e00f00g00h00i00j00k00m00n00o00p00q00r00s00t01001101201301601701801901b01c01d01f01g01h01i01j01k01l01m01n01o01p01q01r01s01t01u02002102302402502602702802a02b02c02d02g02h02i02j02k02l02n02o02p02r02s02t02u03003103203403503603703903a03b03c03d03e03f03g03h03j03k03l03m03n03o03p03q03r03s03t03u03v04004104204304404604704904a04b04f04h04i04l04m04p04q04r04t04u04v05005105205305405505605705b05c05d05f05g05h05i05j05k05l05m05n05o05p05q05r05s05t05v06006106206306406506606806906a06b06c06d06e06f06g06i06m06n06o06p06q06s06t06u06v07007107207307407507607707907a07b07c07d07e07f07g07h07i07j07k07l07m07p07r07s07t07u07v08008108208308508608708808908a08b08c08d08e08f08g08h08i08j08m08o08p08q08r08s08t08u08v09009209309409509609709809909b09c09d09e09f09g09h09i09k09l09m09o09p09q09r09t09u09v0a00a10a30a40a50a60a70a80a90aa0ac0ad0ae0af0ah0ai0aj0ak0al0an0ao0ap0aq0ar0as0au0av0b00b20b30b50b60b70b80bb0bd0be0bf0bg0bh0bi0bj0bk0bl0bm0bn0bo0bp0br0bs0bu0bv0c10c20c30c40c50c60c70c80c90ca0cc0cd0ce0cf0cg0ch0ci0cj0cl0cn0cp0cs0ct0cu0cv0d20d30d50d60d80d90db0dd0de0df0dg0dh0di0dj0dk0dl0dm0dn0do0dp0dr0ds0dt0du0dv0e00e10e30e40e50e60e70ea0eb0ec0ed0ee0ef0eg0eh0ei0ej0ek0em0en0eo0ep0eq0er0es0et0eu0ev0f00f10f20f40f50f60f70f80f90fa0fb0fc0fe0ff0fg0fh0fj0fl0fm0fn0fq0fr0fs0ft0fv0g00g20g30g40g50g60g70g80g90ga0gb0gd0ge0gf0gg0gh0gi0gj0gk0gl0gm0gn0go0gp0gq0gr0gs0gt0gu0h00h20h30h60h70h80h90hb0hd0hg0hh0hi0hk0hl0hm0hn0ho0hp0hq0hr0hs0ht0hu0hv0i00i10i20i30i40i50i80ia0ib0ic0id0ie0if0ig0ih0ii0il0in0io0ip0ir0is0it0iu0iv0j10j20j40j50j60j70j80j90ja0jb0jd0jh0ji0jk0jl0jm0jn0jo0jq0jr0jt0ju0k00k30k50k60k70ka0kb0kc0kd0kf0kg0kh0ki0kk0kl0km0kn0ko0kp0kq0kr0ks0kt0ku0kv0l10l20l40l50l60l90lb0lc0le0lf0lh0li0lj0lk0lm0lo0lp0lq0lr0ls0lt0lu0lv0m00m10m20m30m40m50m60m80m90ma0mc0md0me0mf0mg0mh0mi0ml0mo0mp0mq0mr0ms0mt0mu0mv0n00n10n20n30n40n50n60n70n90na0nb0nd0ne0nf0ng0nj0nk0nl0nn0no0np0nq0nr0ns0nt0nu0o00o10o20o30o40o50o60o80o90oa0ob0oc0od0oe0of0og0oh0oi0oj0ok0ol0on0oo0op0oq0or0os0ou0ov0p10p20p40p50p90pa0pb0pc0pd0pf0pg0ph0pi0pj0pk0pl0pn0pp0pq0pr0pv0q00q20q30q40q50q90qa0qb0qc0qd0qe0qf0qg0qh0qi0qj0qk0ql0qm0qn0qo0qp0qr0qt0qv0r00r60r80ra0rc0rd0re0rg0rh0ri0rj0rk0rl0rn0rp0rr0rs0rt0ru0rv0s00s10s20s60s70s80s90sa0sd0se0sf0sg0si0sk0sm0sn0so0sq0st0t10t20t30t40t90tc0td0te0tg0th0ti0tj0tk0tl0tm0to0tp0tq0tr0ts0tt0tu0tv0u00u10u20u30u40u50u80ua0ub0uc0ud0uf0ug0uh0ui0uj0ul0um0un0uo0uq0ur0us0ut0uu0uv0v00v10v30v40v60v70v90va0vb0vd0ve0vf0vg0vh0vi0vk0vm0vn0vo0vp0vq0vr0vs0vt10010110210410510610710910a10b10c10d10e10g10h10i10j10k10m10o10p10r10u10v11011111211511611711811b11c11d11e11f11h11j11k11l11n11o11p11q11r11s11t11u12012312612912a12b12c12d12e12g12h12i12j12l12m12n12o12q12r12s12t12u13013113313413613813913b13c13e13h13i13l13m13n13o13p13t13u14014114214414514614714814914a14d14e14f14h14j14k14l14n14o14q14r14s14t14u14v15015315415715815915a15b15c15d15e15g15h15i15j15k15l15n15p15s15t15u15v16016116216316416516716916b16c16d16e16g16i16j16k16l16m16n16o16q16r16u16v17017117217317717817a17b17d17e17g17h17i17j17k17l17m17o17q17r17s17u17v18018118218418518618718818918c18d18e18f18g18h18k18l18m18n18o18p18q18t18u18v19019119219319519719e19g19k19n1a11a21a51a61a71a81aa1ab1ad1ae1ag1ah1ai1ak1al1am1an1ao1ap1ar1au1av1b01b11b21b31b41b51b61b71b81b91bb1bc1bd1be1bf1bg1bh1bi1bj1bk1bl1bm1bn1bo1bq1br1bs1bt1bu1c01c11c21c51c71c81c91ca1cb1cf1cg1ch1ci1cj1ck1cl1cm1cn1co1cp1cq1cr1cs1ct1cv1d01d11d21d31d41d51d61d71d81da1dc1dd1df1dh1dk1dl1dm1dn1dp1dq1dr1ds1dt1du1dv1e01e11e21e41e51e91ea1eb1ec1ed1ee1ei1ej1ek1el1em1eo1ep1eq1er1es1et1eu1f01f11f21f31f51f61f71f81f91fa1fb1fc1ff1fg1fh1fi1fk1fl1fm1fn1fo1fp1fq1fr1fs1ft1fu1fv1g01g11g21g31g41g51g61g71g81ga1gd1ge1gf1gh1gi1gj1gk1gl1gn1gp1gq1gr1gs1gt1gu1gv1h11h21h41h51h61h81h91ha1hb1hc1hd1he1hg1hi1hj1hk1hl1hm1hn1ho1hp1hq1hr1ht1hu1i21i31i41i51i61i71i81i91ia1ic1id1if1ig1ih1ii1ij1ik1il1io1iq1ir1is1it1iu1iv1j01j11j21j31j41j51j71j81j91ja1jb1jc1jd1je1jf1jg1jh1ji1jj1jl1jn1jo1jq1js1jt1ju1jv1k01k21k31k51k61k71k81ka1kb1kc1kd1ke1kf1kg1kh1ki1kk1kl1km1kn1ko1kp1kq1kr1ks1kt1ku1kv1l01l11l21l51l71l81l91la1lb1lc1ld1le1lf1lg1lj1lk1ll1lm1ln1lo1lq1lr1ls1lt1lu1lv1m11m21m31m41m51m61m71m81ma1mc1md1me1mf1mg1mh1mk1ml1mo1mq1mr1ms1mu1mv1n01n21n31n51n61n71n81n91nb1nc1ne1ng1nh1ni1nj1nk1nl1nm1nn1no1np1nr1ns1nt1nu1nv1o01o21o31o41o61o71o91oa1ob1oc1od1of1og1oh1oi1ok1ol1oo1op1oq1or1os1ou1ov1p01p11p21p31p41p51p61p81pb1pc1pe1pf1pg1ph1pi1pk1pl1pm1pn1po1pq1pr1pt1pu1q01q11q21q31q41q51q61q81q91qa1qb1qc1qd1qe1qf1qg1qh1qj1qk1ql1qm1qn1qo1qp1qq1qr1qt1qu1qv1r01r11r21r31r41r51r61r71r81r91ra1rb1rc1rd1re1rf1rg1rh1ri1rj1rm1rn1ro1rq1rr1rs1rt1ru1rv1s01s11s21s31s41s51s71s81s91sc1sd1se1sf1sg1sh1si1sj1sk1sl1sn1sp1sq1sr1ss1st1su1t01t11t21t31t41t61t71t81t91ta1tb1td1te1tf1tg1th1tj1tm1tp1tq1tr1ts1tu1u01u11u31u41u51u61u71u91ua1uc1ud1ue1uf1ui1uj1uk1um1un1ut1uu1v41v61v81vb1ve1vh1vi1vl1vm1vo1vp1vs1vt1vu1vv20020120220320420520720820920a20b20c20e20f20g20h20i20j20l20m20o20p20q20r20s20u20v21021121221321521621921a21b21d21e21g21h21i21k21l21m21n21o21p21q21r21s21u21v22122222322422522622722822922a22b22d22e22f22g22h22i22l22m22n22o22p22r22t22u22v23123323423523823923a23b23c23d23e23g23h23i23l23m23n23p23s23t23u23v24024124224524724824924a24b24c24d24e24i24j24l24m24n24o24p24q24r24s24t24u24v25025125225325525625725825925a25b25c25e25f25g25h25i25j25k25l25m25n25o25r25s25t26026126226326426526626726826a26b26c26d26e26f26j26l26m26n26p26q26r26s26t26u26v27027127227327427627727827a27b27c27d27e27f27g27h27i27j27k27l27m27o27p27q27s27t27u27v28028228328428528628728828928a28b28c28d28e28f28h28i28j28k28l28n28p28q28r28s28u28v29029129229329429529629729829929a29b29c29d29f29g29h29i29k29l29n29o29p29r29s29t2a12a22a42a72a82a92aa2ac2ad2ae2af2ag2ah2aj2ak2al2am2ao2ap2aq2ar2as2au2b02b42b52b62b72b82b92ba2bc2bd2be2bf2bh2bi2bk2bl2bm2bo2bq2bs2bt2bu2c02c32c42c52c62c72c82c92ca2cb2cc2ce2cf2cg2ch2cl2co2cp2cq2cr2ct2cv2d22d52d62d72d82da2dc2de2df2dg2dh2di2dj2dk2dl2dm2dn2do2dp2ds2dt2du2dv2e02e12e22e42e52e62e72e82e92ea2eb2ec2ed2ee2ef2eg2eh2ei2ej2ek2el2em2eo2ep2er2es2et2ev2f02f12f22f32f42f52f62f82f92fa2fb2fc2fd2fe2ff2fg2fh2fj2fk2fl2fm2fn2fo2fp2fq2fr2fs2ft2fu2fv2g02g12g32g42g52g62g72g82g92gd2ge2gg2gh2gi2gk2gl2gm2gn2go2gp2gr2gs2gt2gv2h12h22h32h42h62h72h82hc2hd2he2hg2hh2hi2hk2hl2hm2hn2ho2hq2hr2hs2ht2hv2i02i12i32i42i52i62i72i82i92ia2ib2id2ie2if2ig2ih2io2ip2iq2ir2is2it2iu2iv2j02j12j22j32j42j52j62j72j92jc2jd2je2jg2jh2ji2jj2jk2jl2jm2jn2jo2jp2js2jt2ju2k12k32k72k82k92ka2kb2kc2kd2ke2kf2kg2kh2kj2kk2kl2km2kn2ko2kp2kq2kr2ks2kt2ku2kv2l22l32l42l52l62l72l82l92la2lc2ld2lf2li2lj2lk2ll2lm2ln2lo2lp2lq2lr2lt2lu2lv2m02m32m42m52m62m72m82mb2mc2md2me2mf2mg2mh2mi2mj2mk2ml2mm2mo2mp2mq2mr2ms2mt2mu2mv2n02n12n32n52n62n72n82n92na2nb2nc2nd2ng2nh2nj2nk2nm2nn2nq2nr2ns2nt2nu2nv2o02o12o22o32o42o52o72o82oa2od2oj2ok2om2on2op2os2ot2ou2ov2p02p22p32p42p52p62p72p82p92pa2pb2pc2pe2pg2ph2pi2pj2pk2pl2pm2pn2po2pr2ps2pt2pu2pv2q02q22q32q42q52q62q82qa2qd2qe2qf2qh2qk2ql2qm2qn2qo2qp2qs2qu2qv2r02r22r52r62r72r82ra2rd2re2rf2rg2rh2ri2rj2rl2rm2rn2ro2rp2rq2rr2rs2rt2rv2s22s42s62s72s82sa2sb2sc2sd2se2sf2sg2si2sj2sk2so2sp2sr2ss2st2su2sv2t02t12t22t32t42t62t72t82ta2tb2tc2te2tf2tg2th2tj2tk2tm2tn2tr2ts2tu2tv2u02u12u22u32u42u52u62u72u82ua2ub2uc2ud2ue2ug2ui2uj2uk2ul2um2up2ut2uu2v02v12v22v32v42v52v62v82v92va2vb2vc2ve2vg2vh2vi2vl2vm2vo2vp2vq2vs30030330430530630730930a30d30e30f30g30h30k30l30m30n30o30r30s30t30u30v31131331431531631731831931a31d31e31f31g31h31i31j31k31m31n31o31r31s31t31u32032132332532632732832932b32d32e32f32i32k32n32p32q32t32u33033233333433733933b33c33d33g33h33i33j33k33l33o33p33r33s33t33u33v34034134234334434534734834934a34b34e34g34h34i34j34l34m34n34q34r34s34t34u34v35035135235435535635735b35c35d35e35f35j35l35n35o35p35q35r35s35t36036136236336436536636736836936d36e36f36g36h36k36m36n36p36q36r36s36t37037137237337437737837937d37e37f37g37i37j37k37l37m37n37p37r37s37t37v38038138238338438538638a38b38d38g38h38i38j38k38m38n38o38r38s38t38u39039139439539639739b39c39d39e39g39h39j39k39n39o39p39q39s39u39v3a03a23a33a63a73a93aa3ab3ae3af3ag3ai3aj3ak3am3an3ao3ar3as3at3au3av3b03b23b43b53b63b73b93ba3bc3bg3bh3bi3bj3bk3bl3bn3bq3br3bs3bt3bu3bv3c03c13c23c33c53c63c73c83c93cb3cc3cd3ce3cf3cg3ch3ci3cj3ck3cl3co3cq3cr3cs3cu3cv3d03d13d23d33d43d53d63d73d83d93db3dd3de3df3dg3dh3dk3dl3dm3dn3do3dp3dq3du3e03e23e33e43e63e73e83ea3eb3ec3eh3ei3ej3ek3el3em3en3eo3ep3eq3er3es3et3eu3ev3f03f13f23f33f53f73f83f93fa3fc3fd3fe3ff3fg3fh3fi3fj3fl3fm3fn3fo3fp3fq3fr3fu3g13g23g33g43g53g63g73g83g93ga3gb3gc3gd3gf3gg3gk3gl3gm3gn3go3gr3gs3gt3gu3gv3h13h33h53h63h73h83hc3hd3he3hi3hj3hk3hl3hm3hn3ho3hp3hr3hs3ht3hu3i13i23i33i43i53i63i73i83ic3id3ie3if3ih3ii3ij3ik3im3in3io3ip3iq3ir3is3it3iu3iv3j03j13j23j33j43j53j63j83j93ja3jb3jd3je3jf3jg3jh3jk3jl3jm3jn3jo3jp3jq3jr3js3jt3ju3jv3k03k23k33k53k63k73k83kd3kf3kg3ki3kj3kk3kl3km3kn3ko3kp3kq3ks3kt3ku3l03l13l23l43l53l63l73l83la3lb3lc3ld3le3lf3lg3lh3li3lj3lk3ll3lm3ln3lo3lp3lq3lr3lt3lu3lv3m03m13m43m53m63m73m83m93ma3mb3mc3md3me3mf3mh3mi3mk3ml3mm3mn3mp3mq3mr3ms3mt3mv3n03n23n33n43n53n63n73n93na3nb3nd3nf3ng3nh3ni3nj3nk3nl3nm3no3nq3nr3ns3nv3o13o23o33o43o53o73o83o93oa3ob3oc3od3oe3of3og3oi3oj3ok3ol3om3on3oo3op3or3os3ot3ou3ov3p03p13p23p33p43p63p73p93pa3pb3pc3pd3pe3pg3ph3pi3pj3pk3pm3pn3po3pp3pq3pr3pt3pu3pv3q13q23q33q53q63q73q83q93qb3qd3qe3qg3qh3qj3qk3ql3qm3qn3qo3qq3qr3qs3qt3qu3qv3r23r43r63r73r83r93ra3rb3rc3rd3rf3rg3rk3rl3rm3rn3ro3rp3rq3rr3rs3rt3ru3rv3s03s13s23s33s43s63s73s83s93sa3sc3sd3se3sf3sg3sj3sk3sm3sp3sq3sr3ss3st3su3sv3t13t33t43t63t73t83t93ta3tb3tc3td3te3tf3tg3th3tj3tk3tl3tm3tn3to3tp3tq3tr3ts3tt3tu3tv3u13u23u43u53u63u73u83u93ub3uc3ud3uf3ug3uh3ui3uk3ul3um3un3uo3up3uq3us3ut3uu3uv3v03v13v23v33v43v53v63v73v83va3ve3vf3vh3vi3vj3vk3vl3vm3vn3vo3vp3vq3vr3vs3vt3vu40040240440540640740840a40b40d40f40h40i40j40k40m40o40q40s40t40u40v41041241341441541641841b41d41e41f41g41h41i41j41k41l41o41p41q41r41s41u41v42042142342442542742842942a42b42c42d42h42i42j42k42m42o42p42r42s42t42v43043143343443743843943a43b43c43d43e43f43g43h43i43k43l43m43n43o43p43r43t43v44044244344444544644844944a44b44c44d44e44f44g44h44i44j44k44l44m44o44p44q44r44s44t44v45045245345545745845945a45d45e45f45g45h45i45o45p45q45r45s45t45v46046146246346446746946b46d46g46h46i46j46l46m46n46p46q46t47047147347547647747847947a47c47d47e47f47g47h47i47j47k47l47m47n47p47q47s47t47u47v48148248448648848b48c48d48e48f48g48h48i48j48k48l48m48n48o48p48r48s48t48u49249349449549649749849949a49b49c49d49e49g49h49i49j49l49m49n49p49q49s49t49u49v4a04a14a34a44a54a64a74a84a94aa4ac4ad4ae4af4ag4ah4ai4aj4ak4al4am4an4ap4ar4at4av4b04b24b34b64b84b94ba4bb4be4bf4bg4bh4bi4bj4bl4bm4bn4bo4bp4bq4br4bs4bv4c04c14c24c34c44c54c64c74c84c94ca4cb4cc4cd4ce4cg4ch4ci4ck4cm4co4cp4cq4cr4ct4cu4d04d24d34d54d64d74d84da4db4dc4de4df4dg4di4dj4dk4dn4do4dp4dq4dr4ds4dt4du4dv4e04e24e34e44e54e64e74e94ea4eb4ed4ee4ef4eg4ei4ej4ek4el4em4ep4eq4er4et4eu4f04f24f54f74f84fb4fc4fd4fe4ff4fg4fh4fi4fk4fl4fn4fo4fq4ft4fu4fv4g04g24g34g54g74g94ga4gc4gd4ge4gf4gg4gh4gi4gj4gl4gm4go4gp4gr4gu4gv4h04h44h54h64h74h84h94hb4hc4he4hf4hg4hj4hk4hl4hm4ho4hp4hq4hs4ht4hv4i14i24i34i54i64i74i84i94ia4ib4ic4id4if4ih4ii4ij4ik4il4im4in4iq4is4j04j14j24j34j44j54j74j94ja4jb4jc4je4jf4ji4jj4jk4jm4jp4jq4jr4ju4jv4k04k14k24k64k74k94ka4kb4kc4kd4ke4kf4kg4kh4ki4kl4km4kn4ko4kp4kr4ks4kv4l14l24l44l54l94la4lb4lc4le4lf4lg4lh4li4lj4lk4ll4lm4ln4lp4lq4lr4lu4lv4m04m14m34m44m54m64m74m84m94ma4mb4mc4md4me4mf4mg4mh4mi4mj4mk4ml4mp4mt4mu4n14n24n34n44n54n64n74n84n94na4nb4nc4nf4ng4ni4nj4nk4nl4nm4nn4no4nq4nr4ns4nu4nv4o04o14o24o44o54o64o84o94oa4ob4oc4od4oe4of4og4oi4oj4ok4ol4on4oo4op4or4os4ot4ou4p04p14p34p44p54p64p74p84p94pa4pb4pc4pe4pf4pg4pi4pj4pl4pn4pp4pq4pr4ps4pt4pv4q04q14q24q34q44q54q64q84qa4qb4qc4qd4qg4qh4qi4qj4ql4qn4qo4qp4qq4qr4qs4qt4qu4qv4r04r14r24r34r54r74r84ra4rb4rc4rd4re4rf4rg4rh4ri4rj4rk4rl4rm4rn4ro4rq4rr4rs4rt4ru4rv4s04s14s24s34s54s64s74s94sa4sb4sc4sd4se4sf4sh4si4sj4sk4sl4sn4so4sp4ss4st4su4sv4t04t14t34t44t54t64t84t94tb4td4th4ti4tj4tk4tl4tm4tn4to4tq4tr4ts4tt4tu4tv4u24u34u54u74u84u94ua4ub4uc4ue4uh4ui4um4uo4up4uq4ur4us4ut4uu4uv4v04v14v44v54v74v84v94va4vc4vd4ve4vg4vh4vi4vj4vk4vl4vm4vn4vo4vp4vq4vr4vs4vt4vu4vv50050250350550650750a50b50c50d50e50f50g50h50i50j50k50l50o50p50q50r50s50t50v51051151251351451551651951a51d51f51g51i51j51k51l51n51o51u51v52052252352452552652752852952a52c52g52h52i52j52l52m52n52o52p52q52t52u53053153253353453553753853953a53d53e53f53g53h53m53n53o53p53q53r53s53u53v54054154254354654854954a54b54c54d54e54f54h54i54j54k54l54m54n54o54q54r54s54t54u54v55055155355455755855a55d55e55f55h55j55l55o55p55r55s55t55u55v56056156356456556656756856a56b56c56d56e56f56g56h56i56k56l56n56o56p56q56s56u56v57257357457757857a57b57c57d57e57f57g57h57j57k57l57n57o57p57q57r57s57t57u57v58058158258358458558658758858958a58b58e58f58g58h58i58j58l58m58n58o58p58r58s58t58v59059159259359659759859959b59c59e59f59g59i59j59k59l59m59o59p59q59t5a05a15a25a35a55a65a85a95aa5ac5ad5ae5af5ag5ah5ai5ak5al5am5an5ao5ap5ar5as5at5av5b15b25b35b55b65b75b85b95ba5bb5bc5be5bf5bg5bh5bj5bk5bl5bm5bn5bo5bp5bq5br5bs5bt5bu5bv5c05c25c35c45c55c65c75c85c95ca5cb5cc5cd5ce5cf5cg5ci5cj5ck5cm5cn5co5cp5cr5cs5ct5cu5cv5d05d15d25d45d55d65d75d85d95da5db5dc5dd5de5df5dg5dh5dk5dl5dm5dn5do5dp5dq5dr5ds5dt5du5dv5e05e15e25e45e55e65e85ea5eb5ec5ed5ee5eh5ei5ej5el5em5en5eo5eq5er5es5et5eu5ev5f05f15f35f45f55f65f75f85f95fa5fb5fc5fe5fg5fi5fj5fk5fl5fm5fn5fp5fq5fr5fs5ft5fv5g05g25g45g55g65g75g85ga5gc5ge5gg5gj5gl5gm5gn5go5gp5gs5gt5gu5h05h15h25h35h45h55h65h75h85ha5hb5hc5hd5hf5hg5hh5hi5hl5hm5hn5ho5hp5hq5hs5i05i15i25i55i75i85i95ia5ib5ic5id5ie5if5ig5ih5ij5ik5il5im5io5ip5iq5ir5is5it5iu5iv5j05j15j25j35j45j55j65j75j85j95ja5jb5jc5jf5jg5jh5ji5jj5jk5jl5jm5jn5jq5js5ju5k05k15k25k45k55k65k75ka5kb5kc5kd5ke5kf5kg5kh5kj5kk5kl5kn5ko5kp5kq5ks5kt5kv5l15l35l55l65l75l95la5le5lg5lh5li5lj5ll5lm5ln5lo5lp5lq5ls5lu5m25m45m55m65m75m85m95mb5mc5me5mf5mg5mh5mi5mj5mk5ml5mm5mn5mo5mp5mr5ms5n05n15n25n35n55n65n75n85n95na5nb5nc5ne5nf5ng5ni5nk5nl5nm5no5np5nq5nr5ns5nu5nv5o15o25o35o45o55o65o75oa5ob5oc5od5oe5og5oi5oj5ok5om5on5oo5op5oq5or5os5ot5ou5p05p15p25p35p45p55p65p75p95pa5pb5pc5pd5pe5pf5ph5pj5pl5pm5pn5po5pr5ps5pt5pu5pv5q05q35q45q55q65q85q95qa5qb5qc5qd5qe5qf5qg5qi5qk5qm5qn5qo5qp5qq5qr5qs5qt5qu5qv5r15r25r35r45r55r65r75r85r95ra5rb5rc5rd5re5rf5rh5ri5rj5rk5rl5rm5rn5ro5rp5rq5rr5rs5rv5s05s25s35s45s55s65s75s95sa5sc5se5sf5sg5si5sk5sl5sn5so5sp5sq5sr5ss5st5su5sv5t05t15t25t65t85ta5td5te5tf5tg5th5ti5tk5tm5tn5tq5tr5ts5tu5tv5u05u15u25u35u45u65u75u85ua5ud5uf5ug5uh5ui5um5un5up5ur5us5ut5uu5uv5v15v25v35v45v55v65v75v85v95va5vb5vc5vd5ve5vg5vh5vi5vj5vl5vm5vn5vo5vp5vr5vs5vt5vu5vv60060160260360460560660760860960a60b60c60d60e60f60g60h60j60k60l60m60n60o60p60q60r60t61261361561761861961a61b61c61d61e61f61g61h61i61j61k61l61m61n61o61p61q61r61s61t61u61v62062162262362462562762962a62c62e62f62g62h62i62j62k62l62m62o62p62q62t62u63063163263363763863963a63b63c63d63e63f63h63i63j63k63l63m63n63o63q63r63s63u63v64064164264364464564664864964a64b64c64d64e64f64g64h64i64j64k64l64m64n64o64p64q64r64s64u64v65065165265365465565765865b65c65d65e65f65g65j65k65l65n65o65q65r65t65u65v66066166266366466666866a66b66c66d66e66g66h66i66m66n66p66q66s66t66v67067267367467667867967a67b67d67e67f67g67h67i67j67k67l67n67o67p67q67r67t67u68268368468668768868a68b68c68f68g68h68i68j68k68l68o68q68s68t68u68v69069169269369469569669769969a69b69c69d69e69f69h69i69k69l69m69n69o69p69q69r69t69u69v6a16a36a56a76aa6ab6ac6ad6ae6af6ag6ah6ai6aj6ak6al6am6an6ao6ap6ar6as6at6au6av6b06b16b26b36b46b66b86b96ba6bb6bc6bd6be6bf6bg6bh6bi6bj6bk6bl6bm6bn6bo6bp6bq6br6bs6bt6bu6c06c16c46c66c76ca6cc6cd6ce6cf6ch6ci6cj6cl6cn6cp6cr6cs6ct6cu6cv6d06d16d46d56d66d86da6db6dc6de6df6dg6dh6dj6dk6dm6dn6dr6ds6dt6du6dv6e06e16e26e46e56e66e86e96ea6eb6ec6ed6ee6ef6eg6eh6ei6ej6ek6el6em6en6eo6eq6er6es6et6eu6ev6f06f16f26f36f46f56f66f76f86fa6fb6fc6ff6fi6fj6fl6fm6fn6fo6fp6fq6fr6ft6g06g16g26g36g46g56g66g76g86g96ga6gd6ge6gf6gg6gh6gi6gk6gm6go6gp6gq6gr6gs6gt6gu6gv6h06h26h36h46h56h66h86h96ha6hb6he6hf6hg6hh6hj6hm6ho6hp6hs6ht6hu6hv6i06i16i26i46i66i76i86i96id6ie6if6ig6ih6ik6il6im6in6iq6ir6it6iv6j06j16j26j46j56j66j86j96ja6jb6jc6jd6je6jf6jg6jh6ji6jj6jk6jl6jm6jn6jo6jp6jr6js6ju6k06k16k26k36k46k56k66k76k86k96ka6kb6kc6kd6ke6kf6kg6kh6ki6kj6kk6kl6km6kn6ko6kp6kr6ks6kt6ku6kv6l06l16l26l46l56l66l76l96la6lb6ld6le6lf6lh6li6lk6ll6lm6ln6lo6lq6lr6ls6lu6lv6m06m16m26m36m46m56m66m76m86ma6mb6mc6md6me6mg6mh6mi6mj6ml6mm6mn6mo6mp6mq6mr6mt6mu6mv6n16n26n66n76n86n96na6nb6ne6nf6nk6nm6nn6no6np6nq6nr6nt6nu6o06o16o26o46o56o76o86o96oa6ob6oc6od6oe6of6oh6oj6ok6ol6om6on6oo6op6or6os6ou6ov6p06p16p36p56p76p96pa6pb6pd6pf6pg6ph6pi6pj6pk6pl6pm6po6pp6pq6ps6pt6pu6pv6q06q16q26q36q46q56q66q96qa6qb6qc6qe6qf6qg6qh6qi6qj6ql6qn6qp6qq6qs6qu6qv6r26r36r56r66r76r96ra6rb6rc6rd6re6ri6rj6rk6rl6rm6rp6rq6rs6rt6ru6s06s26s36s56s66s86sc6sf6sg6sj6sl6sm6sn6ss6st6su6sv6t06t16t26t46t56t66t96tb6td6te6tf6tg6th6ti6tj6tm6tn6to6tp6tq6ts6tt6tu6u06u26u36u46u56u66ua6ud6ue6uf6ug6uh6ui6um6un6uo6up6uq6ur6us6uu6v46v76va6vb6vc6ve6vf6vg6vh6vi6vk6vl6vn6vp6vr6vt6vu70070570670770870970c70e70f70g70h70i70j70k70l70o70q70r70s70u70v71071271371471571671771a71b71c71d71e71g71i71j71k71l71m71n71o71p71r71s71t71u72172372472672872a72b72c72d72e72f72i72l72m72n72o72p72q72r72u72v73073173273373473573673773873973a73b73c73d73g73h73i73k73l73m73n73o73p73t73u74274374474574674774874b74c74f74g74h74i74j74k74n74o74p74r74s74t74u74v75075275375575675775875975a75c75d75e75f75g75i75j75k75m75p75q75r75s75t75v76176276376476576676776976b76c76d76f76g76h76i76j76k76m76n76o76p76q76r76t76u76v77077177277377477677777877977a77b77c77d77e77f77g77h77i77j77k77l77m77o77p77q77s77t77u77v78078178278378478578778878978a78c78d78e78f78g78h78i78j78k78l78m78n78o78p78q78r78s78t78u78v79079279379479579679979a79b79c79e79g79h79i79j79l79m79n79o79p79s79t79u7a07a17a27a37a47a57a67a77a97aa7ac7ad7ae7af7ah7ai7aj7ak7al7an7ao7aq7as7at7au7av7b17b27b37b57b77b87b97bb7bc7bd7be7bf7bg7bh7bi7bj7bk7bl7bm7bo7bq7br7bt7c07c17c27c37c47c67c77c87c97ca7cc7cd7ce7cg7ch7ci7ck7cl7cm7cn7cp7cq7cs7ct7cv7d07d17d47d57d67d77d87d97da7de7df7dh7di7dk7dm7dn7do7dp7dq7ds7du7dv7e27e47e57e67e77e97eb7ec7ed7ee7ef7eg7eh7ei7ej7en7ep7eq7er7es7et7eu7ev7f27f47f67f77f97fa7fb7fd7fe7fh7fi7fl7fm7fn7fo7fp7fq7fr7fs7ft7fu7fv7g17g27g37g47g67g77g87g97ga7gb7gd7ge7gf7gj7gk7gl7gm7gn7go7gq7gr7gs7gu7h07h17h27h37h47h57h77h87hb7hc7hd7he7hf7hh7hi7hj7hk7hl7hm7hn7ho7hq7hr7hv7i07i17i27i57i87i97ia7ib7ic7id7ig7ij7ik7il7im7in7io7ip7iq7ir7is7it7iu7iv7j17j27j37j47j57j67j77j87j97ja7jb7jd7je7jf7jg7jh7ji7jj7jk7jl7jm7jn7jo7jp7jq7jr7js7jt7ju7jv7k07k17k27k37k47k67k77k87ka7kb7kc7kd7ke7kf7kg7kh7ki7kj7kl7kn7kp7kq7kr7ks7ku7kv7l07l17l27l37l47l57l67l77l87la7lb7lc7lf7lg7lh7li7lj7lk7ll7lm7lp7lr7ls7lu7m07m17m37m47m57m67m87m97ma7mb7mc7md7mf7mg7mh7mi7mj7mk7ml7mm7mn7mo7mp7mq7mr7ms7mt7mv7n27n37n67n87n97na7nc7nd7ne7nf7ng7nh7ni7nj7nk7nm7no7np7nq7nr7nt7nv7o07o17o27o37o47o57o67o77o87o97od7of7og7oh7oj7ok7ol7om7on7op7oq7os7ov7p17p27p37p57p67p77p87p97pa7pb7pd7pe7pg7ph7pi7pj7pk7pl7pm7pn7po7pq7ps7pt7pv7q27q37q57q77q87qb7qc7qe7qg7qh7qi7qj7qn7qo7qp7qq7qr7qs7qt7qu7qv7r07r27r37r57r87ra7rd7re7rg7rh7rj7rk7rl7rm7ro7rp7rq7rr7rs7rt7ru7rv7s17s27s77s87s97sc7sf7si7sk7sm7so7sp7sq7ss7st7sv7t07t27t67t77t97tb7tc7td7te7th7ti7tj7tk7tl7tm7tn7to7tp7tq7tr7ts7tt7tu7u07u17u27u37u47u57u77u87u97ua7ub7uc7ue7uf7ug7uh7uj7uk7um7un7uo7up7uq7ur7us7ut7uu7v27v37v47v57v67v87v97va7vb7vc7vd7ve7vf7vg7vh7vi7vj7vl7vm7vn7vo7vp7vr7vs7vt7vu7vv80080180480580680780980a80b80d80e80f80g80i80l80m80n80o80p80r80s80t81081181681881981a81c81d81e81g81i81j81k81n81o81p81r81t81u81v82082282382482582682782882982a82f82h82i82j82k82l82m82n82o82p82q82r82s82u82v83083183283383483583683883a83c83d83e83g83h83i83j83k83l83m83n83o83q83r83s83t83u83v84084184284484684784884984a84c84d84f84g84h84j84l84m84o84q84r84s84u84v85085185285485585785885985a85b85c85d85f85g85i85j85k85l85m85n85o85p85t85u86086486586686786886986a86c86g86h86i86j86k86l86n86o86p86q86r86s86u86v87087187287487587687787887987a87c87d87e87f87g87h87i87j87k87l87m87n87p87q87r87s87t87v88088188388488588688788988c88d88e88f88g88h88i88j88k88l88m88n88o88p88r88s88t88u88v89089289389489589689789989a89c89d89e89g89h89i89j89l89n89o89q89r89u89v8a08a78a88aa8ab8ae8af8ah8ai8aj8ak8al8am8an8ao8ap8aq8ar8as8at8av8b08b18b28b48b58b78b98ba8bb8bc8be8bf8bh8bi8bj8bk8bl8bm8bn8bp8bq8br8bt8c08c18c28c48c58c68c98cc8cd8ce8cf8cg8ch8ci8cj8cl8cm8cn8co8cp8cq8cr8cs8ct8cu8cv8d08d18d28d38d48d58d68d78da8dd8de8dg8dh8di8dj8dk8dl8dm8dn8do8dp8dq8dr8ds8dt8dv8e08e18e28e38e48e58e68e78e88e98eb8ec8ed8ee8ef8eg8eh8ej8ek8el8em8en8eq8er8es8et8ev8f18f48f58f68f78f98fa8fb8fc8fe8ff8fg8fh8fi8fk8fl8fn8fo8fp8fq8fr8fs8ft8fu8fv8g08g18g28g38g58g78g88ga8gb8gc8gd8ge8gg8gh8gj8gk8gl8gm8gn8go8gp8gq8gs8gu8gv8h08h28h38h58h68h78h88h98hb8hc8hd8he8hf8hg8hh8hi8hk8hl8hm8hn8hp8ht8hv8i38i68i78i98ia8ib8ic8id8ie8if8ih8ii8ij8im8in8ip8iq8is8it8iu8iv8j08j18j28j38j48j58j88j98jc8jd8jf8jh8jj8jk8jl8jm8jn8jo8jp8jq8jr8js8jt8ju8jv8k08k68k78k88k98kb8kc8kf8kg8kh8ki8kj8kk8kl8km8kn8ko8kp8kq8ks8kt8ku8kv8l08l18l28l38l48l58l78l88l98la8lb8lc8ld8le8lf8lg8lh8lk8ll8lm8ln8lo8lr8ls8lt8lu8lv8m08m38m58m68m78m88m98ma8mb8mc8md8me8mf8mg8mi8mk8ml8mn8mp8mq8mr8ms8mt8mu8mv8n08n18n28n48n78n88n98na8nb8nd8ne8nf8nh8ni8nj8nk8nl8nm8nn8np8nq8nr8ns8nv8o08o28o38o48o58o88o98oa8od8oe8of8og8oh8oi8ok8ol8om8oo8op8oq8ou8ov8p08p18p28p38p48p58p6anqanransanuanvao0ao1ao2ao3ao5ao6ao7ao8ao9aoaaobaocaoeaofaogaohaoiaojaomaooaoqaoraosaotaouaovap0ap2ap6ap7ap8ap9apaapfapgaphapiapjaplapmapnapoappapqaptapuapvaq1aq2aq3aq6aq9aqaaqbaqcaqdaqeaqfaqgaqhaqiaqlaqmaqoaqpaqsaquaqvar0ar1ar2ar4ar5ar7ar8ar9arbarcardareargarhariarjarkarlarmarnarrarsaruas0as2as3as4as6as7as8as9asaasbasdaseasgashasiasjaskaslasmasoassastasuasvat0at1at4at5at6at7at8at9ataatcatdateatfatgathatiatjatkatlatmatnatoatpatqatrattatvau0au2au3au4au5au6au7auaaubaucaudaueaufaugauhauiaujaukaulaunauoaupaurausautauuauvav1av3av5av6av7av8av9avbavcavdaveavfavgaviavjavkavlavmavoavpavqavravuavvb01b03b05b06b07b08b09b0ab0cb0db0eb0fb0gb0hb0ib0kb0lb0mb0nb0qb0rb0sb0tb0ub0vb10b11b12b13b15b16b17b18b19b1ab1bb1cb1db1eb1gb1ib1jb1kb1lb1nb1pb1qb1rb1sb1tb1ub1vb20b22b23b24b25b26b27b28b29b2bb2cb2eb2hb2ib2jb2kb2lb2pb2rb2sb2tb2vb31b33b34b36b37b39b3cb3hb3ib3jb3kb3mb3nb3ob3qb3sb3tb40b41b44b45b46b47b48b49b4ab4bb4cb4eb4fb4gb4hb4ib4jb4lb4mb4nb4ob4qb4rb4sb4tb4vb50b51b52b53b54b55b56b57b58b59b5ab5bb5db5eb5fb5gb5kb5lb5nb5ob5pb5qb5rb5sb5tb5ub5vb62b63b64b65b66b67b68b6ab6cb6db6eb6fb6gb6hb6ib6jb6lb6mb6ob6qb6rb6sb6tb6vb70b71b72b74b76b78b79b7ab7bb7cb7db7eb7fb7hb7ib7jb7kb7lb7nb7ob7pb7qb7rb7sb7tb7vb81b82b84b85b86b87b88b89b8bb8cb8db8fb8hb8ib8jb8kb8ob8pb8qb8rb8vb90b92b93b94b95b96b99b9ab9bb9cb9db9eb9fb9gb9hb9ib9jb9kb9lb9mb9nb9ob9pb9qb9rb9sb9tb9ub9vba0ba2ba4ba5ba6ba7ba9baababbacbadbaebafbahbajbakbalbanbapbarbasbatbaubb0bb1bb4bb7bb8bb9bbabbbbbcbbdbbfbbhbbibbmbbnbbobbpbbqbbrbbsbbvbc3bc5bc6bc7bc8bcabccbcgbchbcibcjbckbclbcmbcnbcobcpbcrbcsbctbcubd0bd1bd2bd5bd6bd7bd9bdabdbbddbdgbdibdjbdkbdmbdnbdobdqbdrbdtbdubdvbe0be1be3be4be7be8beabebbecbedbeebefbegbehbeibejbelbembenbeobepbeqberbesbetbeubevbf0bf1bf2bf3bf4bf5bf6bf7bf8bf9bfebfibfkbflbfpbfrbfsbftbfubfvbg0bg1bg2bg3bg4bg5bg7bg8bg9bgbbgcbggbgjbglbgnbgpbgqbgsbgtbgubgvbh0bh1bh2bh3bh4bh6bh7bh8bh9bhbbhcbhfbhibhjbhkbhlbhmbhnbhpbhqbhrbhsbhtbhubi0bi1bi2bi3bi4bi5bi6bi7bi8biabibbiebigbihbiibijbikbipbiqbisbitbj0bj1bj2bj4bj6bj7bj8bj9bjabjbbjdbjebjfbjgbjhbjibjkbjmbjpbjqbjrbjsbk0bk1bk2bk3bk4bk5bk8bk9bkbbkcbkdbkfbkgbkibkjbkkbkmbkobkpbkrbktbkubl0bl1bl2bl3bl6bl7bl8bl9blablbblcbldbleblfblgblhblkbllblmblnblpblrblsbltblublvbm0bm1bm2bm3bm4bm5bm6bm7bm9bmabmbbmcbmdbmebmfbmgbmhbmibmjbmkbmlbmmbmnbmobmqbmrbmubmvbn2bn3bn4bn7bn9bnbbndbnebnfbngbnhbnibnjbnlbnmbnnbnpbnqbnrbnsbnubnvbo0bo9boabobbocbodbogboibokbolbonbopboqborbosboubovbp1bp3bp5bp6bp7bp8bp9bpdbpebpfbpgbphbpibpjbplbpmbpobppbpqbprbpsbptbpubpvbq0bq2bq4bq5bq6bq7bq8bq9bqabqcbqdbqebqfbqhbqjbqkbqmbqnbqobqpbqqbqrbqsbqtbqubqvbr2br3br4br5br8brabrbbrcbrdbrfbrgbrhbrjbrmbrobrpbrsbrubs1bs2bs3bs5bs6bs7bs8bs9bsabsbbscbsdbsgbshbsibsjbskbsmbsnbsobspbsrbssbstbsubt2bt4bt5bt7bt8bt9btabtbbtcbtfbtgbthbtibtjbtkbtlbtmbutbuvbv0bv1bv2bv3bv4bv5bv6bv7bv8bv9bvabvbbvcbvdbvebvfbvgbvhbvibvjbvkbvlbvmbvnbvobvpbvqbvrbvsbvtbvubvvc00c01c02c03c04c06c07c09c0ac0cc0dc0ec0fc0kc0lc0nc0oc0pc0qc0rc0sc0tc0uc0vc10c11c12c13c14c15c16c17c18c19c1ac1bc1cc1dc1ec1fc1gc1hc1ic1jc1kc1lc1mc1nc1oc1pc1qc1rc1sc1tc1uc1vc20c21c22c23c24c25c26c27c28c29c2ac2bc2cc2dc2ec2fc2gc2hc2ic2jc2kc2lc2mc2nc2oc2pc2qc2rc2sc2tc2uc2vc30c31c32c33c34c35c36c37c38c39c3ac3bc3cc3dc3ec3fc3gc3hc3ic3jc3kc3lc3mc3nc3oc3pc3qc3rc3sc3tc3uc3vc40c41c42c43c44c45c46c47c48c49c4ac4bc4c\",\n            \"creationDate\": \"0234002b0nun02ap002b002b02u8002b002b002b002b002b002b002b002b0lad002b002b002b002b002b002b002b0eq9002b002b002b02li02fs03ii002b002b01or002b00lk00nc00ks002b002b002b002b03ii0nr0002b002b002b0234002b023403ii002b002b002b002b002b002b0ir8002b002b0234002b002b002b00lk002b023403ii002b02sc00qa002b002b002b0234002b0h9j002b002b002b012m0o110lcu002b002b002b002b0bhp002b002b002b002b012k0lad014d002b01bu002b027k002b03ii002b122r002b002b002b00sr00mn00pt046400pi00sr02bs00kh00md0o38002b00nj0c4t002b0o500234002b00mu0lad002b002b0234002b002b002b002b002b02tf002b002b002b0472002b02fs0lad0lad002b00nc002b00nu002b04f3002b002b002b00o8002b002b0nrc002b002b002b00o800mn002b0hlm002b002b002b002b023409f2002b03ii002b08ic002b08ic002b0234002b002b002b002b002b002b00o800mn00l600mn02c3002b002b002b02340234002b002b002b077o002b002b02r9002b0nm6014d002b002b002b0234002b043e002b002b002b002b05gr002b002b002b0lad0234002b03ii002b002b002b002b0lad002b002b0ocg002b002b0234002b002b0lad002b002b002b002b0234002b002b002b0865046n002b00o800of02b7002b002b002b0lad082403ii046k071k002b002b002b0o1d002b00sr00mn002b03ii017l014d002b002b002b002b002b0lad027r002b06g40mf4002b002b002b0qrj002b00l600qn0lcu00mn002b002b0b81002b02340o0q0p0g002b002b0234002b002b002b002b0123002b0arg002b0lad039n0234031k03450234002b002b002b002b002b002b00tn002b002b002b002b002b002b002b002b002b002b02r902ap03ii002b002b002b002b0nss05jg002b002b002b002b002b03ii002b002b002b002b002b002b002b002b002b02h802lu00nj00lk02340529002b042i02340234002b03ii0234023404av002b002b0lag002b002b02340234002b002b024v00l6002b0234002b0h4h01bu02li0234002b002b002b002b06us002b002b05kq002b002b07lk06tb002b002b002b002b02ut002b0234002b002b002b077o002b002b023400k3002b06060lad002b002b002b002b002b002b0234002b002b07lk0lad002b002b002b002b002b00o800sr00kh02c3002b002b002b002b0kn0002b0lad002b02ap0234002b002b002b002b002b00pi00nj017l02c3002b002b0dbv0fso002b0361002b00lk00pt02bs00j700md00md00lo00kh02ap02340bqo03ii002b002b002b002b002b002b002b002b00md00mu00mu002b031k0np6002b002b002b002b002b002b002b002b002b02r9002b0eel0234002b002b002b04ec1i8n002b01bu002b002b045k002b002b002b002b002b0lad0234002b0234002b002b002b002b0234002b002b002b002b002b002b002b002b002b00nc00js002b002b002b002b0eer002b002b002b002b002b002b002b002b002b002b002b002b002b002b0472002b002b0lad002b002b00l6002b023403ii02en067u03ii011l03ii03ii002b00md002b08l8002b0234002b0ocg0470002b03ii002b002b002b002b002b0lad075l002b002b002b002b002b02bs00nj00mn00l30472002b002b002b002b11u8073q002b00kv00qa002b002b0234002b00nj00nu00nc00mn014d0456002b002b00of00o800ks00pt00pt00md002b002b00mn00md0c70002b002b002b002b08t4002b01520b09002b002b046h002b002b0234002b002b002b002b02sj00lr002b002b0234002b00o800of00tn002b002b02t0002b002b0lad002b0gil002b002b08li002b0o5n002b002b0234002b002b002b002b002b002b002b002b002b002b002b0g4u002b002b0234002b03ii002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b04nr002b002b002b0lad002b002b002b02h8002b002b002b002b002b0lad002b00nj00lr002b0nss002b002b002b002b002b02u4002b0401002b002b07rg002b002b03ii002b0lad002b02c303ii002b0hu0002b024f002b002b002b0ael0234002b0lad002b002b002b002b002b002b002b055509dk002b02340234002b002b0kti002b002b002b002b00qa05mq00nj00qn002b002b002b002b002b0pq80lad0dbv002b002b002b02h800pi0bpl002b01pf002b002b002b002b00mu002b002b0o7300o800pi02vi002b002b00of002b002b002b002b026408a3002b08bp02ut002b002b0472002b002b002b002b002b023401pf002b002b002b002b0234023400o80234002b05on05on002b0v40002b002b002b002b128712nn002b0nve002b002b002b0grv002b002b002b002b002b02340234002b02li002b002b03ii002b0lad002b002b002b002b002b002b002b02h802n3002b0234002b0o3p002b002b002b0234002b0lad002b002b0o5o0lad03fo002b06ub0lad0o5e0lad023408dr0lad002b002b002b002b002b002b0uu9002b00sr0o20002b00nu002b002b002b02sl002b0nss002b002b002b002b0234002b002b002b02s9002b0lad002b002b0o52002b024s0234002b03i4002b002b002b002b0lad002b002b002b002b002b002b002b002b08ic002b002b002b002b002b03dc002b002b002b0234132902s713c507vf00sr002b002b0234002b002b002b002b002b002b002b002b002b00mn002b002b002b002b002b002b002b002b002b002b002b002b0vue002b002b002b0a9b002b0234002b002b031k002b029t023400mu002b036o09f20c4m002b002b002b002b002b002b0o3q01p2002b0lad06pa002b03vi002b002b002b002b002b00l6017l0lad002b002b0lad002b002b002b02tf06ub002b002b0234002b002b002b002b002b002b002b002b002b002b0c4803ii0lad08ej0inh002b002b002b002b002b0lad002b00ks0lad023402340lad002b002b0b0905qt00pi002b002b002b002b002b0lad0nk4002b002b002b002b002b002b002b01uo023402340861002b002b002b002b002b0234002b002b00nu00mn00q0002b002b002b002b002b002b002b002b002b002b002b002b0cpl002b002b002b00of00sr048q002b002b002b002b002b002b0234002b02c3002b002b002b002b02b700lk045k002b00md00kh002b002b002b00q0002b017l017l00kh0o8p02c3002b002b0lad002b017l002b002b002b002b02340lad002b002b002b0o7d002b02bs002b1055002b002b0234002b089v002b002b002b00nu00tn002b02b7002b002b03ks0bvb0234002b002b002b002b00qn00of02340234002b024f002b002b0lad002b002b0234049q0lad02340lad002b002b0234002b002b00pi00mu0675002b002b002b002b002b00q003ii0234002b002b03ii002b002b002b002b02vi002b02li08te002b002b002b0a3600nc01bu002b0ffl002b002b002b00nj014d00q0048q002b0can03ii002b002b002b002b002b023405mg002b002b13ie002b08cc03ii02vi002b0o7j002b002b002b002b002b02ap03ii002b0n0d002b0g4u002b002b002b002b002b002b002b02en002b02fs0fh7002b00q0002b02mu045603ii07lr002b03ii002b002b002b00l6002b0lad00kh00nj0nub00ko002b002b002b002b02bs002b002b0lcu002b002b00sr017l002b00md002b0lad12jh04pa002b002b02t00nse002b002b002b002b03ii00of00js00mn00pi002b002b02340rf2002b0234002b0152002b002b002b002b002b002b002b002b002b002b002b002b0ffl002b002b002b002b002b002b002b002b002b0lad002b0o0q002b0234002b03i4002b002b002b02bs002b0h9j0lad0nu9002b002b002b02tf002b002b002b002b002b002b002b002b002b02ig002b00nu00qa047208br00nu00sr049c002b002b002b02340c4m002b002b002b002b002b0234002b002b002b0234002b002b002b002b0lad002b002b002b03vf002b002b002b002b002b0ceo00mn02c7002b002b002b0b4h02tf02rb02bs0do502h8002b0q3700nj00qa002b023403dc00mn002b002b002b002b002b002b0bi0002b02ut002b00nj02c802li002b00nc00l600nu00pt02li002b02li023409mc00pt002b00l600l6002b002b002b002b002b002b002b00qa00qa002b03ii002b002b002b08ic002b002b067102c3002b04uc05on0ugn002b002b002b002b002b0n0d002b03oo0bkp00q000nu00mu002b01kl002b0234002b002b002b0cl700sr07mb0rc8002b00pi00nc002b00k3002b0eke00pi02tf002b002b002b02340nm600nu00nc00of00nc02tf002b002b002b0c4803dc002b002b002b002b002b00lr00tn0234002b00sr0234002b0ceo002b00o80152002b002b01j2014d002b06e502340234002b0234002b0o9g002b00o8002b002b002b013700nj002b0234002b002b029t02340no1002b002b002b002b002b08bp002b002b0q3700lk00qn002b00sr014d002b05dl002b0lad002b002b00nu00ks00pt00l602en002b013f00md03ii002b04i10234002b05l00234002b002b002b002b002b00nu002b002b002b0urg002b002b02tf002b002b002b002b0jb800o800qa01bu02fs002b002b002b0o7d002b002b002b002b03o2002b002b002b002b002b002b00nu00md069100l600sr0lad002b002b002b0ntu00k30lad09f20lad03th08j2002b002b0bn4002b002b03ii002b002b002b0o3o017l002b00l600l60ag500md02ap0lad02c3002b03ls00of013j00js00q002bs002b002b002b002b002b002b002b002b002b03ii002b0o7n002b0aqf03c5002b002b002b002b002b002b0557002b0lad002b00nc002b002b02in00ks047p0ihg002b03ii0o01002b002b002b002b002b00qa0g8i002b002b002b00mn00nu00pt002b00mn00lo06ku002b002b002b002b002b00q000mn00nu00of00nc00qa00pi00nj00l300mu00tn053r002b036o02li02ap002b03ii002b002b00sr002b01or002b002b00sr00sr02340epj002b002b002b0b21002b002b002b046k03so07n8002b002b002b00l600qn002b002b002b002b002b002b002b002b04ph0cf3002b046h00l3002b002b00qa002b02bs0lad002b002b002b002b0lad002b0b4o0234023402c3002b023403oq0aep0lad0lad02s900q0002b002b0lad002b002b02li002b00of00of00sr02bs03ii002b0b75002b002b002b002b02340151002b013f00l6002b00o802tj002b002b002b002b00o800md00l600qa00mn03ii03ii00lo00sr002b002b002b0234002b0234002b002b002b002b05aj002b002b002b01pf03ii002b0a4q00mn002b002b002b002b002b002b0152002b002b023405so002b002b02340234002b02li002b03mr00mu002b00of00pi002b002b002b02t0002b002b002b002b002b093i002b002b024s00of00nu00q000o8002b00md002b002b013700pt06dd00l302bs002b002b0oaj002b079n0234002b002b002b002b002b002b03ii002b002b002b0lcu002b002b002b002b002b00of03cc002b02t0002b002b002b002b002b002b027k002b0234002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b002b002b07bj002b023401od00pt002b002b002b002b002b002b0lad068m002b002b023414f806q6002b002b017l00pi0234002b02340lcu002b002b0hu0002b0lad00md00nc00mu02c3002b00o800lk002b002b002b002b002b002b04k60eol0234002b002b002b002b03ii002b002b002b002b002b002b002b0234002b002b002b002b002b02340lad002b08ah02lf002b002b0o69002b002b002b002b0lad02bs02b7002b0d9i0v4n002b002b002b002b002b002b10i60lad00sr00qa002b002b03dc02en002b00o8049c002b002b0234002b002b002b002b002b002b002b002b002b0lad002b023400sr09a4002b002b03ii002b03ii002b014d014d002b059303ii00lo00nu00j7002b002b03ii002b0lag002b03ii002b002b002b02340234002b002b0lad00nc002b0lad002b00tn002b002b002b054j0nlr002b0234002b002b032802s90234002b002b0ksm002b002b0234002b002b002b0mem02fs002b0bhp002b002b00nu00k302en002b0ntp0bnq002b002b002b002b0v3f0qiu002b002b002b03ii0gim002b002b002b002b002b002b0lad002b03jv00lk00tn002b12an0123002b002b0234002b002b02bs002b00sr024s02bs03ii002b002b002b002b002b002b002b002b002b0kt8002b02340c410234002b0nrq002b002b002b00pt02li0o5e08hk0bk6002b0nm8002b023400lk00nu0i150234002b002b02r901v4002b002b002b002b0234002b002b002b002b002b0234055r06rq002b002b002b002b002b002b002b002b002b002b02s8002b002b06rg023403ii002b02340234023409l600mu00mn002b03ii002b00lo002b002b002b00nc00nu002b03ls0lcu002b002b002b002b023406hv00md045t002b023402sg0205023403lh002b002b0234002b002b002b002b002b002b0lad002b002b002b002b002b02fs02hs0o38002b002b002b002b002b002b00o80lad02s5002b002b0lad05on002b02340bmi00l600sr002b0152002b002b002b002b002b002b002b00of01bu02ap0234002b00q0002b002b038i03ea002b08e80234002b002b002b002b002b002b002b0ag5002b002b002b002b002b0234002b002b0o38052j002b0bnq002b002b002b002b002b002b023406iv0234002b002b002b00mn002b0l0b002b002b002b002b002b002b0eq5002b002b0aod0lad002b002b023400mn002b002b002b11o2002b002b002b00md002b03o2002b002b002b00lk00fa002b002b002b002b002b0ael0o1s002b023403th002b002b026s00mn002b002b0vc6002b002b126m002b0lad12jp0nog0lad0234002b002b0apg002b002b002b002b002b002b002b002b002b002b063a002b002b002b002b0lad002b02l1002b002b002b00jl002b002b05ha002b00nj00mn002b03ls03ls002b0bgb0234002b002b002b002b002b0lad0lcu002b002b02340234002b002b0lcu0fs40lcu0234002b002b002b0234002b08c9002b002b002b0371002b002b002b002b0ekl01pm002b02li002b002b002b002b02n2002b002b002b0lad0234002b0lad002b002b002b002b002b023412810o4i002b002b002b0nu9002b002b0lad002b12q6002b002b002b002b002b0o3802340234002b002b002b002b0234002b02340234002b002b002b002b0234002b00js002b002b002b002b0nq202fs002b0234002b002b0nnc00of002b002b049q002b02vp0234002b0lad002b002b02340o0q002b00nc00qn0be20lad002b023414v700of00nc002b04mm002b002b002b0o0q03ii0lad002b0234002b002b03oo017l00qa00q0002b002b0234002b002b002b02fs03ii0lcu02en002b002b002b002b00qa04he002b002b002b0345002b002b002b002b002b0234002b002b002b002b03ii002b002b0614002b002b002b0415002b002b0234002b00of00pi014d002b002b002b002b002b0456002b002b0lad002b002b0234002b09f20lad0lad002b01kl002b02ap02b700mn01330uuj03ii02am002b002b01or03ii002b10ek03mr089s002b002b00tn0nhk00sr00of00sr00mn00mu01qv0361002b002b032l002b002b0234002b00mn00m6002b002b0234002b002b02nu002b002b002b002b002b002b002b0lcu002b00lo00nu0lad002b002b0234002b0lag002b0vtt002b0lad002b002b00nu08bp0234002b002b002b023400qa00mn002b002b02340234002b00ko00j7002b002b0234002b002b0c48002b002b002b002b002b00sr0234002b002b00nu002b002b002b03ii00e3002b002b002b002b0lad002b02340234023402340cji00sr0bnq0ili0lad002b002b002b002b002b00nc00nu02b702b7002b013300q00aef0234002b0234002b002b002b002b002b002b002b04c200nj015202am06hh00nc00pt00pt002b002b002b002b002b03ii002b0lad06d500tn002b002b002b03f800nu00q000q000q002ap002b08ul02ut002b0234002b002b002b0ob9002b002b002b0234002b002b002b03ii002b002b002b002b002b002b023403ii0lad002b0ksm002b002b002b002b002b002b002b0nvn002b002b10i10o11002b0ctn002b02tq002b002b00mn017l00lo002b002b03280234002b002b002b0lad00qn002b002b002b002b002b002b02tf03ii00of002b002b002b046k002b002b02bs0v4t0234002b002b10pg002b002b0234002b002b029f002b0k46002b0234002b002b002b0234002b002b002b002b002b002b00qa0152002b0234002b002b002b002b0lad002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b002b03ii002b002b002b06k50nmu002b023402bs09oh02li00ks002b0234002b03ii002b002b002b002b04io002b002b049i002b002b0ft100sr03ii002b002b002b002b002b002b002b00sr002b002b002b002b002b002b002b002b00mn002b002b002b0234002b002b00nu00q0002b002b002b002b002b002b002b13bh01u2002b002b002b002b002b002b002b002b002b159o002b002b002b00nc00ko00qn00pt00l600pt002b002b0lad002b002b002b002b00nu002b00nu046k002b002b002b047203i4002b0lad002b002b002b0lad059i02en002b002b03th002b002b002b0234002b002b002b002b002b05la002b03ii08v6002b002b002b0lcu002b0jng03dc002b002b002b149j002b002b0234002b002b002b002b002b002b0lcu0lcu03ii002b03ii002b002b00lo002b002b0593002b0nq6002b002b002b02340imk002b002b002b002b0ihi002b00nc00mn002b02r9002b002b002b002b002b002b002b002b002b0234002b03th002b0lad0234002b002b02c30v4n07qs002b002b002b002b02lj09mc002b002b002b002b002b002b08ee002b002b002b002b002b03ii002b002b002b0234002b02fs002b00qn00nc01370234002b002b002b002b002b002b002b002b03ii002b002b002b0234002b00nu002b002b002b002b002b002b002b002b002b002b002b002b002b002b02li0rd006t803mr002b002b002b002b002b002b002b002b002b002b06c70234002b002b0lad01or0me00o7k12nn00o8002b00of002b002b002b002b002b002b046h002b03dc0nvj002b0h4h002b002b002b0c77002b002b002b0456002b002b0lad002b002b002b00o800nu031400qa00sr00sr002b002b002b0234002b002b0o3p0234002b043e05r40pbl002b002b002b002b002b002b002b002b002b0234002b002b002b002b002b002b002b03ii0gil002b01od002b0mdv002b06pv002b002b02tq00nc002b0lad002b002b002b0234002b002b002b002b002b0lad002b002b03dc002b002b002b0lad0lad002b002b00nu002b002b002b023400nj056l0d0i002b0lad002b002b0472002b002b002b002b00mu002b002b002b0d0i002b002b0lad002b002b002b002b002b0234002b03ii002b002b002b0pk10234002b002b023400pt00mn0lad002b002b002b057i002b03oo002b023402340lad0lad002b002b0nth002b002b0lad02340frj00qn002b002b002b002b0234002b0234002b002b002b002b02kp0hfh002b002b002b002b02t0002b002b002b002b002b002b00nj00md002b002b002b002b002b002b0cqt002b03np002b0234002b10pg002b002b002b002b002b002b002b0lad0cji002b00j7002b002b02u40do5049q002b002b135m002b0234002b002b02ut0234002b002b00nj00md002b0472002b002b026o002b002b002b002b01bu002b02uj0mfe002b002b0lad002b0lad002b00qa02sg002b036o069g002b002b00of00kv002b002b002b002b002b05nk002b002b002b08g601p2002b002b002b002b002b0lad002b02tq002b002b0234002b02fs002b002b002b00of04ec00q00234002b0234002b02340234002b00sr09f200q000mn002b002b002b002b002b002b002b02h802bs002b03ii00nc08cc002b002b002b002b002b002b03be00q0002b02h80a0s002b0ccs002b0nss002b002b002b002b0uus002b083f002b002b002b002b0ufs0lad063h002b02340234002b0lad002b002b002b002b002b002b002b002b002b002b002b00ko002b002b002b002b0o1d002b002b02lm002b0nuo03ii0c480lad002b002b002b002b002b00lk00md00md00l302rh00q012lr002b002b002b002b023402tt02c3002b002b0o28002b0234002b05ha002b002b002b002b02sl08g6002b002b0c9n0o3h02340lad002b002b002b002b0hfh002b002b002b002b0ntf002b0234002b0lad002b002b002b002b002b002b002b002b002b002b00of00qa002b002b002b002b002b002b023402um002b0234002b002b0234023403ii002b002b002b002b00mn00nu00qa048t0biv02bs02c3002b002b002b002b03dc03th002b0hgn002b002b002b002b089h0bvb002b002b002b02340lad002b02en002b002b002b06e5002b02li00mn0lcu002b002b002b0v7a002b03ii0lad002b002b03th002b01pm002b002b0234002b002b002b002b002b002b002b03ii002b02340lad023400mu002b0152002b00md14fr1288002b002b002b02sg002b00l300pt0472002b002b002b002b002b002b00of0234002b02h802340234002b137a002b002b00lk00qn02on00q0002b002b06id002b002b002b0234036o002b002b002b00l6002b0lad002b002b08d9002b002b002b002b002b002b002b11o200sr002b044v002b00l6002b0lad00sr00js00mu002b002b0lcu04ih002b02rv002b02li002b08dr02340234002b0234002b002b002b002b002b002b002b002b0qu4002b002b0lgt00l600nc017l002b002b002b0234002b0lad002b002b002b002b002b002b0cec0234002b0lad002b002b002b002b0ggd032l002b002b002b0234002b002b002b0234002b002b002b002b002b002b002b002b01pf0234002b002b00qa0lad002b04d00234002b002b0lad002b0lad002b002b0lad002b002b0234002b002b002b002b002b002b002b002b002b04ec06ku002b002b00mn00nu002b11i9002b002b023402s700nc0152002b06ju002b002b02fs00mn00mn00o800nu0472002b002b0234002b00tn036o002b07fu07kv002b002b002b002b002b002b002b002b06id002b002b0lad002b023405la002b02h8002b0o1r002b026o023400sr00l600nc002b002b002b002b002b002b002b0fbd0aqf002b002b002b00nc002b002b002b0lad002b002b002b002b002b00o800mu002b002b002b002b002b002b002b002b00o800md00mu00sr00md00md02h8002b002b002b002b002b002b002b00o8002b002b002b002b002b002b002b0lcu002b00md00pt0234002b002b002b00nj002b002b0371002b0lad002b002b002b002b0c4t002b0lcu0bf500lk01370234002b002b002b002b002b002b002b0lad002b0234002b002b05dl03jv002b078r002b00o800md00pi002b002b002b002b002b025d012m00pi047700mu002b03dc002b01370o1s002b002b002b002b002b00md002b002b00sr02c30234002b002b00l600pi002b077o002b002b002b00q0002b030b00nj06pa0v4n002b02340234002b00o800o8061m002b002b002b03ii002b002b002b002b002b002b002b0234002b0ge902ii002b002b03f700nu00nu002b002b002b03ii00sr00lk00q002ut03ii00nu00mn02bs002b002b002b002b031a02340234002b002b002b002b0dda002b002b002b0ntb00o800mu0kov002b0nu4002b03ii002b0bf500nu00kl00q000q000jl00q0002b03ii002b00sr002b002b00md00q0002b00nu002b01bu00md002b002b002b002b002b002b02in002b00kl002b0ekj002b002b002b0234002b002b002b002b07ii002b002b002b002b002b049c002b002b002b002b02en01p2002b002b002b002b03ii015200k303ii00nu00md00qa00sr03ii13m502nb00nq00mn07jp046k00pi002b013300mn002b002b002b00q0002b00mu002b0265002b002b002b002b002b002b002b002b002b002b03ea002b002b002b002b002b0g5h002b002b002b002b002b067j00pi05mg002b07kv0234002b002b002b002b002b0bkp002b00q006tb002b014d0bqk03ii0234002b002b002b002b024s03th002b00o800sr002b0lcu002b002b002b036101fe002b01or002b002b0hlm002b03be0234002b002b0lad023403ii002b002b002b03ii002b03oq002b00sr00pi03ii002b00nu00of00q0013300nu002b0234002b002b0b6n002b0234002b002b00sr002b0lad0lcu02h802lu002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b0lcu002b00pt00nu02sj002b002b002b09dk0a5m002b002b002b002b00lo00qn002b01pf002b0234002b0234002b002b02c3002b0lad0lad023401og002b002b002b0ekj057i002b002b002b002b0lad002b002b0o9g03ii05k9002b0234002b002b002b03ii002b002b03ii002b03ii023402ut002b002b037103ii002b002b002b002b002b002b02no002b002b002b002b002b002b0234002b002b00pt002b0234002b002b002b00nu00q0002b002b002b002b002b00pt02340lad02bs02c300nc002b002b002b0bpl0lad002b002b002b002b00mu002b03ii002b0o52002b002b002b0lad002b0lad0lad00l6002b00lo00sr0234002b01p2002b02bs02b7023400nj01v400mn03dc002b002b00js002b002b002b036o002b002b002b002b02hc002b002b002b002b002b002b12jt002b002b0234002b002b002b002b0234002b002b002b002b002b002b002b0152002b002b00mn002b00jl002b002b03au002b00pi047h00pi00mn00of002b002b002b00pi002b002b00qn00nc0nsj0afm002b002b002b002b002b002b00o800sr002b002b00of002b002b002b002b0ccs03ii002b002b002b002b00q0002b002b002b002b023400qn00pt0lad002b002b002b002b00kh002b023406hv002b002b0gp2002b002b00nj00sr0152002b046n002b002b0234002b002b002b002b002b002b002b023400q008dr002b002b002b00mn00l6002b0o7i03ii002b002b05930lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02340me700qn00nj02bs0lad0234002b024g0lad002b002b0hcc002b002b02li0234002b002b002b0bf8002b002b002b002b002b002b002b03th002b002b002b002b002b00tn00ks002b002b002b0lgt002b002b002b002b002b00md00of08u00o8r002b0234002b002b002b002b0234002b002b002b0j35002b0234002b002b00lk00nu0o6g002b002b12js0gim002b002b002b002b002b131i002b00pf00nc00mu002b00j700mn00sr02c3002b002b002b002b03ii002b03ii002b002b002b002b00nc00tn0234002b00js00js002b002b002b00nc00l30cec002b002b0lad0234002b0lad0234002b002b04d00lad02me002b002b03ne002b002b002b002b002b002b11i9002b0234002b002b002b0lad002b002b002b06pk002b002b01pm04fq002b002b002b002b002b002b002b0603002b02340234002b0oba002b02bl002b002b0234002b002b0133002b00qn03ii05bf002b002b002b0234002b0123002b002b0b4h002b080e02c300l300mu00q0002b002b002b002b002b002b02340lad002b0234002b002b002b002b002b05la002b0lad002b002b03cc002b0lad0lad002b002b00q0002b002b002b002b002b002b002b002b02340lad0do5002b12q1002b002b002b0lad002b002b002b002b002b002b002b023400mu00nj0c60002b0o7j002b0o710o75002b002b002b002b002b023406hh02fs002b002b002b002b00qn02bs0c83002b002b002b002b002b002b002b002b002b03dc02kv002b0mg6002b00nu002b002b002b00nu00qn002b002b02t8002b002b002b002b073m002b00nu00qn0234002b002b002b0nvn02bs002b0o9c049q00lk06ub002b002b00nj002b14dh002b00nc002b00of00lo002b002b0234002b002b023400ks01mu01p203ii002b002b002b024k002b00sr00ks00pi002b07lu002b002b002b002b002b002b002b00js00mn00mn002b002b002b002b00l600qa002b002b002b002b002b002b002b002b098u0bmi002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b00l600kv02s80fso0alb0234002b0234002b02c0002b03f8025p02lt002b0lad002b0o3803ii002b00js00lk00nc002b002b002b002b002b03mu002b06d5002b00o8002b02c30lad002b00md00mu002b0314002b02bs002b002b002b0234023405pt002b03ii002b02b7002b03rh0bhp002b002b002b061t002b02li002b002b002b002b002b002b002b002b002b002b002b002b0c700234002b002b002b002b0234077o002b03ii002b002b029t1492002b002b002b002b002b002b002b057a002b002b002b002b12bt002b002b002b002b002b002b0234002b002b0234023403ii002b132300nc07ka002b002b002b00pt002b002b05pm002b002b002b002b002b002b0234002b03d9002b002b00o80lad002b0rla002b0o0c002b002b02li002b002b002b002b002b0234002b002b0ihg01520lad023407vf0i140234002b002b002b002b002b002b002b02340o17002b002b02340o3h002b002b002b023406i6002b002b002b002b03th07nb0qip002b00sr002b002b002b00o800lk044702h8002b002b002b002b0inh023403r40234002b002b0234002b002b002b002b00j708bl002b00of00sr0234002b002b002b0234002b02340be5061410ek002b04c2002b002b0o8g002b002b0234002b0234002b12an0lad002b002b002b002b023402340234002b0234002b002b002b00kv02c3002b002b002b002b0234002b02rv02c3002b0234002b002b002b002b0o0q002b002b0c60002b002b0234002b002b002b002b002b00nu0d9i00qn00sr03i40gf2002b00q000qa02c30oc900kl00qn0234002b002b0234002b002b0lad0lad002b002b0234002b002b002b036o002b002b002b002b002b023406c7002b002b068m06i606gi002b0o3p002b002b00mn00mn002b002b002b002b03ii002b002b002b03ii0o1r002b0lad002b002b002b0v6v002b0o8r002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0v35023400js002b002b002b03vf002b002b002b0234002b02h801bu02c300l302340lad002b002b002b002b0lad002b002b002b002b0b81023401or00mn002b002b00of002b002b002b002b002b002b002b002b002b002b002b002b11io002b002b002b0234002b002b0234002b002b002b002b02c3002b002b0be5002b002b023401uo02li002b0a6m002b002b00kh01or002b002b002b02340ntb002b002b0lad023402tf0234002b0234002b002b002b00o802md0lad002b002b002b0kem0o2b002b002b002b002b002b03ii002b002b002b002b002b002b0m2m00qa02vi002b0234002b051o0lad002b00q000l604ae0234002b002b014d0lad03ii002b002b002b03mr08dr014d002b002b002b002b0o1b002b0b75002b002b002b03ii002b002b028o00l60lad002b002b00o80ajn002b002b002b00mu0jbj02li002b002b002b0234002b002b002b002b03oo02bs00tn002b02vc002b002b002b002b002b002b002b03dc00md03dc05on002b002b002b061m00pt002b002b002b002b08aa03ii002b07i1002b002b002b002b002b002b002b0gp2002b0ha5002b00qn03ii002b00nj00md017l002b002b03ii002b03ii002b002b002b06sf002b03ii002b002b002b002b002b002b002b01or002b03ii002b002b002b002b002b002b002b03ii002b002b046k002b05ct002b002b002b002b002b002b002b002b00pt00pt089s00mn00l600pi002b002b002b002b002b0314002b002b002b0lad0nrg002b0mdv002b02li002b002b002b017l002b002b002b002b002b03ii00nu002b002b002b08ee00qa00nu002b0lad002b002b00sr00mu02h80o0g002b0lad002b002b002b06pa05o1002b002b0lad002b0lcu0lad023403ii00sr00qa0h9j00qa00mu02bs0234002b002b002b002b002b0lad002b002b002b0234002b002b002b0g90002b002b002b002b00l600o800kh00pt0234002b002b002b002b02c3002b002b0nm100pt02ut002b002b002b002b002b0234002b002b07fu05s8023402340lad023402c306gi0lad0675002b03ii0234002b023403f80234002b002b0lcu002b002b002b002b0lad0jj80lad002b002b002b002b00nc00nu0pto013302li002b0234023403ii002b002b00qa0lcu0lad002b002b002b002b002b002b002b002b00o800ks00of00qa02tf00nc002b00pt002b002b0234002b002b002b002b00md002b002b00q000mu002b0v4l023401330152002b02bs002b0234002b002b002b0lad002b002b002b002b002b002b0bs206jk02mh002b00kl0b5h023402tq002b002b012m015203ii002b00nc002b002b0lad002b002b002b00of002b002b002b002b002b023400lk00md029t0u810uma002b002b0o63017l01bu00l605o1002b0234002b002b0lad0lcu00mu002b01kl002b00nu00mn002b002b01df00mn00pi00l3036100qa00nj03cl002b0cs8013300nc002b002b00o800md067502fs02c300nc00qn002b002b002b023400mn015200nu03dc0234002b00nc00j700mn048f0o2b00nc002b002b002b0234002b0lcu002b00nj131j002b002b002b002b0123002b0lad03mr002b0aod00nj00lk014d01520m0c002b002b002b002b002b00o800nu00pt00lo029t00l300pi00lo00pt017l00mu03th002b0234002b0234002b07lu002b002b002b00q000pt0234002b002b0m0c03ii06g40234002b002b002b002b0cf3002b002b0234002b00nc002b0bgv0c4801df002b00mu002b027k002b00mn00nu045k00nc023400ks002b02340nvn002b002b0lad00l6030b002b002b002b0lcu002b03ii002b002b002b002b00qn00nu00l3002b002b00m602en002b002b002b0d9s0lad0lad00tn013j00nu00nc02ap00mu02c3049c023402li02fs0234002b02sj002b002b00o8015200l3002b00mu002b00sr00n800pt013700mu002b002b00qn00mn00md02b70lad0o7h002b00tn12nn00sr002b00nc00l600j700sr00sr0gs50i62002b002b02h813dj00lo00of00l600mn0nu9002b0lcu049i002b02h800mn00nj02rv002b00tn002b002b0o0i0234023408ej002b023403th002b002b002b02sj0234002b002b0234002b015200kh02en03ii00mu002b00nu00lk002b002b02ig00k30234002b002b002b002b002b002b00o800nu00pt002b00of05pm00mu00kh00nj002b00tn00pt002b1iko002b002b002b002b002b00ks00pt00pt0ine0lad014d00pi017l00q000sr07so002b002b015201bu11i9002b06r9002b00of00ks00m600l600q0002b002b002b002b002b01uo002b0234023401mu00md00pi017l0v6g0mf4002b01a600pt02en00nc01370ocn02s7002b00j704720blb002b002b0234002b002b0gil02340o29002b002b0hfh0vld00nu00mu02bs076v002b002b0c7l00nu0gib00sr002b00nu014d02bs013701or002b002b002b002b002b002b08n0002b002b002b002b002b002b0o8r002b002b00mu002b0n0d002b002b0137002b002b002b002b00nc002b015200jl0q4600lk00md00nc00sr023400pt00js00pt002b02rh068m002b132b00nc00nu002b00nu00qn002b002b00pt00kh002b067c0234002b002b002b03ii02340lad00nc00nc013j00qn00lr00q000qa046k002b002b002b002b002b03mr0234002b023400nu00nu002b0234002b00nu017l0vj4002b029700pt00nu0133042802c3002b02340lcu023410lp00lk0152002b0lad06jn023403dc00pi02en023400pt0234002b002b03ii0234002b002b002b02340lad002b002b002b0234002b002b002b0lad02tj002b002b002b002b00pi002b002b002b002b002b002b002b00nu002b002b002b002b023407kl002b036o002b02bs002b00kl00lk00mn0bkp002b002b02340lcu002b0v3f002b002b00pt002b002b002b0bhp00pt0v4l002b002b002b002b057a002b00js002b0nof002b13g6002b002b0lad002b06c70c7l00nu0234002b002b02340234002b002b002b002b002b13og002b002b002b002b002b002b002b002b002b0234002b0lad002b002b002b002b002b02340234002b002b002b002b002b002b0lag03ii0lad03140234002b002b02h306ku002b002b12880lad02340lad0bgb0234002b002b002b002b14fg002b18hs0lad002b002b002b002b002b002b00of02tn002b002b002b002b0234002b002b03i4023402m3002b002b002b002b0234002b03ii0234002b002b00nu05ue002b002b002b002b00o80ahk002b002b002b002b002b002b002b002b002b00nj00md00q000kl029t00tn002b002b002b03ii002b07er01bu002b002b002b002b00pt02fs032802c30lad02tj002b02t50qbc002b002b02s9002b002b00js00kv002b002b002b002b002b002b002b02t5002b03ii0lad0lcu03ii002b18hn002b002b002b002b002b05mg002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02nu002b002b002b002b002b0npa002b0lad0ksm02340234002b00lk00lo002b002b0234002b0ksm002b02fs002b0fpn0be2002b002b002b0234002b02li002b002b002b002b002b002b0nuo002b07hj002b00l300nc023403ku03ku002b01pf0234002b002b002b002b002b03ii002b0lad002b002b00mn00nu002b002b02fs0234002b002b002b060l03so002b002b002b002b002b002b002b002b02ln02340234002b002b0lad002b002b03i4002b0234002b002b0234002b0od7002b002b002b04t4002b002b002b002b002b002b0o110o6500q000nu002b03th002b002b002b0234002b002b002b025d02mu0o38002b002b002b002b002b0lad0lad002b0234002b002b002b002b0cdl08ic002b02340lcu002b002b002b002b002b002b0lad0lad002b002b0234002b002b002b002b002b0fs4002b0lad0234002b002b002b03ii02340lad002b002b002b002b002b002b002b002b002b002b002b03ii002b002b002b002b002b0h9j002b02tq002b002b002b002b03ii002b002b002b0a6m0234002b03ii0234002b0234002b002b002b002b0234002b0234002b002b002b002b002b002b02340234002b03jv07bv002b002b0234002b002b0lcu0234002b002b002b0nvc002b0234002b002b002b002b00sr08ic002b002b002b002b002b002b02h80q2h002b14kj0lad0lad002b002b0lad0lad0234002b002b002b002b0lad0lad002b0lad00pt002b002b002b002b0bcr03ii0lad002b02mp014600nj00pt017l002b02b70lgt0234002b002b002b0inh002b0lcu0lad002b0lad0lad03ii002b002b002b002b02340234002b002b002b002b002b002b002b002b002b002b0lad054q0lad002b0lad002b002b03ii00tn08br00nu00nu002b002b05j3002b002b03ii002b002b0234002b02340o7q002b002b002b002b01bu00sr03u30lad002b002b00l600nc002b002b00nu0a6i002b002b002b002b02fs002b002b0bk6002b002b002b002b002b0kt8002b017l00md046k00sr05on0234002b02340o37002b002b002b002b002b002b02fs002b002b002b002b0234047202340mdv002b002b002b002b063h002b002b002b00md002b06hh047205di02bs03ii00nu00pi05j911es02s5002b0234002b002b002b0470002b002b002b002b002b002b0sgn03ii0o380bqk00qa00sr002b002b002b0lad002b02340234002b002b002b002b02n911bq002b002b0234002b002b06e5002b0nov002b002b0234002b0234002b002b002b002b0234002b002b0234002b12eo04q0002b002b0lad002b002b0234002b05so02u402ap002b024k002b0234002b046k002b002b08bl0234002b002b0297023400kv00kv00md02s9002b0234002b002b002b04t4002b0234002b0lcu002b002b002b12q303ea002b002b002b023403np002b03ii0234002b002b0lad002b002b002b002b002b00mn002b047202s90lad002b002b002b002b002b002b002b053r0lad02sl002b002b002b002b0lcu002b03jv002b002b002b0234002b002b0rfc03f7002b0lad002b002b002b0234002b0od7002b002b002b002b002b002b0606002b002b02tf002b002b002b002b002b0ihg002b002b0c830133002b002b0lad002b002b00o800pt002b00md0vk7002b002b00mn0nq40o110bkp002b02340lad0sdl002b002b002b002b002b0arc002b0p9h023401og03th002b03ii002b002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b0lad002b029700l600pi00tn0o9n002b002b03ii002b0oca002b13qg0gib002b01fe03ii03ii002b002b12nn03mr002b002b023403ii002b078d00mn00mu00nj002b002b002b03ii0o0i002b002b002b002b002b0ntf002b002b002b002b10740oam16bk002b054500kv00qa002b002b002b04ih002b002b04gb002b0lad002b00e6002b03i402340lad002b048f002b002b002b002b002b0234002b00of00mn03q0002b01pf0234002b002b044v002b01bu03ii04720bgb02c30lad002b002b002b07i1002b002b002b002b002b002b07s3002b002b0v6j00nc002b002b0234002b0lad0rv2002b002b002b01og002b002b002b002b002b002b03oq0lad002b002b03dc03mr002b002b002b002b002b03ii0234002b002b002b00mu0obg0ocp002b002b002b0234002b002b0234002b002b002b002b0234002b002b03ii002b00pi00md00qa03vf03jv02li002b002b002b002b002b036o002b002b02r9002b002b023400nj00l6046k002b002b002b02sj09pb08ej03ii04720234002b002b00nc00mn00tn002b0ekt0234002b002b002b002b02bs00o800qa002b03ii0314002b11io002b002b002b023406pa002b002b002b02340234002b00nu00mn00sr054q02c302340ale0lad002b002b0ntp0n880ist002b002b002b15p4002b002b002b0234002b02en0oc90234002b002b00nc00o80bqo02bs00nj02bs0ocs002b0234002b0o1d0lad002b002b002b002b002b002b002b0234002b03cq002b0lad066u00l600md00qa067c00qa02bs0cdl002b08oh002b00qn0234002b002b0234002b002b002b002b046h00lo002b08in0ajn002b002b002b002b002b002b002b002b002b002b0257002b0hlm002b002b002b002b002b002b002b002b0234002b002b0lcu02340nqr02340nnc002b002b002b002b002b002b02no002b002b002b0lad0152002b002b002b0lcu002b002b0472002b002b03ii0eq9023403ii002b024f002b002b07ql002b002b04890234002b002b02tj00tn0234002b0eei002b0234002b13c5002b0lad10va03od0234002b002b002b002b002b023403th030b02s500mn00l6002b002b002b0klc002b002b03ii002b002b0234002b002b03mr002b002b02sl002b002b02s0002b002b002b002b002b0234023402340lad03dc002b0234002b08l8002b06t8002b002b002b002b023402340234002b002b02340234073m002b002b002b162q16fk153215kj16rh170l170l16ju002b0a5m18gd18nm18om18p0180j18po180j18ps18pg17de18pg18pg17ls183q18gd195518in1a371a671a671a6719mv1a7b1a9n1ah61al51ak71atf1bi81c0c1c6j1cbi1clj1dem1dgb1dgb1dgb1e191e3f1eq41f6c1fsf1g5i1h3917f31h9u1i6t1kp81kbu1l4l1l4l1lhb1nnt1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mhd1mia1mi61mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mju1mtn1mtn1mtn1mtn1mtn1muk1n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941nap1nap1nki1nki1nki1nki1nki1nki1nki1nki1nm11noe1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1o0u1o0u1o1e1o1e1o2o1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1ocb1oc91oc91oc91oci1ocp1ocu1ocu1ofi\",\n            \"dataSource\": \"0\",\n            \"name\": \"Abano Terme|Abbadia Cerreto|Abbadia Lariana|Abbadia San Salvatore|Abbasanta|Abbateggio|Abbiategrasso|Abriola|Acate|Accadia|Acceglio|Accettura|Acciano|Accumoli|Acerenza|Cermes|Acerno|Acerra|Aci Bonaccorsi|Aci Castello|Aci Catena|Acireale|Aci Santantonio|Acquafondata|Acquaformosa|Acquafredda|Acqualagna|Acquanegra Sul Chiese|Acquanegra Cremonese|Acquapendente|Acquappesa|Acquaro|Acquasanta Terme|Acquasparta|Acquaviva Picena|Acquaviva Delle Fonti|Acquaviva Platani|Acquaviva Collecroce|Acquaviva Disernia|Acqui Terme|Acri|Acuto|Adelfia|Adrano|Adrara San Martino|Adrara San Rocco|Adria|Adro|Affi|Affile|Afragola|Africo|Agazzano|Agerola|Aggius|Agira|Agliana|Agliano Terme|Aglie|Agna|Agnadello|Agnana Calabra|Agnone|Villa Latina|Agnosine|Agordo|Agosta|Agra|Agrate Brianza|Agrate Conturbia|Agrigento|Agropoli|Agugliano|Agugliaro|Ayas|Aicurzio|Aidomaggiore|Aidone|Aielli|Aiello Del Sabato|Aiello Calabro|Aiello Del Friuli|Aieta|Ailano|Ailoche|Aymavilles|Airasca|Airola|Airole|Airuno|Aisone|Ala Dei Sardi|Ala|Ala Di Stura|Alagna|Alagna Valsesia|Alanno|Alano Di Piave|Alassio|Alatri|Alba|Alba Adriatica|Albagiara|Albairate|Albanella|Albano Santalessandro|Albano Vercellese|Albano Di Lucania|Albano Laziale|Albaredo Arnaboldi|Albaredo Per San Marco|Albaredo Dadige|Albareto|Albaretto Della Torre|Albavilla|Albenga|Albera Ligure|Alberobello|Alberona|Albese Con Cassano|Albettone|Albi|Albiano Divrea|Albiano|Albiate|Albidona|Albignasego|Albinea|Albino|Albiolo|Albissola Marina|Albisola Superiore|Albizzate|Albonese|Albosaggia|Albugnano|Albuzzano|Alcamo|Alcara Li Fusi|Aldeno|Aldino|Ales|Alessandria Della Rocca|Alessandria|Alessandria Del Carretto|Alessano|Alezio|Alfano|Alfedena|Alfianello|Alfiano Natta|Alfonsine|Alghero|Algua|Ali|Alia|Aliano|Alice Bel Colle|Alice Castello|Alife|Ali Terme|Alimena|Aliminusa|Allai|Allein|Alleghe|Allerona|Alliste|Allumiere|Alme|Villa Dalme|Almenno San Bartolomeo|Almenno San Salvatore|Almese|Alonte|Alpette|Alpignano|Alseno|Alserio|Altamura|Altare|Altavilla Monferrato|Altavilla Irpina|Altavilla Milicia|Altavilla Silentina|Altavilla Vicentina|Altidona|Altilia|Altino|Altissimo|Altivole|Alto|Altofonte|Altomonte|Altopascio|Alviano|Alvignano|Alvito|Alzano Scrivia|Alzano Lombardo|Alzate Brianza|Amalfi|Amandola|Amantea|Amaro|Amaroni|Amaseno|Amato|Amatrice|Ambivere|Ameglia|Amelia|Amendolara|Ameno|Amorosi|Cortina Dampezzo|Ampezzo|Anacapri|Anagni|Ancarano|Ancona|Andali|Andalo Valtellino|Andalo|Andezeno|Andora|Andorno Micca|Andrano|Andrate|Andreis|Andretta|Andria|Andriano|Anela|Anfo|Angera|Anghiari|Angiari|Angolo Terme|Angri|Angrogna|Anguillara Veneta|Anguillara Sabazia|Annicco|Castello Di Annone|Annone Di Brianza|Annone Veneto|Anoia|Antegnate|Antey Saint Andre|Anterivo|La Magdeleine|Anticoli Corrado|Fiuggi|Antignano|Antillo|Antonimina|Antrodoco|Antrona Schieranco|Anversa Degli Abruzzi|Anzano Del Parco|Anzano Di Puglia|Anzi|Anzio|Anzola Dellemilia|Anzola Dossola|Aosta|Apecchio|Apice|Apiro|Apollosa|Appiano Sulla Strada Del Vino|Appiano Gentile|Appignano|Appignano Del Tronto|Aprica|Apricale|Apricena|Aprigliano|Aprilia|Aquara|Aquila Darroscia|Laquila|Aquileia|Aquilonia|Aquino|Aradeo|Aragona|Aramengo|Arba|Tortoli|Arborea|Arborio|Arbus|Arcade|Arce|Arcene|Arcevia|Archi|San Nicolo Darcidano|Arcidosso|Arcinazzo Romano|Arcisate|Arco|Arcola|Arcole|Arconate|Arcore|Arcugnano|Ardara|Ardauli|Ardenno|Ardesio|Ardore|Arena|Arena Po|Arenzano|Arese|Arezzo|Argegno|Argelato|Argenta|Argentera|Arguello|Argusto|Ari|Ariano Irpino|Ariano Nel Polesine|Ariccia|Arielli|Arienzo|Arignano|Aritzo|Arizzano|Arlena Di Castro|Arluno|Armeno|Armento|Armo|Armungia|Arnara|Arnasco|Arnad|Arnesano|Arola|Arona|Arosio|Arpaia|Arpaise|Arpino|Arqua Petrarca|Arqua Polesine|Arquata Scrivia|Arquata Del Tronto|Arre|Arrone|Arzago Dadda|Arsago Seprio|Arsie|Arsiero|Arsita|Arsoli|Arta Terme|Artegna|Artena|Artogne|Arvier|Arzachena|Arzana|Arzano|Arzergrande|Arzignano|Ascea|Asciano|Ascoli Piceno|Ascoli Satriano|Ascrea|Asiago|Asigliano Vercellese|Asigliano Veneto|Sinalunga|Asola|Asolo|Casperia|Assago|Assemini|Assisi|Asso|Assolo|Assoro|Asti|Asuni|Ateleta|Atella|Atena Lucana|Atessa|Atina|Atrani|Atri|Atripalda|Attigliano|Attimis|Atzara|Augusta|Auletta|Aulla|Aurano|Aurigo|Auronzo Di Cadore|Ausonia|Austis|Avegno|Avelengo|Avella|Avellino|Averara|Aversa|Avetrana|Avezzano|Aviano|Aviatico|Avigliana|Avigliano|Avio|Avise|Avola|Avolasca|Azeglio|Azzanello|Azzano Dasti|Azzano San Paolo|Azzano Mella|Azzano Decimo|Azzate|Azzio|Azzone|Baceno|Bacoli|Badalucco|Badia|Badia Pavese|Badia Polesine|Badia Calavena|Badia Tedalda|Badolato|Bagaladi|Bagheria|Bagnacavallo|Bagnaria|Bagnara Di Romagna|Bagnara Calabra|Bagnaria Arsa|Bagnasco|Bagnatica|Bagni Di Lucca|Montecatini Terme|San Giuliano Terme|Bagno A Ripoli|Bagno Di Romagna|Bagnoli Irpino|Bagnoli Del Trigno|Bagnoli Di Sopra|Bagnolo Mella|Bagnolo Cremasco|Bagnolo Piemonte|Bagnolo Del Salento|Bagnolo In Piano|Bagnolo Di Po|Bagnolo San Vito|Bagnone|Bagnoregio|Bagolino|Baia E Latina|Baiano|Bajardo|Bairo|Baiso|Balangero|Baldichieri Dasti|Baldissero Dalba|Baldissero Canavese|Baldissero Torinese|Balestrate|Balestrino|Ballabio|Ballao|Balme|Balmuccia|Balocco|Balsorano|Balvano|Balzola|Banari|Banchette|Villa Verde|Bannio Anzino|Banzi|Baone|Baradili|Baragiano|Baranello|Barano Dischia|Baranzate|Barasso|Baratili San Pietro|Barbania|Barbara|Barbarano Romano|Barbaresco|Barbariga|Barbata|Barberino Di Mugello|Barbianello|Barbiano|Barbona|Barcellona Pozzo Di Gotto|Barcis|Bard|Bardello|Bardi|Bardineto|Bardolino|Bardonecchia|Bareggio|Barengo|Baressa|Barete|Barga|Bargagli|Barge|Barghe|Bari|Bari Sardo|Bariano|Baricella|Barile|Barisciano|Barlassina|Barletta|Barni|Barolo|Barone Canavese|Baronissi|Barrafranca|Barrali|Barrea|Barumini|Barzago|Barzana|Barzano|Barzio|Basaluzzo|Bascape|Baschi|Basciano|Baselga Di Pine|Baselice|Basiano|Basico|Basiglio|Basiliano|Vasanello|Bassano Bresciano|Bassano Del Grappa|Bassano Romano|Tronzano Lago Maggiore|Bassano In Teverina|Bassiano|Bassignana|Bastia Mondovi|Bastia Umbra|Bastida Pancarana|Bastiglia|Battaglia Terme|Battifollo|Battipaglia|Battuda|Baucina|Boville Ernica|Bauladu|Baunei|Baveno|Bedero Valcuvia|Bedizzole|Bedollo|Bedonia|Bedulita|Bee|Beinasco|Beinette|Belcastro|Belfiore|Belforte Monferrato|Belforte Del Chienti|Belforte Allisauro|Belgioioso|Belgirate|Bella|Bellano|Bellante|Bellaria Igea Marina|Bellegra|Bellino|Bellinzago Lombardo|Bellinzago Novarese|Bellona|Bellosguardo|Belluno|Bellusco|Belmonte Piceno|Belmonte Del Sannio|Belmonte Calabro|Belmonte Castello|Belmonte Mezzagno|Belmonte In Sabina|Belpasso|Belsito|Belvedere Ostrense|Belveglio|Lizzano In Belvedere|Belvedere Di Spinello|Belvedere Marittimo|Belvedere Langhe|Belvi|Bema|Bene Lario|Bene Vagienna|Benestare|Benetutti|Benevello|Benevento|Benna|Bentivoglio|Berbenno|Berbenno Di Valtellina|Berceto|Berchidda|Beregazzo Con Figliaro|Bereguardo|Bergamasco|Bergamo|Bergantino|Bergeggi|Bergolo|Berlingo|Bernalda|Bernareggio|Bernate Ticino|Bernezzo|Bertinoro|Bertiolo|Bertonico|Berzano Di San Pietro|Berzano Di Tortona|Berzo San Fermo|Berzo Demo|Berzo Inferiore|Besana In Brianza|Besano|Besate|Besenello|Besenzone|Besnate|Besozzo|Bessude|Bettola|Bettona|Beura Cardezza|Bevagna|Beverino|Bevilacqua|Biancavilla|Bianchi|Bianco|Biandrate|Biandronno|Bianzano|Bianze|Bianzone|Biassono|Bibbiano|Bibbiena|Bibbona|Bibiana|Biccari|Bicinicco|Bidoni|Blera|Biella|Bienno|Bieno|Bientina|Binago|Binasco|Binetto|Bioglio|Bionaz|Bione|Birori|Bisaccia|Bisacquino|Bisceglie|Bisegna|Bisenti|Bisignano|Bistagno|Bisuschio|Bitetto|Bitonto|Bitritto|Bitti|Bivona|Bivongi|Bizzarone|Bleggio Superiore|Blello|Blessagno|Blevio|Boara Pisani|Bobbio|Bobbio Pellice|Boca|Bocchigliero|Boccioleto|Bocenago|Bodio Lomnago|Boffalora Dadda|Boffalora Sopra Ticino|Bogliasco|Bognanco|Bogogno|Bojano|Boissano|Bolano|Bolgare|Bollate|Bollengo|Nova Siri|Bologna|Bolognano|Bolognetta|Bolognola|Bolotana|Bolsena|Boltiere|Bolzano|Bolzano Novarese|Bolzano Vicentino|Bomarzo|Bomba|Bompensiere|Bompietro|Bomporto|Bonarcado|Bonassola|Bonate Sotto|Bonate Sopra|Bonavigo|Bondeno|Bondone|Bonea|Bonefro|Bonemerse|Bonifati|Bonito|Bonnanaro|Bono|Bonorva|Bonvicino|Borbona|Borca Di Cadore|Bordano|Bordighera|Bordolano|Bore|Boretto|Borgarello|Borgaro Torinese|Borgetto|Borghetto Di Vara|Borghetto Darroscia|Borghetto Lodigiano|Borgo Velino|Borghetto Di Borbera|Borghetto Santo Spirito|Borghi|Borgia|Borgiallo|Borgio Verezzi|Borgo Valsugana|Borgo A Mozzano|Borgorose|Borgo Dale|Borgo Di Terzo|Motteggiana|Suardi|Borgofranco Divrea|Borgolavezzaro|Borgo San Giovanni|Borgomale|Borgomanero|Borgomaro|Borgomasino|Borgone Susa|Borgonovo Val Tidone|Borgo Pace|Borgo Priolo|Borgoratto Alessandrino|Borgoratto Mormorolo|Borgoricco|Borgo San Dalmazzo|Fidenza|Borgo San Giacomo|Borgo San Lorenzo|Borgo San Martino|Borgo San Siro|Borgosatollo|Borgosesia|Borgo Val Di Taro|Borgo Ticino|Borgo Tossignano|Borgo Vercelli|Bormida|Bormio|Bornasco|Borno|Boroneddu|Borore|Borrello|Borriana|Borso Del Grappa|Bortigali|Bortigiadas|Borutta|Borzonasca|Bosa|Bosaro|Boschi Santanna|Bosco Marengo|Bosco Chiesanuova|Bosconero|Boscoreale|Boscotrecase|Bosia|Bosio|Bosisio Parini|Bosnasco|Bossico|Bossolasco|Botricello|Botrugno|Bottanuco|Botticino|Bottidda|Bova|Bovalino|Bova Marina|Bovegno|Boves|Bovezzo|Bovino|Bovisio Masciago|Bovolenta|Bovolone|Bozzole|Bozzolo|Bra|Bracca|Bracciano|Bracigliano|Braies|Brallo Di Pregola|Brancaleone|Brandico|Brandizzo|Branzi|Braone|Brebbia|Breda Di Piave|Castelverde|Bregano|Breganze|Bregnano|Brembate|Brembate Di Sopra|Brembio|Breme|Brendola|Brenna|Brennero|Breno|Brenta|Brentino Belluno|Brentonico|Brenzone Sul Garda|Brescello|Brescia|Bresimo|Bressana Bottarone|Bressanone|Bressanvido|Bresso|Brez|Brezzo Di Bedero|Briaglia|Briatico|Bricherasio|Brienno|Brienza|Briga Alta|Briga Novarese|Brignano Gera Dadda|Brignano Frascata|Brindisi|Brindisi Montagna|Brinzio|Briona|Brione|Briosco|Brisighella|Brissago Valtravaglia|Brissogne|Brittoli|Brivio|Broccostella|Brogliano|Brognaturo|Brolo|Brondello|Broni|Bronte|Bronzolo|Brossasco|Brosso|Brovello Carpugnino|Brozolo|Brugherio|Brugine|Brugnato|Brugnera|Bruino|Brumano|Brunate|Brunello|Brunico|Bruno|Brusaporto|Brusasco|Brusciano|Brusimpiano|Brusnengo|Brusson|Bruzolo|Bruzzano Zeffirio|Bubbiano|Bubbio|Buccheri|Bucchianico|Bucciano|Buccinasco|Buccino|Bucine|Budduso|Budoia|Budoni|Budrio|Buggerru|Buggiano|Buglio In Monte|Bugnara|Buguggiate|Buja|Bulciago|Bulgarograsso|Bultei|Bulzi|Buonabitacolo|Buonalbergo|Montebello Sul Sangro|Buonconvento|Buonvicino|Burago Di Molgora|Burcei|Burgio|Burgos|Buriasco|Burolo|Buronzo|Busachi|Busalla|Busano|Busca|Buscate|Buscemi|Buseto Palizzolo|Busnago|Bussero|Busseto|Bussi Sul Tirino|Busso|Bussolengo|Bussoleno|Busto Arsizio|Busto Garolfo|Butera|Buti|Buttapietra|Buttigliera Alta|Buttigliera Dasti|Buttrio|San Paolo Dargon|Cabella Ligure|Castello Cabiaglio|Cabiate|Cabras|Caccamo|Poggio Sannita|Caccuri|Cadegliano Viconago|Cadelbosco Di Sopra|Cadeo|Caderzone Terme|Cadoneghe|Cadorago|Caerano Di San Marco|Cafasse|Caggiano|Cagli|Cagliari|Caglio|Cagnano Varano|Cagnano Amiterno|Cagno|Caianello|Caiazzo|Caines|Caino|Caiolo|Cairano|Cairate|Cairo Montenotte|Caivano|Calabritto|Calalzo Di Cadore|Calamandrana|Calamonaci|Calangianus|Calanna|Calasca Castiglione|Calascibetta|Calascio|Calasetta|Calatabiano|Calatafimi Segesta|Lungavilla|Calcata|Calceranica Al Lago|Calci|Calciano|Calcinaia|Calcinate|Calcinato|Calcio|Calco|Caldaro Sulla Strada Del Vino|Caldarola|Calderara Di Reno|Caldes|Caldiero|Caldogno|Caldonazzo|Calendasco|Calenzano|Calestano|Calice Ligure|Calice Al Cornoviglio|Calimera|Calitri|Calizzano|Callabiana|Calliano|Calliano|Calolziocorte|Calopezzati|Calosso|Caloveto|Caltabellotta|Caltagirone|Caltanissetta|Caltavuturo|Caltignaga|Calto|Caltrano|Calusco Dadda|Caluso|Calvagese Della Riviera|Calvanico|Calvatone|Calvello|Calvene|Calvenzano|Calvera|Calvi|Calvi Risorta|Calvi Dellumbria|Calvignano|Calvignasco|Calvisano|Calvizzano|Camagna Monferrato|Camaiore|Camandona|Camastra|Cambiago|Cambiano|Cambiasca|Camburzano|Santelena Sannita|Camerana|Camerano|Camerano Casasco|Camerata Picena|Camerata Cornello|Camerata Nuova|Cameri|Camerino|Camerota|Camigliano|Camini|Camino|Camino Al Tagliamento|Camisano|Camisano Vicentino|Cammarata|Camogli|Chamois|Campagna|Campagna Lupia|Castel Campagnano|Campagnano Di Roma|Campagnatico|Campagnola Cremasca|Campagnola Emilia|Campana|Camparada|Campegine|Campello Sul Clitunno|Campertogno|Campi Salentina|Campi Bisenzio|Campiglia Marittima|Valprato Soana|Campiglia Dei Berici|Campiglione Fenile|Campione Ditalia|Campitello Di Fassa|Campli|Campo Calabro|Campobasso|Campobello Di Licata|Campobello Di Mazara|Campochiaro|Campodarsego|Campodenno|Campo Di Giove|Campodimele|Campodipietra|Campo Di Trens|Campodolcino|Campodoro|Campofelice Di Roccella|Campofelice Di Fitalia|Campofilone|Campofiorito|Campoformido|Campofranco|Campo Ligure|Campogalliano|Champorcher|Campolattaro|Campoli Del Monte Taburno|Campoli Appennino|Campolieto|Campolongo Maggiore|Campomaggiore|Campomarino|Campomorone|Campo Nellelba|Camponogara|Campora|Camporeale|Camporgiano|Camporosso|Camporotondo Etneo|Camporotondo Di Fiastrone|Camposampiero|Campo San Martino|Camposano|Camposanto|Campospinoso|Campotosto|Campo Tures|Camugnano|Canale|Canale Dagordo|Canale Monterano|Canal San Bovo|Canaro|Canazei|Cancellara|Cancello Ed Arnone|Canda|Candela|Candelo|Candia Lomellina|Candia Canavese|Candiana|Candida|Candidoni|Candiolo|Canegrate|Canelli|Orvinio|Canepina|Caneva|Canicatti|Canicattini Bagni|Canino|Canischio|Canistro|Canna|Cannalonga|Cannara|Cannero Riviera|Canneto Sulloglio|Canneto Pavese|Cannobio|Cannole|Canolo|Canonica Dadda|Canosa Di Puglia|Canosa Sannita|Canosio|Cansano|Cantagallo|Cantalice|Cantalupa|Cantalupo Ligure|Cantalupo Nel Sannio|Cantalupo In Sabina|Mandela|Cantarana|Cantello|Canterano|Cantiano|Cantoira|Cantu|Canzano|Canzo|Caorle|Caorso|Capaccio Paestum|Capaci|Capalbio|Capannoli|Capannori|Capena|Capergnanica|Capestrano|Capiago Intimiano|Capistrano|Capistrello|Capitignano|Capizzi|Capizzone|Ponte Nelle Alpi|Capodimonte|Capo Di Ponte|Capo Dorlando|Capodrise|Capoliveri|Capolona|Caponago|Caporciano|Caposele|Capoterra|Capovalle|Cappadocia|Cappella Maggiore|Cappella Cantone|Cappella De Picenardi|Cappelle Sul Tavo|Capracotta|Capraia E Limite|Capraia Isola|Capralba|Capranica Prenestina|Capranica|Marzabotto|Caprarica Di Lecce|Caprarola|Caprauna|Caprese Michelangelo|Caprezzo|Capri Leone|Capri|Capriana|Capriano Del Colle|Capriata Dorba|Capriate San Gervasio|Capriati A Volturno|Caprie|Capriglia Irpina|Capriglio|Caprile|Caprino Veronese|Caprino Bergamasco|Capriolo|Capriva Del Friuli|Capua|Capurso|Caraffa Di Catanzaro|Caraffa Del Bianco|Caraglio|Caramagna Piemonte|Caramanico Terme|Carano|Carapelle|Carapelle Calvisio|Carasco|Carassai|Carate Brianza|Carate Urio|Caravaggio|Caravate|Caravino|Caravonica|Carbognano|Carbonara Scrivia|Villasimius|Carbonara Di Nola|Carbonara Al Ticino|Carbonate|Carbone|Carbonera|Carbonia|Carcare|Carceri|Carcoforo|Cardano Al Campo|Carde|Cardeto|Cardinale|Cardito|Careggine|Carema|Carenno|Carentino|Careri|Caresana|Caresanablot|Carezzano|Carfizzi|Cargeghe|Cariati|Carife|Carignano|Carimate|Carinaro|Carini|Carinola|Carisio|Carisolo|Carlantino|Carlazzo|Carlentini|Carlino|Carloforte|Carlopoli|Carmagnola|Carmiano|Carmignano|Carmignano Di Brenta|Carnago|Carnate|Cornedo Allisarco|Carobbio Degli Angeli|Carolei|Carona|Caronia|Caronno Pertusella|Caronno Varesino|Carosino|Carovigno|Carovilli|Carpaneto Piacentino|Carpanzano|Carpegna|Carpenedolo|Carpeneto|Carpi|Carpiano|Carpignano Salentino|Carpignano Sesia|Cura Carpignano|Carpineti|Carpineto Sinello|Carpineto Della Nora|Carpineto Romano|Carpino|Carpinone|Carrara|Carre|Carrega Ligure|Carro|Carrodano|Carrosio|Carru|Carsoli|Cartigliano|Cartignano|Cartoceto|Cartosio|Cartura|Carugate|Carugo|Carunchio|Carvico|Carzano|Casabona|Casacalenda|Casacanditella|Casagiove|Casalanguida|Casalattico|Casalbeltrame|Casalbordino|Casalbore|Casalborgone|Casalbuono|Casalbuttano Ed Uniti|Casal Cermelli|Casalciprano|Casal Di Principe|Casalduni|Casale Litta|Casale Corte Cerro|Casale Di Scodosia|Casale Marittimo|Casale Sul Sile|Casalecchio Di Reno|Casale Cremasco Vidolasco|Casaleggio Boiro|Casaleggio Novara|Casale Monferrato|Casaleone|Casaletto Lodigiano|Casaletto Spartano|Casaletto Ceredano|Casaletto Di Sopra|Casaletto Vaprio|Casalfiumanese|Casalgrande|Casalgrasso|Casal Velino|Casalincontrada|Casalino|Casalmaggiore|Casalmaiocco|Casalmorano|Casalmoro|Casalnoceto|Villapiana|Casalnuovo Monterotaro|Casalnuovo Di Napoli|San Paolo Albanese|Casaloldo|Casalpusterlengo|Casalromano|Casalserugo|Pozzaglio Ed Uniti|Trinitapoli|Casaluce|Casalvecchio Di Puglia|Casalvecchio Siculo|Casalvieri|Casalvolone|Casalzuigno|Casamarciano|Casamassima|Casamicciola Terme|Casandrino|Casanova Lerrone|Casanova Elvo|Casanova Lonati|Casape|Casapinta|Casaprota|Casapulla|Casarano|Casargo|Casarile|Casarza Ligure|Casarsa Della Delizia|Casasco|Casatenovo|Casatisma|Casavatore|Casazza|Cascia|Casciago|Cascina|San Giacomo Vercellese|Cascinette Divrea|Casei Gerola|Caselette|Casella|Caselle Lurani|Caselle In Pittari|Caselle Torinese|Caselle Landi|Scandicci|Caserta|Casier|Casignana|Casina|Castelsilano|Castel Di Casio|Casirate Dadda|Caslino Derba|Casnate Con Bernate|Casnigo|Casola In Lunigiana|Casola Di Napoli|Casola Valsenio|Casole Delsa|Casoli|Casorate Sempione|Casorate Primo|Casorezzo|Casoria|Casorzo|Caspoggio|Cassacco|Cassago Brianza|Cassano Irpino|Cassano Delle Murge|Cassano Valcuvia|Cassano Allionio|Cassano Dadda|Cassano Magnago|Cassaro|Cassiglio|Pero|Cassina De Pecchi|Cassina Rizzardi|Cassinasco|Cassina Valsassina|Cassine|Cassinelle|Cassinetta Di Lugagnano|Cassino|Cassola|Cassolnovo|Castel Castagna|Castagnaro|Castagneto Carducci|Castagneto Po|Castagnito|Castagnole Monferrato|Castagnole Piemonte|Castagnole Delle Lanze|Castana|Castellumberto|Castano Primo|Casteggio|Castegnato|Castegnero|Castelbaldo|Castel Baronia|Castelbelforte|Castelbellino|Castelbello Ciardes|Castelbianco|Castel Boglione|Castel Bolognese|Castelbottaccio|Castelbuono|Castelcivita|Servigliano|Castelcovati|Castelcucco|Casteldaccia|Castel Daiano|Castel Dario|Castel Dazzano|Castelli Calepio|Casteldelci|Casteldelfino|Castel Del Giudice|Castel Del Monte|Castel Del Piano|Castel Del Rio|Casteldidone|Castel Di Ieri|Castel Di Iudica|Castel Di Lama|Castel Di Lucio|Castel Di Sangro|Castel Di Sasso|Castel Di Tora|Castelfidardo|Castelfiorentino|Castel Focognano|Castelfondo|Castelforte|Castelfranci|Castelfranco In Miscano|Castelfranco Emilia|Castrolibero|Castel Vittorio|Castelfranco Veneto|Castelfranco Di Sotto|Castel Frentano|Castel Gabbiano|Castel Gandolfo|Castel Giorgio|Castel Goffredo|Castelgomberto|Castelgrande|Castel Guelfo Di Bologna|Castelguglielmo|Castelguidone|Castellabate|Castellafiume|Castellalfero|Castellalto|Castellammare Di Stabia|Castellammare Del Golfo|Castellamonte|Castellana Grotte|Castellana Sicula|Castellaneta|Castellania Coppi|Castellanza|Castellarano|Castellar Guidobono|Castellaro|Castellarquato|Castellazzara|Castellazzo Bormida|Castellazzo Novarese|Castelleone Di Suasa|Castelleone|Castellero|Castelletto Cervo|Castelletto Derro|Castelletto Di Branduzzo|Castelletto Dorba|Castelletto Merli|Castelletto Molina|Castelletto Monferrato|Castelletto Stura|Castelletto Sopra Ticino|Castelletto Uzzone|Castelli|Castellina In Chianti|Castellinaldo Dalba|Castellina Marittima|Castellino Del Biferno|Castellino Tanaro|Castelliri|Castello Del Matese|Castelveccana|Castel Condino|Castello Dagogna|Castello Dargile|Castello Dellacqua|Castello Di Brianza|Castello Di Cisterna|Castello Molina Di Fiemme|Castello Di Godego|Castello Tesino|Castellucchio|Castelmauro|Castelluccio Dei Sauri|Castelluccio Inferiore|Castelverrino|Castelluccio Superiore|Castelluccio Valmaggiore|Castel Madama|Castel Maggiore|Castelmagno|Castelmarte|Castelmassa|Castel Mella|Castelmezzano|Castelmola|Castel Morrone|Castelnovetto|Castelnuovo Di Ceva|Castelnovo Bariano|Castelnuovo|Castelnovo Del Friuli|Castelnovo Di Sotto|Castelnovo Ne Monti|Castelnuovo Bozzente|Castelnuovo Della Daunia|Castelnuovo Parano|Castelnuovo Di Farfa|Castelnuovo Del Garda|Castelnuovo Belbo|Castelnuovo Berardenga|Castelnuovo Bocca Dadda|Castelnuovo Bormida|Castelnuovo Calcea|Castelnuovo Cilento|Castelnuovo Don Bosco|Castelnuovo Di Conza|Castelnuovo Di Garfagnana|Castelnuovo Di Porto|Castelnuovo Magra|Castelnuovo Nigra|Castelnuovo Rangone|Castelnuovo Scrivia|Castelnuovo Di Val Di Cecina|Castelpagano|Castelpetroso|Castelpizzuto|Castelplanio|Castelpoto|Castelraimondo|Castel Ritaldi|Castel Rocchero|Castelrotto|Castel Rozzone|Castel San Giorgio|Castel San Giovanni|Castel San Lorenzo|Castel San Niccolo|Castel San Pietro Terme|Castel San Pietro Romano|Castelsantangelo Sul Nera|Castel Santangelo|Castel Santelia|Castel San Vincenzo|Castelsaraceno|Castelsardo|Castelseprio|Castelspina|Casteltermini|Castelvecchio Di Rocca Barbena|Castelvecchio Calvisio|Castelvecchio Subequo|Castelvenere|Verres|Castelvetere Sul Calore|Castelvetere In Val Fortore|Caulonia|Castelvetrano|Castelvetro Di Modena|Castelvetro Piacentino|Castel Viscardo|Castelvisconti|Castel Volturno|Castenaso|Castenedolo|Chatillon|Castiglione Dei Pepoli|Castiglione Di Sicilia|Castiglione Messer Marino|Castiglione Olona|Castiglione Cosentino|Castiglione Chiavarese|Castiglione Di Garfagnana|Castiglione Dadda|Castiglione Del Genovesi|Castiglione Torinese|Castiglione A Casauria|Castiglione Del Lago|Castiglione Della Pescaia|Colledara|Castiglione Delle Stiviere|Castiglione Dorcia|Castiglione Falletto|Castiglione In Teverina|Castiglione Messer Raimondo|Castiglione Tinella|Castiglion Fibocchi|Castiglion Fiorentino|Castignano|Castilenti|Castino|Castione Della Presolana|Castione Andevenno|Castions Di Strada|Castiraga Vidardo|Casto|Castorano|Castrezzato|Castri Di Lecce|Castrignano De Greci|Castrignano Del Capo|Castro|Castro Dei Volsci|Castrocaro Terme E Terra Del Sole|Castrocielo|Castrofilippo|Enna|Castronno|Castronovo Di Sicilia|Castronuovo Di Santandrea|Castropignano|Castroreale|Castroregio|Castrovillari|Catania|Catanzaro|Catenanuova|Catignano|Cattolica Eraclea|Cattolica|Cautano|Cava Manara|Cava De Tirreni|Cavaglia|Cavaglietto|Cavaglio Dagogna|Cavagnolo|Cavaion Veronese|Cavalese|Cavallerleone|Cavallermaggiore|Cavallino|Cavallirio|Cavareno|Cavargna|Cavaria Con Premezzo|Cavarzere|Cavaso Del Tomba|Cavasso Nuovo|Cavatore|Jesolo|Cavazzo Carnico|Cave|Cavedago|Cavedine|Cavenago Dadda|Cavenago Di Brianza|Cavernago|Cavezzo|Cavizzana|Cavour|Cavriago|Cavriana|Cavriglia|Cazzago San Martino|Cazzago Brabbia|Cazzano Santandrea|Cazzano Di Tramigna|Ceccano|Cecima|Cecina|Cedegolo|Cedrasco|Cefala Diana|Cefalu|Ceggia|Ceglie Messapica|Celano|Celenza Sul Trigno|Celenza Valfortore|Celico|Cella Monte|Cella Dati|Cellamare|Cellara|Cellarengo|Cellatica|Celle Enomondo|Celle Di Macra|Celle Di San Vito|Celle Ligure|Celle Di Bulgheria|Celleno|Cellere|Cellino San Marco|Cellino Attanasio|Cenadi|Cenate Sopra|Cenate Sotto|Cencenighe Agordino|Cene|Ceneselli|Cengio|Centallo|Cento|Centola|Centuripe|Centrache|Cepagatti|Ceppaloni|Ceppo Morelli|Ceprano|Cerami|Ceranesi|Cerano Dintelvi|Cerano|Ceranova|Ceraso|Cercemaggiore|Cercenasco|Cercepiccola|Cerchiara Di Calabria|Cerchio|Cercino|Cercivento|Cercola|Cerda|Ceres|Cerea|Ceregnano|Cerenzia|Ceresara|Cereseto|Ceresole Alba|Ceresole Reale|Cerete|Cerreto Grue|Ceretto Lomellina|Cergnago|Ceriale|Ceriana|Ceriano Laghetto|Cerignale|Cerignola|Cerisano|Cermenate|Cermignano|Cerreto Laziale|Cernobbio|Cernusco Lombardone|Cernusco Sul Naviglio|Cerreto Desi|Cerreto Sannita|Cerreto Di Spoleto|Cerreto Dasti|Cerreto Guidi|Cerretto Langhe|Cerrina Monferrato|Cerrione|Cerro Tanaro|Cerro Al Volturno|Cerro Al Lambro|Cerro Maggiore|Cerro Veronese|Cersosimo|Certaldo|Certosa Di Pavia|Cerva|Cervara Di Roma|Cervarese Santa Croce|Cervaro|Cervasca|Cervatto|Cerveno|Cervere|Cervesina|Cerveteri|Cervia|Cervicati|Cervignano Dadda|Cervignano Del Friuli|Cervinara|Cervino|Cervo|Cerzeto|Cesa|Cesana Brianza|Cesana Torinese|Cesano Boscone|Cesano Maderno|Cesara|Cesaro|Cesate|Cesena|Cesenatico|Cesinali|Cesiomaggiore|Cesio|Cessalto|Cessaniti|Cessapalombo|Cessole|Cetara|Ceto|Cetona|Cetraro|Ceva|Cevo|Challand Saint Anselme|Challand Saint Victor|Chambave|Champdepraz|Charvensod|Cherasco|Cheremule|Chialamberto|Chiampo|Chianche|Chianciano Terme|Chianni|Chianocco|Chiaramonte Gulfi|Chiaramonti|Chiarano|Chiaravalle|Chiaravalle Centrale|Chiari|Chiaromonte|Chiauci|Chiavari|Chiavenna|Chiaverano|Chienes|Chieri|Chiesa In Valmalenco|Chiesanuova|Chies Dalpago|Chiesina Uzzanese|Chieti|Chieuti|Chieve|Chignolo Disola|Chignolo Po|Chioggia|Chiomonte|Chions|Chiopris Viscone|Chitignano|Chiuduno|Chiuppano|Chiuro|Chiusa|Chiusa Di Pesio|Chiusa Sclafani|Chiusa Di San Michele|Chiusaforte|Chiusanico|Chiusano Dasti|Chiusano Di San Domenico|Chiusavecchia|Chiusdino|Chiusi|Chiusi Della Verna|Chivasso|Cianciana|Canossa|Crocetta Del Montello|Cibiana Di Cadore|Cicagna|Cicala|Cicciano|Cicerale|Ciciliano|Cicognolo|Ciconio|Cigliano|Ciglie|Cigognola|Cigole|Cilavegna|Cimadolmo|Cimbergo|Cimina|Ciminna|Cimitile|Tavernole Sul Mella|Cimolais|Cimone|Cinaglio|Cineto Romano|Cingia De Botti|Cingoli|Cinigiano|Cinisello Balsamo|Cinisi|Cino|Cinquefrondi|Cintano|Cinte Tesino|Cinto Euganeo|Cinto Caomaggiore|Cinzano|Ciorlano|Santa Maria Del Cedro|Cipressa|Circello|Cirie|Cirigliano|Cirimido|Ciro|Ciro Marina|Cis|Cisano Bergamasco|Cisano Sul Neva|Ciserano|Cislago|Cisliano|Cison Di Valmarino|Cissone|Cisterna Dasti|Cisterna Di Latina|Cisternino|Citerna|Cittadella|Citta Della Pieve|Citta Di Castello|Cittaducale|Cittanova|Cittareale|Citta Santangelo|Cittiglio|Civate|Civezza|Civezzano|Civiasco|Cividale Del Friuli|Cividate Al Piano|Cividate Camuno|Civita|Civitacampomarano|Civita Castellana|Civita Dantino|Lanuvio|Civitaluparella|Civitanova Del Sannio|Civitanova Marche|Civitaquana|Duronia|Civitavecchia|Civitella In Val Di Chiana|Civitella Messer Raimondo|Civitella Di Romagna|Civitella Alfedena|Civitella Casanova|Civitella Dagliano|Civitella Del Tronto|Civitella Paganico|Civitella Roveto|Civitella San Paolo|Civo|Claino Con Osteno|Ubiale Clanezzo|Claut|Clauzetto|Clavesana|Claviere|Cles|Cleto|Clivio|Cloz|Clusone|Coassolo Torinese|Coazze|Coazzolo|Coccaglio|Cocconato|Cocquio Trevisago|Cocullo|Codevigo|Codevilla|Codigoro|Codogne|Codogno|Codroipo|Codrongianos|Coggiola|Cogliate|Cogne|Cogoleto|Cogollo Del Cengio|Cogorno|Colazza|Colere|Colfelice|Coli|Colico|Collalto Sabino|Collarmele|Collazzone|Colle Sannita|Colle Di Val Delsa|Colle Umberto|Collebeato|Colle Brianza|Collecchio|Collecorvino|Colle Danchise|Colledimacine|Colledimezzo|Colle Di Tora|Colleferro|Collegiove|Collegno|Collelongo|Collepardo|Collepasso|Collepietro|Colleretto Castelnuovo|Colleretto Giacosa|Collesalvetti|Colle San Magno|Collesano|Colle Santa Lucia|Colletorto|Collevecchio|Colli Del Tronto|Colli A Volturno|Colliano|Colli Sul Velino|Collinas|Collio|Collobiano|Colloredo Di Monte Albano|Colmurano|Colobraro|Cologna Veneta|Cologne|Cologno Al Serio|Cologno Monzese|Colognola Ai Colli|Colonna|Colonnella|Colonno|Colorina|Colorno|Colosimi|Colturano|Colzate|Comabbio|Comacchio|Comano|Comazzo|Comeglians|Santo Stefano Di Cadore|Comelico Superiore|Comerio|Comezzano Cizzago|Comignago|Comiso|Comitini|Comiziano|Commessaggio|Commezzadura|Como|Compiano|Comunanza|Valsolda|Comun Nuovo|Cona|Conca Della Campania|Conca Dei Marini|Conca Casale|Concamarise|Concerviano|Concesio|Concordia Sagittaria|Concordia Sulla Secchia|Concorezzo|Condofuri|Condove|Condro|Conegliano|Confienza|Configni|Conflenti|Coniolo|Conselice|Conselve|Contessa Entellina|Contigliano|Contrada|Controguerra|Controne|Contursi Terme|Conversano|Conza Della Campania|Conzano|Copertino|Copiano|Copparo|Corana|Corato|Corbara|Corbetta|Corbola|Corchiano|Corciano|Cordenons|Cordignano|Cordovado|Coreglia Ligure|Coreglia Antelminelli|Coreno Ausonio|Corfinio|Cori|Coriano|Corigliano Dotranto|Corinaldo|Corio|Corleone|Corleto Perticara|Corleto Monforte|Courmayeur|Cormano|Cormons|Corna Imagna|Cornalba|Cornaredo|Cornate Dadda|Cornedo Vicentino|Cornegliano Laudense|Corneliano Dalba|Tarquinia|Corniglio|Corno Di Rosazzo|Corno Giovine|Cornovecchio|Cornuda|Morimondo|Correggio|Correzzana|Correzzola|Corrido|Corridonia|Corropoli|Corsano|Corsico|Corsione|Cortaccia Sulla Strada Del Vino|Cortale|Cortandone|Cortanze|Cortazzone|Corte Brugnatella|Corte De Cortesi Con Cignone|Corte De Frati|Corte Franca|Cortemaggiore|Cortemilia|Corteno Golgi|Cortenova|Cortenuova|Corte Palasio|Cortiglione|Cortina Sulla Strada Del Vino|Cortino|Cortona|Corvara|Corvara In Badia|Corvino San Quirico|Corzano|Coseano|Cosenza|Cosio Darroscia|Cosio Valtellino|Cosoleto|Cossano Canavese|Cossano Belbo|Cossato|Cosseria|Cossignano|Cossogno|Cossoine|Cossombrato|Costa Vescovato|Costa Valle Imagna|Costa Di Rovigo|Costabissara|Costacciaro|Costa De Nobili|Costa Di Mezzate|Costa Serina|Costa Masnaga|Costanzana|Costarainera|Costa Volpino|Costermano Sul Garda|Costigliole Dasti|Costigliole Saluzzo|Cotignola|Crotone|Cotronei|Cottanello|Covo|Cozzo|Craco|Crandola Valsassina|Cravagliana|Cravanzana|Craveggia|Creazzo|Crecchio|Credaro|Credera Rubbiano|Crema|Cremella|Cremenaga|Cremeno|Cremia|Cremolino|Cremona|Cremosano|Crescentino|Crespadoro|Crespiatica|Crespino|Cressa|Crevacuore|Crevalcore|Crevoladossola|Crispano|Crispiano|Crissolo|Crocefieschi|Crodo|Crognaleto|Cropalati|Cropani|Crosia|Crosio Della Valle|Crotta Dadda|Crova|Croviana|Crucoli|Cuasso Al Monte|Veronella|Cuccaro Vetere|Cucciago|Cuceglio|Cuggiono|Cugliate Fabiasco|Cuglieri|Cugnoli|Cumiana|Cumignano Sul Naviglio|Cunardo|Cuneo|Cunico|Cuorgne|Cupello|Cupra Marittima|Cupramontana|Curcuris|Cureggio|Curiglia Con Monteviasco|Curinga|Curino|Curno|Curon Venosta|Cursi|Curtarolo|Curtatone|Curti|Cusago|Cusano Mutri|Cusano Milanino|Cusino|Cusio|Custonaci|Cutro|Cutrofiano|Cuveglio|Cuvio|Daiano|Dairago|Dalmine|Dambel|Danta Di Cadore|Darfo Boario Terme|Dasa|Davagna|Daverio|Davoli|Dazio|Decimomannu|Decimoputzu|Decollatura|Dego|Deiva Marina|Delebio|Delia|Delianuova|Deliceto|Dello|Demonte|Denice|Denno|Dernice|Derovere|Deruta|Dervio|Desana|Desenzano Del Garda|Desio|Desulo|Diamante|Scigliano|Diano Dalba|Teggiano|Diano Arentino|Diano Castello|Diano Marina|Diano San Pietro|Dicomano|Dignano|Dinami|Dipignano|Diso|Divignano|Dizzasco|Dobbiaco|Doberdo Del Lago|Dogliani|Dogliola|Dogna|Dolce|Dolceacqua|Dolcedo|Dolegna Del Collio|Dolianova|San Dorligo Della Valle Dolina|Dolo|Dolzago|Domanico|Domaso|Domegge Di Cadore|Domicella|Domodossola|Domus De Maria|Domusnovas|Donnas|Donato|Dongo|Donori|Dorgali|Dorio|Dormelletto|Dorno|Dorzano|Dosolo|Dossena|Dosso Del Liro|Doues|Dovadola|Dovera|Dozza|Dragoni|Drapia|Drena|Drenchia|Dresano|Dro|Dronero|Druento|Druogno|Dualchi|Dubino|Dueville|Dugenta|Duino Aurisina|Dumenza|Duno|Durazzano|Dusino San Michele|Eboli|Edolo|Egna|Elice|Elini|Ello|Elmas|Elva|Emarese|Empoli|Endine Gaiano|Enego|Enemonzo|Entracque|Entratico|Envie|Episcopia|Eraclea|Erba|Erbe|Erbezzo|Erbusco|Erchie|Erice|Erli|Erto E Casso|Erve|Esanatoglia|Escalaplano|Escolca|Exilles|Esine|Esino Lario|Esperia|Esporlatu|Este|Esterzili|Etroubles|Eupilio|Fabbrica Curone|Fabbrico|Fabriano|Fabrica Di Roma|Fabrizia|Fabro|Faedis|Faedo Valtellino|Faedo|Faenza|Faeto|Fagagna|Faggeto Lario|Faggiano|Fagnano Castello|Fagnano Alto|Fagnano Olona|Fai Della Paganella|Faicchio|Falcade|Falciano Del Massico|Falconara Marittima|Falconara Albanese|Falcone|Faleria|Falerna|Falerone|Fallo|Faloppio|Falvaterra|Falzes|Fanano|Fanna|Fano|Fano Adriano|Fara Gera Dadda|Fara Olivana Con Sola|Fara Novarese|Fara In Sabina|Fara Filiorum Petri|Fara San Martino|Fara Vicentino|Fardella|Farigliano|Farindola|Farini|Farnese|Farra Disonzo|Farra Di Soligo|Fasano|Fascia|Fauglia|Faule|Favale Di Malvaro|Valsinni|Favara|Favignana|Favria|Orco Feglino|Feisoglio|Feletto|Felino|Felitto|Felizzano|Feltre|Fenegro|Fenestrelle|Fenis|Ferentillo|Ferentino|Ferla|Fermignano|Fermo|Ferno|Feroleto Antico|Feroleto Della Chiesa|Pianopoli|Ferrandina|Ferrara|Ferrara Di Monte Baldo|Ferrazzano|Ferrera Di Varese|Ferrera Erbognone|Moncenisio|Ferrere|Ferriere|Ferruzzano|Fraconalto|Fiamignano|Fiano Romano|Fiano|Fiastra|Fiave|Poggio San Vicino|Ficarazzi|Ficarolo|Ficarra|Ficulle|Fie Allo Sciliar|Fierozzo|Fiesco|Fiesole|Fiesse|Fiesso Umbertiano|Fiesso Dartico|Figino Serenza|Figline Vegliaturo|Gonnosno|Filacciano|Filadelfia|Filago|Filandari|Filattiera|Filettino|Filetto|Filiano|Filighera|Filignano|Filogaso|Filottrano|Finale Emilia|Finale Ligure|Fino Del Monte|Fino Mornasco|Fiorano Al Serio|Fiorano Modenese|Fiorano Canavese|Fiorenzuola Darda|Firenze|Firenzuola|Firmo|Fisciano|Fiumalbo|Fiumara|Fiume Veneto|Fiumedinisi|Fiumefreddo Di Sicilia|Fiumefreddo Bruzio|Fiuminata|Fivizzano|Flaibano|Flero|Floresta|Floridia|Florinas|Flumeri|Fluminimaggiore|Flussio|Fobello|Foggia|Foglianise|Fogliano Redipuglia|Foglizzo|Foiano Della Chiana|Foiano Di Val Fortore|Folgaria|Folignano|Foligno|Follina|Follo|Follonica|Fombio|Fondachelli Fantina|Fondi|Fondo|Fonni|Fontainemore|Fontana Liri|Fontanelice|Fontanafredda|Fontanarosa|Fontanella|Fontanellato|Fontanelle|Fontaneto Dagogna|Fontanetto Po|Fontanigorda|Fontanile|Fontaniva|Fonte|Fontecchio|Fontechiari|Fontegreca|Fonteno|Fontevivo|Fonzaso|Foppolo|Forano|San Giovanni Teatino|Force|Forchia|Forcola|Fordongianus|Forenza|Foresto Sparso|Forgaria Nel Friuli|Forino|Forio|Forli Del Sannio|Forli|Forlimpopoli|Formazza|Formello|Formia|Formicola|Formigara|Formigine|Formigliana|Fornace|Fornelli|Tonezza Del Cimone|Forni Avoltri|Forni Di Sopra|Forni Di Sotto|Forno Canavese|Fornovo San Giovanni|Fornovo Di Taro|Forte Dei Marmi|Fortezza|Fortunago|Forza Dagro|Fosciandora|Fosdinovo|Fossa|Fossalto|Fossacesia|Fossalta Di Piave|Fossalta Di Portogruaro|Fossano|Fossato Serralta|Fossato Di Vico|Montebello Jonico|Fosso|Fossombrone|Foza|Frabosa Soprana|Frabosa Sottana|Fragagnano|Fragneto Labate|Fragneto Monforte|Fraine|Framura|Francavilla Bisio|Francavilla Dete|Francavilla Fontana|Francavilla Angitola|Francavilla Al Mare|Francavilla Marittima|Francavilla Di Sicilia|Francavilla In Sinni|Francica|Francofonte|Francolise|Frascaro|Frascarolo|Frascati|Frascineto|Frassilongo|Frassinelle Polesine|Frassinello Monferrato|Frassineto Po|Frassinetto|Frassino|Frassinoro|Frasso Telesino|Frasso Sabino|Umbertide|Fratta Todina|Fratta Polesine|Frattamaggiore|Frattaminore|Fratte Rosa|Frazzano|Fregona|Fresagrandinaria|Fresonara|Frigento|Frignano|Villa Di Briano|Frinco|Frisa|Frisanco|Front|Frontino|Frontone|Frosinone|Frosolone|Frossasco|Frugarolo|Fubine Monferrato|Fucecchio|Fuipiano Valle Imagna|Fumane|Fumone|Funes|Furci|Furci Siculo|Furnari|Furore|Furtei|Fuscaldo|Fusignano|Fusine|Futani|Gabbioneta Binanuova|Gabiano|Gabicce Mare|Gaby|Gadesco Pieve Delmona|Gadoni|Gaeta|Gaggi|Gaggiano|Gaggio Montano|Gaglianico|Gagliano Castelferrato|Gagliano Aterno|Gagliano Del Capo|Gagliato|Gagliole|Gaiarine|Gaiba|Gaiola|Gaiole In Chianti|Gairo|Gais|Galati Mamertino|Galatina|Galatone|Galatro|Galbiate|Galeata|Galgagnano|Gallarate|Gallese|Galliate Lombardo|Galliate|Galliavola|Gallicano|Gallicano Nel Lazio|Gallicchio|Galliera|Galliera Veneta|Gallinaro|Gallio|Gallipoli|Gallo Matese|Gallodoro|Galluccio|Galtelli|Galzignano Terme|Gamalero|Gambara|Gambarana|Gambasca|Gambassi Terme|Gambatesa|Gambellara|Gamberale|Gambettola|Gambolo|Gambugliano|Gandellino|Gandino|Gandosso|Gangi|Garaguso|Garbagna|Garbagna Novarese|Garbagnate Milanese|Garbagnate Monastero|Garda|Gardone Riviera|Gardone Val Trompia|Garessio|Gargallo|Gargazzone|Gargnano|Garlasco|Garlate|Garlenda|Garniga Terme|Garzeno|Garzigliana|Gasperina|Gassino Torinese|Gattatico|Gatteo|Gattinara|Gavardo|Gavello|Gaverina Terme|Gavi|Gavignano|Gavirate|Gavoi|Gavorrano|Gazoldo Degli Ippoliti|Gazzada Schianno|Gazzaniga|Gazzo|Gazzo Veronese|Gazzola|Gazzuolo|Gela|Gemmano|Gemona Del Friuli|Gemonio|Genazzano|Genga|Genivolta|Genola|Genoni|Genova|Genuri|Genzano Di Lucania|Genzano Di Roma|Gera Lario|Gerace|Locri|Geraci Siculo|Gerano|Gerenzago|Gerenzano|Gergei|Germagnano|Germagno|Germignaga|Gerocarne|Gerola Alta|Gerre De Caprioli|Gesico|Gessate|Gessopalena|Gesturi|Gesualdo|Ghedi|Ghemme|Ghiffa|Ghilarza|Ghisalba|Ghislarengo|Giacciano Con Baruchella|Giaglione|Gianico|Giano Vetusto|Giano Dellumbria|Giardinello|Giardini Naxos|Giarole|Giarratana|Giarre|Giave|Giaveno|Giavera Del Montello|Giba|Gibellina|Gifflenga|Giffone|Giffoni Sei Casali|Giffoni Valle Piana|Gignese|Gignod|Gildone|Gimigliano|Ginestra|Ginestra Degli Schiavoni|Ginosa|Gioi|Gioia Del Colle|Gioia Sannitica|Gioia Dei Marsi|Gioia Tauro|Gioiosa Marea|Gioiosa Ionica|Giove|Giovinazzo|Giovo|Girasole|Girifalco|Gissi|Giuggianello|Giugliano In Campania|Giuliana|Giuliano Teatino|Giuliano Di Roma|Giulianova|Giungano|Giurdignano|Giussago|Giussano|Giustenice|Giustino|Giusvalla|Givoletto|Gizzeria|Glorenza|Sesta Godano|Godega Di Santurbano|Godiasco Salice Terme|Godrano|Goito|Golasecca|Golferenzo|Gombito|Gonars|Goni|Gonnosfanadiga|Gonnesa|Gonnoscodina|Gonnostramatza|Gonzaga|Gordona|Gorga|Gorgo Al Monticano|Gorgoglione|Gorgonzola|Goriano Sicoli|Gorizia|Gorlago|Gorla Maggiore|Gorla Minore|Gorle|Gornate Olona|Gorno|Goro|Gorreto|Gorzegno|Gosaldo|Gossolengo|Gottasecca|Gottolengo|Govone|Gozzano|Gradara|Gradisca Disonzo|Grado|Gradoli|Graffignana|Graffignano|Graglia|Gragnano|Gragnano Trebbiense|Grammichele|Grana|Granarolo Dellemilia|Grandate|Grandola Ed Uniti|Graniti|Granozzo Con Monticello|Grantola|Grantorto|Granze|Grassano|Grassobbio|Gratteri|Gravellona Lomellina|Gravellona Toce|Gravere|Gravina In Puglia|Gravina Di Catania|Grazzanise|Grazzano Badoglio|Greccio|Greci|Greggio|Gremiasco|Gressan|Gressoney La Trinite|Gressoney Saint Jean|Greve In Chianti|Grezzago|Grezzana|Griante|Gricignano Di Aversa|Grignasco|Grigno|Grimacco|Grimaldi|Grinzane Cavour|Grisignano Di Zocco|Grisolia|Grizzana Morandi|Grognardo|Gromo|Grondona|Grone|Grontardo|Gropello Cairoli|Gropparello|Groscavallo|Grosio|Grosotto|Grosseto|Grosso|Grottaferrata|Grottaglie|Grottaminarda|Grottammare|Grottazzolina|Grotte|Grotte Di Castro|Grotteria|Grottole|Grottolella|Gruaro|Grugliasco|Grumello Cremonese Ed Uniti|Grumello Del Monte|Grumento Nova|Grumo Appula|Grumo Nevano|Grumolo Delle Abbadesse|Guagnano|Gualdo|Gualdo Cattaneo|Gualdo Tadino|Gualtieri|Gualtieri Sicamino|Guamaggiore|Guanzate|Guarcino|Guardabosone|Guardamiglio|Guardavalle|Guarda Veneta|Guardea|Guardia Piemontese|Guardiagrele|Guardialfiera|Guardia Lombardi|Guardia Perticara|Guardiaregia|Guardia Sanframondi|Guardistallo|Guarene|Guasila|Guastalla|Guazzora|Gubbio|Gudo Visconti|Guglionesi|Guidizzolo|Guidonia Montecelio|Guiglia|Siziano|Guilmi|Gurro|Guspini|Gussago|Gussola|Hone|Jacurso|Idro|Iglesias|Igliano|Ilbono|Illasi|Illorai|Imbersago|Imer|Imola|Imperia|Impruneta|Inarzo|Incisa Scapaccino|Incudine|Induno Olona|Ingria|Intragna|Introbio|Introd|Introdacqua|Inverigo|Inverno E Monteleone|Inverso Pinasca|Inveruno|Invorio|Inzago|Jolanda Di Savoia|Ionadi|Irgoli|Irma|Irsina|Isasca|Isca Sullo Ionio|Ischia|Ischia Di Castro|Ischitella|Iseo|Isera|Isernia|Isili|Isnello|Isola Dasti|Isola Di Capo Rizzuto|Isola Del Liri|Isola Del Cantone|Madesimo|Isola Del Gran Sasso Ditalia|Isolabella|Isolabona|Isola Del Giglio|Isola Della Scala|Isola Delle Femmine|Isola Del Piano|Isola Di Fondra|Isola Vicentina|Isola Dovarese|Isola Rizza|Isola Santantonio|Isole Tremiti|Isorella|Ispani|Ispica|Ispra|Issiglio|Issime|Isso|Issogne|Vasto|Istrana|Itala|Itri|Ittireddu|Ittiri|Ivrea|Izano|Jelsi|Jenne|Jerago Con Orago|Jerzu|Jesi|Joppolo|Joppolo Giancaxio|Jovencan|Labico|Labro|La Cassa|Lacchiarella|Lacco Ameno|Lacedonia|Laces|Laconi|Laerru|Laganadi|Laghi|Laglio|Lagnasco|Lago|Lagonegro|Lagosanto|Lagundo|Lajatico|Laigueglia|Lainate|Laino|Laino Borgo|Laino Castello|Laion|Laives|Lallio|La Loggia|Lama Dei Peligni|La Maddalena|Lama Mocogno|Lambrugo|Lamon|La Morra|Lampedusa E Linosa|Lamporecchio|Lamporo|Lana|Lanciano|Landiona|Landriano|Langhirano|Langosco|Lanusei|Lanzada|Lanzo Torinese|Lapedona|Lapio|Lappano|Larciano|Lardirago|Larino|Lasa|La Salle|Lascari|Lasnigo|La Spezia|Las Plassas|Lastebasse|Lastra A Signa|Latera|Laterza|La Thuile|Latiano|Latina|Latisana|Latronico|Lattarico|Lauco|Laureana Di Borrello|Laureana Cilento|Lauregno|Laurenzana|Lauria|Lauriano|Laurino|Laurito|Lauro|Lavagna|Lavagno|La Valle Agordina|La Valle|Lavarone|Lavello|Lavena Ponte Tresa|Laveno Mombello|Lavenone|Laviano|Lavis|Lazise|Lazzate|Lecce Nei Marsi|Lecce|Lecco|Leffe|Leggiuno|Legnago|Legnano|Legnaro|Lei|Leini|Leivi|Lemie|Lendinara|Leni|Lenna|Leno|Lenola|Lenta|Lentate Sul Seveso|Lentella|Lentini|Leonessa|Leonforte|Leporano|Lequile|Lequio Tanaro|Lequio Berria|Lercara Friddi|Lerici|Lerma|Lesa|Lesegno|Lesignano De Bagni|Terenzo|Lesina|Lesmo|Lessolo|Lestizza|Letino|Letojanni|Lettere|Lettomanoppello|Lettopalena|Levanto|Levate|Leverano|Levice|Levico Terme|Levone|Lezzeno|Liberi|Librizzi|Licata|Licciana Nardi|Licenza|Licodia Eubea|Lierna|Lignana|Lignano Sabbiadoro|Lillianes|Limana|Limatola|Limbadi|Limbiate|Limena|Limido Comasco|Limina|Limone Sul Garda|Limone Piemonte|Limosano|Linarolo|Linguaglossa|Lioni|Lipari|Lipomo|Lirio|Liscate|Liscia|Lisciano Niccone|Lisio|Lissone|Milena|Liveri|Livigno|Livinallongo Del Col Di Lana|Livo|Livo|Livorno|Livorno Ferraris|Livraga|Lizzanello|Lizzano|Loano|Loazzolo|Locana|Locate Varesino|Locate Di Triulzi|Locatello|Loceri|Locorotondo|Loculi|Lode|Lodi|Lodine|Lodi Vecchio|Lodrino|Lograto|Loiano|Lomagna|Lomazzo|Lombardore|Lombriasco|Lomello|Lona Lases|Lonate Ceppino|Lonate Pozzolo|Londa|Longano|Longare|Longhena|Longi|Longiano|Longobardi|Longobucco|Longone Al Segrino|Porto Azzurro|Longone Sabino|Lonigo|Loranze|Loreggia|Loreglia|Lorenzago Di Cadore|Loreo|Loreto|Loreto Aprutino|Loria|Loro Ciuffenna|Loro Piceno|Lorsica|Losine|Lotzorai|Lovere|Lovero|Lozio|Lozza|Lozzo Di Cadore|Lozzo Atestino|Lozzolo|Lubriano|Lucca Sicula|Lucca|Lucera|Lucignano|Lucinasco|Lucito|Luco Dei Marsi|Lucoli|Lugagnano Val Darda|Lugnano In Teverina|Lugo|Lugo Di Vicenza|Luino|Luisago|Lula|Lumarzo|Lumezzane|Lunamatrona|Lunano|Lungro|Luogosano|Luogosanto|Lupara|Lurago Derba|Lurago Marinone|Lurano|Luras|Lurate Caccivio|Lusciano|Luserna|Luserna San Giovanni|Lusernetta|Lusevera|Lusia|Lusiglie|Luson|Lustra|Luvinate|Luzzana|Luzzara|Luzzi|Maccastorna|Macchia Disernia|Macchiagodena|Macchia Valfortore|Macello|Macerata|Macerata Campania|Macerata Feltria|Macherio|Maclodio|Macomer|Macra|Macugnaga|Maddaloni|Madignano|Madone|Madonna Del Sasso|Maenza|Mafalda|Magasa|Magenta|Maggiora|Magherno|Magione|Magisano|Magliano Di Tenna|Magliano Alpi|Magliano Alfieri|Magliano In Toscana|Magliano De Marsi|Magliano Sabina|Magliano Romano|Magliano Vetere|Maglie|Magliolo|Maglione|Magnacavallo|Magnago|Magnano In Riviera|Magnano|Magomadas|Magre Sulla Strada Del Vino|Magreglio|Majano|Maida|Maiera|Maierato|Maiolati Spontini|Maiolo|Maiori|Mairago|Mairano|Maissana|Malagnino|Malalbergo|Malborghetto Valbruna|Malcesine|Male|Malegno|Maleo|Malesco|Maletto|Malfa|Malgesso|Malgrate|Malito|Mallare|Malles Venosta|Malnate|Malo|Malonno|Malosco|Maltignano|Malvagna|Malvicino|Malvito|Mammola|Mamoiada|Manciano|Mandanici|Mandas|Mandatoriccio|Mandello Del Lario|Mandello Vitta|Manduria|Manerba Del Garda|Manerbio|Manfredonia|Mango|Mangone|Maniago|Manocalzati|Manoppello|Mansue|Manta|Mantello|Mantova|Manzano|Manziana|Mapello|Mara|Maracalagonis|Maranello|Marano Sul Panaro|Marano Di Napoli|Marano Ticino|Marano Equo|Marano Lagunare|Marano Di Valpolicella|Marano Vicentino|Marano Marchesato|Marano Principato|Maranzana|Maratea|Marcallo Con Casone|Marcaria|Marcedusa|Marcellina|Marcellinara|Marcetelli|Marcheno|Marchirolo|Marciana|Marciana Marina|Marcianise|Marciano Della Chiana|Marcignago|Marcon|Marebbe|Marene|Mareno Di Piave|Marentino|Maretto|Margarita|Margherita Di Savoia|Margno|Mariana Mantovana|Mariano Comense|Mariano Del Friuli|Marianopoli|Mariglianella|Marigliano|Marina Di Gioiosa Ionica|Marineo|Marino|Marlengo|Marliana|Marmentino|Marmirolo|Marmora|Marnate|Marone|Maropati|Marostica|Marradi|Marrubiu|Marsaglia|Marsala|Marsciano|Marsico Nuovo|Marsicovetere|Marta|Martano|Martellago|Martello|Martignacco|Martignana Di Po|Martignano|Martina Franca|Martinengo|Martiniana Po|Martinsicuro|Martirano|Martirano Lombardo|Martis|Martone|Marudo|Maruggio|Marzano Di Nola|Marzano Appio|Marzano|Marzi|Marzio|Masate|Mascali|Mascalucia|Maschito|Masciago Primo|Maser|Masera|Masera Di Padova|Maserada Sul Piave|Masi|Masio|Masi Torello|Maslianico|Masone|Massa Fermana|Massa Dalbe|Massa|Massa Martana|Massa E Cozzile|Massafra|Massalengo|Massa Lombarda|Massa Lubrense|Massa Marittima|Massanzago|Massarosa|Massazza|Massello|Masserano|San Marco Evangelista|Massignano|Massimeno|Massimino|Massino Visconti|Massiola|Masullas|Matelica|Matera|Mathi|Matino|Matrice|Mattie|Mattinata|Mazara Del Vallo|Mazzano|Mazzano Romano|Mazzarino|Mazzarra Santandrea|Mazze|Mazzin|Mazzo Di Valtellina|Meana Sardo|Meana Di Susa|Meda|Mede|Medea|Medesano|Medicina|Mediglia|Medolago|Medole|Medolla|Meduna Di Livenza|Meduno|Megliadino San Vitale|Meina|Melara|Melazzo|Meldola|Mele|Melegnano|Melendugno|Meleti|Melfi|Melicucca|Melicucco|Melilli|Melissa|Melissano|Melito Irpino|Melito Di Napoli|Melito Di Porto Salvo|Melizzano|Melle|Mello|Silea|Melpignano|Meltina|Melzo|Menaggio|Menconico|Mendatica|Mendicino|Menfi|Mentana|Meolo|Merana|Merano|Merate|Mercallo|Mercatello Sul Metauro|Mercatino Conca|Novafeltria|Mercato San Severino|Mercato Saraceno|Mercenasco|Mercogliano|Mereto Di Tomba|Mergo|Mergozzo|Meri|Merlara|Merlino|Merone|Mesagne|Mese|Mesenzana|Mesero|Mesola|Mesoraca|Messina|Mestrino|Meta|Mezzago|Mezzana Mortigliengo|Mezzana|Mezzana Bigli|Mezzana Rabattone|Mezzane Di Sotto|Mezzanego|Mezzanino|Mezzano|Mezzenile|Mezzocorona|Mezzojuso|Mezzoldo|Mezzolombardo|Mezzomerico|Miagliano|Miane|Miasino|Miazzina|Micigliano|Miggiano|Miglianico|Miglierina|Miglionico|Mignanego|Mignano Monte Lungo|Milano|Milazzo|Mileto|Milis|Militello In Val Di Catania|Militello Rosmarino|Millesimo|Milo|Milzano|Mineo|Minerbe|Minerbio|Minervino Murge|Minervino Di Lecce|Minori|Minturno|Minucciano|Mioglia|Mira|Mirabella Eclano|Mirabella Imbaccari|Mirabello Monferrato|Mirabello Sannitico|Miradolo Terme|Miranda|Mirandola|Mirano|Mirto|Misano Di Gera Dadda|Misano Adriatico|Misilmeri|Misinto|Missaglia|Missanello|Misterbianco|Mistretta|Moasca|Moconesi|Modena|Modica|Modigliana|Tavazzano Con Villavesco|Modolo|Modugno|Moena|Moggio|Moggio Udinese|Moglia|Mogliano|Mogliano Veneto|Mogorella|Ruinas|Mogoro|Moiano|Moimacco|Moio De Calvi|Moio Alcantara|Moio Della Civitella|Moiola|Mola Di Bari|Molare|Molazzana|Molfetta|Molinara|Molinella|Molini Di Triora|Molino Dei Torti|Molise|Moliterno|Mollia|Porto Empedocle|Molochio|Molteno|Moltrasio|Molveno|Mombaldone|Mombarcaro|Mombaroccio|Mombaruzzo|Mombasiglio|Mombello Monferrato|Mombello Di Torino|Mombercelli|Momo|Mompantero|Mompeo|Momperone|Monacilioni|Monale|Monasterace|Monastero Bormida|Monastero Di Vasco|Monastero Di Lanzo|Monasterolo Del Castello|Monasterolo Casotto|Monasterolo Di Savigliano|Monastier Di Treviso|Monastir|Moncalieri|Moncalvo|Moncestino|Monchiero|Monchio Delle Corti|Moncrivello|Moncucco Torinese|Mondaino|Mondavio|Mondolfo|Mondovi|Mondragone|Moneglia|Monesiglio|Monfalcone|Serramazzoni|Monforte Dalba|Monforte San Giorgio|Monfumo|Mongardino|Monghidoro|Mongiana|Mongiardino Ligure|Montjovet|Mongiuffi Melia|Mongrando|Mongrassano|Monguelfo Tesido|Monguzzo|Moniga Del Garda|Monleale|Monno|Monopoli|Monreale|Monrupino|Monsampietro Morico|Monsampolo Del Tronto|Monsano|Monselice|Monserrato|Monsummano Terme|Monta|Montabone|Montacuto|Montafia|Montagano|Montagna|Montagna In Valtellina|Montagnana|Montagnareale|Montaguto|Montaione|Montalbano Jonico|Montalbano Elicona|Ostra|Montaldeo|Montaldo Bormida|Montaldo Di Mondovi|Montaldo Torinese|Montaldo Roero|Montaldo Scarampi|Montale|Montalenghe|Montallegro|Montalto Delle Marche|Montalto Uffugo|Montalto Pavese|Montalto Di Castro|Montalto Dora|Montanaro|Montanaso Lombardo|Montanera|Montano Antilia|Montano Lucino|Montappone|Montaquila|Montasola|Montauro|Montazzoli|Monte Cremasco|Monte Argentario|Montebello Della Battaglia|Montebello Di Bertona|Montebello Vicentino|Montebelluna|Montebruno|Montebuono|Montecalvo Irpino|Montecalvo Versiggia|Montecalvo In Foglia|Montecarlo|Montecarotto|Montecassiano|Montecastello|Monte Castello Di Vibio|Montecastrilli|Montecatini Val Di Cecina|Monte Cavallo|Montecchia Di Crosara|Montecchio|Montecchio Emilia|Montecchio Maggiore|Montecchio Precalcino|Monte Cerignone|Montechiaro Dasti|Montechiaro Dacqui|Montichiari|Montechiarugolo|Monteciccardo|Montecilfone|Monte Compatri|Montecopiolo|Montecorice|Montecorvino Pugliano|Montecorvino Rovella|Montecosaro|Montecrestese|Montecreto|Monte Di Malo|Montedinove|Monte Di Procida|Montedoro|Montefalcione|Montefalco|Montefalcone Appennino|Montefalcone Di Val Fortore|Montefalcone Nel Sannio|Montefano|Montefelcino|Monteferrante|Montefiascone|Montefino|Montefiore Dellaso|Montefiore Conca|Montefiorino|Monteflavio|Monteforte Irpino|Monteforte Cilento|Monteforte Dalpone|Montefortino|Montefranco|Montefredane|Montefusco|Montegabbione|Montegalda|Montegaldella|Montegallo|Monte Giberto|Montegioco|Montegiordano|Montegiorgio|Montegranaro|Montegridolfo|Monte Grimano Terme|Montegrino Valtravaglia|Montegrosso Dasti|Montegrosso Pian Latte|Montegrotto Terme|Monteiasi|Monte Isola|Montelabbate|Montelanico|Montelapiano|Monteleone Di Fermo|Vibo Valentia|Monteleone Di Puglia|Monteleone Di Spoleto|Monteleone Sabino|Monteleone Rocca Doria|Monteleone Dorvieto|Montelepre|Montelibretti|Montella|Montello|Montelongo|Montelparo|Montelupo Albese|Montelupo Fiorentino|Montelupone|Montemaggiore Belsito|Montemagno|Santarcangelo Trimonte|Montemale Di Cuneo|Montemarano|Montemarciano|Monte Marenzo|Montemarzino|Montemesola|Montemezzo|Montemignaio|Montemiletto|Pollenza|Montemilone|Montemitro|Montemonaco|Montemurlo|Montemurro|Montenars|Montenero Di Bisaccia|Montenerodomo|Montenero Sabino|Montenero Val Cocchiara|Ostra Vetere|Monteodorisio|Roseto Degli Abruzzi|Montepaone|Monteparano|Monte Porzio|Monte Porzio Catone|Monteprandone|Montepulciano|Monterchi|Montereale|Montereale Valcellina|Monterenzio|Monteriggioni|Monte Rinaldo|Monte Roberto|Monteroduni|Monte Romano|Monteroni Di Lecce|Monteroni Darbia|Monterosi|Monterosso Calabro|Monterosso Grana|Monterosso Al Mare|Monterosso Almo|Monterotondo|Monterotondo Marittimo|Monterubbiano|Monte San Biagio|Monte San Giacomo|Monte San Giovanni In Sabina|Monte San Giovanni Campano|Monte San Giusto|Monte San Martino|Montesano Salentino|Montesano Sulla Marcellana|Monte San Pietrangeli|Monte San Pietro|Monte San Savino|Monte Santa Maria Tiberina|Monte Santangelo|Potenza Picena|Monte San Vito|Montesarchio|Montescaglioso|Montescano|Montescheno|Montescudaio|Montese|Montesegale|Montesilvano|Montespertoli|Monteu Da Po|Monte Urano|Monteu Roero|Montevago|Montevarchi|Montevecchia|Monteverde|Monteverdi Marittimo|Monteviale|Monte Vidon Combatte|Monte Vidon Corrado|Montezemolo|Monti|Montiano|Monticello Dalba|Monticelli Pavese|Monticelli Dongina|Monticelli Brusati|Monticello Brianza|Monticello Conte Otto|Monticiano|Montieri|Montignoso|Montirone|Montodine|Montoggio|Montone|Montopoli In Val Darno|Montopoli Di Sabina|Montorfano|Montorio Nei Frentani|Montorio Al Vomano|Montorio Romano|Montorso Vicentino|Montottone|Montresta|Montu Beccaria|Monvalle|Monza|Monzambano|Monzuno|Morano Sul Po|Morano Calabro|Moransengo|Moraro|Morazzone|Morbegno|Morbello|Morciano Di Romagna|Morciano Di Leuca|Morcone|Mordano|Morengo|Mores|Moresco|Moretta|Morfasso|Morgano|Morgex|Morgongiori|Mori|Moriago Della Battaglia|Moricone|Morigerati|Morino|Moriondo Torinese|Morlupo|Mormanno|Mornago|Mornese|Mornico Al Serio|Mornico Losana|Morolo|Morozzo|Morra De Sanctis|Morro Dalba|Morro Reatino|Morro Doro|Morrone Del Sannio|Morrovalle|Morsano Al Tagliamento|Morsasco|Mortara|Mortegliano|Morterone|Moruzzo|Moscazzano|Moschiano|Mosciano Santangelo|Moscufo|Moso In Passiria|Mossa|Motta Di Livenza|Motta Baluffi|Motta Camastra|Motta Daffermo|Motta De Conti|Mottafollone|Mottalciata|Motta Montecorvino|Motta San Giovanni|Motta Santa Lucia|Motta Santanastasia|Motta Visconti|Mottola|Mozzagrogna|Mozzanica|Mozzate|Mozzecane|Mozzo|Muccia|Muggia|Muggio|Mugnano Del Cardinale|Mugnano Di Napoli|Mulazzano|Mulazzo|Mura|Muravera|Murazzano|Salcedo|Murello|Murialdo|Murisengo|Murlo|Muro Leccese|Muro Lucano|Muros|Muscoline|Musei|Musile Di Piave|Musso|Mussolente|Mussomeli|Pineto|Muzzana Del Turgnano|Muzzano|Nago Torbole|Nalles|Nanto|Napoli|Narbolia|Narcao|Nardo|Nardodipace|Narni|Naro|Narzole|Nasino|Naso|Naturno|Nave|Navelli|Naz Sciaves|Nazzano|Ne|Nebbiuno|Negrar Di Valpolicella|Neirone|Neive|Nembro|Nemi|Nemoli|Neoneli|Nepi|Nereto|Nerola|Nervesa Della Battaglia|Nerviano|Nespolo|Nesso|Netro|Nettuno|Neviano|Neviano Degli Arduini|Neviglie|Niardo|Nibbiola|Nibionno|Nichelino|Nicolosi|Nicorvo|Nicosia|Nicotera|Niella Belbo|Niella Tanaro|Nimis|Niscemi|Nissoria|Nizza Di Sicilia|Nizza Monferrato|Noale|Noasca|Nocara|Nocciano|Nocera Terinese|Nocera Umbra|Nocera Inferiore|Nocera Superiore|Noceto|Noci|Nociglia|Noepoli|Nogara|Nogaredo|Nogarole Rocca|Nogarole Vicentino|Noicattaro|Nola|Nole|Noli|Nomaglio|Nomi|Nonantola|None|Nonio|Noragugume|Norbello|Norcia|Norma|Nosate|Ponte Nossa|Notaresco|Noto|Nova Milanese|Novaledo|Novalesa|Nova Levante|Nova Ponente|Novara Di Sicilia|Novara|Novate Milanese|Novate Mezzola|Nove|Novedrate|Novellara|Novello|Noventa Padovana|Noventa Di Piave|Noventa Vicentina|Novi Ligure|Novi Di Modena|Novi Velia|Noviglio|Novoli|Nucetto|Nughedu Santa Vittoria|Nughedu San Nicolo|Nule|Nulvi|Numana|Nuoro|Nurachi|Nuragus|Nurallao|Nuraminis|Nureci|Nurri|Nus|Nusco|Nuvolento|Nuvolera|Nuxis|Occhieppo Inferiore|Occhieppo Superiore|Occhiobello|Occimiano|Ocre|Odalengo Grande|Odalengo Piccolo|Oderzo|Odolo|Ofena|Offagna|Offanengo|Offida|Offlaga|Oggebbio|Oggiona Con Santo Stefano|Oggiono|Oglianico|Ogliastro Cilento|Oyace|Olbia|Olcenengo|Oldenico|Oleggio|Oleggio Castello|Olevano Di Lomellina|Olevano Romano|Olevano Sul Tusciano|Olgiate Comasco|Olgiate Molgora|Olgiate Olona|Olginate|Oliena|Oliva Gessi|Olivadi|Oliveri|Oliveto Lucano|Oliveto Citra|Oliveto Lario|Olivetta San Michele|Olivola|Ollastra|Ollolai|Ollomont|Olmedo|Olmeneta|Olmo Gentile|Olmo Al Brembo|Oltre Il Colle|Oltressenda Alta|Oltrona Di San Mamette|Olzai|Ome|Omegna|Omignano|Onani|Onano|Oncino|Oneta|Onifai|Oniferi|Ono San Pietro|Onore|Onzo|Opera|Opi|Oppeano|Oppido Lucano|Oppido Mamertina|Ora|Orani|Oratino|Orbassano|Orbetello|Orciano Pisano|Orero|Orgiano|Pieve Fissiraga|Orgosolo|Oria|Oricola|Origgio|Orino|Orio Litta|Orio Al Serio|Orio Canavese|Oriolo|Oriolo Romano|Oristano|Ormea|Ormelle|Ornago|Ornavasso|Ornica|Orosei|Orotelli|Orria|Orroli|Orsago|Orsara Bormida|Orsara Di Puglia|Orsenigo|Orsogna|Orsomarso|Orta Di Atella|Orta Nova|Ortacesus|Orta San Giulio|Orte|Ortelle|Ortezzano|Ortignano Raggiolo|Ortisei|Ortona|Ortona Dei Marsi|Luni|Ortovero|Ortucchio|Ortueri|Orune|Orvieto|Orzinuovi|Orzivecchi|Osasco|Osasio|Oschiri|Osidda|Osiglia|Osilo|Osimo|Osini|Osio Sopra|Osio Sotto|Osnago|Osoppo|Ospedaletti|Ospedaletto Dalpinolo|Ospedaletto Lodigiano|Ospedaletto Euganeo|Ospedaletto|Ospitale Di Cadore|Ospitaletto|Ossago Lodigiano|Ossana|Ossi|Ossimo|Ossona|Ostana|Ostellato|Ostiano|Ostiglia|Ostuni|Otranto|Otricoli|Ottaviano|Ottana|Ottati|Ottiglio|Ottobiano|Ottone|Oulx|Ovada|Ovaro|Oviglio|Ovindoli|Ovodda|Ozegna|Ozieri|Ozzano Monferrato|Ozzano Dellemilia|Ozzero|Pabillonis|Paceco|Pace Del Mela|Pacentro|Pachino|Paciano|Padenghe Sul Garda|Paderna|Paderno Franciacorta|Paderno Dadda|Paderno Dugnano|Paderno Ponchielli|Robbiate|Padova|Padria|Padula|Paduli|Paesana|Paese|Pagani|Paganico Sabino|Pagazzano|Pagliara|Paglieta|Pagnacco|Pagno|Pagnona|Pago Del Vallo Di Lauro|Pago Veiano|Paisco Loveno|Paitone|Paladina|Palagano|Palagianello|Palagiano|Palagonia|Palaia|Palanzano|Palata|Palau|Palazzago|Palazzo Pignano|Palazzo San Gervasio|Palazzo Canavese|Palazzo Adriano|Palazzolo Sulloglio|Palazzolo Vercellese|Palazzolo Acreide|Palazzolo Dello Stella|Palazzuolo Sul Senio|Palena|Palermiti|Palermo|Palestrina|Palestro|Paliano|Palizzi|Pallagorio|Pallanzeno|Pallare|Palma Di Montechiaro|Palma Campania|Palmanova|Palmariggi|Palmas Arborea|San Giovanni Suergiu|Palmi|Palmiano|Palmoli|Palo Del Colle|Palomonte|Palombara Sabina|Palombaro|Palosco|Palu Del Fersina|Palu|Paludi|Plaus|Paluzza|Pamparato|Pancalieri|Pancarana|Panchia|Pandino|Panettieri|Panicale|Villaricca|Pannarano|Panni|Pantelleria|Pantigliate|Paola|Paolisi|Valderice|Papasidero|Papozze|Parabiago|Parabita|Paratico|Parcines|Parella|Parenti|Parete|Pareto|Parghelia|Parlasco|Parma|Parodi Ligure|Paroldo|Parolise|Parona|Parrano|Parre|Partanna|Partinico|Paruzzaro|Parzanica|Pasian Di Prato|Pasiano Di Pordenone|Paspardo|Passerano Marmorito|Passignano Sul Trasimeno|Passirano|Pastena|Pastorano|Pastrengo|Pasturana|Pasturo|Paternopoli|Paterno|Paterno Calabro|Patrica|Pattada|Patti|Patu|Pau|Paularo|Pauli Arbarei|San Nicolo Gerrei|Paulilatino|Paullo|Paupisi|Pavarolo|Pavia|Pavia Di Udine|Pavone Del Mella|Pavone Canavese|Pavullo Nel Frignano|Pazzano|Peccioli|Pecetto Di Valenza|Pecetto Torinese|Pedara|Pedaso|Pedavena|Pedemonte|San Paolo|Pederobba|Pedesina|Pedivigliano|Pedrengo|Peglio|Peglio|Pegognaga|Peia|Peio|Pelago|Pella|Pellegrino Parmense|Pellezzano|Pellizzano|Pelugo|Penango|Poggiridenti|Penna In Teverina|Pennabilli|Pennadomo|Pennapiedimonte|Penna San Giovanni|Penna Santandrea|Penne|Pentone|Perano|Perarolo Di Cadore|Perca|Percile|Perdasdefogu|Perdaxius|Perdifumo|Pereto|Perfugas|Pergine Valsugana|Pergola|Perinaldo|Perito|Perledo|Perletto|Perlo|Perloz|Pernumia|Perosa Canavese|Perosa Argentina|Perrero|San Giovanni In Persiceto|Persico Dosimo|Pertengo|Pertica Alta|Pertica Bassa|Pertosa|Pertusio|Perugia|Pesaro|Pescaglia|Pescantina|Pescara|Pescarolo Ed Uniti|Pescasseroli|Pescate|Pesche|Peschici|Peschiera Borromeo|Peschiera Del Garda|Pescia|Pescina|Pescocostanzo|Pesco Sannita|Pescolanciano|Pescopagano|Pescopennataro|Pescorocchiano|Pescosansonesco|Pescosolido|Pessano Con Bornago|Pessina Cremonese|Pessinetto|Petacciato|Turania|Petilia Policastro|Petina|Petralia Soprana|Petralia Sottana|Petrella Tifernina|Petrella Salto|Petriano|Petriolo|Petritoli|Petrizzi|Petrona|Petruro Irpino|Pettenasco|Pettinengo|Pettineo|Pettoranello Del Molise|Pettorano Sul Gizio|Pettorazza Grimani|Peveragno|Pezzana|Pezzaze|Pezzolo Valle Uzzone|Piacenza Dadige|Piacenza|Piaggine|Valle Dellangelo|Piana Di Monte Verna|Piana Crixia|Piana Degli Albanesi|Pontboset|Pian Camuno|Piancastagnaio|Piancogno|Piandimeleto|Piane Crati|Pianella|Pianello Del Lario|Pianello Val Tidone|Pianengo|Pianezza|Pianezze|Pianfei|Pianico|Pianiga|San Benedetto Val Di Sambro|Piano Di Sorrento|Pianoro|Piansano|Piantedo|Piario|Piasco|Piateda|Piatto|Piazza Brembana|Piazza Armerina|Piazza Al Serchio|Piazzatorre|Piazzola Sul Brenta|Piazzolo|Picciano|Picerno|Picinisco|Pico|Piea|Piedicavallo|Piedimonte Matese|Piedimonte Etneo|Piedimonte San Germano|Piedimulera|Piegaro|Pienza|Pieranica|Pietramontecorvino|Pietra Ligure|Pietrabbondante|Pietrabruna|Pietracamela|Pietracatella|Pietracupa|Pietradefusi|Pietra De Giorgi|Pietraferrazzana|Satriano Di Lucania|Pietrafitta|Pietragalla|Pietralunga|Pietra Marazzi|Pietramelara|Pietranico|Pietrapaola|Pietrapertosa|Pietraperzia|Pietraporzio|Pietraroja|Pietrarubbia|Pietrasanta|Pietrastornina|Pietravairano|Pietrelcina|Pieve Di Teco|Pieve Emanuele|Pieve Albignola|Pieve A Nievole|Pieve Del Cairo|Pieve Di Cadore|Pieve Di Cento|Pieve Di Soligo|Pieve Ligure|Pieve Dolmi|Pieve Fosciana|Pievepelago|Pieve Porto Morone|Pieve San Giacomo|Pieve Santo Stefano|Pieve Tesino|Pieve Torina|Pieve Vergonte|Piglio|Pigna|Pignataro Maggiore|Pignataro Interamna|Pignola|Pignone|Pigra|Pila|Pimentel|Pimonte|Pinarolo Po|Pinasca|Pincara|Pinerolo|Pino Dasti|Pino Torinese|Pinzano Al Tagliamento|Pinzolo|Piobbico|Piobesi Dalba|Piobesi Torinese|Piode|Pioltello|Piombino|Piombino Dese|Pioraco|Piossasco|Piova Massaia|Piove Di Sacco|Piovene Rocchette|Piozzano|Piozzo|Priverno|Piraino|Pisa|Pisano|Pisoniano|Piscina|Pisciotta|Pisogne|Pisticci|Pistoia|Pitigliano|Piubega|Piuro|Piverone|Pizzale|Pizzighettone|Pizzo|Pizzoferrato|Pizzoli|Pizzone|Pizzoni|Placanica|Plataci|Platania|Plati|Taipana|Plesio|Ploaghe|Plodio|Pocapaglia|Pocenia|Podenzana|Podenzano|Pofi|Poggiardo|Poggibonsi|Poggio Rusco|Poggio A Caiano|Poggio Bustone|Poggio Catino|Poggiodomo|Poggiofiorito|Poggio Imperiale|Poggiomarino|Poggio Mirteto|Poggio Moiano|Poggio Nativo|Poggio Picenze|Poggioreale|Poggio Renatico|Poggiorsini|Poggio San Lorenzo|Poggio San Marcello|Pogliano Milanese|Pognana Lario|Pognano|Pogno|Pojana Maggiore|Poirino|Polaveno|Polcenigo|Polesella|Poli|Polia|Policoro|Polignano A Mare|San Pietro In Cerro|Polinago|Polino|Polistena|Polizzi Generosa|Polla|Pollein|Pollena Trocchia|Pollica|Pollina|Pollone|Pollutri|Polonghera|Polpenazze Del Garda|Polverara|Polverigi|Pomarance|Pomaretto|Pomarico|Pomaro Monferrato|Pomarolo|Pombia|Pomezia|Pomigliano Darco|Pompei|Pompeiana|Pompiano|Pomponesco|Pompu|Poncarale|Ponderano|Ponna|Ponsacco|Ponso|Pontassieve|Pont Canavese|Ponte|Ponte In Valtellina|Ponte Gardena|Pontebba|Ponte Buggianese|Pontecagnano Faiano|Pontecchio Polesine|Pontechianale|Pontecorvo|Pontecurone|Pontedassio|Ponte Dellolio|Pontedera|Ponte Di Legno|Ponte Di Piave|Ponte Lambro|Pontelandolfo|Pontelatone|Pontelongo|Ponte Nizza|Pontenure|Ponteranica|Pont Saint Martin|Ponte San Nicolo|Ponte San Pietro|Pontestura|Pontevico|Pontey|Ponti|Ponti Sul Mincio|Pontida|Pontinia|Pontinvrea|Pontirolo Nuovo|Pontoglio|Pontremoli|Ponza|Ponzano Monferrato|Ponzano Di Fermo|Ponzano Romano|Ponzano Veneto|Ponzone|Popoli|Poppi|Porano|Porcari|Porcia|Stella Cilento|Pordenone|Porlezza|Pornassio|Porpetto|Portacomaro|Portalbera|Porte|Portici|Portico Di Caserta|Portico E San Benedetto|Portigliola|Porto Ceresio|Porto Valtravaglia|Portobuffole|Portocannone|Portoferraio|Portofino|Portogruaro|Portomaggiore|Porto Mantovano|Porto Recanati|Porto San Giorgio|Porto Santelpidio|Portoscuso|Porto Tolle|Porto Torres|Portovenere|Porto Viro|Portula|Posada|Posina|Positano|Possagno|Posta|Posta Fibreno|Postal|Postalesio|Postiglione|Postua|Potenza|Pove Del Grappa|Povegliano|Povegliano Veronese|Poviglio|Povoletto|Pozzaglia Sabina|Pozzallo|Pozzilli|Pozzo Dadda|Pozzoleone|Pozzolengo|Pozzol Groppo|Pozzolo Formigaro|Pozzomaggiore|Pozzonovo|Pozzuoli|Pozzuolo Martesana|Pozzuolo Del Friuli|Pradalunga|Pradamano|Pradleves|Sasso Marconi|Pragelato|Pray|Praia A Mare|Praiano|Pralboino|Prali|Pralormo|Pralungo|Pramaggiore|Pramollo|Prarolo|Prarostino|Prasco|Prascorsano|Prata Di Principato Ultra|Prata Sannita|Prata Dansidonia|Prata Camportaccio|Prata Di Pordenone|Pratella|Pratiglione|Prato|Prato Sesia|Prato Carnico|Prato Allo Stelvio|Pratola Serra|Pratola Peligna|Pravisdomini|Prazzo|Samo|Precenicco|Preci|Predappio|Predazzo|Predoi|Predore|Predosa|Preganziol|Pregnana Milanese|Prela|Premana|Premariacco|Premeno|Premia|Premilcuore|Premolo|Premosello Chiovenda|Preone|Prepotto|Pre Saint Didier|Preseglie|Presenzano|Presezzo|Pressana|Pretoro|Prevalle|Prezza|Priero|Prignano Sulla Secchia|Prignano Cilento|Primaluna|Priocca|Priola|Prizzi|Proceno|Procida|Propata|Proserpio|Prossedi|Provaglio Val Sabbia|Provaglio Diseo|Proves|Provvidenti|Prunetto|Puegnago Sul Garda|Puglianello|Pula|Pulfero|Pulsano|Pumenengo|Pusiano|Putifigari|Putignano|Quadrelle|Quadri|Quagliuzzo|Qualiano|Quaranti|Quargnento|Quarna Sopra|Quarna Sotto|Quarona|Quarrata|Quart|Quarto|Quarto Daltino|Quartu Santelena|Quartucciu|Quassolo|Quattordio|Quattro Castella|Quiliano|Quincinetto|Quindici|Quingentole|Quintano|Quinto Di Treviso|Quinto Vercellese|Quinto Vicentino|Quinzano Doglio|Quistello|Rabbi|Racale|Racalmuto|Racconigi|Raccuja|Racines|Radda In Chianti|Raddusa|Radicofani|Radicondoli|Raffadali|Ragogna|Ragusa|Ruviano|Raiano|Ramacca|Rancio Valcuvia|Ranco|Randazzo|Ranica|Ranzanico|Ranzo|Rapagnano|Rapallo|Rapino|Rapolano Terme|Rapolla|Rapone|Rassa|Rasun Anterselva|Rasura|Ravanusa|Ravarino|Ravascletto|Ravello|Ravenna|Raveo|Raviscanina|Re|Rea|Realmonte|Reana Del Rojale|Reano|Recale|Recanati|Recco|Recetto|Recoaro Terme|Redavalle|Redondesco|Refrancore|Refrontolo|Regalbuto|Reggello|Reggio Nellemilia|Reggio Di Calabria|Reggiolo|Reino|Reitano|Remanzacco|Remedello|Renate|Rende|Renon|Resana|Rescaldina|Resia|Ercolano|Resiutta|Resuttano|Retorbido|Revello|Revigliasco Dasti|Revine Lago|Revo|Rezzago|Rezzato|Rezzo|Rezzoaglio|Val Rezzo|Rhemes Notre Dame|Rhemes Saint Georges|Rho|Riace|Rialto|Riano|Riardo|Ribera|Ribordone|Ricadi|Ricaldone|Riccia|Riccione|Ricco Del Golfo Di Spezia|Ricengo|Ricigliano|Riese Pio X|Riesi|Rieti|Rifiano|Rifreddo|Rignano Sullarno|Rignano Garganico|Rignano Flaminio|Rigolato|Rimella|Rimini|Rio Saliceto|Rio Di Pusteria|Riofreddo|Riola Sardo|Riolo Terme|Riolunato|Riomaggiore|Rionero In Vulture|Rionero Sannitico|Ripabottoni|Ripacandida|Ripalimosani|Ripalta Arpina|Ripalta Cremasca|Ripalta Guerina|Riparbella|Ripa Teatina|Ripatransone|Ripe San Ginesio|Ripi|Riposto|Rittana|Rivamonte Agordino|Riva Ligure|Riva Del Garda|Riva Di Solto|Rivalba|Rivalta Bormida|Rivalta Di Torino|Rivanazzano Terme|Riva Presso Chieri|Rivara|Rivarolo Canavese|Rivarolo Del Re Ed Uniti|Rivarolo Mantovano|Rivarone|Rivarossa|Rive|Rive Darcano|Rivello|Rivergaro|Rivisondoli|Rivodutri|Rivoli|Rivoli Veronese|Rivolta Dadda|Rizziconi|Roana|Roaschia|Roascio|Rovasenda|Roasio|Roatto|Robassomero|Robbio|Robecchetto Con Induno|Robecco Doglio|Robecco Sul Naviglio|Robecco Pavese|Robella|Robilante|Roburent|Rocca Pietore|Roccavaldina|Roccabascerana|Roccabernarda|Roccabianca|Roccabruna|Rocca Canavese|Rocca Canterano|Roccacasale|Roccafluvione|Rocca Ciglie|Rocca Darazzo|Rocca Darce|Roccadaspide|Rocca De Baldi|Rocca De Giorgi|Rocca Devandro|Rocca Di Botte|Rocca Di Cambio|Rocca Di Cave|Rocca Di Mezzo|Rocca Di Neto|Rocca Di Papa|Roccafiorita|Roccaforte Ligure|Roccaforte Mondovi|Roccaforte Del Greco|Roccaforzata|Roccafranca|Roccagiovine|Roccagloriosa|Roccagorga|Rocca Grimalda|Rocca Imperiale|Roccalbegna|Roccalumera|Roccamandolfi|Rocca Massima|Roccamena|Roccamonfina|Roccamontepiano|Roccamorice|Roccanova|Roccantica|Roccapalumba|Rocca Pia|Roccapiemonte|Rocca Priora|Roccarainola|Roccaraso|Roccaromana|Rocca San Casciano|Rocca San Felice|Rocca San Giovanni|Rocca Santa Maria|Rocca Santo Stefano|Roccascalegna|Roccasecca|Roccasecca Dei Volsci|Roccasicura|Rocca Sinibalda|Roccasparvera|Roccaspinalveti|Roccastrada|Rocca Susella|Roccaverano|Roccavignale|Roccavione|Roccavivara|Roccella Valdemone|Roccella Ionica|Rocchetta A Volturno|Rocchetta E Croce|Rocchetta Nervina|Rocchetta Di Vara|Rocchetta Belbo|Rocchetta Ligure|Rocchetta Palafea|Rocchetta Santantonio|Rocchetta Tanaro|Rodano|Roddi|Roddino|Rodello|Rodengo|Rodengo Saiano|Rodero|Rodi Milici|Rodi Garganico|Rodigo|Roe Volciano|Rofrano|Rogeno|Roggiano Gravina|Roghudi|Rogliano|Rognano|Rogno|Rogolo|Roiate|Roio Del Sangro|Roisan|Roletto|Rolo|Roma|Romagnano Sesia|Romagnano Al Monte|Romagnese|Romallo|Romana|Romanengo|Romano Di Lombardia|Romano Canavese|Romano Dezzelino|Romans Disonzo|Rombiolo|Romeno|Romentino|Rometta|Ronago|Ronca|Roncade|Roncadelle|Roncaro|Roncegno Terme|Roncello|Ronchi Dei Legionari|Ronchi Valsugana|Ronchis|Ronciglione|Roncobello|Ronco Scrivia|Ronco Briantino|Ronco Biellese|Ronco Canavese|Ronco Alladige|Roncoferraro|Roncofreddo|Roncola|Rondanina|Rondissone|Ronsecco|Ronzone|Roppolo|Rora|Roure|Rosa|Rosarno|Rosasco|Rosate|Rosazza|Rosciano|Roscigno|Rose|Rosello|Roseto Valfortore|Rosignano Monferrato|Rosignano Marittimo|Roseto Capo Spulico|Rosolina|Rosolini|Rosora|Rossa|Rossana|Rossano Veneto|Rossiglione|Rosta|Rota Dimagna|Rota Greca|Rotella|Rotello|Rotonda|Rotondella|Rotondi|Rottofreno|Rotzo|Rovato|Rovegno|Rovellasca|Rovello Porro|Roverbella|Roverchiara|Rovere Della Luna|Rovere Veronese|Roveredo In Piano|Roveredo Di Gua|Rovereto|Rovescala|Rovetta|Roviano|Rovigo|Rovito|Rovolon|Rozzano|Rubano|Rubiana|Rubiera|Ruda|Rudiano|Rueglio|Ruffano|Ruffia|Ruffre Mendola|Rufina|Rumo|Ruoti|Russi|Rutigliano|Rutino|Ruvo Di Puglia|Ruvo Del Monte|Sabaudia|Sabbio Chiese|Sabbioneta|Sacco|Saccolongo|Sacile|Sacrofano|Sadali|Sagama|Sagliano Micca|Sagrado|Sagron Mis|Saint Christophe|Saint Denis|Saint Marcel|Saint Nicolas|Saint Oyen|Saint Pierre|Saint Rhemy En Bosses|Saint Vincent|Sala Monferrato|Sala Bolognese|Sala Comacina|Sala Biellese|Sala Baganza|Sala Consilina|Salbertrand|Salento|Salandra|Salaparuta|Salara|Salasco|Salassa|Salcito|Sale|Sale Delle Langhe|Sale Marasino|Salemi|Salerano Sul Lambro|Salerano Canavese|Salerno|Sale San Giovanni|Salgareda|Sali Vercellese|Salice Salentino|Saliceto|San Mauro Di Saline|Salisano|Salizzole|Salle|Salmour|Salo|Salorno|Salsomaggiore Terme|Saltrio|Saludecio|Saluggia|Salussola|Saluzzo|Salve|Savoia Di Lucania|Salvirola|Salvitelle|Salza Irpina|Salza Di Pinerolo|Salzano|Samarate|Samassi|Samatzai|Sambuca Di Sicilia|Sambuca Pistoiese|Sambuci|Sambuco|Sammichele Di Bari|Samolaco|Samone|Samone|Sampeyre|Samugheo|Sanarica|San Bartolomeo Val Cavargna|San Bartolomeo Al Mare|San Bartolomeo In Galdo|San Basile|San Basilio|San Bassano|San Bellino|San Benedetto Del Tronto|San Benedetto Belbo|San Benedetto Po|San Benedetto Dei Marsi|San Benedetto In Perillis|San Benedetto Ullano|San Benigno Canavese|San Bernardino Verbano|San Biagio Platani|San Biagio Saracinisco|San Biagio Della Cima|San Biagio Di Callalta|San Biase|San Bonifacio|San Buono|San Calogero|San Candido|San Canzian Disonzo|San Carlo Canavese|San Casciano Dei Bagni|San Casciano In Val Di Pesa|San Cataldo|San Cesario Di Lecce|San Cesario Sul Panaro|San Chirico Nuovo|San Chirico Raparo|San Cipirello|San Cipriano Daversa|San Cipriano Po|San Cipriano Picentino|San Clemente|San Colombano Certenoli|San Colombano Al Lambro|San Colombano Belmonte|San Cono|San Cosmo Albanese|San Costantino Calabro|San Costantino Albanese|San Costanzo|San Cristoforo|San Damiano Dasti|San Damiano Macra|San Damiano Al Colle|San Daniele Po|San Daniele Del Friuli|San Demetrio Corone|San Demetrio Ne Vestini|San Didero|Sandigliano|San Donaci|San Dona Di Piave|San Donato Val Di Comino|San Donato Di Ninea|San Donato Di Lecce|San Donato Milanese|Sandrigo|San Fele|San Felice Del Molise|San Felice A Cancello|San Felice Sul Panaro|San Felice Circeo|San Felice Del Benaco|San Ferdinando Di Puglia|San Fermo Della Battaglia|San Fili|San Filippo Del Mela|San Fior|San Fiorano|San Floriano Del Collio|San Floro|San Francesco Al Campo|Aglientu|San Fratello|Sanfre|Sanfront|Sangano|San Gavino Monreale|San Gemini|San Genesio Atesino|San Genesio Ed Uniti|San Gennaro Vesuviano|San Germano Vercellese|San Germano Chisone|San Gervasio Bresciano|San Giacomo Degli Schiavoni|San Giacomo Filippo|San Giacomo Delle Segnate|Sangiano|San Gillio|San Gimignano|San Ginesio|Sangineto|San Giorgio Monferrato|San Giorgio A Liri|San Giorgio Albanese|San Giorgio Ionico|San Giorgio Bigarello|San Giorgio Su Legnano|San Giorgio Di Lomellina|San Giorgio Piacentino|San Giorgio Lucano|San Giorgio Morgeto|San Giorgio Canavese|San Giorgio Della Richinvelda|San Giorgio A Cremano|San Giorgio Delle Pertiche|San Giorgio Del Sannio|San Giorgio Di Nogaro|San Giorgio Di Piano|San Giorgio In Bosco|San Giorgio La Molara|San Giorgio Scarampi|San Giorio Di Susa|San Giovanni Valdarno|San Giovanni Di Gerace|San Giovanni Al Natisone|San Giovanni A Piro|San Giovanni Bianco|San Giovanni Del Dosso|Villa San Giovanni In Tuscia|San Giovanni Gemini|San Giovanni Ilarione|San Giovanni Incarico|San Giovanni In Croce|San Giovanni In Fiore|San Giovanni In Galdo|San Giovanni In Marignano|San Giovanni La Punta|San Giovanni Lipioni|San Giovanni Lupatoto|San Giovanni Rotondo|San Giuliano Del Sannio|San Giuliano Di Puglia|San Giuliano Milanese|San Giuseppe Vesuviano|San Giuseppe Jato|San Giustino|San Giusto Canavese|San Godenzo|San Gregorio Nelle Alpi|San Gregorio Matese|San Gregorio Di Catania|San Gregorio Dippona|San Gregorio Da Sassola|San Gregorio Magno|Sanguinetto|San Lazzaro Di Savena|San Leo|San Leonardo|San Leonardo In Passiria|San Leucio Del Sannio|San Lorenzello|San Lorenzo Di Sebato|San Lorenzo Al Mare|San Lorenzo In Campo|San Lorenzo|San Lorenzo Bellizzi|San Lorenzo Del Vallo|San Lorenzo Isontino|San Lorenzo Maggiore|San Lorenzo Nuovo|San Luca|San Lucido|San Lupo|Sanluri|San Mango Sul Calore|San Mango Daquino|San Mango Piemonte|San Marcellino|San Marcello|San Marco Argentano|San Marco Dalunzio|San Marco Dei Cavoti|San Marco In Lamis|San Marco La Catola|San Martino Alfieri|San Martino In Badia|San Martino In Passiria|San Martino In Pensilis|San Martino Sulla Marrucina|San Martino Di Finita|San Martino Dagri|San Martino Di Venezze|San Martino Canavese|San Martino Al Tagliamento|San Martino Sannita|San Martino Buon Albergo|San Martino Dallargine|San Martino Del Lago|San Martino Di Lupari|San Martino In Rio|San Martino In Strada|San Martino Siccomario|San Martino Valle Caudina|San Marzano Oliveto|San Marzano Di San Giuseppe|San Marzano Sul Sarno|San Massimo|San Maurizio Canavese|San Maurizio Dopaglio|San Mauro Marchesato|San Mauro Pascoli|San Mauro Castelverde|San Mauro Forte|San Mauro Torinese|San Mauro Cilento|San Mauro La Bruca|San Michele Di Serino|San Michele Di Ganzaria|San Michele Mondovi|San Michele Al Tagliamento|San Michele Alladige|San Michele Salentino|San Miniato|Sannazzaro De Burgondi|San Nazzaro|San Nazzaro Val Cavargna|San Nazzaro Sesia|Sannicandro Di Bari|San Nicandro Garganico|San Nicola La Strada|San Nicola Dellalto|San Nicola Da Crissa|Sannicola|San Nicola Arcella|San Nicola Baronia|San Nicola Manfredi|San Nicolo Di Comelico|San Pancrazio|San Pancrazio Salentino|San Paolo Di Jesi|San Paolo Di Civitate|San Paolo Bel Sito|San Paolo Solbrito|San Pellegrino Terme|San Pier Disonzo|San Pier Niceto|San Piero Patti|San Pietro Di Cadore|San Pietro Al Tanagro|San Pietro Val Lemina|San Pietro Al Natisone|San Pietro A Maida|San Pietro Apostolo|San Pietro Avellana|San Pietro Clarenza|San Pietro Di Carida|San Pietro Di Feletto|San Pietro Di Morubio|San Pietro In Gu|San Pietro In Amantea|San Pietro In Cariano|San Pietro In Casale|San Pietro Infine|San Pietro In Guarano|San Pietro In Lama|San Pietro Mosezzo|San Pietro Mussolino|Villa San Pietro|San Pietro Vernotico|San Pietro Viminario|San Pio Delle Camere|San Polo Matese|San Polo Denza|San Polo Di Piave|San Polo Dei Cavalieri|San Ponso|San Possidonio|San Potito Ultra|San Potito Sannitico|San Prisco|San Procopio|San Prospero|San Quirico Dorcia|San Quirino|San Raffaele Cimena|Sanremo|San Roberto|San Rocco Al Porto|San Romano In Garfagnana|San Rufo|San Salvatore Monferrato|San Salvatore Telesino|San Salvatore Di Fitalia|San Salvo|San Sebastiano Curone|San Sebastiano Al Vesuvio|San Sebastiano Da Po|San Secondo Parmense|San Secondo Di Pinerolo|Sansepolcro|San Severino Marche|San Severino Lucano|San Severo|San Siro|San Sossio Baronia|San Sostene|San Sosti|San Sperate|Santa Brigida|Santa Caterina Villarmosa|Santa Caterina Dello Ionio|Santa Caterina Albanese|Santa Cesarea Terme|Santa Cristina Valgardena|Santa Cristina Gela|Santa Cristina E Bissone|Santa Cristina Daspromonte|Santa Croce Sullarno|Santa Croce Camerina|Santa Croce Del Sannio|Santa Croce Di Magliano|Santadi|Santa Domenica Talao|Santa Domenica Vittoria|Santa Elisabetta|Santa Fiora|Santa Flavia|Santagapito|Santagata Fossili|Santagata Bolognese|Santagata Di Esaro|Santagata Di Puglia|Santagata Sul Santerno|Santagata De Goti|Santagata Del Bianco|Santagata Di Militello|Santagata Feltria|Santagata Li Battiati|Santa Giuletta|Santa Giusta|Santa Giustina|Santa Giustina In Colle|Santagnello|Santalbano Stura|Santalessio Con Vialone|Santalessio In Aspromonte|Santalessio Siculo|Santalfio|Santa Luce|Santa Lucia Di Serino|Santa Lucia Del Mela|Santa Lucia Di Piave|Santa Margherita Di Belice|Santa Margherita Ligure|Santa Margherita Di Staffora|Santa Maria A Monte|Santa Maria A Vico|Santa Maria Capua Vetere|Travaco Siccomario|Santa Maria Della Versa|Santa Maria Del Molise|Santa Maria Di Licodia|Santa Maria Di Sala|Santa Maria Hoe|Santa Maria Imbaro|Santa Maria La Fossa|Santa Maria La Longa|Santa Maria Maggiore|Santa Maria Nuova|Santa Marina|Santa Marina Salina|Santa Marinella|Santambrogio Sul Garigliano|Santambrogio Di Torino|Santambrogio Di Valpolicella|Santomenna|San Tammaro|Santanastasia|Santanatolia Di Narco|Santandrea Di Conza|Santandrea Del Garigliano|Santandrea Apostolo Dello Ionio|Santandrea Frius|Santangelo Dalife|Santangelo Lodigiano|Santangelo Di Piove Di Sacco|Santangelo Lomellina|Santangelo A Cupolo|Santangelo A Fasanella|Santangelo Allesca|Santangelo A Scala|Santangelo Dei Lombardi|Santangelo Del Pesco|Santangelo Di Brolo|Santangelo Romano|Santangelo In Pontano|Santangelo In Vado|Santangelo Le Fratte|Santangelo Limosano|Santangelo Muxaro|Santa Ninfa|Santanna Dalfaedo|Santantimo|Santantioco|Santantonino Di Susa|Villa Santantonio|Santantonio Abate|Santa Paolina|Santapollinare|Santarcangelo Di Romagna|Santarcangelo|Santarpino|Santarsenio|Santa Severina|Santa Sofia Depiro|Santa Sofia|Santa Teresa Di Riva|Santa Teresa Gallura|Santa Venerina|Santa Vittoria In Matenano|Santa Vittoria Dalba|Santegidio Del Monte Albino|Santegidio Alla Vibrata|Santelena|Santelia A Pianisi|Santelia Fiumerapido|Vallefiorita|Santelpidio A Mare|Sante Marie|Santena|San Teodoro|San Teodoro|Santeramo In Colle|Santeufemia A Maiella|Santeufemia Daspromonte|Santeusanio Del Sangro|Santeusanio Forconese|Santhia|Santi Cosma E Damiano|Santilario Dello Ionio|Santilario Denza|Santippolito|Santolcese|San Tomaso Agordino|Santomero|Santonofrio|Santopadre|Santoreste|Santorso|Santorsola Terme|Santo Stefano Quisquina|Santo Stefano Del Sole|Santo Stefano Di Rogliano|Santo Stefano Di Sessanio|Santo Stefano Ticino|Santo Stefano Lodigiano|Santo Stefano Di Magra|Villa Santo Stefano|Santo Stefano Al Mare|Santo Stefano Belbo|Santo Stefano Daveto|Santo Stefano Di Camastra|Santo Stefano In Aspromonte|Santo Stefano Roero|San Stino Di Livenza|Santu Lussurgiu|Santurbano|San Valentino In Abruzzo Citeriore|San Valentino Torio|San Venanzo|San Vendemiano|San Vero Milis|San Vincenzo La Costa|San Vincenzo Valle Roveto|San Vincenzo|San Vitaliano|San Vito Di Cadore|San Vito Sullo Ionio|San Vito Chietino|San Vito Dei Normanni|San Vito Romano|San Vito Di Leguzzano|San Vito|San Vito Al Tagliamento|San Vito Al Torre|San Vito Di Fagagna|San Vito Lo Capo|San Vittore Del Lazio|San Vittore Olona|Sanza|Sanzeno|San Zeno Naviglio|San Zeno Di Montagna|San Zenone Al Lambro|San Zenone Al Po|San Zenone Degli Ezzelini|Saonara|Saponara|Sappada|Sapri|Saracena|Saracinesco|Sarcedo|Sarconi|Sardara|Sardigliano|Sarego|Sarentino|Sarezzano|Sarezzo|Sarmato|Sarmede|Sarnano|Sarnico|Sarno|Sarnonico|Saronno|Sarre|Sarroch|Sarsina|Sarteano|Sartirana Lomellina|Sarule|Sarzana|Sassano|Sassari|Sassello|Sassetta|Sassinoro|Sasso Di Castalda|Sassofeltrio|Sassoferrato|Sassuolo|Satriano|Sauris|Sauze Di Cesana|Sauze Doulx|Sava|Savelli|Saviano|Savigliano|Savignano Irpino|Savignano Sul Rubicone|Savignano Sul Panaro|Savignone|Saviore Delladamello|Savoca|Savogna|Savogna Disonzo|Savona|Scafa|Scafati|Scagnello|Scala Coeli|Scala|Scaldasole|Scalea|Scalenghe|Scaletta Zanclea|Scampitella|Scandale|Scandiano|Scandolara Ravara|Scandolara Ripa Doglio|Scandriglia|Scanno|Scano Di Montiferro|Scansano|Scanzorosciate|Scapoli|Scarlino|Scarmagno|Scarnafigi|Scena|Scerni|Scheggia E Pascelupo|Scheggino|Schiavi Di Abruzzo|Schiavon|Schignano|Schilpario|Schio|Schivenoglia|Sciacca|Sciara|Scicli|Scido|Scilla|Scillato|Sciolze|Scisciano|Sclafani Bagni|Scontrone|Scopa|Scopello|Scoppito|Scordia|Scorrano|Scorze|Scurcola Marsicana|Scurelle|Scurzolengo|Seborga|Secinaro|Secli|Secugnago|Sedegliano|Sedico|Sedilo|Sedini|Sedriano|Sedrina|Sefro|Segariu|Seggiano|Segni|Segonzano|Segrate|Segusino|Selargius|Selci|Selegas|Sellano|Sellero|Sellia|Sellia Marina|Selva Di Val Gardena|Selva Di Cadore|Selva Dei Molini|Selva Di Progno|Selvazzano Dentro|Selvino|Semestene|Semiana|Seminara|Semproniano|Senago|Senale San Felice|Senales|Seneghe|Senerchia|Seniga|Senigallia|Senis|Senise|Senna Comasco|Senna Lodigiana|Sennariolo|Sennori|Senorbi|Sepino|Sequals|Seravezza|Serdiana|Seregno|Seren Del Grappa|Sergnano|Seriate|Serina|Serino|Serle|Sermide E Felonica|Sirmione|Sermoneta|Sernaglia Della Battaglia|Sernio|Serole|Serra San Bruno|Serra Ricco|Serracapriola|Serra Daiello|Serra De Conti|Serradifalco|Serralunga Di Crea|Serralunga Dalba|Serramanna|Serramezzana|Serramonacesca|Serrapetrona|Serrara Fontana|Serra San Quirico|Serra Santabbondio|Serrastretta|Serrata|Serravalle Scrivia|Serravalle Langhe|Serravalle Pistoiese|Serravalle Di Chienti|Serravalle A Po|Serravalle Sesia|Serre|Serrenti|Serri|Serrone|Sersale|Sovramonte|Sessa Aurunca|Sessa Cilento|Sessame|Sessano Del Molise|Sestino|Sesto Campano|Sesto Ed Uniti|Sesto Fiorentino|Sesto Al Reghena|Sesto|Sesto Calende|Sestola|Sesto San Giovanni|Sestriere|Sestri Levante|Sestu|Settala|Settefrati|Settime|Settimo San Pietro|Settimo Milanese|Settimo Rottaro|Settimo Vittone|Settimo Torinese|Settingiano|Setzu|Seui|Seulo|Seveso|Sezzadio|Sezze|Sfruz|Sgonico Zgonik|Sgurgola|Siamaggiore|Siamanna|Siano|Siapiccia|Siculiana|Siddi|Siderno|Siena|Sigillo|Signa|Silandro|Silanus|Siligo|Siliqua|Silius|Sillavengo|Silvano Dorba|Silvano Pietra|Silvi|Simala|Simaxis|Simbario|Simeri Crichi|Sinagra|Sindia|Sini|Sinio|Siniscola|Sinnai|Sinopoli|Siracusa|Sirignano|Siris|Sirolo|Sirone|Sirtori|Siurgus Donigala|Sizzano|Sluderno|Smerillo|Soave|Socchieve|Soddi|Sogliano Al Rubicone|Sogliano Cavour|Soglio|Soiano Del Lago|Solagna|Solarino|Solaro|Solarolo|Solarolo Rainerio|Solarussa|Solbiate Arno|Solbiate Olona|Soldano|Soleminis|Solero|Solesino|Soleto|Solferino|Soliera|Solignano|Sulmona|Solofra|Solonghello|Solopaca|Solto Collina|Solza|Somaglia|Somano|Somma Lombardo|Somma Vesuviana|Sommacampagna|Sommariva Del Bosco|Sommariva Perno|Sommatino|Sommo|Sona|Soncino|Sondalo|Sondrio|Songavazzo|Sonico|Sonnino|Sora|Soraga Di Fassa|Soragna|Sorano|Sorbo Serpico|Sorbo San Basile|Sordevolo|Sordio|Soresina|Sorga|Sorgono|Sori|Sorianello|Soriano Calabro|Soriano Nel Cimino|Sorico|Soriso|Sorisole|Sormano|Sorradile|Sorrento|Sorso|Sortino|Sospiro|Sospirolo|Sossano|Sostegno|Sotto Il Monte Giovanni Xxiii|Sover|Soverato|Sovere|Soveria Mannelli|Soveria Simeri|Soverzene|Sovicille|Sovico|Sovizzo|Sozzago|Spadafora|Spadola|Sparanise|Sparone|Specchia|Spello|Sperlinga|Sperlonga|Sperone|Spessa|Spezzano Albanese|Spezzano Della Sila|Spiazzo|Spigno Monferrato|Spigno Saturnia|Spilamberto|Spilimbergo|Spilinga|Spinadesco|Spinazzola|Spinea|Spineda|Spinete|Spineto Scrivia|Spinetoli|Spino Dadda|Spinone Al Lago|Spinoso|Spirano|Spoleto|Spoltore|Spongano|Spormaggiore|Sporminore|Spotorno|Spresiano|Spriana|Squillace|Squinzano|Staffolo|Stagno Lombardo|Staiti|Staletti|Stanghella|Staranzano|Stazzano|Stazzema|Stazzona|Stefanaconi|Stella|Stellanello|Stelvio|Stenico|Sternatia|Stezzano|Stienta|Stigliano|Stignano|Stilo|Stimigliano|Stio|Stornara|Stornarella|Storo|Stra|Stradella|Strambinello|Strambino|Strangolagalli|Stregna|Strembo|Stresa|Strevi|Striano|Strona|Stroncone|Strongoli|Stroppiana|Stroppo|Strozza|Sturno|Subbiano|Subiaco|Succivo|Sueglio|Suelli|Suello|Suisio|Sulbiate|Sulzano|Sumirago|Summonte|Suni|Suno|Supersano|Supino|Surano|Surbo|Susa|Susegana|Sustinente|Sutera|Sutri|Sutrio|Suvereto|Suzzara|Taceno|Tadasuni|Taggia|Tagliacozzo|Taglio Di Po|Tagliolo Monferrato|Taibon Agordino|Taino|Talamello|Talamona|Talana|Taleggio|Talla|Talmassons|Tambre|Taormina|Tarano|Taranta Peligna|Tarantasca|Taranto|Tarcento|Tarsia|Tartano|Tarvisio|Tarzo|Tassarolo|Taurano|Taurasi|Taurianova|Taurisano|Tavagnacco|Tavagnasco|Tavenna|Taverna|Tavernerio|Tavernola Bergamasca|Taviano|Tavigliano|Tavoleto|Tavullia|Teana|Teano|Teglio|Teglio Veneto|Telese Terme|Telgate|Telti|Telve|Telve Di Sopra|Tempio Pausania|Temu|Tenna|Tenno|Teolo|Teora|Teramo|Terdobbiate|Terelle|Terento|Terlano|Terlizzi|Termeno Sulla Strada Del Vino|Termini Imerese|Termoli|Ternate|Ternengo|Terni|Terno Disola|Terracina|Terragnolo|Terralba|Terranuova Bracciolini|Terranova Da Sibari|Terranova Dei Passerini|Terranova Di Pollino|Terranova Sappo Minulio|Terrasini|Terrassa Padovana|Terravecchia|Terrazzo|Terricciola|Terruggia|Tertenia|Terzigno|Terzo|Terzo Daquileia|Terzolas|Terzorio|Tesero|Tesimo|Tessennano|Testico|Teti|Teulada|Teverola|Tezze Sul Brenta|Thiene|Thiesi|Tiana|Ticengo|Ticineto|Tiggiano|Tiglieto|Tigliole|Tignale|Tinnura|Tione Degli Abruzzi|Tione Di Trento|Tirano|Tires|Tiriolo|Tirolo|Tissi|Tito|Tivoli|Tizzano Val Parma|Toano|Tocco Caudio|Tocco Da Casauria|Toceno|Todi|Toffia|Toirano|Tolentino|Tolfa|Tollegno|Tollo|Tolmezzo|Tolve|Tombolo|Ton|Tonara|Tonco|Tonengo|Tora E Piccilli|Torano Castello|Torano Nuovo|Torbole Casaglia|Torcegno|Torchiara|Torchiarolo|Torella Dei Lombardi|Torella Del Sannio|Torgiano|Torgnon|Torino Di Sangro|Torino|Toritto|Torlino Vimercati|Tornaco|Tornareccio|Tornata|Tornimparte|Torno|Tornolo|Toro|Torpe|Torraca|Torralba|Torrazza Coste|Torrazza Piemonte|Torrazzo|Torre Di Ruggiero|Torre Mondovi|Torre Cajetani|Torre Di Santa Maria|Torre Annunziata|Torreano|Torre Canavese|Torrebelvicino|Torre Beretti E Castellaro|Torre Boldone|Torre Bormida|Torrebruna|Torrecuso|Torre Darese|Torre De Busi|Torre De Picenardi|Torre Del Greco|Torre De Negri|Torre De Passeri|Torre De Roveri|Torre Di Mosto|Torre Disola|Torreglia|Torregrotta|Torre Le Nocelle|Torremaggiore|Torre Orsaia|Torre Pallavicina|Torre Pellice|Torre San Giorgio|Torre San Patrizio|Torre Santa Susanna|Torresina|Torretta|Torrevecchia Teatina|Torrevecchia Pia|Torri In Sabina|Torri Del Benaco|Torrice|Torricella Peligna|Torricella Verzate|Torricella In Sabina|Torricella|Torricella Sicura|Torricella Del Pizzo|Torri Di Quartesolo|Torriglia|Torrile|Torrioni|Torrita Tiberina|Torrita Di Siena|Tortona|Tortora|Tortorella|Tortoreto|Tortorici|Torviscosa|Tuscania|Toscolano Maderno|Tossicia|Tovo San Giacomo|Tovo Di Santagata|Trabia|Tradate|Tramatza|Trambileno|Tramonti|Tramonti Di Sopra|Tramonti Di Sotto|Tramutola|Trana|Trani|Traona|Trapani|Trappeto|Trarego Viggiona|Trasacco|Trasaghis|Trasquera|Tratalias|Travagliato|Traves|Travedona Monate|Traversella|Traversetolo|Travesio|Travo|Trebaseleghe|Trebisacce|Trecastagni|Trecate|Trecchina|Trecenta|Tredozio|Treglio|Tregnago|Treia|Treiso|Tremestieri Etneo|Tremosine Sul Garda|Trentinara|Trento|Trentola Ducenta|Trenzano|Treppo Grande|Trepuzzi|Trequanda|Tresana|Trescore Balneario|Trescore Cremasco|Tresivio|Tresnuraghes|Trevenzuolo|Trevi|Trevi Nel Lazio|Trevico|Treviglio|Trevignano Romano|Trevignano|Treville|Treviolo|Treviso Bresciano|Treviso|Trezzano Rosa|Trezzano Sul Naviglio|Trezzo Tinella|Trezzo Sulladda|Trezzone|Tribano|Tribiano|Tribogna|Tricarico|Tricase|Tricerro|Tricesimo|Triei|Trieste|Triggiano|Trigolo|Trinita|Trinita Dagultu E Vignola|Trino|Triora|Tripi|Trisobbio|Trissino|Triuggio|Trivento|Trivigliano|Trivignano Udinese|Trivigno|Trivolzio|Trodena Nel Parco Naturale|Trofarello|Troia|Troina|Tromello|Trontano|Tronzano Vercellese|Tropea|Trovo|Truccazzano|Tubre|Tufara|Tufillo|Tufino|Tufo|Tuglie|Tuili|Tula|Tuoro Sul Trasimeno|Valvestino|Turano Lodigiano|Turate|Turbigo|Turi|Turri|Turriaco|Turrivalignani|Tursi|Tusa|Uboldo|Ucria|Udine|Ugento|Uggiano La Chiesa|Uggiate Trevano|Ula Tirso|Ulassai|Ultimo|Umbriatico|Urago Doglio|Uras|Urbana|Urbania|Urbe|Urbino|Urbisaglia|Urgnano|Uri|Ururi|Urzulei|Uscio|Usellus|Usini|Usmate Velate|Ussana|Ussaramanna|Ussassai|Usseaux|Usseglio|Ussita|Ustica|Uta|Uzzano|Vaccarizzo Albanese|Vacone|Vacri|Vadena|Vado Ligure|Vaglia|Vaglio Serra|Vaglio Basilicata|Vagli Sotto|Vaiano Cremasco|Vaiano|Vaie|Vailate|Vairano Patenora|Valbondione|Valbrembo|Valbrevenna|Valbrona|Valdagno|Valdaora|Valdastico|Val Della Torre|Valdengo|Valdidentro|Valdieri|Valdina|Val Di Nizza|Valdisotto|Val Di Vizze|Valdobbiadene|Valduggia|Valeggio Sul Mincio|Valeggio|Valentano|Valenza|Valenzano|Valera Fratta|Valfabbrica|Valfenera|Valfloriana|Valfurva|Valganna|Valgioie|Valgoglio|Valgrana|Valgreghentino|Valgrisenche|Valguarnera Caropepe|Vallada Agordina|Vallanzengo|Vallarsa|Vallata|Valle Di Cadore|Valle Di Maddaloni|Valle Lomellina|Valle Agricola|Valle Aurina|Vallebona|Valle Castellana|Vallecorsa|Vallecrosia|Valle Di Casies|Valledolmo|Valledoria|Vallemaio|Vallelonga|Vallelunga Pratameno|Vallepietra|Vallerano|Vallermosa|Vallerotonda|Vallesaccarda|Valle Salimbene|Valle San Nicolao|Valleve|Valli Del Pasubio|Vallinfreda|Vallio Terme|Vallo Di Nera|Vallo Della Lucania|Vallo Torinese|Valloriate|Valmacca|Valmadrera|Val Masino|Valmontone|Valmorea|Valmozzola|Valnegra|Valpelline|Valperga|Valsavarenche|Valstrona|Valtopina|Valtournenche|Valtorta|Valva|Valverde|Vandoies|Vanzaghello|Vanzago|Vanzone Con San Carlo|Vaprio Dadda|Vaprio Dagogna|Varallo|Varallo Pombia|Varano Borghi|Varano De Melegari|Varapodio|Varazze|Varco Sabino|Varedo|Varena|Varenna|Varese Ligure|Varese|Varisella|Varmo|Varna|Varsi|Varzi|Varzo|Vasia|Vastogirardi|Vauda Canavese|Vazzano|Vazzola|Vecchiano|Vedano Olona|Vedano Al Lambro|Vedelago|Vedeseta|Veduggio Con Colzano|Veggiano|Veglie|Veglio|Vejano|Veleso|Velezzo Lomellina|Velletri|Vellezzo Bellini|Velo Veronese|Velo Dastico|Velturno|Venafro|Venaus|Venaria Reale|Venarotta|Venasca|Vendone|Vendrogno|Venegono Inferiore|Venegono Superiore|Venetico|Venezia|Veniano|Venosa|Venticano|Ventimiglia Di Sicilia|Ventimiglia|Ventotene|Venzone|Verano Brianza|Verano|Verbania|Verbicaro|Vercana|Verceia|Vercelli|Vercurago|Verdellino|Verdello|Verduno|Vergato|Verghereto|Vergiate|Vermiglio|Vernante|Vernasca|Vernate|Vernazza|Vernio|Vernole|Verolanuova|Verolavecchia|Verolengo|Veroli|Verona|Verrayes|Verretto|Verrone|Verrua Savoia|Verrua Po|Vertemate Con Minoprio|Vertova|Verucchio|Vervio|Verzegnis|Verzino|Verzuolo|Vescovana|Vescovato|Vesime|Vespolate|Vessalico|Vestenanova|Vestigne|Vestone|Vetralla|Vetto|Vezza Doglio|Vezza Dalba|Vezzano Ligure|Vezzano Sul Crostolo|Vezzi Portio|Viadana|Viadanica|Viagrande|Viale|Vialfre|Viano|Viareggio|Viarigi|Vibonati|Vicalvi|Vicari|Vicchio|Vicenza|Vicoforte|Vico Del Gargano|Vico Nel Lazio|Villa Literno|Vico Equense|Vicoli|Vicolungo|Ziano Piacentino|Vicopisano|Vicovaro|Vidigulfo|Vidor|Vidracco|Vieste|Vietri Di Potenza|Vietri Sul Mare|Vigano San Martino|Vigano|Vigarano Mainarda|Vigasio|Vigevano|Viggianello|Viggiano|Viggiu|Vighizzolo Deste|Vigliano Dasti|Vigliano Biellese|Vignale Monferrato|Vignanello|Vignate|Vignola|Vignola Falesina|Vignole Borbera|Vignolo|Vignone|Vigo Di Cadore|Vigodarzere|Vigolo|Vigolzone|Vigone|Vigonovo|Vigonza|Viguzzolo|Villa Santa Lucia|Villadossola|Villa Di Chiavenna|Villa Di Tirano|Villa Santina|Villa Bartolomea|Villa Basilica|Villabassa|Villabate|Villa Biscossi|Villa Carcina|Villa Castelli|Villa Celiera|Villachiara|Villacidro|Villa Collemandina|Villa Cortese|Villa Dadda|Villadeati|Villa Del Bosco|Villa Del Conte|Villa Di Serio|Villa Estense|Villa Dogna|Villadose|Villafalletto|Villa Faraldi|Villafranca Sicula|Villafranca Dasti|Villafranca In Lunigiana|Villafranca Padovana|Villafranca Piemonte|Villafranca Di Verona|Villafranca Tirrena|Villafrati|Villaga|Villagrande Strisaili|Villa Guardia|Villa Lagarina|Villalago|Villalba|Villalfonsina|Villalvernia|Villamagna|Villamaina|Villamar|Villamarzana|Villamassargia|Villa Minozzo|Villamiroglio|Villandro|Villanova Monferrato|Villanova Del Battista|Villanova Mondovi|Villanova Dalbenga|Villanova Del Sillaro|Villanova Biellese|Villanova Di Camposampiero|Villanova Sullarda|Villeneuve|Villanova Canavese|Villanova Dardenghi|Villanova Dasti|Villanova Del Ghebbo|Villanovaforru|Villanovafranca|Villanova Marchesana|Villanova Monteleone|Villanova Solaro|Villanova Truschedu|Villanova Tulo|Villanterio|Villanuova Sul Clisi|Villaputzu|Villar Dora|Villarbasse|Villarboit|Villareggia|Villar Focchiardo|Villaromagnano|Villarosa|Villar Pellice|Villar Perosa|Villar San Costanzo|Villasalto|Villasanta|Villa San Giovanni|Villa San Secondo|Villa Santa Lucia Degli Abruzzi|Villa Santa Maria|Villa Santangelo|Villasor|Villaspeciosa|Villastellone|Villata|Villaurbana|Villavallelonga|Villaverla|Villetta Barrea|Villette|Villesse|Villimpenta|Villongo|Villorba|Vilminore Di Scalve|Vimercate|Vimodrone|Vinadio|Vinchiaturo|Vinchio|Vinci|Vinovo|Vinzaglio|Viola|Vione|Vipiteno|Virle Piemonte|Visano|Vische|Visciano|Visco|Visone|Visso|Vistarino|Vistrorio|Vita|Viterbo|Viticuso|Vito Dasio|Vitorchiano|Vittoria|Vittorio Veneto|Vittorito|Vittuone|Vitulazio|Vitulano|Viu|Vivaro Romano|Vivaro|Viverone|Vizzini|Vizzola Ticino|Vizzolo Predabissi|Vo|Vobarno|Vobbia|Vocca|Vodo Cadore|Voghera|Voghiera|Vogogna|Volano|Volla|Volongo|Volpago Del Montello|Volpara|Volpedo|Volpeglino|Volpiano|Voltaggio|Voltago Agordino|Volta Mantovana|Volterra|Voltido|Volturara Irpina|Volturara Appula|Volturino|Volvera|Vottignasco|Zaccanopoli|Zafferana Etnea|Zagarise|Zagarolo|Zambrone|Zandobbio|Zane|Zanica|Zavattarello|Zeccone|Zeddiani|Zelbio|Zelo Buon Persico|Zeme|Zenevredo|Zenson Di Piave|Zerba|Zerbo|Zerbolo|Zerfaliu|Zeri|Zermeghedo|Zero Branco|Zevio|Ziano Di Fiemme|Zibido San Giacomo|Zignago|Zimella|Zimone|Zinasco|Zoagli|Zocca|Zogno|Zola Predosa|Zollino|Zone|Zoppe Di Cadore|Zoppola|Zovencedo|Zubiena|Zuccarello|Zugliano|Zuglio|Zumaglia|Zumpano|Zungoli|Zungri|Lariano|Lamezia Terme|Santanna Arresi|Terme Vigliatore|Acquedolci|Ladispoli|Ardea|Badesi|Sicignano Degli Alburni|Molina Aterno|Scanzano Jonico|Portopalo Di Capo Passero|Avigliano Umbro|Viddalba|Casapesenna|Castro|Cellole|Porto Cesareo|San Cassiano|Vajont|Ordona|Zapponeta|Blufi|Paterno|Masainas|Mazzarrone|Ciampino|Santa Maria La Carita|Golfo Aranci|Loiri Porto San Paolo|Santantonio Di Gallura|San Ferdinando|Villaperuccio|Priolo Gargallo|Trecase|Petrosino|Tergu|Maniace|Santa Maria Coghinas|Cardedu|Torrenova|Ragalna|Castiadas|Massa Di Somma|Stintino|Piscinas|Erula|Bellizzi|San Cesareo|Fiumicino|Statte|Due Carrare|Padru|Montiglio Monferrato|Ronzo Chienis|Cavallino Treporti|Fonte Nuova|Campolongo Tapogliano|Lonato Del Garda|Ledro|Comano Terme|Gravedona Ed Uniti|Mappano|Rivignano Teor|Trecastelli|Fabbriche Di Vergemoli|Valsamoggia|Figline E Incisa Valdarno|Castelfranco Piandisco|Fiscaglia|Poggio Torriana|Sissa Trecasali|Scarperia E San Piero|Casciana Terme Lari|Crespina Lorenzana|Pratovecchio Stia|Montoro|Vallefoglia|Quero Vas|Santomobono Terme|Val Brembilla|Bellagio|Colverde|Verderio|Cornale E Bastida|Maccagno Con Pino E Veddasca|Borgo Virgilio|Tremezzina|Longarone|Valdaone|Predaia|San Lorenzo Dorsino|Valvasone Arzene|Sillano Giuncugnano|La Valletta Brianza|Altavalle|Altopiano Della Vigolana|Amblar Don|Borgo Chiese|Borgo Lares|Castel Ivano|Cembra Lisignago|Conta|Madruzzo|Porte Di Rendena|Primiero San Martino Di Castrozza|Sella Giudicarie|Tre Ville|Vallelaghi|Ville Danaunia|Ventasso|Pieve Di Bono Prezzo|Dimaro Folgarida|Polesine Zibello|Montescudo Monte Colombo|Alto Reno Terme|Borgomezzavalle|Lessona|Corteolona E Genzone|Campiglia Cervo|Val Di Zoldo|Alpago|Abetone Cutigliano|San Marcello Piteglio|Montalcino|Terre Roveresche|Colli Al Metauro|Terre Del Reno|Valfornace|Alta Valle Intelvi|Val Liona|Casali Del Manco|Alta Val Tidone|Montalto Carpasio|Cassano Spinola|Alto Sermenza|San Giovanni Di Fassa Sen Jan|Rio|Laterina Pergine Valdarno|Castelgerundo|Centro Valle Intelvi|Valvarrone|Borgo Mantovano|Alluvioni Piovera|Cellio Con Breia|Treppo Ligosullo|Fiumicello Villa Vicentina|Barbarano Mossano|Borgo Veneto|Corigliano Rossano|Valle Cannobina|Val Di Chy|Borgocarbonara|Terre Dadige|Barberino Tavarnelle|Tresignana|Riva Del Po|Sorbolo Mezzani|Solbiate Con Cagno|Sassocorvaro Auditore|Quaregna Cerreto|Valchiusa|Gattico Veruno|Valdilana|Piadena Drizzona|Colli Verdi|Lu E Cuccaro Monferrato|Borgo Valbelluna|Pieve Del Grappa|Valbrenta|Vermezzo Con Zelo|Cadrezzate Con Osmate|Colceresa|Lusiana Conco|Presicce Acquarica\",\n            \"provinceOrCountry\": \"PDLOLCSIORPEMIPZRGFGCNMTAQRIPZBZSANACTCTCTCTCTFRCSBSPUMNCRVTCSVVAPTRAPBACLCBISALCSFRBACTBGBGROBSVRRMNARCPCNASSENPTATTOPDCRRCISFRBSBLRMVAMBNOAGSAANVIAOMBORENAQAVCSUDCSCEBIAOTOBNIMLCCNSSTNTOPVVCPEBLSVFRCNTEORMISABGVCPZRMPVSOVRPRCNCOSVALBAFGCOVICZTOTNMBCSPDREBGCOSVSVVAPVSOATPVTPMETNBZORAGALCSLELESAAQBSALRASSBGMEPAMTALVCCEMEPAPAORAOBLTRLERMBGBGBGBGTOVITOTOPCCOBASVALAVPASAVIFMCSCHVITVCNPACSLUTRCEFRALBGCOSAFMCSUDCZFRCZRIBGSPTRCSNOBNBLUDNAFRTEANCZSOTNTOSVBILETOPNAVBTBZSSBSVAARVRBSSATOPDRMCRATLCVERCBGAOBZAORMFRATMERCRIVBAQCOFGPZRMBOVBAOPUBNMCBNBZCOMCAPSOIMFGCSLTSAIMAQUDAVFRLEAGATPNNUORVCSUTVFRBGANCHORGRRMVATNSPVRMIMBVISSORSOBGRCVVPVGEMIARCOBOFECNCNCZCHAVRORMCHCETONUVBVTMINOPZIMSUFRSVAOLEVBNOCOBNBNFRPDROALAPPDTRBGVABLVITERMUDUDRMBSAOSSNUNAPDVISASIAPFGRIVIVCVISIMNTVRIMICAPGCOORENATORAQPZSACHFRSATEAVTRUDNUSRSAMSVBIMBLFRNUGEBZAVAVBGCETAAQPNBGTOPZTNAOSRALTOCRATBGBSPNVAVABGVBNAIMBZPVROVRARCZRCPARAPVRARCUDCNBGLUPTPIFIFCAVISPDBSCRCNLEREROMNMSVTBSCEAVIMTORETOATCNTOTOPASVLCSUTOVCVCAQPZALSSTOORVBPZPDORPZCBNAMIVAORTOANVTCNBSBGFIPVBZPDMEPNAOVAPRSVVRTOMINOORAQLUGECNBSBANUBGBOPZAQMBBTCOCNTOSAENSUAQSULCBGLCLCALPVTRTETNBNMIMEMIUDVTBSVIVTVAVTLTALCNPGPVMOPDCNSAPVPAFRORNUVBVABSTNPRBGVBTOCNCZVRALMCPUPVVBPZLCTERNRMCNMINOCESABLMBFMISCSFRPARICTCSANATBOKRCSCNNUSOCOCNRCSSCNBNBIBOBGSOPRSSCOPVALBGROSVCNBSMTMBMICNFCUDLOATALBGBSBSMBVAMITNPCVAVASSPCPGVBPGSPVRCTCSRCNOVABGVCSOMBREARLITOFGUDORVTBIBSTNPICOMIBABIAOBSNUAVPABTAQTECSALVABABABANUAGRCCOTNBGCOCOPDPCTONOCSVCTNVALOMIGEVBNOCBSVSPBGMITOMTBOPEPAMCNUVTBGBZNOVIVTCHCLPAMOORSPBGBGVRFETNBNCBCRCSAVSSSSSSCNRIBLUDIMCRPRREPVTOPASPIMLORIALSVFCCZTOSVTNLURIVCBGMNPVTONOLOCNNOIMTOTOPCPUPVALPVPDCNPRBSFIALPVBSVCPRNOBOVCSVSOPVBSORNUCHBITVNUSSSSGEORROVRALVRTONANACNALLCPVBGCNCZLEBGBSSSRCRCRCBSCNBSFGMBPDVRALMNCNBGRMSABZPVRCBSTOBGBSVATVCRVAVICOBGBGLOPVVICOBZBSVAVRTNVRREBSTNPVBZVIMITNVACNVVTOCOPZCNNOBGALBRPZVANOBSMBRAVAAOPELCFRVIVVMECNPVCTBZCNTOVBTOMBPDSPPNTOBGCOVABZATBGTONAVABIAOTORCMIATSRCHBNMISAARSSPNSSBOSUPTSOAQVAUDLCCOSSSSSABNCHSICSMBSUAGSSTOTOVCORGETOCNMISRTPMBMIPRPECBVRTOVAMICLPIVRTOATUDBGALVACOORPAISKRVAREPCTNPDCOTVTOSAPUCACOFGAQTNCECEBZBSSOAVVASVNAAVBLATAGSSRCVBENAQSUCTTPPVVTTNPIMTPIBGBSBGLCBZMCBOTNVRVITNPCFIPRSVSPLEAVSVBIATTNLCCSATCSAGCTCLPANOROVIBGTOBSSACRPZVIBGPZBNCETRPVMIBSNAALLUBIAGMITOVBBIISCNANATANBGRMNOMCSACERCALUDCRVIAGGEAOSAVECERMGRCRRECSMBREPGVCLEFILITOVITOCOTNTERCCBAGTPCBPDTNAQLTCBBZSOPDPAPAFMPAUDCLGEMOAOBNBNFRCBVEPZCBGELIVESAPALUIMCTMCPDPDNAMOPVAQBZBOCNBLRMTNROTNPZCEROFGBIPVTOPDAVRCTOMIATRIVTPNAGSRVTTOAQCSSAPGVBMNPVVBLERCBGBTCHCNAQPORITOALISRIRMATVARMPUTOCOTECOVEPCSAPAGRPILURMCRAQCOVVAQAQMEBGBLVTBSMECELIARMBAQAVCABSAQTVCRCRPEISFILICRRMVTBOLEVTCNARVBMENATNBSALBGCETOAVATBIVRBGBSGOCEBACZRCCNCNPETNFGAQGEAPMBCOBGVATOIMVTALSUNAPVCOPZTVSUSVPDVCVACNRCCZNALUTOLCALRCVCVCALKRSSCSAVTOCOCEPACEVCTNFGCOSRUDSUCZTOLEPOPDVAMBBZBGCSBGMEVAVATABRISPCCSPUBSALMOMILENOPVRECHPERMFGISMSVIALSPSPALCNAQVICNPUALPDMICOCHBGTNKRCBCHCECHFRNOCHAVTOSACRALCBCEBNVAVBPDPITVBOCRALNOALVRLOSACRCRCRBORECNSACHNOCRLOCRMNALCSFGNAPZMNLOMNPDCRBTCEFGMEFRNOVANABANANASVVCPVRMBIRICELELCMIGEPNALLCPVNABGPGVAPIVCTOPVTOGELOSATOLOFICETVRCREKRBOBGCOCOBGMSNARASICHVAPVMINAATSOUDLCAVBAVACSMIVASRBGMIMICOATLCALALMIFRVIPVTEVRLITOCNATTOATPVMEMIPVBSVIPDAVMNANBZSVATRACBPASAFMBSTVPABOMNVRBGRNCNISAQGRBOCRAQCTAPMEAQCERIANFIARTNLTAVBNMOCSIMTVPICHCRRMTRMNVIPZBOROCHSAAQATTENATPTOBAPATAALVAREALIMPCGRALNOANCRATBIALPVALALATALCNNOCNTESICNPICBCNFRCEVATNPVBOSOLCNATNTVTNMNCBFGPZISPZFGRMBOCNCOROBSPZMECEPVCNROTNPNRERECOFGFRRIVRATSILOALATSAATSALURMSPTOMOALPIBNISISANBNMCPGATBZBGSAPCSAARBORMMCRIVTISPZSSVAALAGSVAQAQBNAOAVBNRCTPMOPCTRCRCEBOBSAOBOCTCHVACSGELULOSATOPEPGGRTEMNSICNVTTECNARARAPTECNBGSOUDLOBSAPBSLELELEBGFRFCFRAGENVAPAPZCBMECSCSCTCZENPEAGRNBNPVSABINONOTOVRTNCNCNLENOTNCOVAVETVPNALVEUDRMTNTNLOMBBGMOTNTOREMNARBSVABGVRFRPVLIBSSOPAPAVEBRAQCHFGCSALCRBACSATBSATCNFGSVSAVTVTBRTECZBGBGBLBGROSVCNFESAENCZPEBNVBFRENGECONOPVSACBTOCBCSAQSOUDNAPATOVRROKRMNALCNTOBGALPVPVSVIMMBPCFGCSCOTERMCOLCMIANBNPGATFICNALBIATISMIMIVRPZFIPVCZRMPDFRCNVCBSCNPVRMRACSLOUDAVCEIMCSCELCTOMIMBVBMEMIFCFCAVBLIMTVVVMCATSABSSICSCNBSAOAOAOAOAOCNSSTOVIAVSIPITORGSSTVANCZBSPZISGESOTOBZTOSOTOBLPTCHFGCRBGPVVETOPNUDARBGVISOBZCNPATOUDIMATAVIMSISIARTOAGRETVBLGECZNASARMCRTOVCCNPVBSPVTVBSRCPANABSPNTNATRMCRMCGRMIPASORCTOTNPDVETOCECSIMBNTOMTCOKRKRTNBGSVBGVAMITVCNATLTBRPGPDPGPGRIRCRIPEVALCIMTNVCUDBGBSCSCBVTAQRMCHISMCPECBRMARCHFCAQPEVTTEGRAQRMSOCOBGPNPNCNTOTNCSVATNBGTOTOATBSATVAAQPDPVFETVLOUDSSBIMBAOGEVIGENOBGFRPCLCRIAQPGBNSITVBSLCPRPECBCHCHRIRMRITOAQFRLEAQTOTOLIFRPABLCBRIAPISSARISUBSVCUDMCMTVRBSBGMIVRRMTECOSOPRCSMIBGVAFEMSLOUDBLBLVABSNORGAGNAMNTNCOPRAPCOBGVECESAISVRRIBSVEMOMBRCTOMETVPVRICZALRAPDPARIAVTESASABAAVALLEPVFEPVBASAMIROVTPGPNTVPNGELUFRAQLTRNLEANTOPAPZSAAOMIGOBGBGMIMBVILOCNVTPRUDLOLOTVMIREMBPDCOMCTELEMIATBZCZATATATPCCRCRBSPCCNBSLCBGLOATBZTEARPEBZPVBSUDCSIMSORCTOCNBISVAPVBSSATALBGROVIPGPVBGBGLCVCIMBGVRATCNRAKRKRRIBGPVMTLCVCCNVBVICHBGCRCRLCVALCCOALCRCRVCVILORONOBIBOVBNATACNGEVBTECSCZCSVACRVCTNKRVAVRSACOTOMIVAORPETOCRVACNATTOCHAPANORNOVACZBIBGBZLEPDMNCEMIBNMICOBGTPKRLEVAVATNMIBGTNBLBSVVGEVACZSOCASUCZSVSPSOCLRCFGBSCNALTNALCRPGLCVCBSMBNUCSCSCNSAIMIMIMIMFIUDVVCSLENOCOBZGOCNCHUDVRIMIMGOSUTSVELCCSCOBLAVVBSUSUAOBICOSUNULCNOPVBIMNBGCOAOFCCRBOCEVVTNUDMITNCNTOVBNUSOVIBNTSVAVABNATSABSBZPENULCCACNAOFIBGVIUDCNBGCNPZVECOVRVRBSBRTPSVPNLCMCSUSUTOBSLCFRSSPDSUAOCOALREANVTVVTRUDSOTNRAFGUDCOTACSAQVATNBNBLCEANCSMEVTCZFMCHCOFRBZMOPNPUTEBGBGNORICHCHVIPZCNPEPCVTGOTVBRGEPICNGEMTAGTPTOSVCNTOPRSAALBLCOTOAOTRFRSRPUFMVACZRCCZMTFEVRCBVAPVTOATPCRCALRIRMTOMCTNMCPAROMETRBZTNCRFIBSROVECOCSORRMVVBGVVMSFRCHPZPVISVVANMOSVBGCOBGMOTOPCFIFICSSAMORCPNMECTCSMCMSUDBSMESRSSAVSUORVCFGBNGOTOARBNTNAPPGTVSPGRLOMELTTNNUAOFRBOPNAVBGPRTVNOVCGEATPDTVAQFRCEBGPRBLBGRICHAPBNSOORPZBGUDAVNAISFCFCVBRMLTCECRMOVCTNISVIUDUDUDTOBGPRLUBZPVMELUMSAQCBCHVEVECNCZPGRCVEPUVICNCNTABNBNCHSPALFMBRVVCHCSMEPZVVSRCEALPVRMCSTNROALALTOCNMOBNRIPGPGRONANAPUMETVCHALAVCECEATCHPNTOPUPUFRISTOALALFIBGVRFRBZCHMEMESASUCSRASOSACRALPUAOCRNULTMEMIBOBIENAQLECZMCTVROCNSINUBZMELELERCLCFCLOVAVTVANOPVLURMPZBOPDFRVILECEMECENUPDALBSPVCNFICBVICHFCPVVIBGBGBGPAMTALNOMILCVRBSBSCNNOBZBSPVLCSVTNCOTOCZTOREFCVCBSROBGALRMVANUGRMNVABGPDVRPCMNCLRNUDVARMANCRCNSUGESUPZRMCORCRCPARMPVVASUTOVBVAVVSOCRSUMICHSUAVBSNOVBORBGVCROTOBSCEPGPAMEALRGCTSSTOTVSUTPBIRCSASAVBAOCBCZPZBNTASABACEAQRCMERCTRBATNNUCZCHLENAPACHFRTESALEPVMBSVTNSVTOCZBZSPTVPVPAMNVAPVCRUDSUSUSUORORMNSORMTVMTMIAQGOBGVAVABGVABGFEGECNBLPCCNBSCNNOPUGOGOVTLOVTBINAPCCTATBOCOCOMENOVAPDPDMTBGPAPVVBTOBACTCEATRIAVVCALAOAOAOFIMIVRCOCENOTNUDCSCNVICSBOALBGALBGCRPVPCTOSOSOGRTORMTAAVAPFMAGVTRCMTAVVETOCRBGPZBANAVILEMCPGPGREMESUCOFRVCLOCZROTRCSCHCBAVPZCBBNPICNSUREALPGMICBMNRMMOPVCHVBSUBSCRAOCZBSSUCNNUVRSSLCTNBOIMFIVAATBSVATOVBLCAOAQCOPVTOMINOMIFEVVNUBSMTCNCZNAVTFGBSTNISSUPAATKRFRGESOTETOIMGRVRPAPUBGVICRVRALFGBSSARGVATOAOBGAOCHTVMELTSSSSTOCRCBRMVANUANVVAGAORMRITOMINAAVBZORSSRCVICOCNCSPZFEBZPISVMICOCSCSBZBZBGTOCHSSMOCOBLCNAGPTVCBZCHNOPVPRPVNUSOTOFMAVCSPTPVCBBZAOPACOSPSUVIFIVTTAAOBRLTUDPZCSUDRCSABZPZPZTOSASAAVGEVRBLBZTNPZVAVABSSATNVRMBAQLELCBGVAVRMIPDNUTOGETOROMEBGBSLTVCMBCHSRRIENTALECNCNPASPALNOCNPRPRFGMBTOUDCEMENAPECHSPBGLECNTNTOCOCEMEAGMSRMCTLCVCUDAOBLBNVVMBPDCOMEBSCNCBPVCTAVMECOPVMICHPGCNMBCLNASOBLCOTNLIVCLOLETASVATTOCOMIBGNUBANUNULONULOBSBSBOLCCOTOTOPVTNVAVAFIISVIBSMEFCCSCSCOLIRIVITOPDVBBLROANPETVARMCGEBSNUBGSOBSVABLPDVCVTAGLUFGARIMCBAQAQPCTRRAVIVACONUGEBSSUPUCSAVSSCBCOCOBGSSCOCETNTOTOUDROTOBZSAVABGRECSLOISISCBTOMCCEPUMBBSNUCNVBCECRBGVBLTCBBSMINOPVPGCZFMCNCNGRAQRIRMSALESVTOMNMIUDBIORBZCOUDCZCSVVANRNSALOBSSPCRBOUDVRTNBSLOVBCTMEVALCCSSVBZVAVIBSTNAPMEALCSRCNUGRMESUCSLCNOTABSBSFGCNCSPNAVPETVCNSOMNUDRMBGSSCAMOMONANORMUDVRVICSCSATPZMIMNCZRMCZRIBSVALILICEARPVVEBZCNTVTOATCNBTLCMNCOGOCLNANARCPARMBZPTBSMNCNVABSRCVIFIORCNTPPGPZPZVTLEVEBZUDCRLETABGCNTECZCZSSRCLOTAAVCEPVCSVAMICTCTPZVATVVBPDTVPDALFECOGEFMAQMSPGPTTALORANAGRPDLUBITOBICEAPTNSVNOVBORMCMTTOLECBTOFGTPBSRMCLMETOTNSONUTOMBPVGOPRBOMIBGMNMOTVPNPDNOROALFCGEMILELOPZRCRCSRKRLEAVNARCBNCNSOTVLEBZMICOPVIMCSAGRMVEALBZLCVAPUPURNSAFCTOAVUDANVBMEPDLOCOBRSOVAMIFEKRMEPDNAMBBITNPVPVVRGEPVTNTOTNPABGTNNOBITVNOVBRILECHCZMTGECEMIMEVVORCTMESVCTBSCTVRBOBTLESALTLUSVVEAVCTALCBPVISMOVEMEBGRNPAMBLCPZCTMEATGEMORGFCLOORBATNLCUDMNMCTVORORORBNUDBGMESACNBAALLUBABNBOIMALCBPZVCAGRCLCCOTNATCNPUATCNALTOATNOTORIALCBATRCATCNTOBGCNCNTVSUTOATALCNPRVCATRNPUPUCNCEGECNGOMOCNMETVATBOVVALAOMEBICSBZCOBSALBSBAPATSFMAPANPDCAPTCNATALATCBBZSOPDMEAVFIMTMEANALALCNTOCNATPTTOAGAPCSPVVTTOTOLOCNSACOFMISRICZCHCRGRPVPEVITVGERIAVPVPULUANMCALPGTRPIMCVRTRREVIVIPUATALBSPRPUCBRMPUSASASAMCVBMOVIAPNACLAVPGFMBNCBMCPUCHVTTEAPRNMORMAVSAVRFMTRAVAVTRVIVIAPFMALCSFMFMRNPUVAATIMPDTABSPURMCHFMVVFGPGRISSTRPARMAVBGCBFMCNFIMCPAATBNCNAVANLCALTACOARAVMCPZCBAPPOPZUDCBCHRIISANCHTECZTAPURMAPSIARAQPNBOSIFMANISVTLESIVTVVCNSPRGRMGRFMLTSARIFRMCMCLESAFMBOARPGFGMCANBNMTPVVBPIMOPVPEFITOFMCNAGARLCAVPIVIFMFMCNSSFCCNPVPCBSLCVISIGRMSBSCRGEPGPIRICOCBTERMVIFMORPVVAMBMNBOALCSATGOVASOALRNLEBNBOBGSSFMCNPCTVAOORTNTVRMSAAQTORMCSVAALBGPVFRCNAVANRITECBMCPNALPVUDLCUDCRAVTEPEBZGOTVCRMEMEVCCSBIFGRCCZCTMITACHBGCOVRBGMCTSMBAVNALOMSBSSUCNVICNSVALSILEPZSSBSSUVECOVICLTEUDBITNBZVINAORSULEVVTRAGCNSVMEBZBSAQBZRMGENOVRGECNBGRMPZORVTTERMTVMIRICOBIRMLEPRCNBSNOLCTOCTPVENVVCNCNUDCLENMEATVETOCSPECZPGSASAPRBALEPZVRTNVRVIBANATOSVTOTNMOTOVBNUORPGLTMIBGTESRMBTNTOBZBZMENOMISOVICORECNPDVEVIALMOSAMILECNORSSSSSSANNUORSUSUSUORSUAOAVBSBSSUBIBIROALAQALALTVBSAQANCRAPBSVBVALCTOSAAOSSVCVCNONOPVRMSACOLCVALCNUPVCZMEMTSALCIMALORNUAOSSCRATBGBGBGCONUBSVBSANUVTCNBGNUNUBSBGSVMIAQVRPZRCBZNUCBTOGRPIGEVILONUBRAQVAVALOBGTOCSVTORCNTVMBVBBGNUNUSASUTVALFGCOCHCSCEFGSUNOVTLEFMARBZCHAQSPSVAQNUNUTRBSBSTOTOSSNUSVSSANNUBGBGLCUDIMAVLOPDTNBLBSLOTNSSBSMICNFECRMNBRLETRNANUSAALPVPCTOALUDALAQNUTOSSALBOMISUTPMEAQSRPGBSALBSLCMICRLCPDSSSABNCNTVSARIBGMECHUDCNLCAVBNBSBSBGMOTATACTPIPRCBSSBGCRPZTOPABSVCSRUDFICHCZPARMPVFRRCKRVBSVAGNAUDLEORSURCAPCHBASARMCHBGTNVRCSBZUDCNTOPVTNCRCSPGNABNFGTPMICSBNTPCSROMILEBSBZTOCSCEALVVLCPRALCNAVPVTRBGTPPANOBGUDPNBSATPGBSFRCEVRALLCAVCTCSFRSSMELEORUDSUSUORMIBNTOPVUDBSTOMORCPIALTOCTFMBLVIBSTVSOCSBGCOPUMNBGTNFINOPRSATNTNATSOTRRNCHCHMCTEPECZCHBLBZRMNUSUSAAQSSTNPUIMSALCCNCNAOPDTOTOTOBOCRVCBSBSSATOPGPULUVRPECRAQLCISFGMIVRPTAQAQBNISPZISRIPEFRMICRTOCBRIKRSAPAPACBRIPUMCFMCZCZAVNOBIMEISAQROCNVCBSCNPDPCSASACESVPAAOBSSIBSPUCSPECOPCCRTOVICNBGVEBONABOVTSOBGCNSOBIBGENLUBGPDBGPEPZFRFRATBICECTFRVBPGSICRFGSVISIMTECBCBAVPVCHPZCSPZPGALCEPECSPZENCNBNPULUAVCEBNIMMIPVPTPVBLBOTVGECRLUMOPVCRARTNMCVBFRIMCEFRPZSPCOVCSUNAPVTOROTOATTOPNTNPUCNTOVCMILIPDMCTOATPDVIPCCNLTMEPINORMTOSABSMTPTGRMNSOTOPVCRVVCHAQISVVRCCSCZRCUDCOSSSVCNUDMSPCFRLESIMNPORIRIPGCHFGNARIRIRIAQTPFEBARIANMICOBGNOVITOBSPNRORMVVMTBAPCMOTRRCPASAAONASAPABICHCNBSPDANPITOMTALTNNORMNANAIMBSMNORBSBICOPIPDFITOBNSOBZUDPTSAROCNFRALIMPCPIBSTVCOBNCEPDPVPCBGAOPDBGALBSAOALMNBGLTSVBGBSMSLTALFMRMTVALPEARTRLUPNSAPNCOIMUDATPVTONACEFCRCVAVATVCBLIGEVEFEMNMCFMFMSUROSSSPROBINUVISATVRIFRBZSOSAVCPZVITVVRREUDRIRGISMIVIBSALALSSPDNAMIUDBGUDCNBOTOBICSSABSTOTOBIVETOVCTOALTOAVCEAQSOPNCETOPONOUDBZAVAQPNCNRCUDPGFCTNBZBGALTVMIIMLCUDVBVBFCBGVBUDUDAOBSCEBGVRCHBSAQCNMOSALCCNCNPAVTNAGECOLTBSBSBZCBCNBSBNCAUDTABGCOSSBAAVCHTONAATALVBVBVCPTAONAVECACATOALRESVTOAVMNCRTVVCVIBSMNTNLEAGCNMEBZSICTSISIAGUDRGCEAQCTVAVACTBGBGIMFMGECHSIPZPZVCBZSOAGMOUDSARAUDCEVBPVAGUDTOCEMCGENOVIPVMNATTVENFIRERCREBNMEUDBSMBCSBZTVMIUDNAUDCLPVCNATTVTNCOBSIMGECOAOAOMIRCSVRMCEAGTOVVALCBRNSPCRSATVCLRIBZCNFIFGRMUDVCRNREBZRMORRAMOSPPZISCBPZCBCRCRCRPICHAPMCFRCTCNBLIMTNBGTOALTOPVTOTOTOCRMNALTOVCUDPZPCAQRITOVRCRRCVICNCNVCVCATTOPVMICRMIPVATCNCNBLMEAVKRPRCNTORMAQAPCNATFRSACNPVCEAQAQRMAQKRRMMEALCNRCTABSRMSALTALCSGRMEISLTPACECHPEPZRIPAAQSARMNAAQCEFCAVCHTERMCHFRLTISRICNCHGRPVATSVCNCBMERCISCEIMSPCNALATFGATMICNCNCNBZBSCOMEFGMNBSSALCCSRCCSPVBGSORMCHAOTORERMNOSAPVTNSSCRBGTOVIGOVVTNNOMECOVRTVBSPVTNMBGOTNUDVTBGGEMBBITOVRMNFCBGGETOVCTNBITOTOVIRCPVMIBIPESACSCHFGALLICSROSRANVCCNVIGETOBGCSAPCBPZMTAVPCVIBSGECOCOMNVRTNVRPNVRTNPVBGRMROCSPDMIPDTOREUDBSTOLECNTNFITNPZRABASABAPZLTBSMNSAPDPNRMSUORBIGOTNAOAOAOAOAOAOAOAOALBOCOBIPRSATOSAMTTPROVCTOCBALCNBSTPLOTOSACNTVVCLECNVRRIVRPECNBSBZPRVARNVCBICNLEPZCRSAAVTOVEVASUSUAGPTRMCNBASOTOTNCNORLECOIMBNCSSUCRROAPCNMNAQAQCSTOVBAGFRIMTVCBVRCHVVBZGOTOSIFICLLEMOPZPZPACEPVSARNGEMITOCTCSVVPZPUALATCNPVCRUDCSAQTOBIBRVEFRCSLEMIVIPZCBCEMOLTBSBTCOCSMETVLOGOCZTOSSMECNCNTOSUTRBZPVNAVCTOBSCBSOMNVATOSIMCCSALFRCSTAMNMIPVPCMTRCTOPNNAPDBNUDBOPDBNATTOARRCUDSABGMNVTAGVRFRCRCSCBRNCTCHVRFGCBCBMINAPAPGTOFIBLCECTVVRMSAVRBORNUDBZBNBNBZIMPURCCSCSGOBNVTRCCSBNSUAVCZSACEANCSMEBNFGFGATBZBZCBCHCSPZROTOPNBNVRMNCRPDRELOPVAVATTASACBTONOKRFCPAMTTOSASAAVCTCNVETNBRPIPVBNCONOBAFGCEKRVVLECSAVBNBLBZBRANFGNAATBGGOMEMEBLSATOUDCZCZISCTRCTVVRPDCSVRBOCECSLENOVICABRPDAQCBRETVRMTOMOAVCECERCMOSIPNTOIMRCLOLUSAALBNMECHALNATOPRTOARMCPZFGCOAVCZCSSUBGCLCZCSLEBZPAPVRCPIRGBNCBSUCSMEAGGRPAISALBOCSFGRABNRCMERNCTPVORBLPDNACNPVRCMECTPIAVMETVAGGEPVPICECEPVPVISCTVELCCHCEUDVBANSAMERMFRTOVRSACENAPGAVFRCZSUCELOPDPVBNSAAVAVAVISMERMMCPUPZCBAGTPVRNASUTOORNAAVFRRNPZCESAKRCSFCMESSCTFMCNSATEPDCBFRCZFMAQTOMESSBAPERCCHAQVCLTRCREPUGEBLTEVVFRRMVITNAGAVCSAQMILOSPFRIMCNGEMERCCNVEORPDPESATRTVORCSAQLINABLCZCHBRRMVISUPNUDUDTPFRMISATNBSVRMIPVTVPDMEUDSACSRMVIPZSUALVIBZALBSPCTVMCBGSATNVAAOCAFCSIPVNUSPSASSSVLIBNPZPUANMOCZUDTOTOTAKRNACNAVFCMOGEBSMEUDGOSVPESACNCSSAPVCSTOMEAVKRRECRCRRIAQORGRBGISGRTOCNBZCHPGPGCHVICOBGVIMNAGPARGRCRCPATONAPAAQVCVCAQCTLEVEAQTNATIMAQLELOUDBLORSSMIBGMCSUGRRMTNMITVCARISUPGBSCZCZBZBLBZVRPDBGSSPVRCGRMIBZBZORAVBSANORPZCOLOORSSSUCBPNLUSUMBBLCRBGBGAVBSMNBSLTTVSOATVVGEFGCSANCLALCNSUSAPEMCNAANPUCZRCALCNPTMCMNVCSASUSUFRCZBLCESAATISARISCRFIPNBZVAMOMITOGECAMIFRATCAMITOTOTOCZSUSUSUMBALLTTNTSFRORORSAORAGSURCSIPGFIBZNUSSSUSUNOALPVTEORORVVCZMENUORCNNUCARCSRAVORANLCLCSUNOBZFMVRUDORFCLEATBSVISRMIRACRORVAVAIMSUALPDLEMNMOPRAQAVALBNBGBGLOCNVANAVRCNCNCLPVVRCRSOSOBGBSLTFRTNPRGRAVCZBILOCRVRNUGEVVVVVTCONOBGCOORNASSSRCRBLVIBIBGTNCZBGCZCZBLSIMBVINOMEVVCETOLEPGENLTAVPVCSCSTNALLTMOPNVVCRBTVECRCBALAPCRBGPZBGPGPELETNTNSVTVSOCZLEANCRRCCZPDGOALLUCOVVSVSVBZTNLEBGROMTRCRCRISAFGFGTNVEPVTOTOFRUDTNVBALNABITRKRVCCNBGAVARRMCELCSULCBGMBBSVAAVORNOLEFRLELETOTVMNCLVTUDLIMNLCORIMAQROALBLVARNSONUBGARUDBLMERICHCNTAUDCSSOUDTVALAVAVRCLEUDTOCBCZCOBGLEBIPUPUPZCESOVEBNBGSSTNTNSSBSTNTNPDAVTENOFRBZBZBABZPACBVABITRBGLTTNORARCSLOPZRCPAPDCSVRPIALNUNAALUDTNIMTNBZVTSVNUSUCEVIVISSNUCRALLEGEATBSORAQTNSOBZCZBZSSPZRMPRREBNPEVBPGRISVMCRMBICHUDPZPDTNNUATATCECSTEBSTNSABRAVCBPGAOCHTOBACRNOCHCRAQCOPRCBNUSASSPVTOBICZCNFRSONAUDTOVIPVBGCNCHBNPVBGCRNAPVPEBGVEPVPDMEAVFGSABGTOCNFMBRCNPACHPVRIVRFRCHPVRITATECRVIGEPRAVRMSIALCSSATEMEUDVTBSTESVSOPAVAORTNSAPNPNPZTOBTSOTPPAVBAQUDVBSUBSTOVATOPRPNPCPDCSCTNOPZROFCCHVRMCCNCTBSSATNCEBSUDLESIMSBGCRSOORVRPGFRAVBGRMTVALBGBSTVMIMICNMICOPDMIGEMTLEVCUDNUTSBACRCNSSVCIMMEALVIMBCBFRUDPZPVBZTOFGENPVVBVCVVPVMIBZCBCHNAAVLESUSSPGBSLOCOMIBASUGOPEMTMEVAMEUDLELECOORNUBZKRBSORPDPUSVPUMCBGSSCBNUGEORSSMBSUSUNUTOTOMCPACAPTCSRICHBZSVFIATPZLUCRPOTOCRCEBGBGGECOVIBZVITOBISOCNMEPVSOBZTVVCVRPVVTALBALOPGATTNSOVATOBGCNLCAOENBLBITNAVBLCEPVCEBZIMTEFRIMBZPASSFRVVCLRMVTSUFRAVPVBIBGVIRMBSPGSATOCNALLCSORMCOPRBGAOTOAOVBPGAOBGSACTBZMIMIVBMINOVCNOVAPRRCSVRIMBTNLCSPVATOUDBZPRPVVBIMISTOVVTVPIVAMBTVBGMBPDLEBIVTCOPVRMPVVRVIBZISTOTOAPCNSVLCVAVAMEVECOPZAVPAIMLTUDMBBZVBCSCOSOVCLCBGBGCNBOFCVATNCNPCMISPPOLEBSBSTOFRVRAOPVBITOPVCOBGRNSOUDKRCNPDCRATNOIMVRTOBSVTREBSCNSPRESVMNBGCTATTORELUATSAFRPAFIVICNFGFRCENAPENOPCPIRMPVTVTOFGPZSABGLCFEVRPVPZPZVAPDATBIALVTMIMOTNALCNVBBLPDBGPCTOVEPDALFRVBSOSOUDVRLUBZPAPVBSBRPEBSSULUMIBGALBIPDBGPDBGROCNIMAGATMSPDTOVRMEPAVINUCOTNAQCLCHALCHAVSUROSUREALBZALAVCNSVLOBIPDPCAOTOPVATROSUSUROSSCNORSUPVBSSUTOTOVCTOTOALENTOTOCNSUMBRCATAQCHAQSUSUTOVCORAQVIAQVBGOMNBGTVBGMBMICNCBATFITONOCNBSBZTOBSTONAUDALMCPVTOTPVTFRPNVTRGTVAQMICEBNTORMPNBICTVAMIPDBSGEVCBLPVFEVBTNNACRTVPVALALTOALBLMNPICRAVFGFGTOCNVVCTCZRMVVBGVIBGPVPVORCOLOPVPVTVPCPVPVORMSVITVVRTNMISPVRBIPVGEMOBGBOLEBSBLPNVIBISVVIUDBICSAVVVRMCZSUMEMERMRMSSSAAQMTSRTRSSCELECELELEPNFGFGPAPZSUCTRMNASSSSSSRCSUSRNATPSSCTSSNUMECTSUNASSSUSSSARMRMTAPDSSATTNVERMUDBSTNTNCOTOUDANLUBOFIARFERNPRFIPIPIARAVPUBLBGBGCOCOLCPVVAMNCOBLTNTNTNPNLULCTNTNTNTNTNTNTNTNTNTNTNTNTNTNTNRETNTNPRRNBOVBBIPVBIBLBLPTPTSIPUPUFEMCCOVICSPCIMALVCTNLIARLOCOLCMNALVCUDUDVIPDCSVBTOMNTNFIFEFEPRCOPUBITONOBICRPVALBLTVVIMIVAVIVILE\"\n        }\n    ],\n    \"licenses\": [\n        {\n            \"name\": \"Ministero dell'Interno\",\n            \"url\": \"https://developers.italia.it/en/anpr\",\n            \"license\": \"cc-by-4.0\",\n            \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/legalcode.it\",\n            \"termsAndConditions\": \"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\",\n            \"authors\": \"https://github.com/italia/anpr/blob/master/AUTHORS\"\n        },\n        {\n            \"name\": \"Istituto nazionale di statistica\",\n            \"url\": \"https://www.istat.it\",\n            \"license\": \"cc-by-3.0\",\n            \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/it/\",\n            \"termsAndConditions\": \"https://www.istat.it/it/note-legali\"\n        },\n        {\n            \"name\": \"Agenzia delle Entrate\",\n            \"url\": \"https://www.agenziaentrate.gov.it\",\n            \"license\": \"cc-by-4.0\",\n            \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/legalcode.it\",\n            \"termsAndConditions\": \"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\"\n        }\n    ],\n    \"sources\": [\n        \"https://www.istat.it/it/files/2011/01/Elenco-codici-e-denominazioni-unita-territoriali-estere.zip\",\n        \"https://www.istat.it/it/files/2011/01/Elenco-Paesi-esteri-cessati.zip\",\n        \"https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv\",\n        \"https://raw.githubusercontent.com/italia/anpr/master/src/archivi/ANPR_archivio_comuni.csv\"\n    ]\n};\nexport default CITIES_COUNTRIES;\n","const YEAR: string = \"[12][0-9]{3}\";\nconst MONTH: string = \"0[1-9]|1[0-2]\";\nconst DAY: string = \"0[1-9]|[12][0-9]|3[01]\";\nconst LEAP_MONTH: string = \"02\";\nconst DAYS_30_MONTHS: string = \"0[469]|11\";\nconst DAYS_31_MONTHS: string = \"0[13578]|1[02]\";\nconst MONTH_DAY: string = `(?:${MONTH})-(?:0[1-9]|[12]\\\\d)|(?:${DAYS_30_MONTHS})-30|(?:${DAYS_31_MONTHS})-3[01]`;\nconst HOURS: string = \"[01]\\\\d|2[0-3]\";\nconst MINUTES: string = \"[0-5]\\\\d\";\nconst SECONDS: string = MINUTES;\nconst MILLISECONDS: string = \"\\\\d{3}\";\nconst TIMEZONE: string = `Z|[-+](?:${HOURS})(?::?${MINUTES})?`;\nconst TIME: string = `(?:${HOURS})(?::${MINUTES}(?::${SECONDS}(\\\\.${MILLISECONDS})?)?(?:${TIMEZONE})?)?`;\nconst ISO8601_SHORT_DATE: string = `${YEAR}-(?:${MONTH_DAY})(?:T${TIME})?`;\nconst ISO8601_DATE_TIME: string = `${YEAR}(?:-(?:(?:${MONTH})|(?:${MONTH_DAY})(?:T${TIME})?))?`;\n\n/**\n * Date Matcher consts\n * @property {Object} DATE_VALIDATOR\n * @property {string} DATE_VALIDATOR.YEAR Matcher for ISO8601 4 digits year (limited to 1000-2999)\n * @property {string} DATE_VALIDATOR.MONTH Matcher for ISO8601 2 digits month (01-12)\n * @property {string} DATE_VALIDATOR.DAY Matcher for ISO8601 2 digits day (01-31)\n * @property {string} DATE_VALIDATOR.LEAP_MONTH Matcher for ISO8601 2 digits leap month\n * @property {string} DATE_VALIDATOR.DAYS_30_MONTHS Matcher for ISO8601 2 digits 30 days month\n * @property {string} DATE_VALIDATOR.DAYS_31_MONTHS Matcher for ISO8601 2 digits 31 days month\n * @property {string} DATE_VALIDATOR.MONTH_DAY Matcher for ISO8601 2 + 2 digits (28~31)month + day\n * @property {string} DATE_VALIDATOR.ISO8601_SHORT_DATE Matcher for ISO8601 date: 4+2+2 digits year + (28~31)month + day\n * @property {string} DATE_VALIDATOR.HOURS Matcher for ISO8601 2 digits hours (00-23)\n * @property {string} DATE_VALIDATOR.MINUTES Matcher for ISO8601 2 digits minutes (00-59)\n * @property {string} DATE_VALIDATOR.SECONDS Matcher for ISO8601 2 digits seconds (00-59)\n * @property {string} DATE_VALIDATOR.MILLISECONDS Matcher for ISO8601 3 digits milliseconds (000-999)\n * @property {string} DATE_VALIDATOR.TIMEZONE Matcher for ISO8601 timezone (Z or ±## or ±##:## or ±####)\n * @property {string} DATE_VALIDATOR.TIME Matcher for ISO8601 for time (T## , T##:## , T##:##:## , T##:##:##.###)\n * @property {string} DATE_VALIDATOR.ISO8601_DATE_TIME Matcher for ISO8601 date/time format\n */\nexport {\n    DAY,\n    DAYS_30_MONTHS,\n    DAYS_31_MONTHS,\n    HOURS,\n    ISO8601_DATE_TIME,\n    ISO8601_SHORT_DATE,\n    LEAP_MONTH,\n    MILLISECONDS,\n    MINUTES,\n    MONTH,\n    MONTH_DAY,\n    SECONDS,\n    TIME,\n    TIMEZONE,\n    YEAR,\n};\n","import moment, { Moment } from \"moment\";\nimport DateDay from \"./date-day.type\";\nimport { ISO8601_DATE_TIME } from \"./date-matcher.const\";\nimport DateMonth from \"./date-month.type\";\nimport MultiFormatDate from \"./multi-format-date.type\";\nexport default class DateUtils {\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * @param date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @returns Parsed Date or null if not valid\n     */\n    public static parseDate(date?: MultiFormatDate | null): Date | null {\n        if (!(\n            date instanceof Date ||\n            date instanceof moment ||\n            typeof date === \"string\" && new RegExp(`^(?:${ISO8601_DATE_TIME})$`).test(date) ||\n            Array.isArray(date) && date.length && !date.some((value) => typeof value !== \"number\" || isNaN(value))\n        )) {\n            return null;\n        }\n        try {\n            let parsedDate: Moment;\n            if (Array.isArray(date)) {\n                const [year, month = 0, day = 1] = date;\n                if (month >= 0 && month <= 11 && day > 0 && day <= 31) {\n                    parsedDate = moment(Date.UTC(year, month || 0, day || 1));\n                } else {\n                    return null;\n                }\n            } else {\n                parsedDate = moment(date);\n            }\n            return parsedDate.isValid() ? parsedDate.toDate() : null;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    public static ymdToDate(year?: number | null, month?: DateMonth | null, day?: DateDay | null): Date | null {\n        return this.parseDate([year, month, day] as number[]);\n    }\n}\n","export const CONSONANT_LIST: string = \"B-DF-HJ-NP-TV-Z\";\nexport const VOWEL_LIST: string = \"AEIOU\";\nexport const OMOCODE_NUMBER_LIST: string = \"\\\\dLMNP-V\";\nexport const OMOCODE_NON_ZERO_NUMBER_LIST: string = \"1-9MNP-V\";\nexport const OMOCODE_ZERO_LIST: string = \"0L\";\nexport const MONTH_LIST: string = \"A-EHLMPR-T\";\nexport const MONTH_30DAYS_LIST: string = \"DHPS\";\nexport const MONTH_31DAYS_LIST: string = \"ACELMRT\";\nexport const CITY_CODE_LIST: string = \"A-M\";\nexport const COUNTRY_CODE_LIST: string = \"Z\";\n\nexport const CF_NAME_MATCHER: string = `[A-Z][${VOWEL_LIST}][${VOWEL_LIST}X]|[${VOWEL_LIST}]X{2}|[${CONSONANT_LIST}]{2}[A-Z]`;\nexport const CF_SURNAME_MATCHER: string = CF_NAME_MATCHER;\nexport const CF_FULL_NAME_MATCHER: string = `(?:${CF_NAME_MATCHER}){2}`;\n\nexport const YEAR_MATCHER: string = `[${OMOCODE_NUMBER_LIST}]{2}`;\nexport const LEAP_YEAR_MATCHER: string = \"[02468LNQSU][048LQU]|[13579MPRTV][26NS]\";\nexport const MONTH_MATCHER: string = `[${MONTH_LIST}]`;\nexport const DAY_2X_MATCHER: string = \"[26NS]\";\nexport const DAY_3X_MATCHER: string = \"[37PT]\";\nexport const DAY_29_MATCHER: string = `[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1256MNRS][${OMOCODE_NUMBER_LIST}]`;\nexport const DAY_30_MATCHER: string = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}]`;\nexport const DAY_31_MATCHER: string = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}1M]`;\n\nexport const DAY_MATCHER: string = `(?:${DAY_29_MATCHER}|${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M])`;\nexport const MALE_DAY_MATCHER: string = `(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[12MN][${OMOCODE_NUMBER_LIST}]|[3P][${OMOCODE_ZERO_LIST}1M])`;\nexport const FEMALE_DAY_MATCHER: string = `(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[56RS][${OMOCODE_NUMBER_LIST}]|[7T][${OMOCODE_ZERO_LIST}1M])`;\nexport const MONTH_DAY_MATCHER: string = `${MONTH_MATCHER}(?:${DAY_29_MATCHER})|[${MONTH_30DAYS_LIST}]${DAY_30_MATCHER}|[${MONTH_31DAYS_LIST}]${DAY_31_MATCHER}`;\nexport const FULL_DATE_MATCHER: string = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[15MR][${OMOCODE_NUMBER_LIST}]|${DAY_2X_MATCHER}[0-8LMNP-U])|[${MONTH_30DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_2X_MATCHER}[9V])|(?:${LEAP_YEAR_MATCHER})B${DAY_2X_MATCHER}[9V]`;\nexport const MALE_FULL_DATE_MATCHER: string = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1M][${OMOCODE_NUMBER_LIST}]|[2N][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][2N][9V])|(?:${LEAP_YEAR_MATCHER})B[2N][9V]`;\nexport const FEMALE_FULL_DATE_MATCHER: string = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[5R][${OMOCODE_NUMBER_LIST}]|[6S][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][6S][9V])|(?:${LEAP_YEAR_MATCHER})B[6S][9V]`;\n\nexport const CITY_CODE_MATCHER: string = `[${CITY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}|[${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\nexport const COUNTRY_CODE_MATCHER: string = `${COUNTRY_CODE_LIST}[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}`;\nexport const BELFIORE_CODE_MATCHER: string = `(?:[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2})|(?:[${CITY_CODE_LIST}][${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\n\nexport const CHECK_DIGIT: string = \"[A-Z]\";\n\nexport const CODICE_FISCALE: string = `${CF_FULL_NAME_MATCHER}(?:${FULL_DATE_MATCHER})(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}`;\n\nexport const PARTIAL_CF_NAME_MATCHER: string = `[A-Z][${VOWEL_LIST}]?|[${CONSONANT_LIST}]{1,2}`;\nexport const PARTIAL_CF_FULL_NAME: string = `(?:${PARTIAL_CF_NAME_MATCHER})|(?:(?:${CF_NAME_MATCHER})(?:${PARTIAL_CF_NAME_MATCHER})?)`;\nexport const PARTIAL_YEAR: string = `[${OMOCODE_NUMBER_LIST}]`;\nexport const PARTIAL_MONTH_DAY: string = `${MONTH_MATCHER}[${OMOCODE_ZERO_LIST}12456MNQRS]?|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}`;\nexport const PARTIAL_FULL_DATE: string = `${PARTIAL_YEAR}|(?:${YEAR_MATCHER}(?:${PARTIAL_MONTH_DAY})?)`;\nexport const PARTIAL_BELFIORE_CODE_MATCHER: string = `[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]?)?|[${COUNTRY_CODE_LIST}](?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NUMBER_LIST}]?)?`;\n\nexport const PARTIAL_CF: string = `${PARTIAL_CF_FULL_NAME}|(?:${CF_FULL_NAME_MATCHER}(?:(?:${PARTIAL_FULL_DATE})|(?:${FULL_DATE_MATCHER})(?:(?:${PARTIAL_BELFIORE_CODE_MATCHER})|(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}?)?)?)?`;\n","enum CRC {\n    \"B\",\n    \"A\",\n    \"K\",\n    \"P\",\n    \"L\",\n    \"C\",\n    \"Q\",\n    \"D\",\n    \"R\",\n    \"E\",\n    \"V\",\n    \"O\",\n    \"S\",\n    \"F\",\n    \"T\",\n    \"G\",\n    \"U\",\n    \"H\",\n    \"M\",\n    \"I\",\n    \"N\",\n    \"J\",\n    \"W\",\n    \"Z\",\n    \"Y\",\n    \"X\",\n}\n\nexport default CRC;\n","enum BirthMonth {\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"H\",\n    \"L\",\n    \"M\",\n    \"P\",\n    \"R\",\n    \"S\",\n    \"T\",\n}\n\nexport default BirthMonth;\n","import {\n    CRC_OFFSET,\n    LASTNAME_OFFSET,\n} from \"../const/cf-offsets.const\";\nimport { PARTIAL_CF } from \"../const/matcher.const\";\nimport CRC from \"../enums/crc.enum\";\nimport generatorWrapper from \"../functions/generator-wrapper.function\";\nimport IGeneratorWrapper from \"../interfaces/generator-wrapper.interface\";\nimport CodiceFiscaleCRC from \"../types/codice-fiscale-crc.type\";\nclass CheckDigitizer {\n\n    /**\n     * Evaluate given partial CF to produce last check digit character\n     * @param codiceFiscale Partial or complete Fiscal Code to evaluate to produce last character\n     * @returns 16th CF char\n     */\n    public static checkDigit(codiceFiscale: string): CodiceFiscaleCRC | null {\n        if (typeof codiceFiscale === \"string\" && new RegExp(PARTIAL_CF).test(codiceFiscale)) {\n            const partialCF = codiceFiscale.substr(LASTNAME_OFFSET, CRC_OFFSET);\n            let partialCfValue = 0;\n            for (const charValue of this.evaluateChar(partialCF)) { partialCfValue += charValue as number; }\n            return String.fromCharCode(partialCfValue % this.CRC_MOD + this.CHAR_OFFSET) as CodiceFiscaleCRC;\n        }\n        return null;\n    }\n\n    public static evaluateChar(partialCF: string = \"\"): IGeneratorWrapper<number, 0, void> {\n      return generatorWrapper(this.evaluateCharGenerator(partialCF));\n    }\n\n    private static CHAR_OFFSET: number = 65;\n    private static CRC_MOD: number = 26;\n\n    /**\n     * Partial FiscalCode Evaluator\n     * @param Partial Fiscal Code to evaluate\n     * @yields character value odd/even\n     */\n    private static* evaluateCharGenerator(partialCF: string = \"\"): Generator {\n        if (typeof partialCF === \"string\" && partialCF.length) {\n            for (let index = 0; index < partialCF.length; index++) {\n                let char: string = partialCF[index].toUpperCase();\n                const isNumber: boolean = (/^\\d$/u).test(char);\n                if (isNumber) {\n                    // Numbers have always (odd/even) the same values of corresponding letters (0-9 => A-J)\n                    char = String.fromCharCode(parseInt(char, 10) + this.CHAR_OFFSET);\n                }\n                // Odd/Even are shifted/swapped\n                // array starts from 0, \"Agenzia delle Entrate\" documentation counts the string from 1\n                const isOdd: boolean = !(index % 2); // Odd according to documentation\n                if (isOdd) {\n                    // Odd positions\n                    yield parseInt(CRC[char as any], 10);\n                } else {\n                    // Even positions\n                    yield char.charCodeAt(0) - this.CHAR_OFFSET;\n                }\n            }\n        }\n        return 0;\n    }\n}\n\nexport default CheckDigitizer;\n","export const LASTNAME_OFFSET = 0;\nexport const LASTNAME_SIZE = 3;\nexport const FIRSTNAME_OFFSET = 3;\nexport const FIRSTNAME_SIZE = 3;\nexport const YEAR_OFFSET = 6;\nexport const YEAR_SIZE = 2;\nexport const MONTH_OFFSET = 8;\nexport const MONTH_SIZE = 1;\nexport const DAY_OFFSET = 9;\nexport const DAY_SIZE = 2;\nexport const DATE_OFFSET = YEAR_OFFSET;\nexport const DATE_SIZE = YEAR_SIZE + MONTH_SIZE + DAY_SIZE;\nexport const GENDER_OFFSET = DAY_OFFSET;\nexport const GENDER_SIZE = 1;\nexport const PLACE_OFFSET = 11;\nexport const PLACE_SIZE = 4;\nexport const CRC_OFFSET = 15;\nexport const CRC_SIZE = 1;\nexport const CF_SIZE = LASTNAME_SIZE + FIRSTNAME_SIZE + DATE_SIZE + PLACE_SIZE + CRC_SIZE;\n","enum GenderWeight {\n    \"M\" = 0,\n    \"F\" = 40,\n}\n\nexport default GenderWeight;\n","enum Omocodes {\n    \"L\",\n    \"M\",\n    \"N\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n}\n\nexport default Omocodes;\n","import { DateDay } from \"../date-utils/\";\nimport GenderWeight from \"../enums/gender-weight.enum\";\nimport Genders from \"../types/genders.type\";\n\nclass Gender {\n    public static getDay(genderDay: number): DateDay | null {\n        const plainDay = genderDay % GenderWeight.F;\n        return (plainDay > 0 && plainDay <= this.MAX_MONTH_DAY) ? plainDay as DateDay : null;\n    }\n\n    public static getGender(genderDay: number): Genders | null {\n        return this.toArray()\n            .find((gender) => genderDay >= GenderWeight[gender] &&\n                genderDay <= GenderWeight[gender] + this.MAX_MONTH_DAY)\n            || null;\n    }\n\n    public static genderizeDay(day: number, gender: Genders): number {\n        return day + GenderWeight[gender];\n    }\n\n    public static toArray(): Genders[] {\n        return [\"M\", \"F\"];\n    }\n\n    private static MAX_MONTH_DAY: number = 31;\n}\n\nexport default Gender;\n","import DiacriticRemover from \"@marketto/diacritic-remover\";\nimport moment from \"moment\";\nimport { Belfiore, BelfiorePlace } from \"../belfiore-connector\";\nimport BelfioreConnector from \"../belfiore-connector/classes/belfiore-connector.class\";\nimport {\n    CRC_OFFSET,\n    CRC_SIZE,\n    DAY_OFFSET,\n    DAY_SIZE,\n    FIRSTNAME_OFFSET,\n    FIRSTNAME_SIZE,\n    GENDER_OFFSET,\n    GENDER_SIZE,\n    LASTNAME_OFFSET,\n    LASTNAME_SIZE,\n    MONTH_OFFSET,\n    MONTH_SIZE,\n    PLACE_OFFSET,\n    PLACE_SIZE,\n    YEAR_OFFSET,\n    YEAR_SIZE,\n} from \"../const/cf-offsets.const\";\nimport { CF_FULL_NAME_MATCHER, CF_SURNAME_MATCHER } from \"../const/matcher.const\";\nimport { CONSONANT_LIST, VOWEL_LIST } from \"../const/matcher.const\";\nimport { DateDay, DateMonth, DateUtils, MultiFormatDate } from \"../date-utils\";\nimport BirthMonth from \"../enums/birth-month.enum\";\nimport GenderWeight from \"../enums/gender-weight.enum\";\nimport Omocodes from \"../enums/omocodes.enum\";\nimport IPersonalInfo from \"../interfaces/personal-info.interface\";\nimport Genders from \"../types/genders.type\";\nimport CheckDigitizer from \"./check-digitizer.class\";\nimport Gender from \"./gender.class\";\n\nconst diacriticRemover = new DiacriticRemover();\n\nexport default class Parser {\n    /**\n     * Default omocode bitmap\n     */\n    public static OMOCODE_BITMAP: number = 0b0111011011000000;\n\n    /**\n     * Convert omocode CF into plain one\n     * @param codiceFiscale Partial or complete Omocode/Regular CF to parse, starting from LastName\n     * @returns Regular CF w/o omocodes chars\n     */\n    public static cfDeomocode(codiceFiscale: string): string {\n        if (codiceFiscale && codiceFiscale.length <= YEAR_OFFSET) {\n            return codiceFiscale;\n        }\n        const deomocodedCf = this.partialCfDeomocode(codiceFiscale);\n        if (deomocodedCf.length < CRC_OFFSET) {\n            return deomocodedCf;\n        }\n        const partialDeomocodedCf = deomocodedCf.substr(LASTNAME_OFFSET, CRC_OFFSET);\n        return partialDeomocodedCf + this.appyCaseToChar(\n            CheckDigitizer.checkDigit(deomocodedCf) || \"\",\n            deomocodedCf.substr(CRC_OFFSET, CRC_SIZE),\n        );\n    }\n\n    public static cfOmocode(codiceFiscale: string, omocodeId: number): string {\n        if (!omocodeId) {\n            return this.cfDeomocode(codiceFiscale);\n        }\n        const omocodedCf = codiceFiscale.split(\"\");\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = codiceFiscale.length - 1, o = 0; i >= 0; i--) {\n            // tslint:disable-next-line: no-bitwise\n            if (2 ** i & this.OMOCODE_BITMAP) {\n                // tslint:disable-next-line: no-bitwise\n                const charToEncode: boolean = !!(omocodeId & 2 ** o);\n                const isOmocode: boolean = isNaN(parseInt(omocodedCf[i], 10));\n                if (charToEncode !== isOmocode) {\n                    const char: any = omocodedCf[i].toUpperCase();\n                    omocodedCf[i] = Omocodes[char];\n                }\n                o++;\n            }\n        }\n        const crc = omocodedCf[CRC_OFFSET];\n        if (crc) {\n            const partialCf = omocodedCf.slice(LASTNAME_OFFSET, CRC_OFFSET).join(\"\");\n            omocodedCf[CRC_OFFSET] = this.appyCaseToChar(\n                CheckDigitizer.checkDigit(partialCf) || \"\",\n                crc,\n            );\n        }\n        return omocodedCf.join(\"\");\n    }\n\n    public static cfOmocodeId(codiceFiscale: string): number {\n        const cfOmocodeBitmap = codiceFiscale.split(\"\")\n            // tslint:disable-next-line: no-bitwise\n            .filter((char, index) => 2 ** index & this.OMOCODE_BITMAP)\n            .map((char) => (/^[a-z]$/i).test(diacriticRemover[char]) ? 1 : 0)\n            .join(\"\");\n        return parseInt(cfOmocodeBitmap , 2);\n    }\n\n    /**\n     * Parse lastName information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Partial/possible lastName\n     */\n    public static cfToLastName(codiceFiscale: string): string | null {\n        if (\n            typeof codiceFiscale !== \"string\"\n            || codiceFiscale.length < (LASTNAME_OFFSET + LASTNAME_SIZE)\n            || !(new RegExp(`^(?:${CF_SURNAME_MATCHER})`, \"iu\")).test(codiceFiscale)\n        ) {\n            return null;\n        }\n\n        const lastNameCf = codiceFiscale.substr(LASTNAME_OFFSET, LASTNAME_SIZE);\n\n        const [cons = \"\"] = lastNameCf.match(new RegExp(`^[${CONSONANT_LIST}]{1,3}`, \"ig\")) || [];\n        const [vow = \"\"] = lastNameCf.match(new RegExp(`[${VOWEL_LIST}]{1,3}`, \"ig\")) || [];\n\n        const matchingLength = cons.length + vow.length;\n\n        if (matchingLength < 2 || matchingLength < 3 && lastNameCf[2].toUpperCase() !== \"X\") {\n            return null;\n        }\n\n        switch (cons.length) {\n        case 3:\n            return (cons + vow).split(\"\").join(this.JOLLY_CHAR) + this.JOLLY_CHAR;\n        case 2:\n            return `${cons[0]}${vow[0]}*${cons[1]}${this.JOLLY_CHAR}`;\n        case 1:\n            return `${cons[0]}${vow}${this.JOLLY_CHAR}`;\n        default:\n            return `${vow}${vow.length === 3 ? this.JOLLY_CHAR : \"\"}`;\n        }\n    }\n\n    /**\n     * Parse firstName information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Partial/possible firstName\n     */\n    public static cfToFirstName(codiceFiscale: string): string | null {\n        if (\n            typeof codiceFiscale !== \"string\"\n            || codiceFiscale.length < (FIRSTNAME_OFFSET + FIRSTNAME_SIZE)\n            || !(new RegExp(`^(${CF_FULL_NAME_MATCHER})`, \"iu\")).test(codiceFiscale)\n        ) {\n            return null;\n        }\n        return this.cfToLastName(codiceFiscale.substr(FIRSTNAME_OFFSET, FIRSTNAME_SIZE));\n    }\n\n    /**\n     * Parse gender information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Male or female\n     */\n    public static cfToGender(codiceFiscale: string): Genders | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (GENDER_OFFSET + GENDER_SIZE)) {\n            return null;\n        }\n        const cfGenderPart = codiceFiscale.substr(GENDER_OFFSET, GENDER_SIZE);\n        const genderInt = parseInt(this.partialCfDeomocode(cfGenderPart, GENDER_OFFSET), 10) * 10;\n        return Gender.getGender(genderInt);\n    }\n\n    /**\n     * Parse birth year information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth Year (4 digits)\n     */\n    public static cfToBirthYear(codiceFiscale: string): number | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (YEAR_OFFSET + YEAR_SIZE)) {\n            return null;\n        }\n        const cfBirthYearPart = codiceFiscale.substr(YEAR_OFFSET, YEAR_SIZE);\n        const birthYear: number = parseInt(this.partialCfDeomocode(cfBirthYearPart, YEAR_OFFSET), 10);\n\n        if (isNaN(birthYear)) {\n            return null;\n        }\n\n        const current2DigitsYear: number = parseInt(moment().format(\"YY\"), 10);\n\n        const century: number = (birthYear > current2DigitsYear ? 1 : 0) * 100;\n        return moment().subtract(current2DigitsYear - birthYear + century, \"years\").year();\n    }\n\n    /**\n     * Parse birth month information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth Month (0...11 - Date notation)\n     */\n    public static cfToBirthMonth(codiceFiscale: string): DateMonth | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (MONTH_OFFSET + MONTH_SIZE)) {\n            return null;\n        }\n\n        const cfBirthMonthPart: any = codiceFiscale.substr(MONTH_OFFSET, MONTH_SIZE).toUpperCase();\n        const birthMonth = BirthMonth[cfBirthMonthPart];\n        if (typeof birthMonth !== \"number\" || birthMonth < 0 || birthMonth > 11) {\n            return null;\n        }\n        return birthMonth as DateMonth;\n    }\n\n    /**\n     * Parse birth day information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth day (1..31)\n     */\n    public static cfToBirthDay(codiceFiscale: string): DateDay | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (DAY_OFFSET + DAY_SIZE)) {\n            return null;\n        }\n\n        const cfBirthDayPart = codiceFiscale.substr(DAY_OFFSET, DAY_SIZE);\n        const birthDay: number = parseInt(this.partialCfDeomocode(cfBirthDayPart, DAY_OFFSET), 10);\n\n        if (isNaN(birthDay)) {\n            return null;\n        }\n        return Gender.getDay(birthDay);\n    }\n\n    /**\n     * Parse birth date information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth Date\n     */\n    public static cfToBirthDate(codiceFiscale: string): Date | null {\n        const birthDay = this.cfToBirthDay(codiceFiscale);\n        if (!birthDay) {\n            return null;\n        }\n\n        const birthMonth = this.cfToBirthMonth(codiceFiscale);\n        if (typeof birthMonth !== \"number\") {\n            return null;\n        }\n\n        const birthYear = this.cfToBirthYear(codiceFiscale);\n\n        return DateUtils.ymdToDate(birthYear, birthMonth, birthDay);\n    }\n\n    /**\n     * Parse birth place information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth place\n     */\n    public static cfToBirthPlace(codiceFiscale: string): BelfiorePlace | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (PLACE_OFFSET + PLACE_SIZE)) {\n            return null;\n        }\n\n        const cfBirthPlacePart = codiceFiscale.substr(PLACE_OFFSET, PLACE_SIZE);\n        const belfioreCode: string = this.partialCfDeomocode(cfBirthPlacePart, PLACE_OFFSET);\n\n        const birthPlace: BelfiorePlace | undefined = Belfiore[belfioreCode];\n        if (!birthPlace) {\n            return null;\n        }\n\n        const { creationDate, expirationDate } = birthPlace;\n        if (creationDate || expirationDate) {\n            const birthDate = this.cfToBirthDate(codiceFiscale);\n            if (birthDate) {\n                let validityCheck = true;\n                if (expirationDate) {\n                    validityCheck = moment(expirationDate).isSameOrAfter(birthDate);\n                }\n                if (!validityCheck) {\n                    return null;\n                }\n            }\n        }\n        return birthPlace;\n    }\n\n    /**\n     * @param fiscalCode 16 character Codice Fiscale to decode\n     * @returns Decoded CF Info\n     */\n    public static cfDecode(fiscalCode: string): IPersonalInfo {\n        const year = this.cfToBirthYear(fiscalCode) || undefined;\n        const month = this.cfToBirthMonth(fiscalCode) || undefined;\n        const day = this.cfToBirthDay(fiscalCode) || undefined;\n        const date = DateUtils.ymdToDate(year, month, day) || undefined;\n        const place = this.cfToBirthPlace(fiscalCode);\n        const personalInfo: IPersonalInfo = {\n            firstName: this.cfToFirstName(fiscalCode) || undefined,\n            lastName: this.cfToLastName(fiscalCode) || undefined,\n\n            day,\n            month,\n            year,\n\n            date,\n\n            gender: this.cfToGender(fiscalCode) || undefined,\n            place: place ? place.name : undefined,\n\n            omocodeId: this.cfOmocodeId(fiscalCode),\n        };\n\n        if (year && month && day) {\n            personalInfo.date = new Date(Date.UTC(year, month, day));\n        }\n\n        return personalInfo;\n    }\n\n    /**\n     * Parse lastName to cf part\n     * @param lastName Partial or complete CF to parse\n     * @returns partial cf\n     */\n    public static lastNameToCf(lastName?: string | null): string | null {\n        if (!lastName || (lastName || \"\").trim().length < 2) {\n            return null;\n        }\n\n        if (!(/^[A-Z ']+$/iu).test(diacriticRemover.replace(lastName))) {\n            return null;\n        }\n\n        const consonants = this.charExtractor(lastName, CONSONANT_LIST);\n        const vowels = this.charExtractor(lastName, VOWEL_LIST);\n\n        const partialCf = (consonants + vowels)\n            .padEnd(3, \"X\").substr(0, 3);\n\n        if (partialCf.length < 3) {\n            return null;\n        }\n        return partialCf.toUpperCase();\n    }\n\n    /**\n     * Parse firstName to cf part\n     * @param firstName Partial or complete CF to parse\n     * @returns partial cf\n     */\n    public static firstNameToCf(firstName?: string | null): string | null {\n        if (!firstName || (firstName || \"\").trim().length < 2) {\n            return null;\n        }\n        const consonants = this.charExtractor(firstName, CONSONANT_LIST);\n        if (consonants.length >= 4) {\n            return (consonants[0] + consonants.substr(2, 2)).toUpperCase();\n        }\n        return this.lastNameToCf(firstName);\n    }\n\n    /**\n     * Parse year to cf part\n     * @param year Birth year 2 or 4 digit string, number above 19XX or below 100\n     * @returns partial cf\n     */\n    public static yearToCf(year: string | number): string | null {\n        let parsedYear: number;\n        if (typeof year === \"string\") {\n            parsedYear = parseInt(year, 10);\n        } else {\n            parsedYear = year;\n        }\n\n        if (!(typeof parsedYear === \"number\" && !isNaN(parsedYear) && (parsedYear >= 1900 || parsedYear < 100))) {\n            return null;\n        }\n        return `0${parsedYear}`.substr(-2);\n    }\n\n    /**\n     * Parse month information\n     * @param month Month number 0..11\n     * @returns Birth Month CF code\n     */\n    public static monthToCf(month: DateMonth | number): string | null {\n        if (month < 0 || month > 11) {\n            return null;\n        }\n\n        return BirthMonth[month] || null;\n    }\n\n    /**\n     * Parse day information\n     * @param day Day number 1..31\n     * @param gender Gender enum value\n     * @returns Birth Day CF code\n     */\n    public static dayGenderToCf(day: DateDay | number, gender: Genders): string | null {\n        if (day < 1 || day > 31) {\n            return null;\n        }\n\n        const genderValue = GenderWeight[gender as any];\n        if (typeof genderValue !== \"number\") {\n            return null;\n        }\n        return `0${day + genderValue}`.substr(-2);\n    }\n\n    /**\n     * Parse Year, Month, Day to Dated\n     * @param year 4 digits Year\n     * @param month 1 or 2 digits Month 0..11\n     * @param day 1,2 digits Day 1..31\n     * @returns Date or null if provided year/month/day are not valid\n     */\n    public static yearMonthDayToDate(\n        year: number | null | undefined,\n        month: DateMonth | null | undefined = 0,\n        day: DateDay | null | undefined = 1,\n    ): Date | null {\n        if (!year || year < 1861 || [month, day].some((param) => typeof param !== \"number\") ) {\n            return null;\n        }\n        const date = moment(Date.UTC(year, month || 0, day || 1));\n        if (!date.isValid() || date.year() !== year || date.month() !== month || date.date() !== day) {\n            return null;\n        }\n        return date.toDate();\n    }\n\n    public static parsePlace(\n        place: BelfiorePlace | string,\n        scopedBelfioreConnector: BelfioreConnector = Belfiore,\n    ): BelfiorePlace | null {\n        let verifiedBirthPlace: BelfiorePlace | null | undefined;\n        if (!place) {\n            return null;\n        } else if (typeof place === \"object\" && place.belfioreCode) {\n            verifiedBirthPlace = scopedBelfioreConnector[place.belfioreCode];\n        } else if (typeof place === \"string\") {\n            verifiedBirthPlace = scopedBelfioreConnector[place] || scopedBelfioreConnector.findByName(place);\n        }\n        return verifiedBirthPlace || null;\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * @param date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param gender Gender enum value\n     * @returns Birth date and Gender CF code\n     */\n    public static dateGenderToCf(date: MultiFormatDate, gender: Genders): string | null {\n        const parsedDate = DateUtils.parseDate(date);\n        if (!parsedDate) {\n            return null;\n        }\n\n        const cfYear = this.yearToCf(parsedDate.getFullYear());\n        const cfMonth = this.monthToCf(parsedDate.getMonth());\n        const cfDayGender = this.dayGenderToCf(parsedDate.getDate(), gender);\n\n        return `${cfYear}${cfMonth}${cfDayGender}`;\n    }\n\n    /**\n     * Parse place name and province to Belfiore code\n     * @param cityOrCountryName City or Country name\n     * @param provinceId Province code for cities\n     * @returns Matching place belfiore code, if only once is matching criteria\n     */\n    /**\n     * Parse a Date and Gender information to create Date/Gender CF part\n     * @param birthDate Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param cityOrCountryName City or Country name\n     * @param provinceId Province code for cities\n     * @returns Matching place belfiore code, if only once is matching criteria\n     */\n    public static placeToCf(cityOrCountryName: string, provinceId?: string): string | null;\n    public static placeToCf(birthDate: MultiFormatDate, cityOrCountryName: string, provinceId?: string): string | null;\n    public static placeToCf(dateOrName: MultiFormatDate, nameOrProvince?: string, provinceId?: string): string | null {\n        const birthDate: Date | null = DateUtils.parseDate(dateOrName);\n        let name: string;\n        let province: string | undefined;\n        if (!birthDate && typeof dateOrName === \"string\") {\n            name = dateOrName;\n            province = nameOrProvince;\n        } else if (nameOrProvince) {\n            name = nameOrProvince;\n            province = provinceId;\n        } else {\n            return null;\n        }\n\n        let placeFinder: BelfioreConnector | undefined = Belfiore;\n        if (province) {\n            placeFinder = placeFinder.byProvince(province);\n        }\n        if (birthDate && placeFinder) {\n            placeFinder = placeFinder.from(birthDate);\n        }\n        if (placeFinder) {\n            const foundPlace: BelfiorePlace | null = this.parsePlace(name, placeFinder);\n            if (foundPlace) {\n                return foundPlace.belfioreCode;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Generates full CF\n     * @returns Complete CF\n     */\n    public static encodeCf({\n        lastName,\n        firstName,\n\n        year,\n        month,\n        day,\n        date,\n\n        gender,\n        place,\n\n        omocodeId = 0,\n    }: IPersonalInfo): string | null {\n        const dtParams = DateUtils.parseDate(date) || this.yearMonthDayToDate(year, month, day);\n        if (!(dtParams && lastName && firstName && gender && place)) {\n            return null;\n        }\n        const generator = [\n            () => this.lastNameToCf(lastName),\n            () => this.firstNameToCf(firstName),\n            () => this.dateGenderToCf(dtParams, gender),\n            () => this.placeToCf(dtParams, place),\n        ];\n        let cf = \"\";\n        for (const cfPartGenerator of generator) {\n            const cfValue = cfPartGenerator();\n            if (!cfValue) {\n                return null;\n            }\n            cf += cfValue;\n        }\n\n        return this.cfOmocode(cf, omocodeId);\n    }\n\n    private static JOLLY_CHAR: string = \"*\";\n\n    private static checkBitmap(offset: number): boolean {\n        // tslint:disable-next-line: no-bitwise\n        return !!( 2 ** offset & this.OMOCODE_BITMAP);\n    }\n\n    private static charOmocode(char: string, offset: number): string {\n        if ((/^[A-Z]$/giu).test(char) && this.checkBitmap(offset)) {\n            return Omocodes[char.toUpperCase() as any];\n        }\n\n        return char;\n    }\n\n    private static charExtractor(text: string, CHAR_LIST: string): string {\n        const charMatcher = new RegExp(`[${CHAR_LIST}]+`, \"ig\");\n        const diacriticFreeText = diacriticRemover.replace(text).trim();\n        const matchingChars = diacriticFreeText.match(charMatcher);\n        return (matchingChars || []).join(\"\");\n    }\n\n    /**\n     * Convert omocode full or chunk CF into plain one\n     * @param partialCodiceFiscale Partial or complete Omocode/Regular CF to parse\n     * @param offset starting point of the given chunk in the 16 char CF\n     * @returns Regular version w/o omocodes chars of the given chunk\n     */\n    private static partialCfDeomocode(partialCodiceFiscale: string, offset: number = 0): string {\n        const charReplacer = (char: string, position: number) => this.charOmocode(char, position + offset);\n        return partialCodiceFiscale.replace(/[\\dA-Z]/giu, charReplacer);\n    }\n\n    private static appyCaseToChar(targetChar: string, counterCaseChar: string): string {\n        if (targetChar && counterCaseChar) {\n            const isUpperCase = counterCaseChar[0] === counterCaseChar[0].toUpperCase();\n            const isLowerCase = counterCaseChar[0] === counterCaseChar[0].toLowerCase();\n\n            if (isUpperCase && !isLowerCase) {\n                return targetChar[0].toUpperCase();\n            } else if (!isUpperCase && isLowerCase) {\n                return targetChar[0].toLowerCase();\n            }\n        }\n        return targetChar[0];\n    }\n}\n","const INVALID_SURNAME: string = \"Provided lastName is not valid, only letters, diacritics and apostrophe allowed\";\nconst INVALID_NAME: string = \"Provided name is not valid, only letters, diacritics and apostrophe allowed\";\nconst INVALID_DAY: string = \"Provided day is not valid\";\nconst INVALID_GENDER: string = \"Provided gender is not valid\";\nconst INVALID_DAY_OR_GENDER: string = \"Provided day and/or gender are not valid\";\nconst INVALID_YEAR: string = \"Provided year is not valid, only 2 or 4 digit numbers are allowed\";\nconst INVALID_DATE: string = \"Provided date is not valid\";\nconst INVALID_PLACE_NAME: string = \"Proviced City/Country name is not valid\";\n\nexport {\n    INVALID_DATE,\n    INVALID_DAY,\n    INVALID_DAY_OR_GENDER,\n    INVALID_GENDER,\n    INVALID_NAME,\n    INVALID_PLACE_NAME,\n    INVALID_SURNAME,\n    INVALID_YEAR,\n};\n","import * as ErrorMessages from \"../const/error-messages.const\";\n\nclass CfuError extends Error {\n    constructor(errorMessage: string)\n    constructor(errorCode: string) {\n        super((Object.entries(ErrorMessages).find(([errId]) => errId === errorCode) || [])[1] || errorCode);\n    }\n}\n\nexport default CfuError;\n","import DiacriticRemover from \"@marketto/diacritic-remover\";\nimport moment from \"moment\";\nimport {\n    INVALID_DATE,\n    INVALID_DAY,\n    INVALID_DAY_OR_GENDER,\n    INVALID_GENDER,\n    INVALID_NAME,\n    INVALID_SURNAME,\n    INVALID_YEAR,\n} from \"../const/error-messages.const\";\nimport {\n    BELFIORE_CODE_MATCHER,\n    CF_NAME_MATCHER,\n    CF_SURNAME_MATCHER,\n    CHECK_DIGIT,\n    CODICE_FISCALE,\n    CONSONANT_LIST,\n    DAY_MATCHER,\n    FEMALE_DAY_MATCHER,\n    FEMALE_FULL_DATE_MATCHER,\n    FULL_DATE_MATCHER,\n    MALE_DAY_MATCHER,\n    MALE_FULL_DATE_MATCHER,\n    MONTH_MATCHER,\n    VOWEL_LIST,\n    YEAR_MATCHER,\n} from \"../const/matcher.const\";\nimport { DATE_MATCHER, DateDay, DateMonth, DateUtils, MultiFormatDate } from \"../date-utils/\";\nimport Omocodes from \"../enums/omocodes.enum\";\nimport IPersonalInfo from \"../interfaces/personal-info.interface\";\nimport Genders from \"../types/genders.type\";\nimport CfuError from \"./cfu-error.class\";\nimport Gender from \"./gender.class\";\nimport Parser from \"./parser.class\";\n\nconst diacriticRemover = new DiacriticRemover();\n\nexport default class Pattern {\n\n    /**\n     * Validation regexp for the given lastName or generic\n     * @param lastName Optional lastName to generate validation regexp\n     * @return CF Surname matcher\n     * @throw INVALID_SURNAME\n     */\n    public static cfLastName(lastName?: string): RegExp {\n        let matcher: string = CF_SURNAME_MATCHER;\n        if (lastName) {\n            if (!this.lastName().test(lastName)) {\n                throw new CfuError(INVALID_SURNAME);\n            }\n            matcher = Parser.lastNameToCf(lastName) || matcher;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given name or generic\n     * @param name Optional name to generate validation regexp\n     * @return CF name matcher\n     * @throw INVALID_NAME\n     */\n    public static cfFirstName(name?: string): RegExp {\n        let matcher: string = CF_NAME_MATCHER;\n        if (name) {\n            if (!this.lastName().test(name)) {\n                throw new CfuError(INVALID_NAME);\n            }\n            matcher = Parser.firstNameToCf(name) || matcher;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param year Optional year to generate validation regexp\n     * @return CF year matcher\n     */\n    public static cfYear(year?: number): RegExp {\n        let matcher: string = YEAR_MATCHER;\n        if (year) {\n            const parsedYear = Parser.yearToCf(year);\n            if (parsedYear) {\n                matcher = this.deomocode(parsedYear);\n            } else {\n                throw new CfuError(INVALID_YEAR);\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given month or generic\n     * @param month Optional month to generate validation regexp\n     * @return CF month matcher\n     */\n    public static cfMonth(month?: DateMonth) {\n        let matcher: string = MONTH_MATCHER;\n        if (month) {\n            matcher = Parser.monthToCf(month) || matcher;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given day or generic\n     * @param day Optional day to generate validation regexp\n     * @return CF day matcher\n     */\n    public static cfDay(day?: DateDay): RegExp {\n        let matcher = DAY_MATCHER;\n        if (day) {\n            const parsedDayM = Parser.dayGenderToCf(day, \"M\");\n            const parsedDayF = Parser.dayGenderToCf(day, \"F\");\n            if (parsedDayM && parsedDayF) {\n                const matcherM: string = this.deomocode(parsedDayM);\n                const matcherF: string = this.deomocode(parsedDayF);\n                matcher = `(?:${matcherM})|(?:${matcherF})`;\n            } else {\n                throw new CfuError(INVALID_DAY);\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param day Optional day to generate validation regexp\n     * @param gender Gender @see Genders\n     * @return CF day and gender matcher\n     */\n    public static cfDayGender(day?: DateDay, gender?: Genders): RegExp {\n        if (!gender) {\n            return this.cfDay(day);\n        }\n        let matcher;\n        if (day) {\n            const parsedDayGender = Parser.dayGenderToCf(day, gender);\n            if (parsedDayGender) {\n                matcher = this.deomocode(parsedDayGender);\n            } else {\n                throw new CfuError(INVALID_DAY_OR_GENDER);\n            }\n        } else {\n            switch (gender) {\n            case \"M\":\n                matcher = MALE_DAY_MATCHER;\n                break;\n            case \"F\":\n                matcher = FEMALE_DAY_MATCHER;\n                break;\n            default:\n                throw new CfuError(INVALID_GENDER);\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param date Optional date to generate validation regexp\n     * @param gender @see Genders\n     * @return CF date and gender matcher\n     */\n    public static cfDateGender(date?: MultiFormatDate | null, gender?: Genders | null): RegExp {\n        if (date && !DateUtils.parseDate(date)) {\n            throw new CfuError(INVALID_DATE);\n        }\n        if (gender && !Gender.toArray().includes(gender)) {\n            throw new CfuError(INVALID_GENDER);\n        }\n        let matcher = FULL_DATE_MATCHER;\n        if (date) {\n            const parsedDateGender = gender && Parser.dateGenderToCf(date, gender);\n            if (parsedDateGender) {\n                matcher = this.deomocode(parsedDateGender);\n            } else {\n                const parseDeomocode = (g: Genders): string => {\n                    const parsedGender = Parser.dateGenderToCf(date, g);\n                    if (!parsedGender) {\n                        throw new CfuError(INVALID_DATE);\n                    }\n                    return parsedGender && this.deomocode(parsedGender);\n                };\n                matcher = `(?:${Gender.toArray().map(parseDeomocode).join(\"|\")})`;\n            }\n        } else if (gender === \"M\") {\n            matcher = MALE_FULL_DATE_MATCHER;\n        } else if (gender === \"F\") {\n            matcher = FEMALE_FULL_DATE_MATCHER;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * @param placeName Optional place name to generate validation regexp\n     * @return CF place matcher\n     */\n    /**\n     * @param date Optional date to generate validation regexp\n     * @param placeName Optional place name to generate validation regexp\n     * @return CF place matcher\n     */\n    public static cfPlace(placeName?: string | null): RegExp;\n    public static cfPlace(birthDate?: MultiFormatDate | null, placeName?: string | null): RegExp;\n    public static cfPlace(birthDateOrName?: MultiFormatDate | null, placeName?: string | null): RegExp {\n        let matcher = BELFIORE_CODE_MATCHER;\n        if (birthDateOrName) {\n            const birthDate: Date | null = DateUtils.parseDate(birthDateOrName);\n\n            if (birthDate && placeName) {\n                const place: string = placeName;\n                const parsedPlace = Parser.placeToCf(birthDate, place);\n                matcher = this.deomocode(parsedPlace || \"\");\n            } else if (!birthDate && typeof birthDateOrName === \"string\") {\n                const place: string = birthDateOrName;\n                const parsedPlace = Parser.placeToCf(place);\n                matcher = this.deomocode(parsedPlace || \"\");\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Generates full CF validator based on given optional input or generic\n     * @param personalInfo Input Object\n     * @return CodiceFiscale matcher\n     */\n    public static codiceFiscale(personalInfo?: IPersonalInfo): RegExp {\n        let matcher = CODICE_FISCALE;\n        if (personalInfo) {\n            const parsedCf = Parser.encodeCf(personalInfo);\n\n            if (parsedCf) {\n                matcher = this.deomocode(parsedCf);\n            } else {\n                const { lastName, firstName, year, month, day, date, gender, place } = personalInfo;\n                if (lastName || firstName || year || month || day || date || gender || place) {\n                    let dtParams: Date | null = null;\n                    if (date) {\n                        dtParams = DateUtils.parseDate(date);\n                    } else if (year) {\n                        dtParams = Parser.yearMonthDayToDate(year, month, day);\n                    }\n                    const generator: Array<() => RegExp> = [\n                        () => this.cfLastName(lastName),\n                        () => this.cfFirstName(firstName),\n                        () => this.cfDateGender(dtParams, gender),\n                        () => this.cfPlace(dtParams, place),\n                    ];\n\n                    matcher = \"\";\n                    for (const validator of generator) {\n                        const cfMatcher = validator().toString();\n                        const match = cfMatcher.match(/\\^(.+)\\$/);\n                        const cfValue: string | null | undefined = match && match[1];\n\n                        if (!cfValue) {\n                            throw new Error(`Unable to handle [${cfMatcher}]`);\n                        }\n                        matcher += `(?:${cfValue})`;\n                    }\n                    // Final addition of CheckDigit\n                    matcher += CHECK_DIGIT;\n                }\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Returns lastName validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static lastName(codiceFiscale?: string): RegExp {\n        const LETTER_SET: string = `[A-Z${diacriticRemover.matcherBy(/^[A-Z]$/ui)}]`;\n        const SEPARATOR_SET: string = \"[' ]\";\n        const ANY_LETTER: string = `(?:${LETTER_SET}+${SEPARATOR_SET}?)`;\n        let matcher: string = `${ANY_LETTER}+`;\n        if (codiceFiscale && (/^[A-Z]{1,3}/iu).test(codiceFiscale)) {\n            const lastNameCf: string = codiceFiscale.substr(0, 3);\n            const diacriticizer = (matchingChars: string) => matchingChars.split(\"\")\n                .map((char) => `[${diacriticRemover.insensitiveMatcher[char]}]`);\n\n            const [cons, vow] = [\n                `^[${CONSONANT_LIST}]{1,3}`,\n                `[${VOWEL_LIST}]{1,3}`,\n            ].map((charMatcher) => diacriticizer((lastNameCf.match(new RegExp(charMatcher, \"ig\")) || [])[0] || \"\"));\n\n            const diacriticsVowelList: string = VOWEL_LIST + diacriticRemover.matcherBy(new RegExp(`^[${VOWEL_LIST}]$`, \"ui\"));\n            const diacriticsVowelMatcher: string = `[${diacriticsVowelList}]`;\n            const midDiacriticVowelMatcher: string = `(?:${diacriticsVowelMatcher}${SEPARATOR_SET}?)*`;\n            const endingDiacritcVowelMatcher: string = `(?:${SEPARATOR_SET}?${midDiacriticVowelMatcher}${diacriticsVowelMatcher})?`;\n            switch (cons.length) {\n            case 3: {\n                const divider = midDiacriticVowelMatcher;\n                matcher = divider + cons.join(`${SEPARATOR_SET}?${divider}`) + `(?:${SEPARATOR_SET}?${LETTER_SET}*${LETTER_SET})?`;\n                break;\n            }\n            case 2: {\n                const possibilities = [\n                    `${vow[0]}${midDiacriticVowelMatcher}${SEPARATOR_SET}?${cons[0]}${midDiacriticVowelMatcher}${cons[1]}`,\n                    `${cons[0]}${SEPARATOR_SET}?` + vow.join(`${SEPARATOR_SET}?`) + `${SEPARATOR_SET}?${midDiacriticVowelMatcher}${cons[1]}`,\n                    cons.join(`${SEPARATOR_SET}?`) + `${SEPARATOR_SET}?${vow[0]}`,\n                ];\n                matcher = `(?:${possibilities.join(\"|\")})${endingDiacritcVowelMatcher}`;\n                break;\n            }\n            case 1: {\n                const possibilities = [\n                    vow.slice(0, 2).join(`${SEPARATOR_SET}?`) +\n                        midDiacriticVowelMatcher + cons.join(`${SEPARATOR_SET}?`),\n                    `${vow[0]}${SEPARATOR_SET}?` + cons.join(`${SEPARATOR_SET}?`) + vow[1],\n                    [cons[0], ...vow.slice(0, 2)].join(`${SEPARATOR_SET}?`),\n                ];\n                matcher = `(?:${possibilities.join(\"|\")})${endingDiacritcVowelMatcher}`;\n                break;\n            }\n            default:\n                matcher = `${vow.join(`${SEPARATOR_SET}?`)}${endingDiacritcVowelMatcher}`;\n            }\n        }\n\n        return this.isolatedInsensitiveTailor(` *(${matcher}) *`);\n    }\n\n    /**\n     * Returns name validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static firstName(codiceFiscale?: string): RegExp {\n        if (codiceFiscale && new RegExp(`^[A-Z]{3}[${CONSONANT_LIST}]{3}`, \"iu\").test(codiceFiscale)) {\n            const ANY_LETTER: string = `[A-Z${diacriticRemover.matcherBy(/^[A-Z]$/ui)}]`;\n            const SEPARATOR_SET: string = \"(?:'? ?)\";\n\n            const nameCf: string = codiceFiscale.substr(3, 3);\n\n            const cons: string[] = ((nameCf.match(new RegExp(`^[${CONSONANT_LIST}]{1,3}`, \"ig\")) || [])[0] || \"\")\n                .split(\"\").map((char) => `[${diacriticRemover.insensitiveMatcher[char]}]`);\n\n            const [diacriticsVowelList, diacriticsConsonantList]: string[] = [VOWEL_LIST, CONSONANT_LIST]\n                .map((chars) => chars + diacriticRemover.matcherBy(new RegExp(`^[${chars}]$`, \"ui\")));\n\n            const matcher: string = `(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*${cons[0]}${SEPARATOR_SET}(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*(?:[${diacriticsConsonantList}]${SEPARATOR_SET}(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*)?`\n                + cons.slice(1, 3).join(`(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*`) + `${ANY_LETTER}*`;\n\n            return this.isolatedInsensitiveTailor(matcher);\n        }\n        return this.lastName((codiceFiscale || \"\").substr(3, 3));\n    }\n\n    /**\n     * Returns iso8601 date validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static date(codiceFiscale?: string): RegExp {\n        let matcher: string = DATE_MATCHER.ISO8601_DATE_TIME;\n        if (codiceFiscale) {\n            const parsedDate = Parser.cfToBirthDate(codiceFiscale);\n            if (parsedDate) {\n                const dateIso8601: string = parsedDate.toJSON();\n                if (moment().diff(moment(parsedDate), \"y\") < 50) {\n                    const century: number = parseInt(dateIso8601.substr(0, 2), 10);\n                    const centuries: string[] = [\n                        century - 1,\n                        century,\n                    ].map((year) => year.toString().padStart(2, \"0\"));\n                    matcher = `(?:${centuries.join(\"|\")})` + dateIso8601.substr(2, 8);\n                } else {\n                    matcher = dateIso8601.substr(0, 10);\n                }\n            }\n        }\n        return this.isolatedInsensitiveTailor(`${matcher}(?:T${DATE_MATCHER.TIME}(?:${DATE_MATCHER.TIMEZONE})?)?`);\n    }\n\n    /**\n     * Returns gender validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static gender(codiceFiscale?: string): RegExp {\n        const parsedGender = codiceFiscale && Parser.cfToGender(codiceFiscale);\n        const matcher: string = parsedGender || `[${Gender.toArray().join(\"\")}]`;\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Returns place validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static place(codiceFiscale?: string): RegExp {\n        let matcher: string = \".+\";\n        const parsedPlace = codiceFiscale && Parser.cfToBirthPlace(codiceFiscale);\n\n        if (parsedPlace) {\n            const nameMatcher: string = parsedPlace.name.replace(/./gu, (c) => diacriticRemover[c] === c ? c : `[${c}${diacriticRemover[c]}]`);\n            matcher = `(?:(?:${nameMatcher})|${parsedPlace.belfioreCode})`;\n        }\n\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    public static deomocode(omocode: string): string {\n        return omocode.replace(/\\d/gu, (n: any) => `[${n}${Omocodes[n]}]`);\n    }\n\n    private static isolatedInsensitiveTailor(matcher: string): RegExp {\n        return new RegExp(`^(?:${matcher})$`, \"iu\");\n    }\n}\n","import moment from \"moment\";\nimport { BelfiorePlace } from \"../belfiore-connector\";\nimport {\n    CRC_OFFSET,\n    CRC_SIZE,\n    DATE_OFFSET,\n    DATE_SIZE,\n    FIRSTNAME_OFFSET,\n    FIRSTNAME_SIZE,\n    GENDER_OFFSET,\n    GENDER_SIZE,\n    LASTNAME_OFFSET,\n    LASTNAME_SIZE,\n    PLACE_OFFSET,\n    PLACE_SIZE,\n    YEAR_OFFSET,\n    YEAR_SIZE,\n} from \"../const/cf-offsets.const\";\nimport { DateUtils, MultiFormatDate } from \"../date-utils/\";\nimport IPersonalInfo from \"../interfaces/personal-info.interface\";\nimport Genders from \"../types/genders.type\";\nimport CheckDigitizer from \"./check-digitizer.class\";\nimport Parser from \"./parser.class\";\nimport Pattern from \"./pattern.class\";\n\nexport default class CFMismatchValidator {\n    constructor(private codiceFiscale: string) {}\n\n    private get hasLastName() {\n        return this.codiceFiscale.length >= (LASTNAME_OFFSET + LASTNAME_SIZE);\n    }\n\n    private get hasFirstName() {\n        return this.codiceFiscale.length >= (FIRSTNAME_OFFSET + FIRSTNAME_SIZE);\n    }\n    private get hasBirthYear() {\n        return this.codiceFiscale.length >= (YEAR_OFFSET + YEAR_SIZE);\n    }\n    private get hasBirthDate() {\n        return this.codiceFiscale.length >= (DATE_OFFSET + DATE_SIZE);\n    }\n    private get hasGender() {\n        return this.codiceFiscale.length >= (GENDER_OFFSET + GENDER_SIZE);\n    }\n    private get hasBirthPlace() {\n        return this.codiceFiscale.length >= (PLACE_OFFSET + PLACE_SIZE);\n    }\n    private get hasCRC() {\n        return this.codiceFiscale.length >= (CRC_OFFSET + CRC_SIZE);\n    }\n\n    public matchPersonalInfo(personalInfo: IPersonalInfo): boolean {\n        return Pattern.codiceFiscale(personalInfo).test(this.codiceFiscale);\n    }\n    public mismatchPersonalInfo(personalInfo: IPersonalInfo): boolean {\n        return !!(\n            this.codiceFiscale &&\n            personalInfo &&\n            personalInfo.lastName &&\n            personalInfo.firstName &&\n            (personalInfo.date || (personalInfo.day && personalInfo.month && personalInfo.year)) &&\n            personalInfo.gender &&\n            personalInfo.place &&\n            !this.matchPersonalInfo(personalInfo)\n        );\n    }\n\n    public matchLastName(lastName?: string): boolean {\n        return this.hasLastName &&\n            Pattern.lastName(this.codiceFiscale).test(lastName || \"\");\n    }\n    public mismatchLastName(lastName?: string): boolean {\n        return this.hasLastName && !!lastName && !this.matchLastName(lastName);\n    }\n\n    public matchFirstName(firstName: string): boolean {\n        return this.hasFirstName &&\n            Pattern.firstName(this.codiceFiscale).test(firstName || \"\");\n    }\n    public mismatchFirstName(firstName: string): boolean {\n        return this.hasFirstName && !!firstName && !this.matchFirstName(firstName);\n    }\n\n    public matchBirthDate(birthDate: MultiFormatDate): boolean {\n        if (this.hasBirthDate) {\n            const parsedCfDate = Parser.cfToBirthDate(this.codiceFiscale);\n            const parsedDate = DateUtils.parseDate(birthDate);\n            if (parsedCfDate && parsedDate) {\n                return moment(parsedCfDate).isSame(parsedDate, \"d\");\n            }\n        }\n        return false;\n    }\n    public mismatchBirthDate(birthDate: MultiFormatDate): boolean {\n        return this.hasBirthYear && !!DateUtils.parseDate(birthDate) && !this.matchBirthDate(birthDate);\n    }\n\n    public matchGender(gender: Genders | string): boolean {\n        return this.hasGender && Pattern.gender(this.codiceFiscale).test(gender || \"\");\n    }\n\n    public mismatchGender(gender: Genders | string): boolean {\n        return this.hasGender && !!gender && !this.matchGender(gender);\n    }\n\n    /**\n     * @param birthPlace BirthPlace, place name or BelfioreCode\n     */\n    public matchBirthPlace(birthPlace: BelfiorePlace | string): boolean {\n        if (this.hasBirthPlace && birthPlace) {\n            const matcher = Pattern.place(this.codiceFiscale);\n            const parsedBirthPlace = Parser.parsePlace(birthPlace);\n\n            return !!parsedBirthPlace && matcher.test(parsedBirthPlace.belfioreCode);\n        }\n        return false;\n    }\n    /**\n     * @param birthPlace BirthPlace, place name or BelfioreCode\n     */\n    public mismatchBirthPlace(birthPlace: BelfiorePlace | string): boolean {\n        return this.hasBirthPlace && !!birthPlace && !this.matchBirthPlace(birthPlace);\n    }\n\n    /**\n     * Check the given cf validity by form, birth date/place and digit code\n     * @param codiceFiscale Complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public get valid(): boolean {\n        if (\n            // Checking length\n            !this.hasCRC ||\n            // Checking form validity\n            !Pattern.codiceFiscale().test(this.codiceFiscale) ||\n            // Checking 16th char check digit validity\n            this.codiceFiscale.substr(CRC_OFFSET, CRC_SIZE)\n                .toUpperCase() !== CheckDigitizer.checkDigit(this.codiceFiscale) ||\n            // Checking Birth date/place validity\n            !Parser.cfToBirthPlace(this.codiceFiscale)\n        ) {\n            return false;\n        }\n        return true;\n    }\n    public get invalid(): boolean {\n        return !!this.codiceFiscale && !this.valid;\n    }\n}\n","import moment from \"moment\";\nimport {\n    Belfiore,\n    BelfioreConnector,\n    BelfiorePlace,\n} from \"../belfiore-connector\";\nimport { DateUtils, MultiFormatDate } from \"../date-utils/\";\nimport Genders from \"../types/genders.type\";\nimport CFMismatchValidator from \"./cf-mismatch-validator.class\";\nimport Parser from \"./parser.class\";\nimport Pattern from \"./pattern.class\";\n\nexport default class Validator {\n    public static codiceFiscale(codiceFiscale: string): CFMismatchValidator {\n        return new CFMismatchValidator(codiceFiscale);\n    }\n\n    public static isLastNameValid(lastName: string): boolean {\n        return Pattern.lastName().test(lastName);\n    }\n    public static isLastNameInvalid(lastName: string): boolean {\n        return !!lastName && !this.isLastNameValid(lastName);\n    }\n\n    public static isFirstNameValid(firstName: string): boolean {\n        return Pattern.firstName().test(firstName);\n    }\n    public static isFirstNameInvalid(firstName: string): boolean {\n        return !!firstName && !this.isFirstNameValid(firstName);\n    }\n\n    public static isBirthDateValid(birthDate: MultiFormatDate): boolean {\n        return !!DateUtils.parseDate(birthDate);\n    }\n    public static isBirthDateInvalid(birthDate: MultiFormatDate): boolean {\n        return !!birthDate && !this.isBirthDateValid(birthDate);\n    }\n\n    public static isGenderValid(gender: Genders | string): boolean {\n        return Pattern.gender().test(gender);\n    }\n    public static isGenderInvalid(gender: Genders | string): boolean {\n        return !!gender && !this.isGenderValid(gender);\n    }\n\n    public static isBirthPlaceValid(\n        birthPlace: BelfiorePlace | string,\n        scopedBelfioreConnector: BelfioreConnector = Belfiore,\n    ): boolean {\n        const parsedBirthPlace = Parser.parsePlace(birthPlace);\n        return !!parsedBirthPlace && !!scopedBelfioreConnector[parsedBirthPlace.belfioreCode];\n    }\n    public static isBirthPlaceInvalid(\n        birthPlace: BelfiorePlace | string,\n        scopedBelfioreConnector: BelfioreConnector = Belfiore,\n    ): boolean {\n        return !!birthPlace && !this.isBirthPlaceValid(birthPlace, scopedBelfioreConnector);\n    }\n\n    public static birthDatePlaceMatch(birthDate: MultiFormatDate, birthPlace: BelfiorePlace | string): boolean {\n        const parsedPlace = Parser.parsePlace(birthPlace);\n        return this.isBirthDateValid(birthDate) && !!parsedPlace &&\n        !!Belfiore.from(birthDate)[parsedPlace.belfioreCode];\n    }\n    public static birthDatePlaceMismatch(birthDate: MultiFormatDate, birthPlace: BelfiorePlace | string): boolean {\n        const parsedPlace = Parser.parsePlace(birthPlace);\n        return this.isBirthDateValid(birthDate) && !!parsedPlace &&\n            !this.birthDatePlaceMatch(birthDate, birthPlace);\n    }\n    public static birthPlaceDateMatch(birthPlace: BelfiorePlace | string, birthDate: MultiFormatDate): boolean {\n        return this.birthDatePlaceMatch(birthDate, birthPlace);\n    }\n    public static birthPlaceDateMismatch(birthPlace: BelfiorePlace | string, birthDate: MultiFormatDate): boolean {\n        return this.birthDatePlaceMismatch(birthDate, birthPlace);\n    }\n}\n","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/**\n * @marketto/diacritic-remover 1.0.8\n * Copyright (c) 2019, Marco Ricupero <marco.ricupero@gmail.com>\n * License: MIT\n * ===========================================\n * Latin diacritic json file use material from Wikitionary article \"Latin script\"\n * Source: https://en.wiktionary.org/wiki/Appendix:Latin_script\n * License: CC-BY-SA 3.0\n * ===========================================\n * These diacritic i18n json files use material from Wikipedia article \"Diacritic\"\n * Source: https://en.wikipedia.org/wiki/Diacritic\n * License: CC-BY-SA 3.0\n */\n'use strict';\n\nclass DiacriticAbstractHandler {\n    constructor() {\n        this.USE_VALIDATOR = false;\n        this.FALLBACK_MARKER_MATCHER = \"̸̵̶̡̢̨̛͓̳̜̪̟̠̻̖̹̣̤̙͚̱͇̬͕̰͍̮͎̝͈̫͐̂̍̅̔͋͂͗̃̈̏̎̄̿͌̑̓̈́̇̆̕͘͜͝ͅ\";\n        this.LOWERCASE_MARKER_MATCHER = \"\\\\p{M}\";\n        this.UPPERCASE_MARKER_MATCHER = \"\\\\P{M}\";\n        this.IS_MARKER_REPLACING_AVAILABLE = false;\n        try {\n            this.IS_MARKER_REPLACING_AVAILABLE = !!(new RegExp(`(${this.LOWERCASE_MARKER_MATCHER})`, \"gui\"));\n        }\n        catch (err) {\n            return;\n        }\n    }\n    get(target, prop, receiver) {\n        if (prop.length <= 1) {\n            return this.USE_VALIDATOR ? this.diacriticValidatorTrap(target, prop) : this.diacriticTrap(target, prop);\n        }\n        return Reflect.get(target, prop, receiver);\n    }\n    diacriticTrap(target, char) {\n        return char.replace(this.diacriticValidatorTrap(target, char), \"\");\n    }\n    diacriticValidatorTrap(target, char) {\n        return this.INSENSITIVE_MARKER_REGEXP;\n    }\n    get INSENSITIVE_MARKER_REGEXP() {\n        return new RegExp(this.IS_MARKER_REPLACING_AVAILABLE ?\n            `(${this.LOWERCASE_MARKER_MATCHER})` :\n            `([${this.FALLBACK_MARKER_MATCHER}]*)`, \"gui\");\n    }\n    get INSENSITIVE_MARKER_MATCHER() {\n        return this.IS_MARKER_REPLACING_AVAILABLE ?\n            `[${this.LOWERCASE_MARKER_MATCHER}${this.UPPERCASE_MARKER_MATCHER}]*` :\n            `[${this.FALLBACK_MARKER_MATCHER}${this.FALLBACK_MARKER_MATCHER.toUpperCase()}]*`;\n    }\n}\n\nclass DiacriticInsensitiveMatcherHandler extends DiacriticAbstractHandler {\n    diacriticTrap(target, char) {\n        const lowerCaseChar = super.diacriticTrap(target, char).toLowerCase();\n        const lowerCaseDiacritics = target.dictionary[lowerCaseChar] || \"\";\n        const insensitiveMatcher = new Set([\n            lowerCaseChar,\n            lowerCaseChar.toUpperCase(),\n            ...lowerCaseDiacritics,\n            ...lowerCaseDiacritics.toUpperCase(),\n        ]);\n        return [...insensitiveMatcher].sort().join(\"\");\n    }\n}\n\nclass DiacriticValidatorHandler extends DiacriticAbstractHandler {\n    constructor() {\n        super(...arguments);\n        this.USE_VALIDATOR = true;\n    }\n    diacriticValidatorTrap(target, char) {\n        const cleanChar = char.replace(super.diacriticValidatorTrap(target, char), \"\");\n        const diacritics = target.dictionary[char.toLowerCase()] || \"\";\n        let charMatcher = \"\";\n        let markerMatcher = \"\";\n        if (cleanChar || diacritics) {\n            charMatcher = `[${cleanChar}${diacritics}]`;\n            markerMatcher = this.INSENSITIVE_MARKER_MATCHER;\n            if (target.isUpperCase(cleanChar)) {\n                charMatcher = charMatcher.toUpperCase();\n            }\n        }\n        return new RegExp(`^${charMatcher}${markerMatcher}$`, \"u\");\n    }\n}\n\nclass DiacriticInsensitiveValidatorHandler extends DiacriticValidatorHandler {\n    diacriticValidatorTrap(target, char) {\n        const { source } = super.diacriticValidatorTrap(target, char);\n        return new RegExp(source, \"ui\");\n    }\n}\n\nclass DiacriticMatcherHandler extends DiacriticAbstractHandler {\n    diacriticTrap(target, char) {\n        let matcher = super.diacriticTrap(target, char);\n        const diacritics = target.dictionary[char.toLowerCase()];\n        if (diacritics) {\n            matcher += target.isUpperCase(matcher) ? diacritics.toUpperCase() : diacritics;\n        }\n        return matcher;\n    }\n}\n\nclass DiacriticMapperCore {\n    constructor(dictionary = {}) {\n        this.dictionary = dictionary;\n        this.matcher = new Proxy(this, new DiacriticMatcherHandler());\n        this.insensitiveMatcher = new Proxy(this, new DiacriticInsensitiveMatcherHandler());\n        this.validator = new Proxy(this, new DiacriticValidatorHandler());\n        this.insensitiveValidator = new Proxy(this, new DiacriticInsensitiveValidatorHandler());\n    }\n    matcherBy(regexp) {\n        const lowerCase = Object.entries(this.dictionary)\n            .filter(([key, value]) => value && regexp.test(key))\n            .map(([char, value]) => char + value);\n        const upperCase = Object.entries(this.dictionary)\n            .filter(([key, value]) => value && regexp.test(key.toUpperCase()))\n            .map(([char, value]) => (char + value).toUpperCase());\n        return [...lowerCase, ...upperCase].join(\"\");\n    }\n    replace(text) {\n        return text.replace(/./g, (char) => this[char]);\n    }\n    /**\n     * Check if the given string is uppercase\n     *\n     * @param {string} [text=''] string to check\n     * @returns {boolean} true if text is uppercase\n     * @memberof DiacriticMapperCore\n     */\n    isUpperCase(text = \"\") {\n        return text.toLowerCase() !== text;\n    }\n    /**\n     * Check if the given string is lowercase\n     *\n     * @param {string} [text=''] string to check\n     * @returns {boolean} true if text is lowercase\n     * @memberof DiacriticMapperCore\n     */\n    isLowerCase(text = \"\") {\n        return text.toUpperCase() !== text;\n    }\n}\n\n// Copyright Joyent, Inc. and other Node contributors.\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nclass DiacriticRemoverHandler extends DiacriticAbstractHandler {\n    diacriticTrap(target, char) {\n        const cleanChar = super.diacriticTrap(target, char);\n        if (!cleanChar.trim() || cleanChar.length !== 1) {\n            return cleanChar;\n        }\n        const lowerCaseChar = cleanChar.toLowerCase();\n        const [plainChar] = Object.entries(target.dictionary)\n            .find(([letter, diacritics]) => isString(diacritics) &&\n            [letter, ...diacritics].includes(lowerCaseChar)) || [cleanChar];\n        return target.isUpperCase(cleanChar) ?\n            plainChar.toUpperCase() :\n            plainChar;\n    }\n}\n\nvar i18nGlobal = {\n\t\"\": \"ʰ'ʼ·׳\"\n};\n\nvar LATIN_DICT = {\n\ta: \"àáâãäåāăąǎǟǡǻȁȃȧɐɑɒᴀᶏḁạảấầẩẫậắằẳẵặⱥａ\",\n\tae: \"æǣǽᴁᴂᴭᵆ\",\n\tb: \"ƀƃɓʙᵬᶀḃḅḇｂ\",\n\tc: \"cçćĉċčƈȼɕ̄ᴄḉｃ\",\n\td: \"dðþďđƌȡɖɗ̦ᴅᵭᶁᶑḋḍḏḑḓｄ\",\n\tdb: \"ȸ\",\n\tdz: \"ǆǳ\",\n\te: \"èéêëēĕėęěǝȅȇȩɇəɛᴇᶒḕḗḙḛḝẹẻẽếềểễệⱸｅ\",\n\teo: \"ᴔ\",\n\tf: \"fƒᵮᶂḟꜰﬀｆ\",\n\tg: \"ĝğġģǥǧǵȝɠɢᶃḡｇ\",\n\th: \"hĥħȟɦʜʰ̱ḣḥḧḩḫẖⱨｈ\",\n\ti: \"iìíîïĩīĭįıǐȉȋɨɩɪ̇ᵻᶖḭḯỉịｉ\",\n\tij: \"ĳ\",\n\tj: \"jĵǰȷɉɟʄʝ̌ᴊｊ\",\n\tk: \"ķƙǩᴋᶄḱḳḵⱪꝁｋ\",\n\tl: \"lĺļľŀłƚȴɫɬɭʟᶅḷḹḻḽⱡｌ\",\n\tlj: \"ǉ\",\n\tm: \"ɱᴍᵯᶆḿṁṃｍ\",\n\tn: \"nñńņňƞǹȵɲɳɴᵰᶇṅṇṉṋｎ\",\n\tnj: \"ŋǌ̈\",\n\to: \"òóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵᴏṍṏṑṓọỏốồổỗộớờởỡợⱺｏ\",\n\toe: \"œ\",\n\tp: \"pƥƿ̃ᴘᵱᵽᶈṕṗｐ\",\n\tq: \"ƣɋʠｑ\",\n\tqp: \"ȹ\",\n\tr: \"ŕŗřȑȓɍɼɽɾʀᵲᵳᶉṙṛṝṟꝛｒ\",\n\ts: \"sśŝşšſșȿʂʃ̩ᵴᶊṡṣṥṧṩẛꜱｓ\",\n\tss: \"ß\",\n\tt: \"tţťŧƫƭțȶʈᴛᵵṫṭṯṱẗⱦｔ\",\n\tu: \"ùúûüũūŭůűųưǔǖǘǚǜȕȗʉʊᴜᵾṳṵṷṹṻụủứừửữựｕ\",\n\tue: \"ᵫ\",\n\tuo: \"ȣ\",\n\tut: \"ᶙ\",\n\tv: \"ʋʌᴠᶌṽṿⱱⱴｖ\",\n\tw: \"ŵᴡẁẃẅẇẉẘⱳｗ\",\n\tx: \"ᶍẋẍｘ\",\n\ty: \"ýÿŷƴȳɏʏẏẙỳỵỷỹｙ\",\n\tz: \"zźżžƶƹȥɀʐʑʒᴢᵶᶎẑẓẕⱬｚ\"\n};\n\nclass DiacriticRemover extends DiacriticMapperCore {\n    constructor(...dictionaries) {\n        super();\n        const mergedDictionaries = Object.freeze((dictionaries.length ? dictionaries : [LATIN_DICT, i18nGlobal])\n            .reduce((dictMerge, currentDict) => [...dictMerge, ...Object.entries(currentDict)], [])\n            .reduce((accumulator, [letter, diacritics]) => {\n            let targetSet = accumulator.find(([targetLetter]) => targetLetter === letter);\n            if (!targetSet) {\n                targetSet = [letter, []];\n                accumulator.push(targetSet);\n            }\n            targetSet[1] = [...targetSet[1], ...diacritics];\n            return accumulator;\n        }, [])\n            .reduce((accumulator, [letter, diacritics]) => (Object.assign(Object.assign({}, accumulator), { [letter]: [...(new Set(diacritics))].sort().join(\"\") })), {}));\n        Object.defineProperty(this, \"dictionary\", {\n            configurable: false,\n            enumerable: false,\n            value: mergedDictionaries,\n        });\n        return new Proxy(this, new DiacriticRemoverHandler());\n    }\n}\n\nmodule.exports = DiacriticRemover;\n"],"sourceRoot":""}