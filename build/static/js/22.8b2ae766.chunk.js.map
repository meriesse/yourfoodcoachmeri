{"version":3,"sources":["context/DietContext.js","context/MealContext.js","Components/Meals/MealAnalysisPreview.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","Components/Meals/MealAnalysis.js"],"names":["async","addDiet","formData","nutrizionista","data_inserimento","serverTimestamp","email_nutrizionista","email","numero_telefono_nutrizionista","telefono","tipologia_dieta","ruolo","setDoc","doc","collection","db","updateDiet","id","updateDoc","updateTelephone","deleteDiet","deleteDoc","urlEncoded","arr","regex","Array","isArray","join","replace","split","addMeal","updateMeal","deleteMeal","clearArray","array","length","pop","MealAnalysisPreview","_ref","index","item","userInput","_jsxs","Card","className","style","padding","marginBottom","children","_jsx","Header","Container","marginTop","marginLeft","Row","marginRight","ENERC_KCAL","quantity","_Fragment","Col","toFixed","CHOCDF_KCAL","FAT_KCAL","PROCNT_KCAL","Alert","variant","InputGroupText","React","ref","bsPrefix","as","Component","props","useBootstrapPrefix","classNames","displayName","InputGroup","size","hasValidation","contextValue","useMemo","InputGroupContext","Provider","value","concat","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","MealAnalysis","warning","setWarning","useState","progress","setProgress","loading","setLoading","food","setFood","nutrients","kcals","proteins","fats","carbohydrates","setUserInput","showDetails","setShowDetails","mealNameRegex","cardBackgroundColor","background","useEffect","scrollToTop","backgroundSize","minHeight","borderRadius","boxShadow","borderLeft","borderTop","SyncLoader","color","position","top","left","transform","zIndex","Body","margin","src","ShowMealsImg","height","width","alt","Navbar","expand","Form","Control","placeholder","onChange","e","target","Button","onClick","preventDefault","test","req","q","source","axios","post","then","response","data","translatedText","forEach","ingredient","stringify","get","res","push","totalNutrientsKCal","verticalAlign","sumArrayObject","PieChart","FontAwesomeIcon","icon","faEyeSlash","faMagnifyingGlass","map"],"mappings":"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","file":"static/js/22.8b2ae766.chunk.js","sourcesContent":["import {collection, deleteDoc, doc, getDoc, serverTimestamp, setDoc, updateDoc} from \"firebase/firestore\";\nimport {db} from \"../config/firebase-config\";\n\n/*\n Funzione che si occupa di memorizzare i dati di una dieta su Firestore Database\n */\nexport async function addDiet(formData, nutrizionista) {\n    formData.data_inserimento = serverTimestamp();\n    formData.email_nutrizionista = nutrizionista.email;\n    formData.numero_telefono_nutrizionista = nutrizionista.telefono;\n    formData.tipologia_dieta = nutrizionista.ruolo;\n    await setDoc(doc(collection(db, \"diets\")), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare i dati di una dieta memorizzata su Firestore Database\n */\nexport async function updateDiet(formData, id) {\n    formData.data_inserimento = serverTimestamp();\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare il numero di telefono del nutrizionista su Firestore Database\n */\nexport async function updateTelephone(formData, id) {\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di eliminare una dieta memorizzata su Firestore Database\n */\nexport async function deleteDiet(id) {\n    await deleteDoc(doc(db, \"diets\", id));\n}\n\n/*\n Funzione che si occupa di ottenere i dati di una dieta memorizzata su Firestore Database\n */\nexport async function getDiet(id) {\n    const docRef = doc(db, \"diets\", id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        console.log(\"Documento letto correttamente \");\n        console.log(docSnap.data());\n        return docSnap.data();\n    } else {\n        console.log((\"Nessun documento trovato con il codice fiscale inserito!\"));\n    }\n}\n\n/*\n Funzione che si occupa di codificare l'url della richiesta ricevuto il pasto in input\n */\nexport const urlEncoded = arr => {\n    const regex = /,/gi;\n    if (Array.isArray(arr)) {\n        return arr.join(\",\").replace(regex, \" and \");\n    } else {\n        return arr.split(\" \").join(\"%20\");\n    }\n};\n","import {collection, deleteDoc, doc, serverTimestamp, setDoc, updateDoc} from \"firebase/firestore\";\nimport {db} from \"../config/firebase-config\";\n\n/*\n Funzione che si occupa di memorizzare i dati di un pasto su Firestore Database\n */\nexport async function addMeal(formData) {\n    formData.data_inserimento = serverTimestamp();\n    await setDoc(doc(collection(db, \"pasti\")), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare i dati di un pasto memorizzato su Firestore Database\n */\nexport async function updateMeal(formData, id) {\n    formData.data_inserimento = serverTimestamp();\n    await updateDoc(doc(db, \"pasti\", id), formData);\n}\n\n/*\n Funzione che si occupa di eliminare un pasto memorizzato su Firestore Database\n */\nexport async function deleteMeal(id) {\n    await deleteDoc(doc(db, \"pasti\", id));\n}\n\n/*\n Funzione per eliminare tutti gli elementi da un array\n */\nexport function clearArray(array) {\n    while (array.length > 0) {\n        array.pop();\n    }\n}\n","import {Alert, Card, Col, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport React from \"react\";\n\n\n/*\n Componente che visualizza i dettagli che caratterizzano l'analisi di un pasto\n L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n La traduzione dell'input dell'utente, da italiano ad inglese, viene effettuata sfruttando le API offerte da LIBRETRANSLATE (https://libretranslate.de/)\n */\nconst MealAnalysisPreview = ({index, item, userInput}) => {\n    return (\n        <Card className={\"col-12 mx-auto\"}\n              style={{padding: 0, marginBottom: 15}}>\n            <Card.Header className={\"text-center\"}><strong>{userInput[index]}</strong></Card.Header>\n            <Container className={\"d-flex flex-column mx-auto my-auto \"}>\n                <Container className={\"d-flex flex-wrap text-start\"}>\n                    <Container className={\"d-flex flex-wrap justify-content-evenly my-auto\"}\n                               style={{padding: 0, marginTop: 20}}>\n                        <Container style={{padding: 5}}\n                                   className={\"col-12 my-auto\"}>\n                            <Container className={\"d-flex flex-wrap\"}\n                                       style={{padding: 0, marginLeft: 10}}>\n                                <Container className={\"d-flex flex-wrap align-items-center col-12\"}\n                                           style={{padding: 0}}>\n                                    <Container className={\"justify-content-evenly mx-auto\"}>\n                                        <div className=\"col-md-12 mx-auto\"\n                                             style={{marginTop: 15}}>\n                                            <Row className={\"d-flex flew-row col-12 justify-content-evenly\"}\n                                                 style={{marginRight: 0}}>\n                                                {item.ENERC_KCAL.quantity > 0 ?\n                                                    //L'analisi dell'alimento ha prodotto risultati\n                                                    (<>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Energia:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.ENERC_KCAL.quantity.toFixed(1)} Kcal</p>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Carboidrati:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.CHOCDF_KCAL.quantity.toFixed(1)} gr.</p>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Grassi:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.FAT_KCAL.quantity.toFixed(1)} gr.</p>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <div className=\"text-start\">\n                                                                <strong>Proteine:</strong>\n                                                            </div>\n                                                            <div className=\"text-start\">\n                                                                <p>{item.PROCNT_KCAL.quantity.toFixed(1)} gr.</p>\n                                                            </div>\n                                                        </Col>\n                                                    </>)\n                                                    //L'analisi dell'alimento non ha prodotto risultati\n                                                    :\n                                                    (<>\n                                                        <Alert className={\"text-center mx-auto col-12 flex-wrap\"}\n                                                               variant=\"warning\">\n                                                            Non è stato possibile effettuare l'analisi per questo ingrediente\n                                                        </Alert>\n                                                    </>)\n                                                }\n                                            </Row>\n                                        </div>\n                                    </Container>\n                                </Container>\n                            </Container>\n                        </Container>\n                    </Container>\n                </Container>\n            </Container>\n        </Card>\n    );\n};\n\nexport default MealAnalysisPreview;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Alert, Button, Card, Col, Form, InputGroup, Navbar, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport ShowMealsImg from \"../../img/showMealsImg.svg\";\nimport {SyncLoader} from \"react-spinners\";\nimport MealAnalysisPreview from \"./MealAnalysisPreview\";\nimport PieChart from \"react-pie-graph-chart\";\nimport {faEyeSlash, faMagnifyingGlass} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {urlEncoded} from \"../../context/DietContext\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport {sumArrayObject} from \"sum-any\";\nimport {clearArray} from \"../../context/MealContext\";\n\n/*\n Funzione che si occupa di eseguire l'analisi di un pasto dato in input dall'utente\n L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n */\nexport default function MealAnalysis() {\n    const [warning, setWarning] = useState(\"\");\n    const [progress, setProgress] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [food, setFood] = useState(\"\");\n    const [nutrients] = useState([]);\n    const [kcals] = useState([]);\n    const [proteins] = useState([]);\n    const [fats] = useState([]);\n    const [carbohydrates] = useState([]);\n    const [userInput, setUserInput] = useState([]);\n    const [showDetails, setShowDetails] = useState(false);\n    const mealNameRegex = /^([a-z\\s]+\\d+[a-z\\s]+,)*([a-z\\s]+\\d+[a-z\\s]+){1}$/;\n\n\n    const cardBackgroundColor = {\n        background: \"#FFEAD3\"\n    };\n\n    //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n    useEffect(() => {\n        scrollToTop();\n    }, []);\n\n    /*\n     Funzione per l'analisi del pasto in input\n     L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n     La traduzione dell'input dell'utente, da italiano ad inglese, viene effettuata sfruttando le API offerte da LIBRETRANSLATE (https://libretranslate.de/)\n     */\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setWarning(\"\");\n\n        if (!mealNameRegex.test(food)) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setWarning(\"Per poter eseguire l'analisi il titolo del pasto deve contenere il nome dell'ingrediente e la sua quantità, in caso di più ingredienti questi devono essere separati da una virgola: es. pane 50 gr, petto di pollo 80 gr\");\n        }\n        if (food !== \"\") {\n            //Inizializzo gli array per una nuova ricerca\n            clearArray(nutrients);\n            clearArray(kcals);\n            clearArray(proteins);\n            clearArray(carbohydrates);\n            clearArray(fats);\n\n            setProgress(true);\n            setLoading(true);\n            const req = {\n                q: food,\n                source: \"it\",\n                target: \"en\"\n            };\n            axios.post(`https://translate.argosopentech.com/translate`, req).then((response) => {\n                setUserInput(food.split(\",\"));\n                response.data.translatedText.split(\",\").forEach((ingredient) => {\n                    let stringify = urlEncoded(ingredient);\n                    axios.get(`https://api.edamam.com/api/nutrition-data?app_id=b92c2025&app_key=e1942e617a37552b845d1db4d36d9522&ingr=${stringify}`)\n                         .then((res) => {\n                             nutrients.push(res.data.totalNutrientsKCal);\n                             proteins.push(res.data.totalNutrientsKCal.PROCNT_KCAL);\n                             carbohydrates.push(res.data.totalNutrientsKCal.CHOCDF_KCAL);\n                             fats.push(res.data.totalNutrientsKCal.FAT_KCAL);\n                             kcals.push(res.data.totalNutrientsKCal.ENERC_KCAL);\n\n                             if (nutrients.length === food.split(\",\").length) {\n                                 setProgress(false);\n                                 setLoading(false);\n                             }\n                         });\n                });\n            });\n        } else {\n            setWarning(\"Per poter effettuare la ricerca inserisci prima un pasto nel formato richiesto: \\nes. pane 50 gr, petto di pollo 80 gr\");\n        }\n    };\n\n    return (\n        <>\n            <Container className={\"modal-fullscreen\"}\n                       style={{\n                           background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                           backgroundSize: \"cover\",\n                           minHeight: \"inherit\",\n                           padding: 0\n                       }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto\"}\n                               style={{minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 col-md-10 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                            <Card className={\"col-11 col-lg-11 mx-auto\"}\n                                  style={{marginTop: 20, marginBottom: 20}}>\n                                <Card.Header style={cardBackgroundColor}\n                                             className={\"text-start\"}\n                                             as=\"h5\">Analisi\n                                                     pasto</Card.Header>\n                                <Card.Body>\n                                    {warning && <Alert style={{margin: 20}}\n                                                       variant=\"warning\">{warning}</Alert>}\n                                    <>\n                                        <div>\n                                            <Container\n                                                className={\"d-flex justify-content-center my-auto align-items-center col-12\"}\n                                                style={{padding: 0}}>\n                                                <img src={ShowMealsImg}\n                                                     id={\"ShowMealsImg\"}\n                                                     style={{height: 200, width: 200, marginRight: 10}}\n                                                     alt={\"Pasti\"}/>\n                                            </Container>\n                                            <div>\n                                                Inserisci un pasto per ottenere subito informazioni riguardo ai\n                                                macronutrienti e ai valori calorici degli ingredienti in esso contenuti:\n                                            </div>\n                                            <Navbar expand=\"lg\">\n                                                <Container\n                                                    className={\"d-flex flex-wrap justify-content-evenly col-12 col-sm-10 gap-2\"}>\n                                                    <Container style={{marginBottom: 15, padding: 5}}\n                                                               className={\"col-12 col-sm-8 my-auto\"}>\n                                                        <InputGroup style={{marginTop: 10}}\n                                                                    className={\"my-auto\"}>\n                                                            <Form.Control\n                                                                type=\"search\"\n                                                                placeholder={\"es. pane 50 gr, petto di pollo 80 gr\"}\n                                                                aria-label=\"Search\"\n                                                                value={food}\n                                                                onChange={(e) => setFood(e.target.value)}\n                                                            />\n                                                        </InputGroup>\n                                                    </Container>\n                                                    <Container className={\"col-12 col-sm-2 my-auto mx-auto\"}>\n                                                        <Button variant=\"outline-danger\"\n                                                                className={\"flex-wrap\"}\n                                                                onClick={handleSubmit}>Analizza</Button>\n                                                    </Container>\n                                                </Container>\n                                            </Navbar>\n                                            {!loading ? (<></>) : (\n                                                <small style={{color: \"grey\", verticalAlign: \"bottom\"}}>Inserisci gli\n                                                                                                        ingredienti separandoli con la virgola</small>\n                                            )}\n                                            {progress ? (<></>) : (\n                                                //Ha finito di caricare i risultati della ricerca\n                                                <>\n                                                    {(!loading && nutrients.length > 0) && (\n                                                        <>\n                                                            <Card className={\"col-10 mx-auto\"}\n                                                                  style={{padding: 0, marginTop: 15}}>\n                                                                <Container style={{padding: 0}}>\n                                                                    <Card.Header className={\"text-center\"}\n                                                                                 style={cardBackgroundColor}><strong>Valori\n                                                                                                                     nutrizionali totali</strong></Card.Header>\n                                                                    <Card.Body>\n                                                                        <Container className={\"col-12 my-auto\"}\n                                                                                   style={{marginLeft: 17}}>\n                                                                            <Row\n                                                                                className={\"d-flex flew-row col-12 justify-content-center\"}\n                                                                                style={{marginRight: 0}}>\n                                                                                <Col>\n                                                                                    <div className=\"text-start\">\n                                                                                        <strong>Energia:</strong>\n                                                                                    </div>\n                                                                                    <div className=\"text-start\">\n                                                                                        <p>{sumArrayObject(kcals, \"quantity\")} Kcal</p>\n                                                                                    </div>\n                                                                                </Col>\n                                                                                <Col>\n                                                                                    <div className=\"text-start\">\n                                                                                        <strong>Carboidrati:</strong>\n                                                                                    </div>\n                                                                                    <div className=\"text-start\">\n                                                                                        <p>{sumArrayObject(carbohydrates, \"quantity\")} gr.</p>\n                                                                                    </div>\n                                                                                </Col>\n                                                                                <Col>\n                                                                                    <div className=\"text-start\">\n                                                                                        <strong>Grassi:</strong>\n                                                                                    </div>\n                                                                                    <div className=\"text-start\">\n                                                                                        <p>{sumArrayObject(fats, \"quantity\")} gr.</p>\n                                                                                    </div>\n                                                                                </Col>\n                                                                                <Col>\n                                                                                    <div className=\"text-start\">\n                                                                                        <strong>Proteine:</strong>\n                                                                                    </div>\n                                                                                    <div className=\"text-start\">\n                                                                                        <p>{sumArrayObject(proteins, \"quantity\")}gr.</p>\n                                                                                    </div>\n                                                                                </Col>\n                                                                            </Row>\n                                                                        </Container>\n                                                                    </Card.Body>\n                                                                </Container>\n                                                            </Card>\n                                                            <PieChart data={[\n                                                                {\n                                                                    type: \"Carboidrati\",\n                                                                    value: sumArrayObject(carbohydrates, \"quantity\"),\n                                                                    color: \"#fbd464\"\n                                                                },\n                                                                {\n                                                                    type: \"Grassi\",\n                                                                    value: sumArrayObject(fats, \"quantity\"),\n                                                                    color: \"#fb7270\"\n                                                                },\n                                                                {\n                                                                    type: \"Proteine\",\n                                                                    value: sumArrayObject(proteins, \"quantity\"),\n                                                                    color: \"#3897f1\"\n                                                                }\n                                                            ]}/>\n                                                            <Container>\n                                                                {showDetails\n                                                                    ? (<Button variant=\"outline-secondary\"\n                                                                               className={\"flex-wrap\"}\n                                                                               onClick={(e) => setShowDetails(false)}><FontAwesomeIcon\n                                                                        icon={faEyeSlash}\n                                                                        style={{marginRight: 5}}/>Nascondi\n                                                                                                  dettagli</Button>)\n                                                                    : (<Button variant=\"outline-secondary\"\n                                                                               className={\"flex-wrap\"}\n                                                                               onClick={(e) => setShowDetails(true)}><FontAwesomeIcon\n                                                                        icon={faMagnifyingGlass}\n                                                                        style={{marginRight: 5}}/>Mostra\n                                                                                                  dettagli</Button>)\n                                                                }\n                                                                <Container style={{marginTop: 20}}>\n                                                                    {showDetails && nutrients.map((item, index) => (\n                                                                        <MealAnalysisPreview key={index}\n                                                                                             index={index}\n                                                                                             userInput={userInput}\n                                                                                             item={item}/>\n                                                                    ))}\n                                                                </Container>\n                                                            </Container>\n                                                        </>\n                                                    )}\n                                                    {(nutrients.length === 0 && !warning && loading === false) ? (\n                                                        <Alert className={\"col-10 mx-auto\"}\n                                                               variant={\"warning\"}>La ricerca non ha prodotto risultati</Alert>) : (<></>)}\n                                                </>\n                                            )}\n                                        </div>\n                                    </>\n                                </Card.Body>\n                            </Card>\n                        </Card>\n                    </Container>\n                </Container>\n            </Container>\n        </>\n    );\n}\n"],"sourceRoot":""}