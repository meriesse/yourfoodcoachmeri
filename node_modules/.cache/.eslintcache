[{"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/index.js":"1","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/App.js":"2","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/AuthContext.js":"3","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/Header.js":"4","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/AccountRole.js":"5","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/Login.js":"6","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/Footer.js":"7","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/SignUp.js":"8","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/ForgotPassword.js":"9","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Profile/UpdateProfile.js":"10","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/PrivateRoutes.js":"11","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/Dashboard.js":"12","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/About.js":"13","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/PublicRoutes.js":"14","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/LandingPage.js":"15","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/PrivacyPolicy.js":"16","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/Spinner.js":"17","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/WindowDimensions.js":"18","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Profile/Account.js":"19","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/NewDiet.js":"20","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/ShowDiets.js":"21","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/ShowMeals.js":"22","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/NewMeal.js":"23","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diary/ShowDiary.js":"24","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/ShowFeedback.js":"25","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/ShowMeal.js":"26","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/ShowDiet.js":"27","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/ShowProgress.js":"28","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Patient/ShowPatients.js":"29","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Patient/NewPatient.js":"30","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/ShowPatients.js":"31","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/ShowPatients.js":"32","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealAnalysis.js":"33","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/config/firebase-config.js":"34","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/UserContext.js":"35","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/helpers/scroll.js":"36","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/DietContext.js":"37","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/MealContext.js":"38","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/Pagination.js":"39","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/PatientPreview.js":"40","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealAnalysisPreview.js":"41","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/PatientPreview.js":"42","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/PatientContext.js":"43","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Patient/PatientSections.js":"44","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealSections.js":"45","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/ProgressPreview.js":"46","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealAnalysisModal.js":"47","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/DeleteConfirmation.js":"48","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/DietSections.js":"49","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diary/DiaryPreview.js":"50","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/FeedbackPreview.js":"51","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealPreview.js":"52","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/DietPreview.js":"53","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/PdfMaker.js":"54","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/DeleteAccount.js":"55"},{"size":308,"mtime":1681540650000,"results":"56","hashOfConfig":"57"},{"size":7747,"mtime":1701093014124,"results":"58","hashOfConfig":"57"},{"size":952,"mtime":1703165767102,"results":"59","hashOfConfig":"57"},{"size":15950,"mtime":1702754928128,"results":"60","hashOfConfig":"57"},{"size":6347,"mtime":1681540650000,"results":"61","hashOfConfig":"57"},{"size":8872,"mtime":1703166153768,"results":"62","hashOfConfig":"57"},{"size":8701,"mtime":1681540650000,"results":"63","hashOfConfig":"57"},{"size":24463,"mtime":1702736178583,"results":"64","hashOfConfig":"57"},{"size":6336,"mtime":1681540650000,"results":"65","hashOfConfig":"57"},{"size":25170,"mtime":1701807312336,"results":"66","hashOfConfig":"57"},{"size":476,"mtime":1681540650000,"results":"67","hashOfConfig":"57"},{"size":15458,"mtime":1703103791956,"results":"68","hashOfConfig":"57"},{"size":7600,"mtime":1681540650000,"results":"69","hashOfConfig":"57"},{"size":480,"mtime":1681540650000,"results":"70","hashOfConfig":"57"},{"size":3678,"mtime":1681540650000,"results":"71","hashOfConfig":"57"},{"size":7222,"mtime":1681540650000,"results":"72","hashOfConfig":"57"},{"size":754,"mtime":1681540650000,"results":"73","hashOfConfig":"57"},{"size":898,"mtime":1681540650000,"results":"74","hashOfConfig":"57"},{"size":17527,"mtime":1703193456001,"results":"75","hashOfConfig":"57"},{"size":57695,"mtime":1703771035964,"results":"76","hashOfConfig":"57"},{"size":13981,"mtime":1700844852625,"results":"77","hashOfConfig":"57"},{"size":13336,"mtime":1681540650000,"results":"78","hashOfConfig":"57"},{"size":12370,"mtime":1681540650000,"results":"79","hashOfConfig":"57"},{"size":11844,"mtime":1681540650000,"results":"80","hashOfConfig":"57"},{"size":14116,"mtime":1681540650000,"results":"81","hashOfConfig":"57"},{"size":15103,"mtime":1681540650000,"results":"82","hashOfConfig":"57"},{"size":49280,"mtime":1701900222953,"results":"83","hashOfConfig":"57"},{"size":13929,"mtime":1681540650000,"results":"84","hashOfConfig":"57"},{"size":7217,"mtime":1703103847412,"results":"85","hashOfConfig":"57"},{"size":35417,"mtime":1703109426330,"results":"86","hashOfConfig":"57"},{"size":12112,"mtime":1681540650000,"results":"87","hashOfConfig":"57"},{"size":12203,"mtime":1703705135375,"results":"88","hashOfConfig":"57"},{"size":20194,"mtime":1681540650000,"results":"89","hashOfConfig":"57"},{"size":1111,"mtime":1702738199376,"results":"90","hashOfConfig":"57"},{"size":3314,"mtime":1703676828938,"results":"91","hashOfConfig":"57"},{"size":892,"mtime":1681540650000,"results":"92","hashOfConfig":"57"},{"size":3469,"mtime":1703683743513,"results":"93","hashOfConfig":"57"},{"size":971,"mtime":1681540650000,"results":"94","hashOfConfig":"57"},{"size":3077,"mtime":1681540650000,"results":"95","hashOfConfig":"57"},{"size":2205,"mtime":1702922278886,"results":"96","hashOfConfig":"57"},{"size":5907,"mtime":1681540650000,"results":"97","hashOfConfig":"57"},{"size":3011,"mtime":1681540650000,"results":"98","hashOfConfig":"57"},{"size":6712,"mtime":1703193887986,"results":"99","hashOfConfig":"57"},{"size":78066,"mtime":1703759651343,"results":"100","hashOfConfig":"57"},{"size":8249,"mtime":1681540650000,"results":"101","hashOfConfig":"57"},{"size":4229,"mtime":1681540650000,"results":"102","hashOfConfig":"57"},{"size":7229,"mtime":1681540650000,"results":"103","hashOfConfig":"57"},{"size":1094,"mtime":1681540650000,"results":"104","hashOfConfig":"57"},{"size":119489,"mtime":1703771114009,"results":"105","hashOfConfig":"57"},{"size":3864,"mtime":1681540650000,"results":"106","hashOfConfig":"57"},{"size":4382,"mtime":1681540650000,"results":"107","hashOfConfig":"57"},{"size":4099,"mtime":1701086138531,"results":"108","hashOfConfig":"57"},{"size":4921,"mtime":1700844433922,"results":"109","hashOfConfig":"57"},{"size":1730488,"mtime":1681540650000,"results":"110","hashOfConfig":"57"},{"size":665,"mtime":1703193398131,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1avk256",{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/index.js",[],["232","233"],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/App.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/AuthContext.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/Header.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/AccountRole.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/Login.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/Footer.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/SignUp.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/ForgotPassword.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Profile/UpdateProfile.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/PrivateRoutes.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/Dashboard.js",["234"],"import React, {useEffect, useState} from \"react\";\nimport {Card, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {useAuth} from \"../../context/AuthContext.js\";\nimport {fetchUser} from \"../../context/UserContext.js\";\nimport Container from \"react-bootstrap/Container\";\nimport {SyncLoader} from \"react-spinners\";\nimport ShowDietsImg from \"../../img/showDietsImg.svg\";\nimport ShowMealsImg from \"../../img/showMealsImg.svg\";\nimport AllProgressiImg from \"../../img/AllProgressImg.svg\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChartLine, faCommentDots} from \"@fortawesome/free-solid-svg-icons\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport Spinner from \"../Utilities/Spinner\";\n\n/*\n Funzione che si occupa di mostrare i dettagli di un account\n */\nexport default function Dashboard() {\n    const [progress, setProgress] = useState(true);\n    const {currentUser} = useAuth();\n    const [error, setError] = useState(\"\");\n\n    const [gestione_pazienti_testo, setGestione_pazienti_testo] = useState(\"\");\n    let gestione_pazienti_nutrizionista = \"Inserisci e visualizza i tuoi pazienti.\\n\" +\n        \"                                    Consegna il PDF auto-generato ai tuoi pazienti per permettergli di accedere subito alle funzioni offerte dal chatbot telegram 'YourFoodCoachBot'\";\n    \n    const [gestione_diete_testo, setGestione_diete_testo] = useState(\"\");\n    let gestione_diete_nutrizionista = \"Inserisci e visualizza le diete dei tuoi pazienti.\\n\" +\n        \"                                    Consegna il PDF auto-generato ai tuoi pazienti per permettergli di accedere subito alle funzioni offerte dal chatbot telegram 'YourFoodCoachBot'\";\n    let gestione_diete_utente = \"Visualizza la tua dieta.\\n\" +\n        \"                                    Utilizza il PDF auto-generato per accedere subito alle funzioni offerte dal chatbot telegram 'YourFoodCoachBot'\";\n\n    const [gestione_pasti_testo, setGestione_pasti_testo] = useState(\"\");\n    let gestione_pasti_nutrizionista = \"Inserisci, visualizza e modifica i pasti da inserire nelle diete dei tuoi pazienti.\\n\" +\n        \"                                    Ottieni subito informazioni riguardo ai\\n\" +\n        \"                                    macronutrienti e ai valori calorici degli ingredienti in essi contenuti\";\n    let gestione_pasti_utente = \"Visualizza i pasti disponibili.\\n\" +\n        \"                                    Ottieni subito informazioni riguardo ai\\n\" +\n        \"                                    macronutrienti e ai valori calorici degli ingredienti in essi contenuti\";\n    \n    const [gestione_progressi_testo, setGestione_progressi_testo] = useState(\"\");\n    let gestione_progressi_nutrizionista = \"Monitora i progressi e i feedback che i pazienti inseriscono giornalmente attraverso il chatbot telegram 'YourFoodCoachBot'\";\n    let gestione_progressi_utente = \"Monitora i tuoi progressi e i tuoi feedback che giornalmente inserisci attraverso il chatbot telegram 'YourFoodCoachBot\";\n    \n    useEffect(() => {\n        // Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n        scrollToTop();\n\n        const fetchData = async () => {\n            try {\n                if (currentUser) {\n                    // Determino il nome dell'utente solo se già non impostato\n                    const docSnap = await fetchUser(currentUser.uid);\n                    localStorage.setItem(\"user\", docSnap.nome);\n                    localStorage.setItem(\"role\", docSnap.ruolo);\n\n                    if (docSnap.ruolo === \"Nutrizionista\") {\n                        setGestione_pazienti_testo(gestione_pazienti_nutrizionista);\n                        setGestione_diete_testo(gestione_diete_nutrizionista);\n                        setGestione_pasti_testo(gestione_pasti_nutrizionista);\n                        setGestione_progressi_testo(gestione_progressi_nutrizionista);\n                    } else if (docSnap.ruolo === \"Utente\") {\n                        setGestione_diete_testo(gestione_diete_utente);\n                        setGestione_pasti_testo(gestione_pasti_utente);\n                        setGestione_progressi_testo(gestione_progressi_utente);\n                    }\n                }\n            } catch (error) {\n                console.error(\"Errore durante il recupero dei dati dell'utente:\", error);\n                setError(\"Errore durante il recupero dei dati dell'utente\");\n            } finally {\n                // Questo blocco verrà eseguito indipendentemente dal successo o dal fallimento della promessa\n                setProgress(false);\n            }\n        };\n\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentUser]);\n\n    if (progress === true) {\n        return <Spinner />;\n    }\n\n    const isNutrizionista = localStorage.getItem(\"role\") === 'Nutrizionista';\n\n\n    const userUI = <Container className={\"modal-fullscreen\"}\n                              style={{\n                                  background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                                  backgroundSize: \"cover\",\n                                  minHeight: \"inherit\",\n                                  padding: 0\n                              }}>\n\n        <Container className={\"d-flex flex-column mx-auto my-auto col-lg-11 col-xl-9\"}\n                   style={{minHeight: 450, marginTop: 20}}>\n            {/*CARD GESTIONE UTENTI */}\n            {isNutrizionista && (\n            <Container className={\"d-flex col-12 justify-content-start\"}>\n                <Card className={\"col-12 col-sm-12 col-md-10 col-lg-9 col-xl-9 justify-content-evenly\"}\n                      style={{\n                          marginTop: 20,\n                          marginBottom: 20,\n                          borderRadius: 16,\n                          boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                          borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                          borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                      }}>\n                    <Card.Body>\n                        <Row className={\"justify-content-center\"}>\n                            <Container className={\"col-7 text-center my-auto\"}>\n                                <h2 className=\"fw-normal mb-4\"\n                                    style={{fontFamily: \"Arial\"}}>Gestione Pazienti</h2>\n                                <div className={\"col-12 mx-auto\"}>\n                                    {gestione_pazienti_testo}\n                                </div>\n                                \n                                <div className=\"d-grid-4 gap-2 mt-3\">\n                                    <Link to=\"/tutti-pazienti\"\n                                          className=\"btn btn-primary\"\n                                          style={{width: 80}}>\n                                        Vai\n                                    </Link>\n                                </div>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap col-5 justify-content-center my-auto\"}>\n                                <img src={ShowDietsImg}\n                                     id={\"ShowUserImg\"}\n                                     style={{maxHeight: 170}}\n                                     alt={\"Utenti\"}\n                                     className={\"img-fluid\"}\n                                />\n                            </Container>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Container>\n            )}\n\n            {/* CARD GESTIONE DIETE */}\n            <Container className={\"d-flex col-12 justify-content-end\"}>\n                <Card className={\"col-12 col-sm-12 col-md-10 col-lg-9 col-xl-9 justify-content-evenly\"}\n                      style={{\n                          marginTop: 20,\n                          marginBottom: 20,\n                          borderRadius: 16,\n                          boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                          borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                          borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                      }}>\n                    <Card.Body>\n                        <Row className={\"justify-content-center\"}>\n                            <Container className={\"col-7 text-center my-auto\"}>\n                                <h2 className=\"fw-normal mb-4\"\n                                    style={{fontFamily: \"Arial\"}}>Gestione Diete</h2>\n                                <div className={\"col-12 mx-auto\"}>\n                                    {gestione_diete_testo}\n                                </div>\n                                <div className=\"d-grid-4 gap-2 mt-3\">\n                                    <Link to=\"/diete\"\n                                          className=\"btn btn-primary\"\n                                          style={{width: 80}}>\n                                        Vai\n                                    </Link>\n                                </div>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap col-5 justify-content-center my-auto\"}>\n                                <img src={ShowDietsImg}\n                                     id={\"ShowDietsImg\"}\n                                     style={{maxHeight: 170}}\n                                     alt={\"Pasti\"}\n                                     className={\"img-fluid\"}\n                                />\n                            </Container>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Container>\n            {/* CARD GESTIONE PASTI */}\n            <Container className={\"d-flex col-12 justify-content-start\"}>\n                <Card className={\"col-12 col-sm-12 col-md-10 col-lg-9 col-xl-9 justify-content-evenly\"}\n                      style={{\n                          marginTop: 20,\n                          marginBottom: 20,\n                          borderRadius: 16,\n                          boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                          borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                          borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                      }}>\n                    <Card.Body>\n                        <Row className={\"justify-content-evenly\"}>\n                            <Container className={\"d-flex flex-wrap col-5 justify-content-center my-auto\"}>\n                                <img src={ShowMealsImg}\n                                     id={\"ShowMealsImg\"}\n                                     style={{maxHeight: 170}}\n                                     alt={\"Pasti\"}\n                                     className={\"img-fluid\"}\n                                />\n                            </Container>\n                            <Container className={\"col-7 text-center my-auto\"}>\n                                <h2 className=\"fw-normal mb-4\"\n                                    style={{fontFamily: \"Arial\"}}>Gestione Pasti</h2>\n                                <div className={\"col-11 mx-auto\"}>\n                                    {gestione_pasti_testo}\n                                </div>\n                                <div className=\"d-grid-4 gap-2 mt-3\">\n                                    <Link to=\"/pasti\"\n                                          className=\"btn btn-primary\"\n                                          style={{width: 80}}>\n                                        Vai\n                                    </Link>\n                                </div>\n                            </Container>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Container>\n            {/* CARD MONITORAGGIO PAZIENTI */}\n            <Container className={\"d-flex col-12 justify-content-end\"}>\n                <Card className={\"d-flex flex-wrap col-12 col-sm-12 col-md-10 col-lg-9 col-xl-9 justify-content-evenly\"}\n                      style={{\n                          marginTop: 20,\n                          marginBottom: 40,\n                          borderRadius: 16,\n                          boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                          borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                          borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                      }}>\n                    <Card.Body>\n                        <SyncLoader color=\"#eb6164\"\n                                    loading={progress}\n                                    style={{\n                                        position: \"absolute\",\n                                        top: \"50%\",\n                                        left: \"50%\",\n                                        transform: \"translate(-50%, -50%)\",\n                                        zIndex: 1\n                                    }}/>\n                        <Row className={\"justify-content-evenly\"}>\n                            <Container className={\"col-7 text-center my-auto\"}>\n                                <h2 className=\"fw-normal mb-4\"\n                                    style={{fontFamily: \"Arial\"}}>Monitora i Progressi e i Feedback</h2>\n                                <div className={\"col-10 mx-auto\"}>\n                                    {gestione_progressi_testo}\n                                </div>\n                                <Container className={\"d-flex flex-wrap justify-content-evenly d-grid-4 gap-2 mt-3\"}>\n                                    <Link to=\"/progressi-pazienti\"\n                                          className=\"btn btn-primary\"\n                                          style={{width: 130}}>\n                                        <FontAwesomeIcon icon={faChartLine}\n                                                         style={{marginRight: 5}}/>\n                                        Progressi\n                                    </Link>\n                                    <Link to=\"/feedback-pazienti\"\n                                          className=\"btn btn-primary\"\n                                          style={{width: 130}}>\n                                        <FontAwesomeIcon icon={faCommentDots}\n                                                         style={{marginRight: 5}}/>\n                                        Feedback\n                                    </Link>\n                                </Container>\n                            </Container>\n                            <Container className={\"d-flex flex-wrap col-5 justify-content-center my-auto mx-auto\"}>\n                                <img src={AllProgressiImg}\n                                     id={\"AllProgressiImg\"}\n                                     style={{maxHeight: 170}}\n                                     alt={\"Progressi pazienti\"}\n                                     className={\"img-fluid\"}\n                                />\n                            </Container>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </Container>\n    </Container>;\n\n    return (\n        <>\n            {progress === false && userUI}\n        </>\n    );\n}\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/About.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/PublicRoutes.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/LandingPage.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/WebsiteLogic/PrivacyPolicy.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/Spinner.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/WindowDimensions.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Profile/Account.js",["235","236","237","238","239","240","241","242"],"import React, {useEffect, useState} from \"react\";\nimport {Alert, Button, Card, Row, Modal, Form} from \"react-bootstrap\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {useAuth} from \"../../context/AuthContext.js\";\nimport {fetchUser} from \"../../context/UserContext.js\";\nimport Container from \"react-bootstrap/Container\";\nimport {SyncLoader} from \"react-spinners\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { handleDelete } from \"../Authentication/DeleteAccount.js\";\n/*\n Funzione che si occupa di mostrare i dettagli di un account\n */\nexport default function Account() {\n    const [user, setUser] = useState([]);\n    const [success, setSuccess] = useState(\"\");\n    const [progress, setProgress] = useState(false);\n    const {currentUser} = useAuth();\n    const location = useLocation();\n    const [benvenuto_testo, setBenvenuto_testo] = useState(\"\");\n    let benvenuto_nutrizionista = \"Benvenuto/a Dott./ssa\";\n    let benvenuto_utente = \"Benvenuto/a\";\n    const [showModal, setShowModal] = useState(false);\n    const [password, setPassword] = useState('');\n\n    const handleShowModal = () => setShowModal(true);\n    const handleCloseModal = () => setShowModal(false);\n  \n    useEffect(() => {\n        //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n        scrollToTop();\n        setProgress(true);\n        fetchUser(currentUser.uid)\n            .then((docSnap) => {\n                const info = {\n                    nome: docSnap.nome,\n                    cognome: docSnap.cognome,\n                    email: docSnap.email,\n                    cf: docSnap.cf,\n                    sesso:docSnap.sesso,\n                    data_nasc: docSnap.data_nasc,\n                    luogo_nasc: docSnap.luogo_nasc,\n                    prov_nasc: docSnap.prov_nasc,\n                    luogo_resid: docSnap.luogo_resid,\n                    prov_resid: docSnap.prov_resid,\n                    via_resid: docSnap.via_resid,\n                    telefono: docSnap.telefono,\n                    ruolo: docSnap.ruolo\n                };\n                if (info.ruolo === \"Nutrizionista\") {\n                    setBenvenuto_testo(benvenuto_nutrizionista);\n                } else if (info.ruolo === \"Utente\") {\n                    setBenvenuto_testo(benvenuto_utente);\n                }\n                setUser(info)\n                localStorage.setItem(\"user\", docSnap.nome);\n                localStorage.setItem(\"role\", docSnap.ruolo);\n                setProgress(false);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n        //Controllo se aggiornamento account avvenuto con successo\n        if (location.state === \"success-update\") {\n            setSuccess(\"Account aggiornato con successo\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentUser.email, location.state]);\n\n    const handleDeleteAccount = async () => {\n        try {\n          const result = await handleDelete();\n    \n          if (result) {\n            // Account eliminato con successo, puoi aggiungere logica aggiuntiva o reindirizzare l'utente\n            console.log('Account eliminato con successo');\n          }\n        } catch (error) {\n          // Gestisci gli errori qui\n          console.error('Errore durante l\\'eliminazione dell\\'account', error);\n        } finally {\n          // Chiudi il modal dopo l'operazione\n          handleCloseModal();\n        }\n      }; \n    return (\n        <>\n            <Container className={\"modal-fullscreen\"}\n                       style={{\n                           background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                           backgroundSize: \"cover\",\n                           minHeight: \"inherit\",\n                           padding: 0\n                       }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto\"}\n                               style={{maxWidth: 800, minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 col-sm-10 col-lg-10 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <Card.Body>\n                                <SyncLoader color=\"#eb6164\"\n                                            loading={progress}\n                                            style={{\n                                                position: \"absolute\",\n                                                top: \"50%\",\n                                                left: \"50%\",\n                                                transform: \"translate(-50%, -50%)\",\n                                                zIndex: 1\n                                            }}/>\n                                <div className=\"d-flex justify-content-between align-items-center my-auto col-12\">\n                                <div>\n                                    <LinkContainer to=\"/dashboard\" className=\"my-auto\">\n                                    <Button style={{ height: 40, width: 100 }} variant=\"warning\">\n                                        <FontAwesomeIcon icon={faAngleLeft} color=\"black\" />\n                                    </Button>\n                                    </LinkContainer>\n                                </div>\n                                </div>\n                                <h2 className=\"fw-normal mb-4\"\n                                    style={{fontFamily: \"Arial\"}}>Dettagli Account\n                                    </h2>\n                                {success &&\n                                    <Alert style={{margin: 20}}\n                                           variant=\"primary\"\n                                           onClose={() => setSuccess(false)}\n                                           dismissible={true}>{success}</Alert>}\n                                <div className=\"text-center\">\n                                    <strong>{benvenuto_testo} </strong>\n                                    <i>\n                                        {user.cognome} {user.nome}\n                                    </i>\n                                </div>\n                                <Card className={\"col-12 col-md-10 mx-auto\"}\n                                      style={{marginTop: 20}}>\n                                    <section className=\"section about-section gray-bg\"\n                                             id=\"about\">\n                                        <div className=\"container\">\n                                            <div className=\"row align-items-center\">\n                                                <div className=\"col-lg-12\">\n                                                    <div className=\"col-md-12 mx-auto\"\n                                                         style={{marginTop: 15}}>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Email:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.email}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Nome:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.nome}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Cognome:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.cognome}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Codice Fiscale:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.cf}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Data di nascita:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.data_nasc}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Sesso:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.sesso}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Luogo di nascita:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.luogo_nasc}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Provincia di nascita:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.prov_nasc}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Luogo di residenza:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.luogo_resid}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Provincia di residenza:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.prov_resid}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Via di residenza:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.via_resid}</p>\n                                                            </div>\n                                                        </Row>\n                                                        <Row className={\"d-flex flew-row col-12\"}>\n                                                            <div className=\"col-5 text-end\"\n                                                                 style={{float: \"right\"}}>\n                                                                <strong>Telefono:</strong>\n                                                            </div>\n                                                            <div className=\"col-7 text-start\">\n                                                                <p>{user.telefono}</p>\n                                                            </div>\n                                                        </Row>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </section>\n                                </Card>\n                                <div className=\"d-grid-4 gap-2 mt-3\">\n                                    <Link to=\"/aggiorna-account\"\n                                          className=\"btn btn-primary\">\n                                        Aggiorna\n                                    </Link>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Container>\n                </Container>\n            </Container>\n        </>\n    );\n}\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/NewDiet.js",["243","244","245","246"],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/ShowDiets.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/ShowMeals.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/NewMeal.js",["247"],"import React, {useEffect, useState} from \"react\";\nimport {Alert, Button, Card, Form} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport NewMealImg from \"../../img/showMealImg.svg\";\nimport {SyncLoader} from \"react-spinners\";\nimport {addMeal, clearArray} from \"../../context/MealContext\";\nimport MealSections from \"./MealSections\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport MealAnalysisModal from \"./MealAnalysisModal\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft, faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport {urlEncoded} from \"../../context/DietContext\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function NewMeal() {\n    const {currentUser} = useAuth();\n    const [disabled] = useState(false);\n    const [warning, setWarning] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [progress, setProgress] = useState(false);\n    const navigate = useNavigate();\n    const mealNameRegex = /^([a-z\\s]+\\d+[a-z\\s]+,)*([a-z\\s]+\\d+[a-z\\s]+){1}$/;\n    const [showModal, setShowModal] = useState(false);\n    const [food, setFood] = useState([\"\"]);\n    const [userInput, setUserInput] = useState([\"\"]);\n    const [showDetails, setShowDetails] = useState(false);\n    const [nutrients] = useState([]);\n    const [kcals] = useState([]);\n    const [proteins] = useState([]);\n    const [fats] = useState([]);\n    const [carbohydrates] = useState([]);\n\n\n    const [formData, setFormData] = useState({\n        email_nutrizionista: currentUser.email,\n        data_inserimento: \"\",\n        nome: \"\",\n        preparazione: \"\",\n        colazione: false,\n        pranzo: false,\n        spuntino: false,\n        cena: false\n    });\n\n    //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n    useEffect(() => {\n        scrollToTop();\n    }, []);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setProgress(true);\n        setLoading(true);\n\n        /*if (!mealNameRegex.test(formData.nome)) {\n         setProgress(false);\n         setLoading(false);\n         scrollToTop();\n         return setError(\"Il titolo del pasto deve contenere il nome dell'ingrediente e la sua quantità, in caso di più ingredienti questi devono essere separati da una virgola: es. pane 50 gr, petto di pollo 80 gr\");\n         }*/\n\n        if (formData.colazione === false && formData.pranzo === false &&\n            formData.spuntino === false && formData.cena === false) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setError(\"Per poter creare il pasto devi prima selezionare una categoria!\");\n        }\n\n        addMeal(formData)\n            .then(r => {\n                console.log(\"Pasto creato correttamente\");\n                setProgress(false);\n                setLoading(false);\n                //L'utente viene indirizzato alla pagina che visualizza l'elenco dei pasti creati\n                navigate(\"/pasti\", {state: \"success-create\", replace: true});\n            })\n            .catch(error => console.error(error)).finally(() => {\n            setProgress(false);\n            setLoading(false);\n        });\n    }\n\n    /*\n     Funzione per l'analisi del pasto in input\n     L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n     */\n    const handleSubmitAnalysis = async (e, value) => {\n        e.preventDefault();\n        setWarning(\"\");\n\n        if (!mealNameRegex.test(formData.nome)) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setWarning(\"Per poter eseguire l'analisi il titolo del pasto deve contenere il nome dell'ingrediente e la sua quantità, in caso di più ingredienti questi devono essere separati da una virgola: es. pane 50 gr, petto di pollo 80 gr\");\n        }\n\n        if (value !== \"\" && value !== undefined) {\n            //Inizializzo gli array per una nuova ricerca\n            clearArray(nutrients);\n            clearArray(kcals);\n            clearArray(proteins);\n            clearArray(carbohydrates);\n            clearArray(fats);\n\n            setProgress(true);\n            setLoading(true);\n            const req = {\n                q: value,\n                source: \"it\",\n                target: \"en\"\n            };\n            axios.post(`https://translate.argosopentech.com/translate`, req).then((response) => {\n                setFood(value);\n                setUserInput(value.split(\",\"));\n                response.data.translatedText.split(\",\").forEach((ingredient) => {\n                    let stringify = urlEncoded(ingredient);\n                    axios.get(`https://api.edamam.com/api/nutrition-data?app_id=b92c2025&app_key=e1942e617a37552b845d1db4d36d9522&ingr=${stringify}`)\n                         .then((res) => {\n                             nutrients.push(res.data.totalNutrientsKCal);\n                             proteins.push(res.data.totalNutrientsKCal.PROCNT_KCAL);\n                             carbohydrates.push(res.data.totalNutrientsKCal.CHOCDF_KCAL);\n                             fats.push(res.data.totalNutrientsKCal.FAT_KCAL);\n                             kcals.push(res.data.totalNutrientsKCal.ENERC_KCAL);\n\n                             if (nutrients.length === value.split(\",\").length) {\n                                 setProgress(false);\n                             }\n                         });\n                });\n            });\n            setShowModal(true);\n        } else {\n            setWarning(\"Per poter effettuare la ricerca inserisci prima un pasto nel formato richiesto: \\nes. pane 50 gr, petto di pollo 80 gr\");\n        }\n    };\n\n\n    return (\n        <>\n            <Container className={\"modal-fullscreen\"}\n                       style={{\n                           background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                           backgroundSize: \"cover\",\n                           minHeight: \"inherit\",\n                           padding: 0\n                       }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto\"}\n                               style={{minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <h2 style={{fontFamily: \"Arial\", marginTop: 10}}>\n                                <div className={\"d-flex my-auto col-12\"}>\n                                    <div className={\"col-12\"}>\n                                        <div className={\"float-start\"}\n                                             style={{marginTop: 10, marginLeft: 20}}>\n                                            <LinkContainer to=\"/pasti\"\n                                                           className={\"my-auto\"}>\n                                                <Button style={{height: 40, width: 100}}\n                                                        variant={\"warning\"}\n                                                ><FontAwesomeIcon icon={faAngleLeft}\n                                                                  color={\"black\"}/></Button>\n                                            </LinkContainer>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Container\n                                    className={\"d-flex justify-content-center my-auto align-items-center col-12\"}>\n                                    <img src={NewMealImg}\n                                         style={{height: 70, width: 70, marginRight: 10}}\n                                         alt={\"Nuovo pasto\"}/>\n                                    <p className={\"my-auto\"}\n                                       style={{margin: 0}}>Creazione Pasto</p>\n                                </Container>\n                            </h2>\n                            {error && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                             variant=\"danger\"\n                                             dismissible={true}\n                                             onClose={() => setError(\"\")}>{error}</Alert>}\n                            {warning && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                               variant=\"warning\"\n                                               dismissible={true}\n                                               onClose={() => setWarning(\"\")}>{warning}</Alert>}\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                            {nutrients.length > 0 && (\n                                <MealAnalysisModal\n                                    showModal={showModal}\n                                    setShowModal={setShowModal}\n                                    showDetails={showDetails}\n                                    setShowDetails={setShowDetails}\n                                    loading={loading}\n                                    userInput={userInput}\n                                    food={food}\n                                    nutrients={nutrients}\n                                    kcals={kcals}\n                                    proteins={proteins}\n                                    fats={fats}\n                                    carbohydrates={carbohydrates}\n                                />\n                            )}\n                            <Form onSubmit={handleSubmit}\n                                  className={\"d-flex flex-column\"}>\n                                <MealSections formData={formData}\n                                              setFormData={setFormData}\n                                              disabled={disabled}\n                                />\n                                <Container className={\"d-flex flex-wrap justify-content-evenly\"}\n                                           style={{marginBottom: 20, marginTop: 20}}>\n                                    {/*<Button variant=\"secondary\"\n                                     style={{width: 157, marginBottom: 10}}\n                                     onClick={(e) => handleSubmitAnalysis(e, formData.nome)}><FontAwesomeIcon\n                                     icon={faChartSimple}\n                                     style={{marginRight: 5}}/>Analizza Pasto</Button>*/}\n                                    <button disabled={loading}\n                                            style={{width: 157, marginBottom: 10}}\n                                            type=\"submit\"\n                                            className=\"btn btn-primary\"><FontAwesomeIcon\n                                        icon={faPlus}\n                                        style={{marginRight: 5}}/>Crea Pasto\n                                    </button>\n                                </Container>\n                            </Form>\n                        </Card>\n                    </Container>\n                </Container>\n            </Container>\n        </>\n    );\n}\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diary/ShowDiary.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/ShowFeedback.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/ShowMeal.js",["248"],"import React, {useEffect, useState} from \"react\";\nimport {Alert, Button, Card, Form} from \"react-bootstrap\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport ShowMealImg from \"../../img/showMealImg.svg\";\nimport {doc, getDoc} from \"firebase/firestore\";\nimport {db} from \"../../config/firebase-config\";\nimport {SyncLoader} from \"react-spinners\";\nimport {faAngleLeft, faFilePen, faFloppyDisk, faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport DeleteConfirmation from \"../Diet/DeleteConfirmation\";\nimport {clearArray, deleteMeal, updateMeal} from \"../../context/MealContext\";\nimport MealSections from \"./MealSections\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport MealAnalysisModal from \"./MealAnalysisModal\";\nimport axios from \"axios\";\nimport {urlEncoded} from \"../../context/DietContext\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function ShowMeal() {\n    //Ottengo l'id dall'url\n    const {id} = useParams();\n    const [disabled, setDisabled] = useState(true);\n    const [warning, setWarning] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [progress, setProgress] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [displayConfirmationModal, setDisplayConfirmationModal] = useState(false);\n    const [deleteMessage, setDeleteMessage] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [food, setFood] = useState([\"\"]);\n    const [userInput, setUserInput] = useState([\"\"]);\n    const [showDetails, setShowDetails] = useState(false);\n    const navigate = useNavigate();\n    const mealNameRegex = /^([a-z\\s]+\\d+[a-z\\s]+,)*([a-z\\s]+\\d+[a-z\\s]+){1}$/;\n    const [nutrients] = useState([]);\n    const [kcals] = useState([]);\n    const [proteins] = useState([]);\n    const [fats] = useState([]);\n    const [carbohydrates] = useState([]);\n    const [formData, setFormData] = useState({\n        nome: \"\",\n        preparazione: \"\",\n        colazione: false,\n        pranzo: false,\n        spuntino: false,\n        cena: false\n    });\n\n    useEffect(() => {\n        //Ad ogni caricamento la pagina effettua uno scroll fino al suo inizio\n        scrollToTop();\n        const getMeal = async () => {\n            setLoading(true);\n            setProgress(true);\n            const docRef = doc(db, \"pasti\", id);\n            await getDoc(docRef).then((doc) => {\n                if (doc.exists()) {\n                    setFormData(doc.data());\n                    setProgress(false);\n                    setLoading(false);\n                } else {\n                    //Il pasto richiesto non esiste\n                    //L'utente viene indirizzato alla pagina che visualizza l'elenco dei pasti creati\n                    navigate(\"/pasti\", {replace: true});\n                }\n            });\n        };\n        getMeal();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function handleSubmit(e) {\n        setProgress(true);\n        e.preventDefault();\n        updateMeal(formData, id)\n            .catch(error => console.error(error))\n            .finally(() => setProgress(false));\n    }\n\n    function showDeleteModal() {\n        setDeleteMessage(\"Sei sicuro di voler eliminare definitivamente il pasto?\");\n        setDisplayConfirmationModal(true);\n    }\n\n// Hide the modal\n    function hideConfirmationModal() {\n        setDisplayConfirmationModal(false);\n    }\n\n// Handle the actual deletion of the item\n    function submitDelete() {\n        setProgress(true);\n        deleteMeal(id)\n            //L'utente viene indirizzato alla pagina che visualizza l'elenco dei pasti creati\n            .then(r => navigate(\"/pasti\", {state: \"success-delete\", replace: true}))\n            .catch((error) => {\n                console.error(error);\n            }).finally(() => setProgress(false));\n        setDisplayConfirmationModal(false);\n    }\n\n    /*\n     Funzione per l'analisi del pasto in input\n     L'analisi viene effettuata sfruttando le API offerte da EDAMAM (https://developer.edamam.com/edamam-nutrition-api)\n     */\n    const handleSubmitAnalysis = async (e, value) => {\n        e.preventDefault();\n        setWarning(\"\");\n\n        if (!mealNameRegex.test(formData.nome)) {\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            return setWarning(\"Per poter eseguire l'analisi il titolo del pasto deve contenere il nome dell'ingrediente e la sua quantità, in caso di più ingredienti questi devono essere separati da una virgola: es. pane 50 gr, petto di pollo 80 gr\");\n        }\n\n        if (value !== \"\" && value !== undefined) {\n            //Inizializzo gli array per una nuova ricerca\n            clearArray(nutrients);\n            clearArray(kcals);\n            clearArray(proteins);\n            clearArray(carbohydrates);\n            clearArray(fats);\n\n            setProgress(true);\n            setLoading(true);\n            const req = {\n                q: value,\n                source: \"it\",\n                target: \"en\"\n            };\n            axios.post(`https://translate.argosopentech.com/translate`, req).then((response) => {\n                setFood(value);\n                setUserInput(value.split(\",\"));\n                response.data.translatedText.split(\",\").forEach((ingredient) => {\n                    let stringify = urlEncoded(ingredient);\n                    axios.get(`https://api.edamam.com/api/nutrition-data?app_id=b92c2025&app_key=e1942e617a37552b845d1db4d36d9522&ingr=${stringify}`)\n                         .then((res) => {\n                             nutrients.push(res.data.totalNutrientsKCal);\n                             proteins.push(res.data.totalNutrientsKCal.PROCNT_KCAL);\n                             carbohydrates.push(res.data.totalNutrientsKCal.CHOCDF_KCAL);\n                             fats.push(res.data.totalNutrientsKCal.FAT_KCAL);\n                             kcals.push(res.data.totalNutrientsKCal.ENERC_KCAL);\n\n                             if (nutrients.length === value.split(\",\").length) {\n                                 setProgress(false);\n                             }\n                         });\n                });\n            });\n            setShowModal(true);\n        } else {\n            setWarning(\"Per poter effettuare la ricerca inserisci prima un pasto nel formato richiesto: \\nes. pane 50 gr, petto di pollo 80 gr\");\n        }\n    };\n\n    return (\n        <>\n            <Container className={\"modal-fullscreen\"}\n                       style={{\n                           background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                           backgroundSize: \"cover\",\n                           minHeight: \"inherit\",\n                           padding: 0\n                       }}>\n                <Container className={\"modal-fullscreen text-center\"}>\n                    <Container className={\"d-flex flex-column mx-auto my-auto\"}\n                               style={{minHeight: 450, marginTop: 20}}>\n                        <Card className={\"col-12 mx-auto\"}\n                              style={{\n                                  marginTop: 20,\n                                  marginBottom: 20,\n                                  borderRadius: 16,\n                                  boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                                  borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                                  borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                              }}>\n                            <h2 style={{fontFamily: \"Arial\", marginTop: 10}}>\n                                <div className={\"d-flex my-auto col-12\"}>\n                                    <div className={\"col-12\"}>\n                                        <div className={\"float-start\"}\n                                             style={{marginTop: 10, marginLeft: 20}}>\n                                            <LinkContainer to=\"/pasti\"\n                                                           className={\"my-auto\"}>\n                                                <Button style={{height: 40, width: 100}}\n                                                        variant={\"warning\"}\n                                                ><FontAwesomeIcon icon={faAngleLeft}\n                                                                  color={\"black\"}/></Button>\n                                            </LinkContainer>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Container\n                                    className={\"d-flex justify-content-center my-auto align-items-center col-12\"}>\n                                    {disabled\n                                        ? <><img src={ShowMealImg}\n                                                 style={{height: 70, width: 70, marginRight: 10}}\n                                                 alt={\"Visualizza pasto\"}/><p\n                                            style={{margin: 0}}>Visualizzazione Pasto</p></>\n                                        : <><img src={ShowMealImg}\n                                                 style={{height: 70, width: 70, marginRight: 10}}\n                                                 alt={\"Modifica pasto\"}/><p\n                                            style={{margin: 0}}>Modifica Pasto</p></>\n                                    }\n                                </Container>\n                            </h2>\n                            {error && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                             variant=\"danger\"\n                                             dismissible={true}\n                                             onClose={() => setError(\"\")}>{error}</Alert>}\n                            {warning && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                               variant=\"warning\"\n                                               dismissible={true}\n                                               onClose={() => setWarning(\"\")}>{warning}</Alert>}\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                            {nutrients.length > 0 && (\n                                <MealAnalysisModal\n                                    showModal={showModal}\n                                    setShowModal={setShowModal}\n                                    showDetails={showDetails}\n                                    setShowDetails={setShowDetails}\n                                    loading={loading}\n                                    userInput={userInput}\n                                    food={food}\n                                    nutrients={nutrients}\n                                    kcals={kcals}\n                                    proteins={proteins}\n                                    fats={fats}\n                                    carbohydrates={carbohydrates}\n                                />\n                            )}\n                            <Form onSubmit={handleSubmit}\n                                  className={\"d-flex flex-column\"}>\n                                <MealSections formData={formData}\n                                              setFormData={setFormData}\n                                              disabled={disabled}\n                                />\n                                <Container className={\"d-flex flex-wrap justify-content-evenly\"}\n                                           style={{marginBottom: 20, marginTop: 20}}>\n                                    {/*<Button variant=\"secondary\"\n                                     style={{width: 157, marginBottom: 10}}\n                                     onClick={(e) => handleSubmitAnalysis(e, formData.nome)}><FontAwesomeIcon\n                                     icon={faChartSimple}\n                                     style={{marginRight: 5}}/>Analizza Pasto</Button>*/}\n                                    {disabled\n                                        ? <button type=\"submit\"\n                                                  className=\"btn btn-warning\"\n                                                  style={{width: 157, marginBottom: 10}}\n                                                  onClick={() => setDisabled(false)}><FontAwesomeIcon icon={faFilePen}\n                                                                                                      style={{marginRight: 5}}/>Modifica\n                                                                                                                                Pasto\n                                        </button>\n                                        : <button type=\"submit\"\n                                                  className=\"btn btn-primary\"\n                                                  style={{width: 157, marginBottom: 10}}\n                                                  onClick={() => setDisabled(true)}><FontAwesomeIcon icon={faFloppyDisk}\n                                                                                                     style={{marginRight: 5}}/>Salva\n                                                                                                                               Pasto\n                                        </button>\n                                    }\n                                    <button type=\"submit\"\n                                            className=\"btn btn-danger\"\n                                            style={{width: 157, marginBottom: 10}}\n                                            onClick={() => showDeleteModal()}>\n                                        <FontAwesomeIcon icon={faTrash}\n                                                         style={{marginRight: 5}}/>Elimina\n                                    </button>\n                                </Container>\n                            </Form>\n                        </Card>\n                    </Container>\n                </Container>\n                <DeleteConfirmation showModal={displayConfirmationModal}\n                                    confirmModal={submitDelete}\n                                    hideModal={hideConfirmationModal}\n                                    message={deleteMessage}/>\n            </Container>\n        </>\n    );\n}\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/ShowDiet.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/ShowProgress.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Patient/ShowPatients.js",["249"],"import React, { useEffect, useState } from \"react\";\nimport { Alert, Button, Card, Form, InputGroup, ListGroup, Navbar } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport { useNavigate } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../../config/firebase-config\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport PatientPreview from \"../Progress/PatientPreview\";\nimport { SyncLoader } from \"react-spinners\";\nimport Pagination from \"../Utilities/Pagination\";\nimport Spinner from \"../Utilities/Spinner\";\nimport { faAngleLeft, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function ShowPatients() {\n  const { currentUser } = useAuth();\n  const [patients, setPatients] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [progress, setProgress] = useState(true);\n  const patientsPerPage = 10;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getPatients = async () => {\n      setProgress(true);\n\n      try {\n        const userID = currentUser.uid;\n        const userDocRef = doc(db, \"users\", userID);\n        const userDocSnapshot = await getDoc(userDocRef);\n\n        if (userDocSnapshot.exists()) {\n          const nutrizionista = userDocSnapshot.data();\n          const userPazienti = nutrizionista.pazienti || [];\n\n          const patientsData = [];\n\n          for (const uid of userPazienti) {\n            const patientDocRef = doc(db, \"users\", uid, \"anagrafica\", uid);\n            setCurrentPage(1);\n\n            try {\n              const patientDocSnapshot = await getDoc(patientDocRef);\n\n              if (patientDocSnapshot.exists()) {\n                const patientData = patientDocSnapshot.data();\n                patientsData.push(patientData);\n              }\n            } catch (error) {\n              console.error(\"Errore durante la query del paziente:\", error.message);\n            }\n          }\n\n          setPatients(patientsData);\n        } else {\n          console.log(\"Nessun nutrizionista trovato con l'email corrente\");\n        }\n      } catch (error) {\n        console.error(\"Errore durante la query degli utenti:\", error.message);\n      }\n\n      setProgress(false);\n    };\n\n    getPatients();\n  }, [currentUser]);\n\n  const filtered = patients.filter(\n    (patient) =>\n      searchInput.toLowerCase() === \"\" ||\n      patient.nome.toLowerCase().includes(searchInput.toLowerCase()) ||\n      patient.cognome.toLowerCase().includes(searchInput.toLowerCase()) ||\n      patient.cf.toLowerCase().includes(searchInput.toLowerCase())\n  );\n\n  if (progress) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <Container className={\"modal-fullscreen\"} style={{ background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\", backgroundSize: \"cover\", minHeight: \"inherit\", padding: 0 }}>\n        <Container className={\"modal-fullscreen text-center\"}>\n          <Container className={\"d-flex flex-column mx-auto my-auto\"} style={{ minHeight: 450, marginTop: 20 }}>\n            <Card className={\"col-12 col-md-10 mx-auto\"} style={{ marginTop: 20, marginBottom: 20, borderRadius: 16, boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\", borderLeft: \"solid 1px rgba(255,255,255,0.8)\", borderTop: \"solid 1px rgba(255,255,255,0.8)\" }}>\n              <h2 style={{ fontFamily: \"Arial\", marginTop: 10 }}>I tuoi pazienti</h2>\n              <div className={\"d-flex my-auto col-12\"}>\n                <div className={\"col-12\"}>\n                  <div className={\"float-start\"} style={{ marginTop: 10, marginLeft: 20 }}>\n                    <LinkContainer to=\"/dashboard\" className={\"my-auto\"}>\n                      <Button style={{ height: 40, width: 100 }} variant={\"warning\"}><FontAwesomeIcon icon={faAngleLeft} color={\"black\"} /></Button>\n                    </LinkContainer>\n                  </div>\n                </div>\n              </div>\n              {error && !patients && <Alert variant=\"danger\">{error}</Alert>}\n              {success && <Alert style={{ margin: 20 }} variant=\"primary\" onClose={() => setSuccess(\"\")} dismissible>{success}</Alert>}\n              <SyncLoader color=\"#eb6164\" loading={progress} style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", zIndex: 1 }} />\n              <Container style={{ minHeight: 500 }}>\n                <ListGroup className={\"d-flex col-12 col-md-12 mx-auto\"} style={{ marginBottom: 20 }}>\n                  <Navbar expand=\"lg\" className={\"justify-content-evenly\"}>\n                    <Container className={\"col-12\"}>\n                      <Container className={\"col-12 col-md-6\"} style={{ marginBottom: 10 }}>\n                        <InputGroup className=\"d-flex\">\n                          <Form.Control\n                            type=\"search\"\n                            placeholder={\"Cerca...\"}\n                            className={\"me-2\"}\n                            aria-label=\"Search\"\n                            value={searchInput}\n                            onChange={(e) => {\n                              setCurrentPage(1);\n                              setSearchInput(e.target.value);\n                            }}\n                          />\n                        </InputGroup>\n                      </Container>\n                      <Container className={\"col-6 col-md-3 d-inline-block\"} style={{ marginBottom: 10, padding: 0 }}>\n                        <Button variant=\"outline-danger\" className={\"flex-wrap\"} onClick={() => navigate(\"/inserisci-paziente\", { replace: true })}><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} />Inserisci paziente</Button>\n                      </Container>\n                    </Container>\n                  </Navbar>\n                  {filtered.map((patient) => (\n                    <PatientPreview\n                      key={patient.email}\n                      id={patient.uid}\n                      nomePaziente={patient.nome}\n                      cognomePaziente={patient.cognome}\n                      codiceFiscalePaziente={patient.cf}\n                    />\n                  ))}\n                  {patients.length === 0 && !progress && <Alert variant={\"warning\"}>Non hai inserito ancora nessun paziente</Alert>}\n                  {filtered.length === 0 && patients.length > 0 && !progress && (\n                    <Alert variant={\"warning\"}>Nessun paziente soddisfa i parametri di ricerca</Alert>\n                  )}\n                </ListGroup>\n              </Container>\n              <Container className={\"d-flex flex-wrap justify-content-center mt-auto\"}>\n                {patients.length !== 0 && <Pagination itemsCount={filtered.length} itemsPerPage={patientsPerPage} currentPage={currentPage} setCurrentPage={setCurrentPage} alwaysShown={true} />}\n              </Container>\n            </Card>\n          </Container>\n        </Container>\n      </Container>\n    </>\n  );\n}\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Patient/NewPatient.js",["250","251","252","253","254","255"],"import React, {useEffect, useState} from \"react\";\nimport {Alert, Button, Card, Form, Modal, Nav} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport {faAngleLeft, faAngleRight, faCheck, faPlus, faXmark} from \"@fortawesome/free-solid-svg-icons\";\nimport {createPatient } from \"../../context/PatientContext\"\nimport PatientSections from \"../Patient/PatientSections\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {useAuth} from \"../../context/AuthContext\";\n//import {Validator} from \"@marketto/codice-fiscale-utils\";\nimport {scrollToTop} from \"../helpers/scroll\";\nimport {collection, doc, arrayUnion, getDocs, query, where, updateDoc } from \"firebase/firestore\";\nimport {db} from \"../../config/firebase-config\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {SyncLoader} from \"react-spinners\";\n\n\nexport default function NewPatient() {\n    const {currentUser} = useAuth();\n    const navigate = useNavigate();\n    const [showDangerAlert, setShowDangerAlert] = useState(false);\n    const [warning, setWarning] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [activeSection, setActiveSection] = useState(0);\n    const [section, setSection] = useState(0);\n    const [disabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [progress, setProgress] = useState(false);\n    const [checkAnagrafica, setCheckAnagrafica] = useState(false);\n    const [checkAnanmesi, setCheckAnamnesi] = useState(false);\n    const [checkEsami, setCheckEsami] = useState(false);\n    const [checkMisureAntro, setCheckMisureAntro] = useState(false);\n    const [checkMisure, setCheckMisure] = useState(false);\n    const [CheckAllergie, setCheckAllergie] = useState(false);\n    const [CheckIntolleranze, setCheckIntolleranze] = useState(false);\n    const [CheckPatologie, setCheckPatologie] = useState(false);\n    const [exists, setExists] = useState(false);\n    const [userInput, setUserInput] = useState([]);\n    let uidCurr = currentUser.uid;\n \n    const [formData, setFormData] = useState({\n    email_nutrizionista: \"\",\n    numero_telefono_nutrizionista: \"\",\n    telegram_bot_passcode: \"\",\n    telegram_user_id: \"\",\n    telegram_chat_id: \"\",\n    telegram_alerts: true,\n    telegram_alerts_acqua: true,\n    tipologia_dieta: \"\",\n    data_inserimento: \"\",\n    nome_paziente: \"\",\n    cognome_paziente: \"\",\n    email_paziente: \"\",\n    numero_telefono_paziente: \"\",\n    data_nascita_paziente:\"\",\n    luogo_nascita_paziente:\"\",\n    provincia_nasc_paziente:\"\",\n    citta_resid_paziente:\"\",\n    provincia_resid_paziente:\"\",\n    via_residenza_paziente:\"\",\n    sesso_paziente: \"\",\n    codice_fiscale_paziente: \"\",\n    note_anamnesi: \"\",\n    celiachia:false,\n    allergie: [\n        { id: '1', nome: 'Glutine', selected: false },\n        { id: '2', nome: 'Uova', selected: false },\n        { id: '3', nome: 'Frutta Secca', selected: false },\n        { id: '4', nome: 'Frutta Fresca', selected: false },\n        { id: '5', nome: 'Soia', selected: false },\n        { id: '6', nome: 'Grano', selected: false },\n        { id: '7', nome: 'Lattosio', selected: false },\n        { id: '8', nome: 'Crostacei', selected: false },\n        { id: '9', nome: 'Nichel', selected: false },\n    ],\n    intolleranze: [\n        { id: '10', nome: 'Glutine', selected: false },\n        { id: '11', nome: 'Uova', selected: false },\n        { id: '12', nome: 'Frutta Secca', selected: false },\n        { id: '13', nome: 'Frutta Fresca', selected: false },\n        { id: '14', nome: 'Soia', selected: false },\n        { id: '15', nome: 'Grano', selected: false },\n        { id: '16', nome: 'Lattosio', selected: false },\n        { id: '17', nome: 'Crostacei', selected: false },\n        { id: '18', nome: 'Nichel', selected: false },\n    ],\n    altroAllergie: \"\",\n    altroIntolleranze: \"\",\n\n    patologie: [\n        { id: '20', nome: 'Celiachia', selected: false },\n        { id: '21', nome: 'Diabete', selected: false },\n        { id: '22', nome: 'Obesità', selected: false },\n        { id: '23', nome: 'Anoressia', selected: false },\n        { id: '24', nome: 'Cardiopatia', selected: false },\n        { id: '25', nome: 'Tumore', selected: false },\n        { id: '26', nome: 'Ipotiroidismo', selected: false },\n        { id: '27', nome: 'Ipertiroidismo', selected: false },\n        { id: '28', nome: 'Ipercolesterolemia', selected: false },\n        { id: '29', nome: 'Depressione', selected: false },\n        { id: '30', nome: 'Ansia', selected: false },\n    ],\n    altroPatologie: \"\",\n \n    esami_prescritti:\"\",\n    esami_effettuati:\"\",\n\n    data_inizio_dieta: \"\",\n    data_fine_dieta: \"\",\n    note_anamnesi: \"\",\n\n    peso_paziente: \"\",\n    altezza_paziente: \"\",\n    circ_fianchi:\"\",\n    circ_braccia:\"\",\n    circ_cosce:\"\",\n    circ_vita:\"\",  \n    circ_spalle:\"\",\n    circ_torace:\"\",\n    circ_testa:\"\",\n    circ_collo:\"\",\n\n    obiettivo_peso: \"\",\n    obiett_fianchi:\"\",\n    obiett_braccia:\"\",\n    obiett_cosce:\"\",\n    obiett_vita:\"\",  \n    obiett_spalle:\"\",\n    obiett_torace:\"\",\n    obiett_testa:\"\",\n    obiett_collo:\"\",\n\n    carenze_vitam:\"\",\n    acqua_intrace:\"\",\n    acqua_extrace:\"\",\n    massa_met_att:\"\",\n    met_basale:\"\",\n    massa_magra:\"\",\n    massa_grassa:\"\",\n    angolo_bia:\"\",\n\n    obiett_acqua_intrace:\"\",\n    obiett_acqua_extrace:\"\",\n    obiett_massa_met_att:\"\",\n    obiett_met_basale:\"\",\n    obiett_massa_magra:\"\",\n    obiett_massa_grassa:\"\",\n    obiett_angolo_bia:\"\",\n    \n});  \n//controllo dieta già presente con stessa email paziente\nuseEffect(() => {\n    const checkExists = async () => {\n        if (formData.email_paziente !== \"\" && currentUser) {\n            setError(\"\");\n            const q = query(collection(db, \"users\"), where(\"email\", \"==\", formData.email_paziente));\n            await getDocs(q)\n                .then((querySnapshot) => {\n                    //Esistono diete con la stessa email_paziente\n                    if (!querySnapshot.empty) {\n                        setExists(true);\n                        setError(\"L'email immessa è già associata ad un utente esistente\");\n                    } else {\n                        setExists(false);\n                    }\n                }).catch((error) => setError(\"Si è verificato un errore inaspettato\"))\n                .finally(() => setProgress(false));\n        }\n    };\n    checkExists();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [formData.email_paziente,currentUser]);\n\n //Controllo che le sezioni siano state completate \n //scheda anagrafica\n useEffect(() => {\n    if (\n      formData.nome_paziente !== \"\" &&\n      formData.cognome_paziente !== \"\" &&\n      formData.email_paziente !== \"\" &&\n      formData.numero_telefono_paziente.length >= 10 &&\n      formData.sesso_paziente !== \"\" &&\n      formData.data_nascita_paziente !== \"\" &&\n      formData.luogo_nascita_paziente !== \"\" &&\n      formData.provincia_nasc_paziente !== \"\" &&\n      formData.citta_resid_paziente !== \"\" &&\n      formData.provincia_resid_paziente !== \"\" &&\n      formData.via_residenza_paziente !== \"\" &&\n      formData.codice_fiscale_paziente !== \"\"\n      //Validator.codiceFiscale(formData.codice_fiscale_paziente).valid\n    ) setCheckAnagrafica(true);\n    else {\n      setCheckAnagrafica(false);\n    }  \n  }, [\n    formData.nome_paziente,\n    formData.cognome_paziente,\n    formData.email_paziente,\n    formData.numero_telefono_paziente,\n    formData.sesso_paziente,\n    formData.data_nascita_paziente,\n    formData.luogo_nascita_paziente,\n    formData.provincia_nasc_paziente,\n    formData.citta_resid_paziente,\n    formData.provincia_resid_paziente,\n    formData.via_residenza_paziente,\n    formData.codice_fiscale_paziente,\n    exists,\n  ]);\n  \n//imposto l'anamnesi\nuseEffect(() => {\n    if (formData.note_anamnesi !== \"\" ) {\n        setCheckAnamnesi(true);\n    } else {\n        setCheckAnamnesi(false);\n    }\n}, [formData.note_anamnesi]);\n\n\n//imposto gli esami\nuseEffect(() => {\n    if (formData.esami_effettuati !== \"\" && formData.esami_prescritti !== \"\" ) {\n        setCheckEsami(true);\n    } else {\n        setCheckEsami(false);\n    }\n}, [formData.esami_effettuati, formData.esami_prescritti]); \n\n//imposto le misure antropometriche e gli obiettivi\nuseEffect(() => {\n    if (formData.altezza_paziente !== \"\" && \n        formData.peso_paziente !== \"\" && \n        formData.circ_fianchi !== \"\" && \n        formData.circ_vita !== \"\" &&\n        formData.circ_torace !== \"\" &&\n        formData.circ_spalle !== \"\" &&\n        formData.circ_testa !== \"\" &&\n        formData.circ_cosce !== \"\" &&\n        formData.circ_collo !== \"\" &&\n        formData.circ_braccia !== \"\" &&\n        formData.obiettivo_peso !== \"\" && \n        formData.obiett_fianchi !== \"\" && \n        formData.obiett_vita !== \"\" &&\n        formData.obiett_torace !== \"\" &&\n        formData.obiett_spalle !== \"\" &&\n        formData.obiett_testa !== \"\" &&\n        formData.obiett_cosce !== \"\" &&\n        formData.obiett_collo !== \"\" &&\n        formData.obiett_braccia !== \"\" &&\n        formData.kcal_giornaliere !== \"\" ) {\n        setCheckMisureAntro(true);\n    } else {\n        setCheckMisureAntro(false);\n    }\n}, [formData.altezza_paziente,formData.peso_paziente, formData.circ_fianchi,formData.circ_vita,formData.circ_torace,formData.circ_spalle,formData.circ_testa,formData.circ_cosce,formData.circ_collo,formData.circ_braccia,formData.kcal_giornaliere,\n    formData.obiettivo_peso, formData.obiett_fianchi,formData.obiett_vita,formData.obiett_torace,formData.obiett_spalle,formData.obiett_testa,formData.obiett_cosce,formData.obiett_collo,formData.obiett_braccia ]);\n\n//scheda altri parametri\nuseEffect(() => {\n    if (formData.carenze_vitam !== \"\" && \n        formData.acqua_intrace !== \"\" && \n        formData.acqua_extrace !== \"\" && \n        formData.massa_met_att !== \"\" &&\n        formData.massa_grassa !== \"\" &&\n        formData.massa_magra !== \"\" &&\n        formData.angolo_bia !== \"\" &&\n        formData.obiett_acqua_intrace !== \"\" &&\n        formData.obiett_acqua_extrace !== \"\" &&\n        formData.obiett_massa_met_att !== \"\" && \n        formData.obiett_met_basale !== \"\" && \n        formData.obiett_massa_grassa !== \"\" &&\n        formData.obiett_massa_magra !== \"\" &&\n        formData.obiett_angolo_bia !== \"\") {\n        setCheckMisure(true);\n    } else {\n        setCheckMisure(false);\n    }\n}, [formData.carenze_vitam,formData.acqua_intrace, formData.acqua_extrace,formData.massa_met_att,formData.massa_grassa,formData.massa_magra,formData.angolo_bia,formData.obiett_acqua_intrace,formData.obiett_acqua_extrace,formData.obiett_met_basale,formData.obiett_met_basale,formData.obiett_massa_grassa,formData.obiett_massa_magra,formData.obiett_angolo_bia  ]);\n\nuseEffect(() => {\n    const isAnyIntolleranzaSelected = formData.intolleranze.some(item => item.selected);\n    setCheckIntolleranze(isAnyIntolleranzaSelected);\n}, [formData.intolleranze]);\n\nuseEffect(() => {\n    if (formData.altroAllergie !== \"\" ) {\n        setCheckAllergie(true);\n    } \n}, [formData.altroAllergie]); \n\n\nuseEffect(() => {\n    if (formData.altroIntolleranze !== \"\" ) {\n        setCheckIntolleranze(true);\n    } \n}, [formData.altroIntolleranze]);\n\nuseEffect(() => {\n    const isAnyAllergiaSelected =  formData.allergie.some(item => item.selected);\n    setCheckAllergie(isAnyAllergiaSelected);\n}, [formData.allergie]);\n\nuseEffect(() => {\n    const isAnyPatologiaSelected =  formData.patologie.some(item => item.selected);\n    setCheckPatologie(isAnyPatologiaSelected);\n}, [formData.patologie]);\n\n\nuseEffect(() => {\n    if (formData.altroPatologie !== \"\" ) {\n        setCheckPatologie(true);\n    } \n}, [formData.altroPatologie]);\n\n\nasync function handleCreatePatient(e) {\n        setLoading(true);\n        e.preventDefault();\n        setProgress(true);\n        setError(\"\");\n        setShowDangerAlert(false);\n       // Esegui il controllo che tutte le sezioni siano complete\n    if (!checkAnagrafica || !checkEsami || !checkMisureAntro || !checkMisure) {\n        setLoading(false);\n        setProgress(false);\n        scrollToTop();\n        return setError(\"Per poter procedere con la creazione del paziente devi prima completare tutti i campi obbligatori.\");\n      }  \n\n  //Controllo che il numero di telefono inserito sia valido\n    if (formData.numero_telefono_paziente.length !== 10) {\n    setProgress(false);\n    setLoading(false);\n    scrollToTop();\n    return setError(\"Il numero di telefono inserito non è valido\");\n}\n\n//Controllo che non vi sia già una dieta esistente con la stessa email paziente\nif (exists) {\n    setProgress(false);\n    setLoading(false);\n    scrollToTop();\n    return setError(\"L'email immessa è già associata ad un paziente esistente\");\n}\nif (formData.codice_fiscale_paziente.length !== 16 /*&& !Validator.codiceFiscale(formData.codice_fiscale_paziente).valid*/) {\n    setLoading(false);\n    scrollToTop();\n    return setError(\"Il codice fiscale inserito non è corretto.\");\n}\ncreatePatient(uidCurr, formData).then(({ success, message, uidPatient }) => {\n    if (success) {\n        console.log(`Paziente inserito con successo! UID del paziente: ${uidPatient}`);\n        \n        // Ora puoi eseguire altre operazioni con l'uid del paziente\n        // Ad esempio, aggiungere l'ID del paziente all'array \"pazienti\" nel documento del nutrizionista\n        const nutrizionistaDocRef = doc(db, \"users\", uidCurr);\n        // Il documento esiste, aggiungi l'ID del paziente all'array \"pazienti\"\n        const updateData = {\n            pazienti: arrayUnion(uidPatient),\n        }\n            // Aggiorna il documento del nutrizionista con il nuovo campo\n        updateDoc(nutrizionistaDocRef, updateData);\n            console.log(\"Campo pazienti aggiunto con successo al documento del nutrizionista!\");\n            \n        \n        }\n        setProgress(false);\n        //L'utente viene indirizzato alla dashboard\n     navigate(\"/dashboard\", {replace: true});\n    }\n).catch((error) => {\n    switch (error.code) {\n        //L'email inserita risulta già associata ad un account\n        case \"auth/email-already-in-use\":\n            setError(\"L'email inserita è già associata ad un account esistente\");\n            setShowDangerAlert(true);\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            break;\n        default :\n            setError(\"La registrazione non è andata a buon fine: \" + error);\n            setShowDangerAlert(true);\n            setProgress(false);\n            setLoading(false);\n            scrollToTop();\n            break;\n    }\n});\n}\n\nreturn (\n    <>\n        <Container className={\"modal-fullscreen\"}\n                   style={{\n                       background: \"linear-gradient(123deg, rgba(247,209,98,1) 30%, rgba(251,149,96,1) 50%, rgba(254,88,94,1) 70%)\",\n                       backgroundSize: \"cover\",\n                       minHeight: \"inherit\",\n                       padding: 0\n                   }}>\n            <Container className={\"modal-fullscreen text-center\"}>\n                <Container className={\"d-flex flex-column mx-auto my-auto col-12\"}\n                           style={{minHeight: 450, marginTop: 20}}>\n                    <Card className={\"col-12 mx-auto\"}\n                          style={{\n                              marginTop: 20,\n                              marginBottom: 20,\n                              borderRadius: 16,\n                              boxShadow: \"10px 10px 10px rgba(30,30,30,0.5)\",\n                              borderLeft: \"solid 1px rgba(255,255,255,0.8)\",\n                              borderTop: \"solid 1px rgba(255,255,255,0.8)\"\n                          }}>\n                        <h2 style={{fontFamily: \"Arial\", marginTop: 10}}>\n                            <div className={\"d-flex my-auto col-12\"}>\n                                <div className={\"col-12\"}>\n                                    <div className={\"float-start\"}\n                                         style={{marginTop: 10, marginLeft: 20}}>\n                                        <LinkContainer to=\"/cerca-paziente\"\n                                                       className={\"my-auto\"}>\n                                            <Button style={{height: 40, width: 100}}\n                                                    variant={\"warning\"}\n                                            ><FontAwesomeIcon icon={faAngleLeft}\n                                                              color={\"black\"}/></Button>\n                                        </LinkContainer>\n                                    </div>\n                                </div>\n                            </div>\n                            <Container\n                                    className={\"d-flex justify-content-center my-auto align-items-center col-12\"}>\n                                   <p\n                                    className={\"my-auto\"}\n                                    style={{margin: 0}}>Inserimento Paziente</p>\n                                </Container>\n                            </h2> \n                            {error && <Alert className={\"mx-auto col-10 col-md-10 col-lg-6 flex-wrap\"}\n                                             variant=\"danger\"\n                                             dismissible={true}\n                                             onClose={() => setError(\"\")}>{error}</Alert>}\n                            {warning && <Alert className={\"mx-auto col-10 flex-wrap\"}\n                                               variant=\"warning\"\n                                               dismissible={true}\n                                               onClose={() => setWarning(\"\")}>{warning}</Alert>}\n                            <SyncLoader color=\"#eb6164\"\n                                        loading={progress}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"50%\",\n                                            left: \"50%\",\n                                            transform: \"translate(-50%, -50%)\",\n                                            zIndex: 1\n                                        }}/>\n                <Nav className={\"d-flex flex-row justify-content-evenly\"}\n                        justify\n                        variant=\"tabs\"\n                        defaultActiveKey=\"0\"\n                        activeKey={activeSection}\n                        style={{margin: 5}}>\n                    <Nav.Item>\n                        <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                    style={{color: \"red\"}}\n                                    eventKey=\"0\"\n                                    onClick={() => {\n                                        setSection(0);\n                                        setActiveSection(0);\n                                        setWarning(\"\");\n                                    }}\n                        >Anagrafica\n                            {checkAnagrafica === true &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faCheck}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        marginTop: 10,\n                                                        color: \"green\",\n                                                        height: 15\n                                                    }}/>}\n                            {checkAnagrafica === false &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faXmark}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"red\",\n                                                        height: 15\n                                                    }}/>}\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                    eventKey=\"1\"\n                                    onClick={() => {\n                                        setSection(1);\n                                        setActiveSection(1);\n                                        setWarning(\"\");\n                                    }}\n                        >Anamnesi\n                            {checkAnanmesi === true &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faCheck}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"green\",\n                                                        height: 15\n                                                    }}/>}\n                            {checkAnanmesi === false &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faXmark}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"red\",\n                                                        height: 15\n                                                    }}/>}\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                    eventKey=\"2\"\n                                    onClick={() => {\n                                        setSection(2);\n                                        setActiveSection(2);\n                                        setWarning(\"\");\n                                    }}\n                        >Esami\n                            {checkEsami === true &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faCheck}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"green\",\n                                                        height: 15\n                                                    }}/>}\n                            {checkEsami === false &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faXmark}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"red\",\n                                                        height: 15\n                                                    }}/>}\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                    eventKey=\"3\"\n                                    onClick={() => {\n                                        setSection(3);\n                                        setActiveSection(3);\n                                        setWarning(\"\");\n                                    }}\n                        >Parametri antropometrici\n                            {checkMisureAntro === true &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faCheck}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"green\",\n                                                        height: 15\n                                                    }}/>}\n                            {checkMisureAntro === false &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faXmark}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"red\",\n                                                        height: 15\n                                                    }}/>}\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                    eventKey=\"4\"\n                                    onClick={() => {\n                                        setSection(4);\n                                        setActiveSection(4);\n                                        setWarning(\"\");\n                                    }}\n                        >Altri parametri\n                            {checkMisure === true &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faCheck}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"green\",\n                                                        height: 15\n                                                    }}/>}\n                            {checkMisure === false &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faXmark}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"red\",\n                                                        height: 15\n                                                    }}/>}\n                        </Nav.Link>\n                    </Nav.Item>\n                        <Nav.Item>\n                        <Nav.Link\n                        className={\"link-dark d-inline-flex justify-content-center\"}\n                        eventKey=\"5\"\n                        onClick={() => {\n                            setSection(5);\n                            setActiveSection(5);\n                            setWarning(\"\");\n                        }}\n                    >\n                    Allergie\n                    {CheckAllergie === true && (\n                        <FontAwesomeIcon\n                        className={\"my-auto\"}\n                        icon={faCheck}\n                        style={{\n                            marginRight: 0,\n                            marginLeft: 10,\n                            color: \"green\",\n                            height: 15,\n                        }}\n                        />\n                    )}\n                    {CheckAllergie === false && (\n                        <FontAwesomeIcon\n                        className={\"my-auto\"}\n                        icon={faXmark}\n                        style={{\n                            marginRight: 0,\n                            marginLeft: 10,\n                            color: \"red\",\n                            height: 15,\n                        }}\n                        />\n                    )}\n                    </Nav.Link>\n                </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link\n                        className={\"link-dark d-inline-flex justify-content-center\"}\n                        eventKey=\"6\"\n                        onClick={() => {\n                            setSection(6);\n                            setActiveSection(6);\n                            setWarning(\"\");\n                        }}\n                        >\n                    Intolleranze\n                    {CheckIntolleranze === true && (\n                        <FontAwesomeIcon\n                        className={\"my-auto\"}\n                        icon={faCheck}\n                        style={{\n                            marginRight: 0,\n                            marginLeft: 10,\n                            color: \"green\",\n                            height: 15,\n                        }}\n                        />\n                    )}\n                    {CheckIntolleranze === false && (\n                        <FontAwesomeIcon\n                        className={\"my-auto\"}\n                        icon={faXmark}\n                        style={{\n                            marginRight: 0,\n                            marginLeft: 10,\n                            color: \"red\",\n                            height: 15,\n                        }}\n                        />\n                    )}\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                        <Nav.Link className={\"link-dark d-inline-flex justify-content-center\"}\n                                    eventKey=\"7\"\n                                    onClick={() => {\n                                        setSection(7);\n                                        setActiveSection(7);\n                                        setWarning(\"\");\n                                    }}\n                        >Patologie\n                            {CheckPatologie === true &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faCheck}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"green\",\n                                                        height: 15\n                                                    }}/>}\n                            {CheckPatologie === false &&\n                                <FontAwesomeIcon className={\"my-auto\"}\n                                                    icon={faXmark}\n                                                    style={{\n                                                        marginRight: 0,\n                                                        marginLeft: 10,\n                                                        color: \"red\",\n                                                        height: 15\n                                                    }}/>}\n                        </Nav.Link>\n                    </Nav.Item>\n                            </Nav>\n                            <Form onSubmit={handleCreatePatient}\n                                  className={\"d-flex flex-column\"}>\n                                <PatientSections section={section}\n                                              formData={formData}\n                                              setFormData={setFormData}\n                                              allergie={formData.allergie}\n                                              intolleranze={formData.intolleranze}\n                                              patologie={formData.patologie}\n                                              disabled={disabled}\n                                              setProgress={setProgress}\n                                              setLoading={setLoading}\n                                              setWarning={setWarning}\n                                              setError={setError}\n                                />\n                        <Container className={\"d-flex flex-wrap justify-content-evenly\"}\n                                           style={{marginBottom: 20, marginTop: 20}}>\n                                    {section > 0 && (\n                                        <Button style={{height: 40, width: 85}}\n                                                variant=\"warning\"\n                                                onClick={() => {\n                                                    setSection(section - 1);\n                                                    setActiveSection(activeSection - 1);\n                                                    setWarning(\"\");\n                                                }}><FontAwesomeIcon icon={faAngleLeft}\n                                                                    color={\"black\"}/></Button> )}\n                                    {section < 7 && (\n                                        <Button style={{height: 40, width: 85}}\n                                                variant={\"warning\"}\n                                                onClick={() => {\n                                                    setSection(section + 1);\n                                                    setActiveSection(activeSection + 1);\n                                                    setWarning(\"\");\n                                                }}><FontAwesomeIcon icon={faAngleRight}\n                                                                    color={\"black\"}/></Button> )}\n                                    {section === 7 && (\n                                        \n                                        <button disabled={loading}\n                                                type=\"submit\"\n                                                className=\"btn btn-primary\"\n                                                >\n                                            <FontAwesomeIcon\n                                                icon={faPlus}\n                                                style={{marginRight: 5}}/>Crea\n                                                                          Paziente</button> )}\n                                </Container>\n                            </Form>\n                            </Card>\n                    </Container>\n                </Container>\n            </Container>\n            </>\n );      \n                                                                                       \n};","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/ShowPatients.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/ShowPatients.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealAnalysis.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/config/firebase-config.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/UserContext.js",["256","257","258","259"],"import {doc, getDoc, getDocs, setDoc, updateDoc, collection, query, where} from \"firebase/firestore\";\nimport {auth, db} from \"../config/firebase-config\";\n\n/*\n Funzione che si occupa di memorizzare i dati di un profilo utente su Firestore Database\n */\n export async function signUpUser(email, password, nome, cognome, sesso, telefono, cf, data_nasc, luogo_nasc, prov_nasc, luogo_resid, prov_resid, via_resid, ruolo) {\n    try {\n        const userCredential = await auth.createUserWithEmailAndPassword(email, password);\n        const uid = userCredential.user.uid;\n\n        const userDocRef = doc(db, 'users', uid);\n        const anagraficaDocRef = doc(db, 'users', uid, 'anagrafica', uid);\n\n        await setDoc(userDocRef, {\n            email: email,\n            nome: nome,\n            ruolo: ruolo\n        });\n\n        localStorage.setItem('user', nome);\n        localStorage.setItem('role', ruolo);\n\n        await setDoc(anagraficaDocRef, {\n            cognome: cognome,\n            nome: nome,\n            sesso: sesso,\n            data_nasc: data_nasc,\n            luogo_nasc: luogo_nasc,\n            prov_nasc: prov_nasc,\n            cf: cf,\n            luogo_resid: luogo_resid,\n            prov_resid: prov_resid,\n            via_resid: via_resid,\n            telefono: telefono,\n            email: email,\n            ruolo: ruolo,\n        });\n\n        return { success: true, message: \"Registrazione completata con successo\" };\n    } catch (error) {\n        console.error('Errore durante la registrazione dell\\'utente:', error.message);\n        return { success: false, message: error.message };\n    }\n}\n\nexport async function fetchUser(uid) {\n    try {\n        const anagraficaDocRef = doc(db, 'users', uid, 'anagrafica', uid);\n        const docSnap = await getDoc(anagraficaDocRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data();\n        } else {\n            console.log(\"Nessun documento trovato con l'UID inserito nella collezione 'anagrafica'!\");\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Errore durante la lettura dei dati:\", error);\n        return null;\n    }\n}\n\n\nexport async function updateUser(uid, nome, cognome, sesso, data_nasc, luogo_nasc, prov_nasc, cf, luogo_resid, prov_resid, via_resid, telefono, email) {\n    const anagraficaDocRef = doc(db, 'users', uid, 'anagrafica', uid);\n\n    try {\n        const docSnap = await getDoc(anagraficaDocRef);\n\n        if (docSnap.exists()) {\n            await updateDoc(anagraficaDocRef, {\n                cognome: cognome,\n                nome: nome,\n                sesso: sesso,\n                data_nasc: data_nasc,\n                luogo_nasc: luogo_nasc,\n                prov_nasc: prov_nasc,\n                cf: cf,\n                luogo_resid: luogo_resid,\n                prov_resid: prov_resid,\n                via_resid: via_resid,\n                telefono: telefono,\n                email: email\n            });\n\n            return { success: true, message: \"Aggiornamento completato con successo\" };\n        } else {\n            return { success: false, message: \"Il documento dell'anagrafica non esiste\" };\n        }\n    } catch (error) {\n        console.error(\"Errore durante l'aggiornamento dei dati:\", error);\n        return { success: false, message: error.message };\n    }\n}\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/helpers/scroll.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/DietContext.js",["260","261","262"],"import {collection, deleteDoc, doc, getDoc, serverTimestamp, setDoc, updateDoc, query, where, getDocs} from \"firebase/firestore\";\nimport {db} from \"../config/firebase-config\";\n\n\n/*\n Funzione che si occupa di memorizzare i dati di una dieta su Firestore Database\n */\nexport async function addDiet(formData, nutrizionista) {\n    formData.data_inserimento = serverTimestamp();\n    formData.email_nutrizionista = nutrizionista.email;\n    formData.numero_telefono_nutrizionista = nutrizionista.telefono;\n    formData.tipologia_dieta = nutrizionista.ruolo;\n    await setDoc(doc(collection(db, \"diets\")), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare i dati di una dieta memorizzata su Firestore Database\n */\nexport async function updateDiet(formData, id) {\n    formData.data_inserimento = serverTimestamp();\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare il numero di telefono del nutrizionista su Firestore Database\n */\nexport async function updateTelephone(formData, id) {\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di eliminare una dieta memorizzata su Firestore Database\n */\nexport async function deleteDiet(id) {\n    await deleteDoc(doc(db, \"diets\", id));\n}\n\n/*\n Funzione che si occupa di ottenere i dati di una dieta memorizzata su Firestore Database\n */\nexport async function getDiet(id) {\n    const docRef = doc(db, \"diets\", id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        console.log(\"Documento letto correttamente \");\n        console.log(docSnap.data());\n        return docSnap.data();\n    } else {\n        console.log((\"Nessun documento trovato con il codice fiscale inserito!\"));\n    }\n}\n/* export const fetchUsersWithDiets = async (nutrizionistaUid) => {\n    try {\n      const userDocRef = doc(db, \"users\", nutrizionistaUid);\n      const userDocSnapshot = await getDoc(userDocRef);\n  \n      if (userDocSnapshot.exists()) {\n        const nutrizionista = userDocSnapshot.data();\n        const userPazienti = nutrizionista.pazienti || [];\n  \n        const patientsData = [];\n  \n        for (const userId of userPazienti) {\n            const dietsQuery = doc(\n                collection(db, \"diets\"),\n                where(\"uid\", \"==\", userId),\n                where(\"data_fine_dieta\", \"<=\", new Date())\n              );\n\n            const dietsQuerySnapshot = await getDoc(dietsQuery);\n  \n            if (!dietsQuerySnapshot.empty) {\n                const patientDocRef = doc(db, \"users\", userId, \"anagrafica\", userId);\n                const patientDocSnapshot = await getDoc(patientDocRef);\n      \n                if (patientDocSnapshot.exists()) {\n                    const patientData = patientDocSnapshot.data();\n                    patientsData.push(patientData);\n                  }\n                }\n              }\n        \n          return patientsData;\n        } else {\n          console.log(\"Nessun nutrizionista trovato con l'UID fornito\");\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Errore durante la query degli utenti:\", error.message);\n        return null;\n      }\n    }; */\n/*\n Funzione che si occupa di codificare l'url della richiesta ricevuto il pasto in input\n */\nexport const urlEncoded = arr => {\n    const regex = /,/gi;\n    if (Array.isArray(arr)) {\n        return arr.join(\",\").replace(regex, \" and \");\n    } else {\n        return arr.split(\" \").join(\"%20\");\n    }\n};\n","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/MealContext.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/Pagination.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/PatientPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealAnalysisPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/PatientPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/PatientContext.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Patient/PatientSections.js",["263","264"],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealSections.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Progress/ProgressPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealAnalysisModal.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/DeleteConfirmation.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/DietSections.js",["265","266","267","268","269","270","271","272"],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diary/DiaryPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Feedback/FeedbackPreview.js",["273","274"],"import {ListGroup} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport React from \"react\";\nimport {faQuoteLeft, faQuoteRight, faThumbsDown, faThumbsUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ReactComponent as MealSubstitutionImg} from \"../../img/MealSubstitutionImg.svg\";\nimport {ReactComponent as ProblemImg} from \"../../img/ProblemImg.svg\";\nimport Pollice from \"../../img/Pollice.png\";\nimport Normale from \"../../img/Normale.png\";\n\n/*\n Componente che visualizza i dettagli di un singolo feedback utente in un ListGroup\n Il feedback utente può essere di due tipologie: {PROBLEMA, RICHIESTA_SOSTITUZIONE_PASTO, GIORNATA_POSITIVA, GIORNATA_NEGATIVA}\n */\nconst FeedbackPreview = ({timestamp, tipologia, testo}) => {\n    const data = timestamp.toDate().toLocaleDateString(\"it-IT\");\n    return (\n        <ListGroup.Item className={\"col-12\"}\n                        style={{padding: 0}}>\n            <Container className={\"d-flex flex-column mx-auto my-auto \"}>\n                <Container className={\"d-flex flex-wrap text-start\"}\n                           style={{padding: 0}}>\n                    <Container className={\"d-flex flex-row justify-content-evenly my-auto\"}\n                               style={{padding: 0, marginTop: 20}}>\n                        <Container style={{margin: 0}}\n                                   className={\"d-flex flex-wrap justify-content-center col-4 col-sm-2 my-auto\"}>\n                            {tipologia === \"RICHIESTA_SOSTITUZIONE_PASTO\" &&\n                                <MealSubstitutionImg id={\"MealSubstitutionImg\"}\n                                                     style={{maxHeight: 80, margin: 5}}\n                                />}\n                            {tipologia === \"PROBLEMA\" &&\n                                <ProblemImg id={\"ProblemImg\"}\n                                            style={{maxHeight: 65, margin: 5}}\n                                />}\n                            {tipologia === \"GIORNATA_POSITIVA\" &&\n                                <img src={Pollice}\n                                     alt={\"Pollice positivo\"}\n                                     className={\"img-fluid\"}\n                                     style={{maxHeight: 65, margin: 5}}/>}\n                            {tipologia === \"GIORNATA_NEGATIVA\" &&\n                                <img src={Pollice}\n                                alt={\"About\"}\n                                className={\"Pollice negativo\"}\n                                style={{maxHeight: 65, margin: 5, rotate:\"180deg\"}}/>}\n                            {tipologia === \"GIORNATA_NORMALE\" &&\n                                <img src={Normale}\n                                     alt={\"About\"}\n                                     className={\"Uguale\"}\n                                     style={{maxHeight: 65, margin: 5}}/>}\n                        </Container>\n                        <Container className={\"d-flex flex-wrap my-auto col-9 gap-3 mt-2 mt-sm-3 mt-lg-auto\"}\n                                   style={{padding: 0}}>\n                            <Container style={{padding: 0}}\n                                       className={\"col-12 col-sm-2\"}>\n                                <div className={\"float-start\"}\n                                     style={{margin: 0}}>Data: <strong>{data}</strong></div>\n                            </Container>\n                            <Container style={{padding: 0}}\n                                       className={\"d-flex col-12 col-sm-8 mb-2 mb-sm-3 mb-lg-auto my-auto\"}>\n                                <div\n                                    style={{margin: 0}}><FontAwesomeIcon icon={faQuoteLeft}\n                                                                         style={{marginRight: 10}}/><strong>{testo}</strong><FontAwesomeIcon icon={faQuoteRight}\n                                                                                                                                             style={{marginLeft: 10}}/>\n                                </div>\n                            </Container>\n                        </Container>\n                    </Container>\n                </Container>\n            </Container>\n        </ListGroup.Item>\n    );\n};\n\nexport default FeedbackPreview;","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Meals/MealPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Diet/DietPreview.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/PdfMaker.js",[],"/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/DeleteAccount.js",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":22,"column":12,"nodeType":"281","messageId":"282","endLine":22,"endColumn":17},{"ruleId":"279","severity":1,"message":"283","line":2,"column":35,"nodeType":"281","messageId":"282","endLine":2,"endColumn":40},{"ruleId":"279","severity":1,"message":"284","line":2,"column":42,"nodeType":"281","messageId":"282","endLine":2,"endColumn":46},{"ruleId":"279","severity":1,"message":"285","line":12,"column":10,"nodeType":"281","messageId":"282","endLine":12,"endColumn":17},{"ruleId":"279","severity":1,"message":"286","line":26,"column":12,"nodeType":"281","messageId":"282","endLine":26,"endColumn":21},{"ruleId":"279","severity":1,"message":"287","line":27,"column":12,"nodeType":"281","messageId":"282","endLine":27,"endColumn":20},{"ruleId":"279","severity":1,"message":"288","line":27,"column":22,"nodeType":"281","messageId":"282","endLine":27,"endColumn":33},{"ruleId":"279","severity":1,"message":"289","line":29,"column":11,"nodeType":"281","messageId":"282","endLine":29,"endColumn":26},{"ruleId":"279","severity":1,"message":"290","line":73,"column":11,"nodeType":"281","messageId":"282","endLine":73,"endColumn":30},{"ruleId":"279","severity":1,"message":"291","line":2,"column":16,"nodeType":"281","messageId":"282","endLine":2,"endColumn":21},{"ruleId":"279","severity":1,"message":"292","line":12,"column":9,"nodeType":"281","messageId":"282","endLine":12,"endColumn":18},{"ruleId":"279","severity":1,"message":"293","line":23,"column":10,"nodeType":"281","messageId":"282","endLine":23,"endColumn":14},{"ruleId":"279","severity":1,"message":"294","line":54,"column":12,"nodeType":"281","messageId":"282","endLine":54,"endColumn":17},{"ruleId":"279","severity":1,"message":"295","line":92,"column":11,"nodeType":"281","messageId":"282","endLine":92,"endColumn":31},{"ruleId":"279","severity":1,"message":"295","line":107,"column":11,"nodeType":"281","messageId":"282","endLine":107,"endColumn":31},{"ruleId":"279","severity":1,"message":"296","line":23,"column":17,"nodeType":"281","messageId":"282","endLine":23,"endColumn":25},{"ruleId":"279","severity":1,"message":"283","line":2,"column":36,"nodeType":"281","messageId":"282","endLine":2,"endColumn":41},{"ruleId":"279","severity":1,"message":"297","line":21,"column":12,"nodeType":"281","messageId":"282","endLine":21,"endColumn":27},{"ruleId":"279","severity":1,"message":"298","line":38,"column":12,"nodeType":"281","messageId":"282","endLine":38,"endColumn":21},{"ruleId":"279","severity":1,"message":"299","line":38,"column":23,"nodeType":"281","messageId":"282","endLine":38,"endColumn":35},{"ruleId":"300","severity":1,"message":"301","line":110,"column":5,"nodeType":"302","messageId":"303","endLine":110,"endColumn":18},{"ruleId":"304","severity":1,"message":"305","line":279,"column":4,"nodeType":"306","endLine":279,"endColumn":361,"suggestions":"307"},{"ruleId":"279","severity":1,"message":"308","line":1,"column":22,"nodeType":"281","messageId":"282","endLine":1,"endColumn":29},{"ruleId":"279","severity":1,"message":"309","line":1,"column":50,"nodeType":"281","messageId":"282","endLine":1,"endColumn":60},{"ruleId":"279","severity":1,"message":"310","line":1,"column":62,"nodeType":"281","messageId":"282","endLine":1,"endColumn":67},{"ruleId":"279","severity":1,"message":"311","line":1,"column":69,"nodeType":"281","messageId":"282","endLine":1,"endColumn":74},{"ruleId":"279","severity":1,"message":"310","line":1,"column":81,"nodeType":"281","messageId":"282","endLine":1,"endColumn":86},{"ruleId":"279","severity":1,"message":"311","line":1,"column":88,"nodeType":"281","messageId":"282","endLine":1,"endColumn":93},{"ruleId":"279","severity":1,"message":"308","line":1,"column":95,"nodeType":"281","messageId":"282","endLine":1,"endColumn":102},{"ruleId":"279","severity":1,"message":"312","line":23,"column":21,"nodeType":"281","messageId":"282","endLine":23,"endColumn":35},{"ruleId":"279","severity":1,"message":"313","line":39,"column":8,"nodeType":"281","messageId":"282","endLine":39,"endColumn":22},{"ruleId":"279","severity":1,"message":"314","line":1,"column":35,"nodeType":"281","messageId":"282","endLine":1,"endColumn":38},{"ruleId":"279","severity":1,"message":"293","line":12,"column":10,"nodeType":"281","messageId":"282","endLine":12,"endColumn":14},{"ruleId":"279","severity":1,"message":"315","line":14,"column":8,"nodeType":"281","messageId":"282","endLine":14,"endColumn":30},{"ruleId":"279","severity":1,"message":"316","line":50,"column":12,"nodeType":"281","messageId":"282","endLine":50,"endColumn":29},{"ruleId":"279","severity":1,"message":"317","line":62,"column":11,"nodeType":"281","messageId":"282","endLine":62,"endColumn":26},{"ruleId":"304","severity":1,"message":"318","line":142,"column":10,"nodeType":"306","endLine":142,"endColumn":23,"suggestions":"319"},{"ruleId":"304","severity":1,"message":"320","line":210,"column":10,"nodeType":"306","endLine":210,"endColumn":23,"suggestions":"321"},{"ruleId":"279","severity":1,"message":"295","line":321,"column":11,"nodeType":"281","messageId":"282","endLine":321,"endColumn":31},{"ruleId":"279","severity":1,"message":"322","line":4,"column":36,"nodeType":"281","messageId":"282","endLine":4,"endColumn":48},{"ruleId":"279","severity":1,"message":"323","line":4,"column":50,"nodeType":"281","messageId":"282","endLine":4,"endColumn":60},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'Form' is defined but never used.","'faTrash' is defined but never used.","'showModal' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleShowModal' is assigned a value but never used.","'handleDeleteAccount' is assigned a value but never used.","'Badge' is defined but never used.","'Validator' is defined but never used.","'func' is defined but never used.","'diets' is assigned a value but never used.","'handleSubmitAnalysis' is assigned a value but never used.","'setError' is assigned a value but never used.","'showDangerAlert' is assigned a value but never used.","'userInput' is assigned a value but never used.","'setUserInput' is assigned a value but never used.","no-dupe-keys","Duplicate key 'note_anamnesi'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData.obiett_massa_met_att'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'getDocs' is defined but never used.","'collection' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'setNewExamText' is assigned a value but never used.","'handleSaveExam' is assigned a value but never used.","'Tab' is defined but never used.","'createUtilityClassName' is defined but never used.","'noPatientsMessage' is assigned a value but never used.","'handleSomeEvent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'patients' and 'setProgress'. Either include them or remove the dependency array. If 'setProgress' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["327"],"React Hook useEffect has a missing dependency: 'setProgress'. Either include it or remove the dependency array. If 'setProgress' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["328"],"'faThumbsDown' is defined but never used.","'faThumbsUp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},"Update the dependencies array to be: [formData.carenze_vitam, formData.acqua_intrace, formData.acqua_extrace, formData.massa_met_att, formData.massa_grassa, formData.massa_magra, formData.angolo_bia, formData.obiett_acqua_intrace, formData.obiett_acqua_extrace, formData.obiett_met_basale, formData.obiett_massa_grassa, formData.obiett_massa_magra, formData.obiett_angolo_bia, formData.obiett_massa_met_att]",{"range":"335","text":"336"},"Update the dependencies array to be: [currentUser, patients, setProgress]",{"range":"337","text":"338"},"Update the dependencies array to be: [currentUser, setProgress]",{"range":"339","text":"340"},[10373,10730],"[formData.carenze_vitam, formData.acqua_intrace, formData.acqua_extrace, formData.massa_met_att, formData.massa_grassa, formData.massa_magra, formData.angolo_bia, formData.obiett_acqua_intrace, formData.obiett_acqua_extrace, formData.obiett_met_basale, formData.obiett_massa_grassa, formData.obiett_massa_magra, formData.obiett_angolo_bia, formData.obiett_massa_met_att]",[6128,6141],"[currentUser, patients, setProgress]",[9152,9165],"[currentUser, setProgress]"]