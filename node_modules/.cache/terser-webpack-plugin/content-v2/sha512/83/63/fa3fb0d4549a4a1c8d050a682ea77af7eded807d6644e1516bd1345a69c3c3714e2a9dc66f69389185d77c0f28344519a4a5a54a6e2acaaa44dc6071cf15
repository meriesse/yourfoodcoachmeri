{"code":"(this.webpackJsonpyourfoodcoach=this.webpackJsonpyourfoodcoach||[]).push([[24],{362:function(a,o,e){\"use strict\";var n,i=e(5),r=e.n(i),t=e(85),l=e(43),b=e(45),s=e(126);function c(a){if((!n&&0!==n||a)&&l.a){var o=document.createElement(\"div\");o.style.position=\"absolute\",o.style.top=\"-9999px\",o.style.width=\"50px\",o.style.height=\"50px\",o.style.overflow=\"scroll\",document.body.appendChild(o),n=o.offsetWidth-o.clientWidth,document.body.removeChild(o)}return n}var u=e(83),C=e(12),d=e(25),g=e(130),S=e(129),m=e(0),h=e(128),M=e(101),v=e(69),A=e(6),P=e(1);const B=m.forwardRef(((a,o)=>{let{className:e,bsPrefix:n,as:i=\"div\",...t}=a;return n=Object(A.c)(n,\"modal-body\"),Object(P.jsx)(i,{ref:o,className:r()(e,n),...t})}));B.displayName=\"ModalBody\";var f=B,V=e(86);const T=m.forwardRef(((a,o)=>{let{bsPrefix:e,className:n,contentClassName:i,centered:t,size:l,fullscreen:b,children:s,scrollable:c,...u}=a;e=Object(A.c)(e,\"modal\");const C=\"\".concat(e,\"-dialog\"),d=\"string\"===typeof b?\"\".concat(e,\"-fullscreen-\").concat(b):\"\".concat(e,\"-fullscreen\");return Object(P.jsx)(\"div\",{...u,ref:o,className:r()(C,n,l&&\"\".concat(e,\"-\").concat(l),t&&\"\".concat(C,\"-centered\"),c&&\"\".concat(C,\"-scrollable\"),b&&d),children:Object(P.jsx)(\"div\",{className:r()(\"\".concat(e,\"-content\"),i),children:s})})}));T.displayName=\"ModalDialog\";var p=T;const O=m.forwardRef(((a,o)=>{let{className:e,bsPrefix:n,as:i=\"div\",...t}=a;return n=Object(A.c)(n,\"modal-footer\"),Object(P.jsx)(i,{ref:o,className:r()(e,n),...t})}));O.displayName=\"ModalFooter\";var R=O,N=e(127);const D=m.forwardRef(((a,o)=>{let{bsPrefix:e,className:n,closeLabel:i=\"Close\",closeButton:t=!1,...l}=a;return e=Object(A.c)(e,\"modal-header\"),Object(P.jsx)(N.a,{ref:o,...l,className:r()(n,e),closeLabel:i,closeButton:t})}));D.displayName=\"ModalHeader\";var L=D,G=e(46);const z=Object(G.a)(\"h4\"),k=m.forwardRef(((a,o)=>{let{className:e,bsPrefix:n,as:i=z,...t}=a;return n=Object(A.c)(n,\"modal-title\"),Object(P.jsx)(i,{ref:o,className:r()(e,n),...t})}));k.displayName=\"ModalTitle\";var I=k;function E(a){return Object(P.jsx)(v.a,{...a,timeout:null})}function j(a){return Object(P.jsx)(v.a,{...a,timeout:null})}const q=m.forwardRef(((a,o)=>{let{bsPrefix:e,className:n,style:i,dialogClassName:v,contentClassName:B,children:f,dialogAs:T=p,\"aria-labelledby\":O,\"aria-describedby\":R,\"aria-label\":N,show:D=!1,animation:L=!0,backdrop:G=!0,keyboard:z=!0,onEscapeKeyDown:k,onShow:I,onHide:q,container:F,autoFocus:_=!0,enforceFocus:U=!0,restoreFocus:y=!0,restoreFocusOptions:Z,onEntered:w,onExit:Y,onExiting:H,onEnter:x,onEntering:Q,onExited:W,backdropClassName:K,manager:J,...$}=a;const[X,aa]=Object(m.useState)({}),[oa,ea]=Object(m.useState)(!1),na=Object(m.useRef)(!1),ia=Object(m.useRef)(!1),ra=Object(m.useRef)(null),[ta,la]=Object(u.a)(),ba=Object(d.a)(o,la),sa=Object(C.a)(q),ca=Object(A.d)();e=Object(A.c)(e,\"modal\");const ua=Object(m.useMemo)((()=>({onHide:sa})),[sa]);function Ca(){return J||Object(M.b)({isRTL:ca})}function da(a){if(!l.a)return;const o=Ca().getScrollbarWidth()>0,e=a.scrollHeight>Object(b.a)(a).documentElement.clientHeight;aa({paddingRight:o&&!e?c():void 0,paddingLeft:!o&&e?c():void 0})}const ga=Object(C.a)((()=>{ta&&da(ta.dialog)}));Object(g.a)((()=>{Object(s.a)(window,\"resize\",ga),null==ra.current||ra.current()}));const Sa=()=>{na.current=!0},ma=a=>{na.current&&ta&&a.target===ta.dialog&&(ia.current=!0),na.current=!1},ha=()=>{ea(!0),ra.current=Object(S.a)(ta.dialog,(()=>{ea(!1)}))},Ma=a=>{\"static\"!==G?ia.current||a.target!==a.currentTarget?ia.current=!1:null==q||q():(a=>{a.target===a.currentTarget&&ha()})(a)},va=Object(m.useCallback)((a=>Object(P.jsx)(\"div\",{...a,className:r()(\"\".concat(e,\"-backdrop\"),K,!L&&\"show\")})),[L,K,e]),Aa={...i,...X};Aa.display=\"block\";return Object(P.jsx)(V.a.Provider,{value:ua,children:Object(P.jsx)(h.a,{show:D,ref:ba,backdrop:G,container:F,keyboard:!0,autoFocus:_,enforceFocus:U,restoreFocus:y,restoreFocusOptions:Z,onEscapeKeyDown:a=>{z?null==k||k(a):(a.preventDefault(),\"static\"===G&&ha())},onShow:I,onHide:q,onEnter:(a,o)=>{a&&da(a),null==x||x(a,o)},onEntering:(a,o)=>{null==Q||Q(a,o),Object(t.a)(window,\"resize\",ga)},onEntered:w,onExit:a=>{null==ra.current||ra.current(),null==Y||Y(a)},onExiting:H,onExited:a=>{a&&(a.style.display=\"\"),null==W||W(a),Object(s.a)(window,\"resize\",ga)},manager:Ca(),transition:L?E:void 0,backdropTransition:L?j:void 0,renderBackdrop:va,renderDialog:a=>Object(P.jsx)(\"div\",{role:\"dialog\",...a,style:Aa,className:r()(n,e,oa&&\"\".concat(e,\"-static\"),!L&&\"show\"),onClick:G?Ma:void 0,onMouseUp:ma,\"aria-label\":N,\"aria-labelledby\":O,\"aria-describedby\":R,children:Object(P.jsx)(T,{...$,onMouseDown:Sa,className:v,contentClassName:B,children:f})})})})}));q.displayName=\"Modal\";o.a=Object.assign(q,{Body:f,Header:L,Title:I,Footer:R,Dialog:p,TRANSITION_DURATION:300,BACKDROP_TRANSITION_DURATION:150})},420:function(a,o,e){\"use strict\";e.d(o,\"a\",(function(){return ia}));var n=e(421),i=e(422);function r(a){return a[Symbol.iterator]=()=>a,a}class t{constructor(a){let{fromDate:o,toDate:e,codeMatcher:n,data:i,licenses:r,province:t,sources:l}=a;if(n&&t)throw new Error(\"Both codeMatcher and province were provided to Bolfiore, only one is allowed\");if(e&&!o)throw new Error(\"Parameter fromDate is mandatory passing toDate\");return this.fromDate=o,this.toDate=e,this.codeMatcher=n,this.data=i,this.licenses=r,this.province=t,this.sources=l,new Proxy(this,this.constructor)}static get(a,o,e){if(this.BELFIORE_CODE_MATCHER.test(o)){const e=this.belfioreToInt(o).toString(32).padStart(3,\"0\");for(const o of a.data||[]){const n=this.binaryfindIndex(o.belfioreCode,e);if(n>=0)return a.locationByIndex(o,n)}}if(!((a.codeMatcher||a.province)&&[\"cities\",\"countries\"].includes(o)||\"byProvince\"===o&&(a.codeMatcher instanceof RegExp&&a.codeMatcher.test(\"Z000\")||a.province)))return Reflect.get(a,o,e)}static binaryfindIndex(a,o){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:a.length-1;if(!a.length)return-1;const i=Math.max(e,0),r=Math.min(n,a.length-1),t=r-i+1;if(i>r||t%o.length)return-1;const l=i+Math.floor(t/(2*o.length))*o.length,b=a.substr(l,o.length);return b===o?Math.ceil((l+1)/o.length)-1:o>b?this.binaryfindIndex(a,o,l+o.length,r):this.binaryfindIndex(a,o,i,l-1)}static belfioreToInt(a){const o=a.toUpperCase();return 1e3*(o.charCodeAt(0)-65)+parseInt(o.substr(1),10)}static belfioreFromInt(a){const o=Math.floor(a/1e3);return\"\".concat(String.fromCharCode(o+65)).concat(a.toString().substr(-3).padStart(3,\"0\"))}static decodeDate(a){const o=parseInt(a,32);return n(this.ITALY_KINGDOM_BIRTHDATE).add(o,\"days\")}static nameByIndex(a,o){if(\"string\"!=typeof a)throw new Error(\"[BelfioreConnector.nameByIndex] Provided list is not a string\");if(!a.length)throw new Error(\"[BelfioreConnector.nameByIndex] Provided list empty\");let e=0,n=a.indexOf(\"|\",e+1),i=o;for(;i>0&&n>e;)i--,e=n+1,n=a.indexOf(\"|\",e+1);if(o<0||i>0)throw new Error(\"[BelfioreConnector.nameByIndex] Provided index \".concat(o,\" is out range\"));return!i&&n<0?a.substring(e):a.substring(e,n)}toArray(){return[...this.scanData()]}get provinces(){return this.province?[this.province]:this.codeMatcher!==t.COUNTRY_CODE_MATCHER?this.parseProvinces():[]}searchByName(a){return a?[...this.scanData(a)]:null}findByName(a){if(!a)return null;const o=new RegExp(\"^\".concat(a,\"$\"),\"i\");return this.scanData(o).next().value}active(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n();return new t({...this.config,fromDate:n(a),toDate:n(a)})}from(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n();return new t({...this.config,fromDate:n(a)})}byProvince(a){if(\"string\"==typeof a&&/^[A-Z]{2}$/u.test(a))return new t({...this.config,codeMatcher:void 0,province:a})}get cities(){return new t({...this.config,codeMatcher:t.CITY_CODE_MATCHER,province:void 0})}get countries(){return new t({...this.config,codeMatcher:t.COUNTRY_CODE_MATCHER,province:void 0})}get config(){const{codeMatcher:a,data:o,fromDate:e,licenses:n,sources:i,toDate:r}=this;return{codeMatcher:a,data:o,fromDate:e,licenses:n,sources:i,toDate:r}}*scanDataSourceIndex(a,o){if(o)for(let e=0,n=0;e<a.name.length;n++){const i=a.name.indexOf(\"|\",e+1)+1||a.name.length,r=a.name.substring(e,i-1);o.test(r)&&(yield n),e=i}else{const o=a.belfioreCode.length/3;for(let a=0;a<o;a++)yield a}return-1}scanData(a){return r(this.scanDataGenerator(a))}*scanDataGenerator(a){const o=\"string\"==typeof a?new RegExp(a,\"i\"):a;for(const e of this.data){const a=this.scanDataSourceIndex(e,o);for(let o=a.next();!o.done;o=a.next()){const a=o.value,n=this.locationByIndex(e,a);n&&(yield n)}}return null}locationByIndex(a,o){const e=3*o;if(a.belfioreCode.length-e<3)return null;const n=parseInt(a.belfioreCode.substr(e,3),32),i=t.belfioreFromInt(n),r=a.provinceOrCountry.substr(2*o,2);if(this.province&&this.province!==r||this.codeMatcher&&!this.codeMatcher.test(i))return null;const l=4*o,b=t.decodeDate((a.creationDate||\"\").substr(l,4)||\"0\").startOf(\"day\"),s=t.decodeDate((a.expirationDate||\"\").substr(l,4)||\"2qn13\").endOf(\"day\");if(this.fromDate&&a.expirationDate&&this.fromDate.isAfter(s,\"day\")||this.toDate&&a.creationDate&&this.toDate.isBefore(b,\"day\"))return null;const c=t.nameByIndex(a.name,o),u=parseInt(a.dataSource,32).toString(2).padStart(2*a.belfioreCode.length/3,\"0\").substr(2*o,2),C=this.licenses[parseInt(u,2)],d={belfioreCode:i,creationDate:b.toDate(),dataSource:C,expirationDate:s.toDate(),name:c};return\"Z\"===i[0]?{...d,iso3166:r}:{...d,province:r}}parseProvinces(){const a=new Set;for(const o of this.data){const e=this.scanDataSourceIndex(o);for(let n=e.next();!n.done;n=e.next()){const e=n.value,i=o.provinceOrCountry.substr(2*e,2);if(!a.has(i)){const n=parseInt(o.belfioreCode.substr(3*e,3),32),r=t.belfioreFromInt(n);t.CITY_CODE_MATCHER.test(r)&&i.trim()&&a.add(i)}}}return Array.from(a)}}t.ITALY_KINGDOM_BIRTHDATE=\"1861-01-01\",t.BELFIORE_CODE_MATCHER=/^[A-Z]\\d{3}$/iu,t.CITY_CODE_MATCHER=/^[A-Y]\\d{3}$/iu,t.COUNTRY_CODE_MATCHER=/^Z\\d{3}$/iu;const l=new t({data:[{belfioreCode:\"oghognoguohfoi5ol2\",dataSource:\"1al\",expirationDate:\"1f2k1ebp1j051en61k2d1ebp\",name:\"Cecoslovacchia|Repubblica Democratica Tedesca|Repubblica Socialista Federale di Jugoslavia|Unione Sovietica|Serbia e Montenegro|Yemen del Sud\",provinceOrCountry:\"  DDYUSU  YD\"},{belfioreCode:\"ogcogdogeogfoggogiogjogkoglogmogoogpogqogrogsogtogvoh0oh1oh2oh3oh5oh6oh7oh8oh9ohaohbohcohdoheohiohjohkohoohpohqohsohtohuoi1oi2oi3oi4oi6oi7oi8oi9ojgojjojkojlojmojnojoojpojqojrojtojuojvok0ok1ok3ok4ok6ok7ok8ok9okaokbokcokdokgokhokiokjokkoklokookpokqokrokuokvol0ol1ol3ol4ol5ol6ol7ol8ol9olaolbomkomlommompomqomromsomtomuomvon0on1on2on3on4on5on6on7on8on9onaondoneonfongonhonionjonkonlonmonnonoonponqonronsontonuonvoo0oo1oo3oo4oo5oo7oo8oo9ooaooboodooeoofoohoooopooppopqopropsostosuosvot0ot1ot2ot3ot5ot6ot7ot8otaotbotcotfotiotkotlotmotnotootpotqotrotsottp00p01p02p03p04p05p06p08p09p0ap0bp0cp0dp0ep34p37p38p3fp3hp3kp3np3qp3rp3sp3up40p41p42p43p44p45p46p47p9j\",dataSource:\"1alalal\",name:\"Albania|Andorra|Austria|Belgio|Bulgaria|Stato della Citt\\xe0 del Vaticano|Danimarca|Isole F\\xe6r \\xd8er|Finlandia|Francia|Germania|Gibilterra|Regno Unito|Grecia|Irlanda|Islanda|Liechtenstein|Lussemburgo|Malta|Isola di Man|Monaco|Norvegia|Paesi Bassi|Polonia|Portogallo|Romania|San Marino|Spagna|Svezia|Svizzera|Ungheria|Ucraina|Bielorussia|Moldova|Estonia|Lettonia|Lituania|Macedonia del Nord|Croazia|Slovenia|Bosnia-Erzegovina|Federazione russa|Slovacchia|Repubblica ceca|Serbia|Montenegro|Kosovo|Palestina|Afghanistan|Arabia Saudita|Bahrein|Bhutan|Myanmar/Birmania|Brunei Darussalam|Cambogia|Sri Lanka|Cina|Cipro|Corea del Sud|Corea del Nord|Emirati Arabi Uniti|Filippine|Taiwan|Giappone|Giordania|India|Indonesia|Iran|Iraq|Israele|Kuwait|Laos|Libano|Maldive|Mongolia|Nepal|Oman|Pakistan|Qatar|Siria|Thailandia|Timor Leste|Turchia|Yemen|Malaysia|Singapore|Bangladesh|Vietnam|Armenia|Azerbaigian|Georgia|Kazakhstan|Kirghizistan|Tagikistan|Turkmenistan|Uzbekistan|Namibia|Algeria|Angola|Burundi|Camerun|Capo Verde|Repubblica Centrafricana|Ciad|Comore|Congo|Repubblica Democratica del Congo|Costa d'Avorio|Benin|Etiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Guinea equatoriale|Kenya|Liberia|Libia|Madagascar|Malawi|Mali|Marocco|Mauritania|Maurizio|Mozambico|Niger|Nigeria|Egitto|Zimbabwe|Ruanda|Sahara occidentale|Sant'Elena|Sao Tom\\xe9 e Principe|Seychelles|Senegal|Sierra Leone|Somalia|Sudafrica|Sudan|Eswatini|Togo|Tunisia|Uganda|Burkina Faso|Zambia|Tanzania|Botswana|Lesotho|Gibuti|Eritrea|Bermuda|Canada|Groenlandia|Saint Pierre e Miquelon|Stati Uniti d'America|Aruba|Bahamas|Costa Rica|Cuba|Repubblica Dominicana|El Salvador|Giamaica|Guatemala|Haiti|Honduras|Belize|Messico|Nicaragua|Panama|Isole Turks e Caicos|Barbados|Grenada|Isole Vergini britanniche|Dominica|Santa Lucia|Saint Vincent e Grenadine|Anguilla|Isole Cayman|Montserrat|Antigua e Barbuda|Saint Kitts e Nevis|Argentina|Bolivia|Brasile|Cile|Colombia|Ecuador|Guyana|Suriname|Isole Falkland (Malvine)|Paraguay|Per\\xf9|Trinidad e Tobago|Uruguay|Venezuela|Australia|Isole Cook (NZ)|Figi|Isole Marshall|Nauru|Nuova Caledonia|Nuova Zelanda|Isole Pitcairn|Polinesia francese|Isole Salomone|Samoa|Tonga|Wallis e Futuna|Papua Nuova Guinea|Kiribati|Tuvalu|Vanuatu|Palau|Stati Federati di Micronesia|Sud Sudan\",provinceOrCountry:\"ALADATBEBGVADKFOFIFRDEGIUKGRIEISLILUMTIMMCNONLPLPTROSMESSECHHUUABYMDEELVLTMKHRSIBARUSKCZRSME  PSAFSABHBTMMBNKHLKCNCYKRKPAEPHTWJPJOINIDIRIQILKWLALBMVMNNPOMPKQASYTHTLTRYEMYSGBDVNAMAZGEKZKGTJTMUZNADZAOBICMCVCFTDKMCGCDCIBJETGAGMGHGNGWGQKELRLYMGMWMLMAMRMUMZNENGEGZWRWEHSHSTSCSNSLSOZASDSZTGTNUGBFZMTZBWLSDJERBMCAGLPMUSAWBSCRCUDOSVJMGTHTHNBZMXNIPATCBBGDVGDMLCVCAIKYMSAGKNARBOBRCLCOECGYSRFKPYPETTUYVEAUCKFJMHNRNCNZPNPFSBWSTOWFPGKITVVUPWFMSS\"},{belfioreCode:\"00200300900b00c00l00v01401a01e01v02202e02f02m02q02v03303803i04504c04e04g04k04n04o05805905a06706h06j06k06l06r07n07o07q08408k08l08n09109a09j09n09s0a20ab0ag0am0at0b10b40bc0bq0bt0cb0ck0cm0co0cq0cr0d00d10d40da0dc0dq0e20e80e90el0f30fd0fi0fk0fo0fp0fu0g10gc0gv0h10h40hc0he0hf0hj0i60i70i90ij0ik0im0iq0j00jg0jj0jp0jv0k10k20k40k80k90ke0kj0l30l70l80la0ld0lg0ll0ln0m70mb0mj0mk0mm0mn0n80nh0ni0nm0nv0om0ot0p30p60p70p80pm0po0ps0q10q60q70q80qq0qu0r10r20r30r40r50r70r90ro0rq0s30s40s50sb0sc0sj0sl0sr0ss0su0sv0t00t50t70t80tf0tn0u60u70u90uk0up0v20v50vc0vj0vl0vu10310f10l10n10s10t11311411911a11g11i11m12112412512712812f12k12p13213513713d13f13g13j13k13q13s13v14314b14c14g14m14p15115215515615m15o15q15r16616816a16p16s16t17417517917c17f17p17t18318a18b18i18s19419619819919d19m19r19s19u19v1a01a31a41a91af1as1at1ba1bp1bv1c61cd1ce1cu1d91de1dg1di1dj1e61e71e81ef1eg1eh1en1ev1f41fd1fe1fj1g91gb1go1h01h31h71hf1hh1hs1hv1i01i11ib1ie1im1ip1j61jk1jm1jp1k11k41k91l41l61lh1li1lp1m01m91mb1mj1mm1mn1mp1mt1n11n41na1nd1nf1nq1o11o81oe1oj1om1ot1p71p91pa1pj1ps1pv1q71qi1qs1rk1rl1s61sm1tc1ti1tl1tn1to1tv1u81ub1uh1ul1v01vd1vr20d20k20n20t21721j22022c22j22k22q22s23023223723j23k23o23r24324424624f24g24h24k25u26926g26o27527927n27r28128m28t29e29j29m29q29u29v2a62ab2an2at2b12b22bg2bn2bp2br2bv2c22cd2ci2ck2cm2cn2cu2d02d12d32d92db2dr2en2eq2eu2f72fi2g22gc2gf2gj2gq2gu2h02h52h92ha2hb2hf2hj2hp2hu2i22ic2in2ja2jb2jf2jq2jv2k02k22k42k62ki2l02l12lb2le2lh2ls2m12m22m92ma2n22n42ne2nf2nl2np2o62o92ob2oc2oe2of2og2oh2oi2ol2oo2oq2pd2pp2pq2q12q92qb2qc2qg2qi2qq2qr2r12r32r42r92rb2rc2rk2ru2s02s12s52s92sh2sl2sm2sn2sq2td2ti2tl2tq2tt2u92uh2un2uo2uv2v72vd2vj2vn2vr2vt30130230830b30c30i30j30p30q31031c31l31q31v32232432a32c32g32h32j32l32m32o32r32s32v33133533633833e33f33n33q34634c34d34f34k34o34p35335935a35g35h35i35k35m35u35v36a36c36i36j36l36o36u36v37537637a37b37c37h37o37q37u38738838938c38e38f38l38v39239339839939a39f39i39m39r39t3a13a43a53a83ac3ad3ah3al3ap3aq3b13b33b83bb3bd3be3bf3bm3bo3bp3c43ca3cm3cn3cp3ct3da3di3dr3ds3dt3dv3e13e53e93ef3eg3f63fb3fk3ft3fv3g03ge3gh3gi3gj3gp3gq3h03h23h43h93hb3hf3hg3hh3hq3i03i93ib3ig3il3ji3jj3k13k43k93ka3kb3kc3ke3kh3kr3kv3l33ls3m23m33mg3mj3mo3mu3n13n83nc3nn3np3nt3nu3o03o63oh3oq3p53p83pf3q43qc3qf3qi3r13r33r53re3ri3s53sh3si3sl3sn3t23ti3u03u33ua3uj3ur3v93vb3vc3vd3vg3vv40340940e40g40l40n40p41141741a41c41m41n42242642e42f42g42l42n42q42u43643j43q43s43u44144n45145645c45j45k45l45m45n45u46546846a46e46f46k46o46r46s46u46v47247447b47o47r48348748948q49149f49k49o49r4a24ab4ao4aq4as4au4b14b44b74bc4bd4bk4bt4bu4cf4cj4cl4cn4cs4d44d94dd4dh4dl4dm4e14e84ec4en4eo4es4f14f44f64f94fa4fm4fp4fr4fs4g14g64g84gb4gk4gn4gq4gs4gt4h14h24h34hd4hh4hi4hn4hr4i04i44ie4ig4io4ip4ir4it4iu4iv4j64j84jd4jg4jh4jl4jn4jo4js4k34k44k54k84kj4kq4kt4ku4l04l64l74l84ld4lo4ls4lt4m24mn4mo4mq4mr4ms4mv4n04ne4nh4np4nt4o34o74oq4ov4p24pd4ph4pk4pu4q74q94qe4qf4qk4qm4r44r64rp4sg4sm4sq4sr4t24t74tc4tf4tg4tp4u04u14u44u64ud4uf4ug4uj4uk4ul4un4v34v64vf50150450850n50u51751851c51h51m51p51t52152b52e52f52k52r52s52v53653b53j53l54454554754g54p55255555655955b55c55g55i55k55m55n55q56256j56m56r56t57557657957i58k58q58u59459h59n59s59u5aj5aq5au5b05b45bd5c15cl5dj5e95eg5ek5ep5ff5fh5g15g35g95gd5gf5gh5gi5gk5gr5gv5he5hj5hr5ht5hu5i35i45i65ii5in5jd5je5jp5jr5jt5jv5k35k85k95ku5l05l25lb5lc5lf5lk5lr5lt5lv5m15m35ma5md5mq5mt5mu5mv5n45nd5nh5nj5nn5nt5o05o85o95oh5ol5ov5p85pg5pp5pq5q15q25qh5qj5ql5r05ru5s15s85sb5sd5sh5sj5t35t45t55t75t95tc5tj5tl5to5tp5tt5u55u95uc5ue5uj5uk5uq5v05vf5vk5vq60u60v61061161461662662862b62d62n62s63663g63t64764t65665965a65i65p65s66566766966k66l67167567767m67s67v68068168968e68m68p68r69869g69j69s6a06a46a66a86aq6b76c56c86c96cb6cg6ck6cm6co6cq6d26d36d76d96dd6di6dl6do6dp6dq6e36e76ep6f96fd6fe6fg6fh6fk6fu6gb6gc6gj6gl6h16h76hc6hd6hi6hk6hl6hn6hq6hr6i36ia6ib6ic6ii6ij6io6ip6is6iu6j36j76jq6jt6jv6kq6l36l86lc6lg6lp6lt6mf6ms6n06nl6ns6nv6o36o66og6oi6ot6p26p46p66pc6pn6q76q86qd6qk6qr6r06r16r46r86rf6rg6rh6rr6rv6s46s76s96sa6sd6se6sh6si6sk6so6sp6sq6sr6t76t86ta6tc6tk6tl6tr6tv6u16u76u86ub6uj6uk6ul6ut6uv6v36v66v96vd6vj6vm6vq6vs6vv70170270370470a70b70d70m70n70p70t71171871h71v72072272772972g72h72j72s72t73e73f73j73q73r73s73v74074174974a74l74q75175475b75h75l75n75o75u76076l76s77577n77r78679179879f79k79q79v7a87ag7am7ap7ar7bn7bp7bs7bu7bv7c57cb7cj7co7cr7cu7d27d37dc7dd7dg7dj7dl7dt7e07e37e87ea7ek7el7em7eo7f07f17f37f57f87fc7ff7fg7fk7g07g57gc7gh7gi7gp7gt7gv7h67h97ha7hg7hp7hs7ht7hu7i37i47i67i77ii7j07k97km7ko7kt7l97le7ln7lo7lq7lt7lv7m27m77me7mu7n17n47n57n77nb7nl7ns7nu7oa7ob7oc7oe7oi7ou7p07p47pc7pr7pu7q17q67q97qa7qd7qk7ql7qm7r17r67r77r97rc7rf7s07s47s57s67sa7se7sh7sj7sl7sn7sr7su7t47t57t87ta7tg7tv7u67uv7v17v77vk7vq80380880c80h80j80q80u80v81281381581b81f81h81l81m81q81s82182d82e82g82t83983b83f83p84e84i84k84n84p84t85385685h85q85r85v86186286386b86e86m87387b87o87u88288888a88b88q89189889b89f89k89m89p89t8a18a28a38a48a58a68ac8ad8ag8au8b38b68b88bd8bg8bo8bs8bu8bv8c38c78c88cb8ck8d88d98db8dc8df8du8ea8ei8ep8eu8f08f28f88fm8g68g98gf8gi8gr8gt8h18h48ha8ho8hq8hr8hs8hu8i08i18i28i48i58i88ig8io8ir8j78jb8je8jg8ji8k18k28k38k48k58ka8kd8ke8kr8l68li8lj8lp8m18m28m48mh8mj8mo8n38n58nc8ng8no8nu8o18o78ob8oc8oj8on8or8os8otantao4aodaokaolaopap1ap3ap4ap5apbapcapdapeapkapraq0aq4aq5aq7aq8aqjaqkaqnaqqaqraqtar3ar6araarfaroarqartarvas1as5ascasnaspasqasrat2at3atbatsatuau1au8au9av0av2av4avhavsavtb00b0bb0jb0ob0pb1fb1hb1mb1ob21b2ab2db2fb2gb2mb2nb2qb30b38b3ab3bb3db3eb3fb3gb3lb3pb3rb3ub3vb42b43b4db4pb4ub5cb5jb60b61b69b6bb6kb6pb6ub73b75b7gb7ub80b8ab8eb8nb8sb8tb8ub91b97b98ba1ba3baibambaobaqbavbb2bb5bb6bbebbgbbjbbkbblbbtbbubc0bc1bc2bc4bc9bcbbcdbcebcfbcqbcvbd3bd8bdcbdebdfbdhbdlbdpbe2be5be6be9bekbfabfbbfcbfdbffbfgbfhbfjbfnbfobfqbg6bgabgdbgebgfbghbgibgkbgmbgobh5bhabhdbhebhgbhhbhobhvbi9bifbinbiobiubivbj3bjcbjjbjlbjnbjobjvbk6bk7bkabkebkhbklbknbkqbksbkvbl5bljblobmpbn6bnabnkbnobntbo1bo2bo3bo4bo5bo6bo7bo8boebofbohbombotbp0bp2bp4bpabpbbpcbpkbpnbq3bqbbqgbqibqlbr0br1br6br7brebrkbrlbrnbrqbrtbs0bs4bsebslbsqbsvbt0bt1bt3bt6btebuuc0bc0gc0hc0j\",creationDate:\"00of01520pa1002b0quf0lad002b002b002b002b08dr002b002b002b002b0lad0lcu0lcu0152002b0o1500pi002b002b0lcu0lad002b002b002b0lcu002b0lad002b002b0lad002b002b002b00qa0lad0lad002b002b002b0lcu0lad0lcu002b002b002b0lcu0rpq002b002b002b002b002b002b04fq0o52002b002b0i0d0i0d002b0lad0lad0nuc002b0rd3002b02340a0e002b0o1b002b0lcu0lcu002b0lcu002b0234002b002b02tq03ii002b07qb0nrq002b002b002b0o8i002b002b06e5002b0lad0lcu02340bd9002b002b002b002b002b002b002b002b002b002b002b002b02gh002b0lad002b002b0lcu002b002b002b002b002b002b0mfe023400nj0lcu0lcu00mn0h4h002b0lad0oao0lp7002b002b0nvv0lad0lad002b06ub002b02340lcu0lcu002b002b002b002b0lcu002b0o280lad02lu002b002b002b0nuc0lcu002b002b002b0lad0lad002b0lad067c002b0lad002b002b002b00nj0lad002b03th029t02bl002b002b0o2b0lcu002b002b0ihi02340lad002b00of002b0lad0caj002b002b023407kl002b0lad0nv9002b0lcu002b002b0lad002b002b002b00of017l023402340lcu0lcu002b00md00of0lad0q1v002b002b002b002b002b002b002b002b0nvj002b0lcu0lcu002b002b002b0lcu002b02340lad002b02ap002b01bu002b002b0lo602s5002b0guo060b02n6002b0234002b0lad002b07ko002b002b002b002b0lad0lcu002b002b002b0b8501pf109000mu002b002b002b002b002b0lad00qn0ben002b00of00mn00qa00mu0lad002b0lcu067u0lcu0o6g002b0lcu002b002b002b002b0lad0lcu00nc002b002b002b002b002b002b0nvh0lcu002b0lcu0nsh0a360lcu002b00l600mn00nc029t002b0lad002b002b002b002b002b002b002b002b002b0lcu002b002b02fs002b0472002b02340234002b0ocb002b0o7i00md0o15002b002b014d00of0lad002b002b00of002b01bu0lad002b00mn002b002b002b0lad0lad03ii002b0lad002b0o0q002b0lcu002b00sr0lad002b002b0234002b002b03oq002b0o3m00mn034j0lad00md002b002b0o0q0lcu002b002b00o800l600o800o800sr00mn02r9002b04jd02570lad002b00mn0nsl002b002b0lcu002b0lad002b0lcu00tn0lcu0lad002b013j0lad01og0lad0nrn0ocd002b0lad002b0lad0nt7002b002b0lcu0o1400qa00sr002b027k0nr0057i002b0nrq0lad0o1s002b0lcu002b00nu002b0lcu03dc073m0lad00mn02340lad0lad0lad002b002b002b002b0nse0lad002b0lcu002b023402340lad0lcu002b002b0o14002b002b0n2r04gb0lad0lcu002b0lad0lad002b02r902ut002b002b0lad07l30lad03vn06910lad002b002b0lad002b0lad0lad00sr002b002b0lad002b0lad0lad0lcu002b002b002b023410mr002b02340lad002b002b002b04c2002b002b0lad014d0lcu00nu002b06tb0lcu0lad0234002b0b850lad002b002b002b00jl002b0lad0lad0lcu0lcu00of002b002b00l60lad0lad002b002b0lcu02lu002b002b002b0lcu002b02en002b0er7002b0lad002b00mn002b002b0234002b0234002b00o80lad002b0lad0nq6002b002b0ntf002b002b002b0lad0lad0lad0lad002b002b0lad0lad0lad0lcu00sr002b0nub002b002b0lcu0lad002b0sfs0nov002b0lcu0lcu0lcu002b0lad0234002b00js00js0lad002b0lp7002b0lcu002b02fs002b02fs0lcu002b0lcu0ctn0lad002b0lcu002b002b0lad0lad0gbf002b0m4q0lcu002b002b002b002b002b002b00of002b002b002b0lad002b002b0lcu002b023404k90lad002b0lad0nqq02c30234002b002b0obk0lcu0lad0nu90133002b05qt002b031t002b002b09st0lad002b0mh5002b0lcu0lad002b0lad002b0lad002b002b002b0lcu00mn014d0h4h08d90n7s002b0lad04ch0234002b002b080e002b002b0o3q002b0lad002b002b002b0o52017l0lad0lcu002b0lcu0lcu01pf002b0o1r002b002b04jd01kl002b0lad002b0lcu0603002b002b002b002b002b002b002b00of002b002b0s5h0lcu002b0lcu002b002b0lcu002b002b002b002b0lcu014d002b002b002b002b0lcu0lcu00mn002b0234002b0lad002b00of0o2b0lad002b02ap0lad0lcu002b002b002b03ii002b002b0lad0lad0ntf0lad002b002b002b0lad0lcu0lcu0lcu002b002b00q006em002b002b002b002b002b002b002b0lcu02340ntm0lad002b0o690lcu002b002b0lad0b4o0lad0lcu02340lcu0o01002b0oc20o4i00mn002b0lad0lad002b0lcu0lad002b0lad0lcu002b002b0lad002b0lo60lad002b002b0b790lad0lad0nvv002b06qf002b002b0lcu08ul002b0o1r002b0234002b002b002b002b002b0lad002b002b0lad002b002b002b00sr0lcu0lcu0lad0lad002b0nvj0lad002b02340lad002b002b0lcu002b002b00of00mn0lad002b002b002b0lcu002b002b002b00qn0lcu002b0lgg002b0lad002b02340lcu0lcu0lad002b002b002b002b002b0lad0o3802sg002b002b0lad0lad02340lad0lad0lcu0lcu0lad0lad002b002b002b0lad0lad0lad002b0lad02340lad002b0lcu0lad0lad00sr002b002b00qa00ht0lad002b0307002b002b0234002b05mg0lad0lad0lcu0lcu0lad00kv002b002b002b0lad0lad0lcu02340234002b002b0o2t002b002b0lcu02340lad002b0eke002b0nth002b0lad002b086114ip002b0lad002b002b002b0lad1374080e0234002b002b0lad002b002b002b0lad002b0lad0o200lad002b00nj043m03oq0a5m00sr00mu002b0nvv0lad002b002b002b0lad0lad002b013q002b00sr0lad0lad0lad002b045k0lad0ocs002b0lcu0lad002b00l30lcu002b0lad002b0lad0lad002b0lcu00if002b0lu40lcu002b0lcu002b002b002b0lcu02bs002b002b002b002b002b002b002b002b002b002b0lad0lad002b0lcu0234002b002b002b002b0lad02sg0234002b002b0lcu002b002b02s90lcu0lad002b0lad002b0lad02340mg6002b002b0s51002b002b002b002b0lad002b0lad0lad0lad0lad0234002b00of002b002b002b002b002b002b002b0nmg002b00nj002b002b0lad0lcu002b014d052j002b0lad002b00lo0lcu002b002b002b002b002b00of0nof0lad0lcu00qa002b002b0lcu0lcu0lcu002b002b0lad002b06cj02en002b002b002b002b0ock06ub0o0i0lcu0lad002b002b002b0lcu02bs002b002b02c3002b00of0lad002b00o8002b002b002b0ob90lad04tm002b0234002b002b03cc032h002b0lad02fs0lad0lcu00sr00of002b002b002b002b002b002b0o9n002b00qa002b002b00sr0lad002b023400of002b002b002b002b0lcu002b029t002b023402vn0nuo0lad049i0lad002b0lcu00of0ni3002b0lcu002b002b002b0lcu002b002b002b002b0lad0lcu0lad0lcu0lcu0lcu002b0lcu002b002b057i0lcu002b02sg0r170nsh002b00mn0lcu0a4q002b002b002b0lad002b002b0in10lcu002b002b002b0lcu0lcu0lad0lad00l3002b002b0lad0lad0lad0lad002b0oaa0lad002b0lad0lad002b0lad0lad002b002b0lad002b002b0lcu0lad002b0oao0lcu002b0nrg0lad002b002b002b02340234002b002b002b0nuo002b002b002b07tr02340lad02bs002b002b02bs002b0234002b002b0lad01or0lad0234002b0nub00of0lcu002b0lad0lad0lad0lcu01330lad002b002b002b002b0ob8002b0lad02340lad00mu002b0o0q002b0lad0lcu002b002b002b0lad002b07kh07kh0lad052j002b00mn0lad03450nuo002b0nvj0234002b0h4h00mn002b0nr5002b03ii002b002b002b023403070lcu014d00qn0lad00mn0lcu0lad0lad0lad002b0lcu0lad002b002b002b0o37002b002b002b002b002b002b002b002b0lad002b0oc90lcu0lcu002b002b002b002b002b002b0137002b0lcu02tj0lcu0arc0lcu002b00of002b0lcu002b002b0234017l026o0o0q002b002b02340lcu0lcu002b002b0o38002b0lad0o37014d052j0lcu002b00nj0lad002b002b02bs00sr0lad0lad0lcu0nvj0lad002b0lad002b002b002b05so002b002b00qa017l00l600lo03cc0lad01v20lad002b0lad00q0046400nj0lad0np902n30lad0lcu0obh002b02bs00o800md04as02bs0lcu0234002b01pm002b00o800qa0lcu002b00pt002b0lad0lcu002b0lcu0234002b002b002b00pi00qa0lad002b002b0lcu00jl00mn002b06ub002b00pi0nhk0lcu0lad02bs013j0lad052j002b0o7g002b0234002b0o3m00of0lcu00mn0lad002b00sr00lo02ap0nvj0qhf002b00qa002b0adp0nnv0lcu00sr002b0lad0lad002b002b0lcu00nu002b00q00lcu0lad0lad002b00of002b00l60lad002b002b002b0lad00md002b002b00tn002b002b0o37002b002b0lad002b0lad0lcu002b002b0lcu0lcu002b0lcu0lcu002b0lcu002b002b0lad0lad002b0lcu002b00qa0lcu0lad002b0o50002b0lcu002b00o80lad04260lad0lcu002b002b0lad002b0v0c02h8002b0lp7002b002b0lcu0lad002b0298002b002b0lcu0lad0lcu0lad0lcu002b002b002b002b002b002b002b002b002b0lcu0lad002b002b002b002b002b002b002b002b002b002b0lad002b002b0lad00sr002b002b002b002b0lad0o01002b0lad0lcu0lad0o1s0lad0lad002b002b0lad0lcu002b0lad0lad0nti002b0lad0lad002b0lcu002b0lad02340lcu0lad0lad0bd902ut0lad002b0lad002b0lad0lcu002b0lad002b02340lad0lad0lad0lcu0lcu002b002b002b0lad002b0lad002b0nub0lad0lad002b002b0lad0lcu0lcu0lad002b002b0lad002b002b002b03mr002b002b002b002b002b0472002b0lad002b002b0lad002b002b002b002b00pi002b029801pn002b0o9a002b02s90lad002b0lcu02sg0lad0g4u140j002b0234002b002b0lcu0234002b002b0lad0lad0lad002b014d0lcu002b0lcu002b002b002b0lcu002b08c90lad00mu002b0lad0lp70lad0ocn002b0lad0lcu002b0lad02340lad0lad0lad002b023400l6002b002b0o5e002b02340nqr002b0234002b0234002b0lad0lad0lad002b002b002b002b02340lad002b0lad002b0o3h002b0820002b002b0o5203uv0fpn0fpn0lad002b00of00qa002b002b002b002b0lcu00q00lcu0lad002b0lcu0lcu0lcu002b0lad002b0lad0lad002b002b02fs0lad002b0bnq002b0lad002b01pm02s9002b0lad0lad0lad0lad0lad0lad0lad0lad0lcu02ap002b002b0o2t002b0lcu0ns60lad002b002b002b0lad002b0lad0lcu002b002b0lcu0nuu0lad0lad0lcu002b002b002b002b002b002b002b0lad0lcu00md0lcu0lcu002b00nu002b0lad002b0lcu002b0lcu002b002b0lcu0lcu0lad002b0lcu0o9q02340nvv002b002b002b002b0lcu002b002b002b002b0lad002b0sp11fc81h730nns0o5o\",dataSource:\"8\",expirationDate:\"0nuo0o7a0utk0o201nki0o9b1nki0nsm1ofi0mfc0mci0o5o0o1r0o4f0nva0nuo0nuu0utk0o110nr10ucp0o1d0tet0o7i0nqf0o4i0o500nm90o2a0utk1obc0oca1nvv0o1d0o5e0nvj0nm60nm60o1r1n940ntf0o840och0o0r0o0q0o5p0utk0o1e0o3i0n700pa10uc40ntb0o4f0o3q0o7i0nt70o4f0o5e0ul80npg0nkr0nrq0nst0o3h0o9v0o4f0ulp0nst0utk0nup1mtn0oaf0o770udp1obc0nm10o4i0nub0nuu0o750nin0nt70ntj0mci0o110o1s1n941mia0npg0nt80oa111kj0np70np70nst0o6916co0utk1o1e1obc1nki0nse0nsf0o390o8r0o8r0nrg067c0n4s0nsh0ntu0o1s0o290o1d16b00o9a1mjc0o3q0ocs0n701mia0o0i1mjc0rme0o8h0o5o0o710moh0utk0rc81obc0nuu1mtn0urg0och0nu90o5o0uu31l4l0nvk0o3h0o640o371obc0nvv0o0q0nq30nvn0no304c10ns60nsj0uls1l4l0nov0nsj0ni40nt20ul60utk0nst0nst0ntb1n940o4f0nup0o9v0n700nq41n940nu40nss0nrg0nvk0o010pq81mjc1obc0o380re10me00uv60o420nq20nqq0o140nov0o650n700ntb0o671n940o5e0nve0nve0o8g0o7i0o0f0o840v4e0o7d0o4i0tet0o2t1n941nvv0o3p1mjc0o5o0occ0o5o0o8s0o420o0i0ntv0utk0o201n940utk0nj50nss0o530oba0o7l0nse0nnt0oci12e00ntf0utk0o0d0o2c0o0q0nub19et0o1r0mfe0ntg1n940nov0nvk0o390o2a0nm80n1p1obc0nup0o3q0o3h0nrg03jv0nlc0ntf0ned1ocp0o8h0ntq1obc0mff0nve1n940utk0no10nqq0o000nk50ocs12nn0nqe1nvv0npg0oa00o521nvv0o9b0tet0o0q1obc0nst0obb1n940obv0nvj0ocn1kp81oc90o1t0v1j0rko0utk0n6h0ob80o4i1obc0o8s0utk0nr00nnv02fr02fr0qss0o7k0o3q0uc019et0nsj0utk12dn0nub0nog0o1d0me00nse0nva1obc0o380o4f0ntp0ntb0o5o0nnc0o2t0nuo0o5o0o0i0o0q0ntb0nu90nt10o7j1nvv0o9a0o531fsf1fsf0oaf0vqp0nu40udp0q370v1e02l004i00o0i1nvv16co06r50o0j0o1r0rc81noe0sdl0nm70o501nvv0ntf0obv0o8s0o9h0nsl1mia0oan0o290utk1mia0utk04710nhl0o9n1obc0o371mju0omh0ouu0o7d0ocu0v4v0nm90mfc0o4i1mia0o020o1s0qhq0utk0qb90ob90oci0me00o3i0ocv1nvv0o4g0o140o370nnv0nnv0nhm1nvv0nsm1obc1nki0nqq0utk0o0i0o0r0nu40o420nva0moh0o3m0nst0oco0o3m1nvv1n940ocd0ur00ocu0oca0nvv1n940v3p0no00o280utk15mn1obc0nth0oa01oc911o30nhl0oc00uqr0p9i0uij0o7i0utk0o0f0nbk0nth0utk0mci0scc0mff0nj50nd70o4f0o030o9h0nu40o010nuo0o390v0m1n940o690utk0nva0o0e1oc90nup19et0o1d1mjc0uv60tet0nrq0utk0nsj0ntg0nuu0nlr0ned0o3m0o2a0o711mia1h39083e0o7e0nvk0n2h1n940o0e0ocb0nhk0nhl0oap0ntv0ob90nuo0njf0o380nqc0o9h03mr0nvj0o3m0utk0nvj0nrq0o000nov1l4l0o8q1ocu1n940o7c1lhb0o3q1fpe0o0r0o0h1mtn0ntg0utk1o2o1mjc0n700o4i0o1t0o1s0nsf0nk50oan0no91n940o750o370tch0o1t0o0r0nuo0utk0o140scc0o8r0me00o8s0o140nva0o6h0o0g0o380nsi0ocb0mff0utk0mci1oc91mia1mia0nm90nuo0ntf0oa00o270oda0nvo1n940rpu0nva1ocb1n940o7j0mdc0uun0o7i0ntg1obc1nki0o380nue1mtn0o8r1n940o010nm90o1r0o5e0o650o8r0o0q0nu40o7i0uq00me70me70utk1n940o2c0utk0sfs0o4f0o420o420o370nnp1n941fpe0ocp0nr10npb1mtn0nq30o750nm90o0g1mjc1obc0oco0l360o4i0nua0utk0njk0o7j0ob90utk0nvc0o380ntt0o8q0ntf0obv0utk0o0d0nq30nq30nq30ntg0nuo0o5f0o521mia0o0f02tp0o8s0o2t1obc0nm10nsm1nap0nd71n940nu40o290ugc0o0s1nmd0nqf0o7i0ul80utk1n940v3g1mia0o1e0nhl0nhl0nhl0o2c1nki0ob80o650n400utk0nq41o0u1n940nuv0o9h04in0oce0o2c0o390o3p0utk0o4f0o6g1obc0ntg0sdl0ntg0o5e0nss1nap0o5202fs0s0a0o0h0o200vp30qtt0o030nrd10gg0nse0ub90o020oan0o1t0nvn0nuu0o420o110o0q0uft0o9a0nnv0nnv0o7l0nst0ned02s80utk1obc0oca1nvv0nmu0o011n940mfc1lhb0o841mjc0o0h0u820utk0ob80ntb1mjc1mtn0ntf0o3p0o3p0o4f0tch0o420mci0nt10nvn0obv0o0q0o0d0utk0o531n941nm10nq61n941lhb0mci0uec0mr00o3p0nov0nup19et0v4n0nq60o500o120nvc0njf1n940o140u0d0ocv0o530nt70nvc0o290o0g0utk0o420o660gbf1mia0o180o7k0rv31nvv0o1d0nvj0nvj0nrq0p4k0o000uc80o8s02sj0vqp19et0o7i0o4f1ner0gim0o9h0o1202mc0utk0uvr0mci0utk0uns1nki0mfc0o211n941mia0nf91n941nvv0ntg0utk0nth0nvv0ocv0rk40o420nvk0o0q1mjc1ocp0o9g0ntt0v0m1n9410pg0o750o180o0g0oba0o5e12641n941o0u0nsk0q3h0nun0nuo0nvj1n940nsj0o710nnc0nm10o820oa00nss0o370ntf0ntt0o010o0r1l4l0o031kbu1mju0o1t0o7i1mia0o0d0r690o8p0o6g0oc90o650o3i1ocb0o280nhl0o1s0nr01obc0nu90o0g0nss0nss0nss0nvj0oba1ocu0utk0utk0o9o0ntg1mjc0nst0o1d0o380o8s11210o2u0nrq0o1c0o4f0o290o110mdc0mdc0o3i0o4i0o710ntg0o0q0o7j0o0f0o7j0mff0o9g0o1s0ocq0nth0nnc0nvk19et0nvt0o030nog0obb0n6h0od70oa10o7q0nsj1ocu1mia0nr10o3o02u40ff70o5e0ned0utk0utk0ntg0o280no00o0r0o1d0ned0o4i0o0q1o1e1oc90nno1n7v0vpa0nqu0nue0utk0nd70o5e1obc0nrq1obc0uob1mjc0nvk0o391mia1mia02sl0o4i0nno0nrv0ocp0o4i1nki0s0a0ptd0o4f0qtt0o9v0o7k0n700o0q1l4l0nip0o9b0ugc0o8r0o7i0o290o7j0o7j1ocu0nth0nvv0nov0uns1n940nmh0ob30o0q0oan1n941nki1nvv0o3o0o1s0o1c0o0r0o0r0see0rd10oca0uft1n9419et0o9h0ntb1nki0utk0nst0o4i1mia0o4f0o7e06kt0o0r1n940o140o710utk0oc00ntb1mia0o3h1h390utk0nin1mhd1mhd0nub0nr00rrc0oa002t80oa00odd0mfe0o650o7e0m9v0sp11o1e1h730o6h0no90o3q0o7e1nvv0mfe0obv0o3q0o0h0o520nst0mci0nov1n940ntq1obc0o710o9h0o8s0utk0n700s2e0u3k1nvv16fk0o380mci0o9n0o3n0o8s0mff0nnc0oc30o420oco0nm90ob80o520rr20nr10od70ntg0o2c11210ntb0o150me70nnc0o9g0o0i0oc90nt10o1b0me00o7j0nsk0o750utk0ntg1nki0oco0nm10nsi0nm711t10oca0utk0o7i01oq0o110nss0nss0utk0o8s1mjc1n940nsm0o8s1oc90npg0o8p0o6g0o0q0uld0rv30uu30o0r17f30o010nhl1mjc0utk0nlc0oa00o7i0o1t0obb0o140o9g025c0o5k1obc1nvv1noe0uue0o9n0n700nnv0m8l1nki0nnc1muk1nvv0ouu0nc60o7j0o9v0o000nu40nsf0nsl1obc1nki0o9c0o010nuv12931mia0nq20o380me00o0q0o5e0nbk0ob90obu0o0f0nir0jlm0nhl0nhl048e1nvv1nki1nap0o111n941l4l1n940o4f0nsj0utk1mjc0nlr1nvv19et0o0q01of0r820utk046g1h731nki0o3h0ntg0o370o1t0utk0o420ntf0nnv0ntb0me01mia0nu90utk02c61n940uvs12520nrq0o180mmk0n700o520n4s0o500nuo0o2b03dc0rmr0utk0me00nrv0nvd0utk0nm80ned1nvv0ob80n700o520ob91mtn0p9i0o7e1mia0q9k0nvk0l7h0n2g0o650nup0nuu1n940o6g1ofi0o4f1ncm0npg0o011n940o530uob0utk0obb0uma0o7i0o1s0o1s0o3o0o8s1nap0nm90nvv1obc0uu40o2802sj0n701mjc1mi60o650nlc0n700o370nin1n940o0g0nvc0o531n940nhk0nvl0nno0nub1nki0mfc0utk0o8s0o030o5p0o5p0moh0ntq0ned0r7n0njf0ntb0ntb11vb02te0o1t1nvv0o9g0o820o3m0ucp0o0f0nvt0utk0nrd1nvv1nvv0o9h0o751nvv1nvv0o1c0o1c1mia1obc0o9b0n7011dk0nun16uf1mia0ndv1obc0oa00oam120m02fs0o120o1d0nno0o2t0o8s0nrg0nhl0nss0npg0ned0ocb0o0g0o9g0o8s1n940nn60nuu0mff0nnv0nof0o3o0uc81o2o0o7i0nm20nm21muk0o1s0o640obu0n2r0n460uq00utk0utk0o380oco1obc0o390o141nvv0nog0nuc0nuu0o140o0i0ocn0nqf0nrg0ntu0o380nhk0o7o0o5o1o1e0nnv0hfi0utk1nki0o530nvn0ntf0utk0nnv16fk0uls0ntg0o840uc90ntu0o1b0utk1nvv0o2b18ht04in0o021nm10nub0o9o0o840utk0um70nvl1nki0o9o0mfc0n4s0me01nki0n88051o0och0nnv0o7c0m9v0tch0nvo0o291mtn02ll0n7p1nki0o110o0f0o7e123o0o280ocb0utk0ur00ocv0nin0nua0o0q0nqq0nin0utk1oc903db0tch0fs50nua1n940o4i0n700o0i1mia0o9o0nhk0n4s0utk0o9n0obh0o010nth0o3h0n700oan06hh1iko0utk0o710ntu0nqc0oba1nki0od912e10utk0ocb1o1e0ocn0o4f0o1b0nsj112203db0nlc0o2a1iko0nsj0nhl0gic0sha1mia0np30m9v0nov0uu416fk0npb0n700o641nap1mjc0o3q0nu90o010o9h0o1t0nuv0ntp0utk0o0202c60o970utk0nuc0ned0me70nuc0npg0nvk0o9n1obc1mia0o0i0oc30oam1h390obv0o110nof0o0f0uq11mia0nsi0o9h0o7j0nuu0o420nmu0o1e0o0h0nog1mia0nuu0o380nbk0nss0o2c0ocp0o8r0o3h0no00o420o9g1nki0utk0nuu1n9411220rf30o0i1noe0ocv0o4f1nki0o8s0utk0ocv0n700o4i0nog18hn0fs50nr10oc21mtn02ls0nf91n940noo1mia0npb0nu40o0d0ntg0o4i1mtn0moh0nbk0ntu1obc0nua0o7i0nuo0o500ntg0nvc0utk0nfu1obc0o5g0o5g153h1obc0o2b0o650o710od706kt1n940o111noe0ocq0nvc0o390nsm0nvc0o730o7b11b41mia0o7e0nm80nuo0ulb0mss1n940o530n700nvj0o370nqq0o8s0o7b0ur00no11mtn0oca0o0h1kp80o390ntg0o8s0utk0o7e1n941obc0no20ntf0o010o8r0nuo0nvt0utk0utk0nvl0n401mia1n940o4i0o650o0g0ns60o730nt70o281n940o0r0oca0o7i0urg1l4l1l4l0o380nup0ob90utk0utk1n940nvn0o3o0o8r046v0me00o370oaj0o730o290nhl0nvn0o010oaj0o380o7q0o3p0ntu1n941obc0nov0o0f0o0f0o3h0o9g1mia0o281nvv0uu61mjc0mci0o7e1noe0nu91o0u1mtn0o3h1obc0nok16o50rfc0nlr0ntf1oc91obc0nrq0o8r1n940p9i0o9a0kbv0o3i0rfc19et0ock0nse0o0q0o370ocv0o0j0o831obc0obh1n940utk0nvt0qhf0nu40oan0utk1obc0o1t0on60ocq0mfe0nuv0rhs0rpu0o010oa01obc11o20o8q0rp211c81mjc1oc90njf1mtn1obc0oan0oan0o1t0nt70o2t0o5002641mi60o2b0nsk1n940o381mjc0nsj0o9g0oba0nrq13if0fpo1mjc1mjc0o290pq80rcq0o031mia0nu41oci0nub0o0d0obg0o0g0o7e0ocp19et0o7g0ntb1obc1mtn1nvv0o0r1n9403jv0o3n0o0i0o8s0o6h0o3q0q370o8s1n94141q0mci0o4j0o8s0o7q1nvv16b01n941n941n940nuu0nf90nvn0o7o0ntp0uun0nrq19et0utk0o1c0nu90o380o0f1n940ocb0nvl0utk0o010nu91o0u0udc0ned0ob90o010o7c0o7c0nqr0nqs0nnc0nsf0nq20o7i0utk0o0q0utk0utk0ntf0eqa0oco0p9i0o2a0o3o0ntt0pa10nt10n700o0q0o421obc0o1b0utk11vc0nd70v3l1oci0nn01n9402t50utk0oco0o2c0o1s0nrq1n940nnp0utk1g1l1obc10b411ip\",name:\"Abbadia Sopra Adda|Abbadia Alpina|Abbazia|Abbiateguazzone|Abetone|Acereto|Acquacanina|Acqualunga|Acquarica Del Capo|Acquate|Affori|Agaro|Agnellengo|Agnona|Agrano|Agrone|Aiba|Aidussina|Aiello In Calabria|Aizurro|Albanova|Albaretto Valle Di Macra|Albate|Albegno|Alber Di Sesana|Albes|Albese|Albogasio|Albogno|Albona|Alice Superiore|Alliz|Alluvioni Cambio|Alma|Almazzago|Alone|Alzano Maggiore|Alzano Sopra|Alzate Con Linduno|Amblar|Andogno|Andonno|Andorno Cacciorna|Anfurro|Anicova Corada|Anterselva|Antignana|Antronapiana|Anzino|Apparizione|Apriano|Apuania|Ara|Aranco|Arbizzo|Arcellasco|Arcumeggia|Ardena|Bressana|Arienzo San Felice|Arischia|Arixi|Arizzano Inferiore|Arizzano Superiore|Armio|Armo|Arnago|Bondo Breguzzo|Arolo|Arsia|Arto|Arzene|Arzeno Doneglia|Asnago|Atella Di Napoli|Auditore|Auremo Di Sopra|Aurisina|Auzate|Auzza|Avenone|Avesa|Avuglione E Vernone|Bagaggera|Baggio|Bagnaja|Bagnasco Dasti|Porretta Terme|Casciana Terme|Bagno|Baiedo|Baio Dora|Bairo Torre|Ballabio Inferiore|Ballabio Superiore|Ballarate|Balsamo|Banco|Barbana Distria|Barbarano Vicentino|Barberino Val Delsa|Barchi|Barco|Barcone|Bardassano|Bardino Nuovo|Bardino Vecchio|Baresi|Bargano|Barra|Barsizza|Bartesate|Barza|Barzaniga|Barzola|Baselga Di Vezzano|Baselica Bologna|Bastida De Dossi|Battaglia Della Bainsizza|Bauso|Bavari|Bazzano|Beaulard|Bellagio|Bellizzi Irpino|Bellombra|Belluno Veronese|Bel Prato|Berdo San Giovanni|Bergogna|Bernate Rosales|Berra|Bersezio|Bersone|Beseno|Bersezio Del Quarnaro|Bestagno|Beura|Bevilacqua Boschi|Bezzecca|Biacesa|Biegno|Bieno|Biestro|Bigarello|Biglia|Bigliana|Biglio|Binanuova|Bindo|Bisio|Bisterza|Bizzozero|Bleggio|Bleggio Inferiore|Boara Polesine|Bobbiate|Boccolo De Tassi|Bodio|Bogliasco Pieve|Bogliuno|Bognanco Dentro|Bognanco Fuori|Bogno|Bolbeno|Bolentina|Boleto|Bollone|Bolzaneto|Bondione|Bondo|Bondo Petello|Bonzo|Bordogna|Borghetto San Nicolo|Borghetto|Borgio|Borgoforte|Borgofranco Sul Po|Borgonato|Borgo Panigale|Borgo Santagata|Borgounito|Boriano|Bornate|Bornato|Borsano|Borsea|Borzago|Borzoli|Bosco Valtravaglia|Boscomare|Bosentino|Bottarone|Botticino Mattina|Botticino Sera|Bottrighe|Bousson|Bovile|Bozzana|Bracca Di Costa Serina|Branduzzo|Brazzano|Breccia|Breglia|Breguzzo|Breia|Brembate Di Sotto|Brembilla|Brenno Useria|Sombreno|Brentino|Breonio|Brestovizza In Valle|Bretto|Brianzola|Briga Marittima|Brignano Del Curone|Brione|Brioni Maggiore|Brisino|Brissago|Brovello|Brovida|Brozzi|Brozzo|Bruntino|Brusaschetto|Brusasco Cavagnolo|Buccinigo|Bucuie|Budagne|Buggiolo|Bugiallo|Bugnate|Buie Distria|Bulgorello|Burano|Burgusio|Busana|Buso Sarzano|Bussana|Bussolino Gassinese|Buttogno|Campoverde|Caccia|Ca Dandrea|Caddo|Cadegliano|Cadero Con Graglio|Ca De Stefani|Ca De Tedioli|Ca Di David|Cadignano|Cadine|Cadrezzate|Ca Emo|Cagliano|Cagno|Cajello|Cajonvico|Calavino|Cal Di Canale|Calepio|Calino|Calogna|Calolzio|Calvaruso|Calvi San Nazzaro|Camagna Di Torino|Camairago|Camarda|Camasco|Camignone|Caminata|Caminata In Tures|Camnago Volta|Camnago Faloppia|Camo|Campagnano Vedasca|Campello Monti|Campiglia Cervo|Campo Canavese|Campo|Campochiesa|Campolongo Al Torre|Campolongo Sul Brenta|Camporosso In Valcanale|Campospinoso Albaredo|Campovico|Canale Disonzo|Candeasco|Candelara|Canepa|Canevino|Canezza|Canfanaro|Canneto Di Bari|Cannitello|Canova Del Morbasco|Cansero|Cantonale|Capiago|Capiate|Capitello|Capodistria|Capolago|Caporetto|Capriano Azzano|Capriate Dadda|Capriva Nel Carso|Capronno|Caramagna Ligure|Carate Lario|Carbonara Di Bari|Carbonara Di Po|Carcano|Carciato|Carcina|Cardana|Cardezza|Carella Con Mariaga|Careno|Carezzano Superiore|Cargiago|Carida|Carlazzo Valsolda|Camigna|Carobbio|Caronno Corbellaro|Carpaneta Con Dosimo|Carpasio|Carpignago|Carpugnino|Carrara San Giorgio|Carrara Santo Stefano|Cartari E Calderara|Carugo Arosio|Carzago Della Riviera|Casalba|Casale Cremasco|Casaleggio Castellazzo|Casalorzo Geroldi|Casalpoglio|Casanova Lanza|Casasco Dintelvi|Casez|Casirago|Casletto|Caslino Al Piano|Casnate|Casole Bruzio|Casotto|Cassago|Cassano Albese|Cassano Spinola|Cassina Mariaga|Cassine Gandine|Castagne|Castelbello|Castel Cellesi|Castel Colonna|Casteldarne|Castel De Ratti|Castel Dobra|Castelfranco Di Sopra|Castel Iablanizza|Castel Lambro|Castellammare Adriatico|Castellano|Castellar|Castellaro De Giorgi|Castellavazzo|Castellengo|Castelletto Monforte|Castelletto Po|Castelletto Villa|Castelli Cusiani|Castello Valsolda|Castello Sopra Lecco|Castello|Castello Di Serravalle|Castellone Al Volturno|Castellonorato|Castelluccio|Castelnuovo Distria|Castelponzone|Castelruggiero|Castel San Pietro Monferrato|Castelvecchio Di Santa Maria Maggiore|Castelvero Dasti|Castiglione Dasti|Castiglione Dintelvi|Castiglione Dossola|Castione Veronese|Castrezzone|Cataforio|Catona|Cauria|Cavacurta|Cavaglio San Donnino|Cavaglio Spoccia|Cavallasca|Cavandone|Cave Auremiane|Caversaccio|Covelano|Cavona|Ceconico|Ceglie Del Campo|Ceglie|Celentino|Cellina|Cella Di Bobbio|Celledizzo|Cellio|Cembra|Cenate|Cenate Dargon|Cenesi|Cengles|Cenova|Centa San Nicolo|Centrisola|Cepino|Cerchiate|Cernizza Goriziana|Cernusco Montevecchia|Cerreto Castello|Cerro Lago Maggiore|Cervarolo|Lentiai|Cesello Brianza|Cesi|Cesnola|Ceto Cerveno|Ceves|Challant Saint Anselme Et Challant Saint Victor|Champlas Du Col|Cherso|Chiabrano|Chiaiano Ed Uniti|Chianchetelle|Chiapovano|Chiaravalle Milanese|Chiavazza|Chienis|Chignolo Verbano|Chirignago|Chizzola|Ciago|Ciardes|Cignano|Ciliverghe|Cima|Cimamulera|Cimbergo Paspardo|Cimego|Cinisello|Circhina|Cireggio|Ciseriis|Cismon Del Grappa|Issengo|Cittanova Distria|Civello|Civenna|Cividate Malegno|Civiglio|Cizzago|Clana|Clusane Sul Lago|Clusio|Cobbia|Cocquio|Cognola|Cogolo|Coimo|Coiromonte|Colbordolo|Colcavagno|Colciago|Coldrano|Col Di Rodi|Colfosco|Collagna|Segnacco|Colle In Casies|Collescipoli|Collestatte|Colli In Pusteria|Cologna|Cologna Gavazzo|Cologna In Giudicarie|Colognola Del Piano|Colombaro|Col San Giovanni|Colsano|Comairano|Comano|Comasine|Comeno|Comero|Comezzano|Comnago|Concadirame|Concei|Concenedo|Conco|Condino|Conio|Consiglio Di Rumo|Consonno|Contarina|Contra|Corciago|Coredo|Corenno Plinio|Corgnale|Corigliano Calabro|Cornale|Cornigliano Ligure|Corona|Curon|Correzzo|Cortabbio|Corte|Corti In Pusteria|Cortenedolo|Corteolona|Corteranzo|Corticelle Pieve|Cortile San Martino|Corvara In Passiria|Corzes|Cosbana Del Collio|Cossana|Due Cossani|Cossila|Cossirano|Costa Doneglia|Costasavina|Covelo|Crana Gattugno|Cravegna|Creda|Credera|Cremezzano|Cremnago|Crenna|Crenovizza|Crescenzago|Crespano Del Grappa|Crespellano|Crespina|Cressogno|Creto|Crevenna|Crevola Sesia|Croce|Croce Di Mosso|Crocetta|Crosa|Crosara|Crusinallo|Cuccaro Monferrato|Cunevo|Cuquello|Quarazze|Curdomo|Curnasco|Cursolo|Cursolo Orasso|Cutigliano|Cuzzago|Dagnente|Daone|Dardine|Dare|Darzo|Dasio|Degagna|Deggiano|Dercolo|Dermulo|Descla|Desenzano Al Serio|Desertes|Dezzo Di Scalve|Diano Borello|Diano Calderina|Dignano Distria|Dimaro|Dissimo|Divaccia Grotte Del Timavo|Divaccia San Canziano|Doccio|Dole|Dol Grande|Dol Ottelza|Domusnovas Canales|Don|Donada|Donelasco|Donigala Fenughedu|Donigala Siurgus|Dorsino|Dozio|Draguccio|Drano|Dresenza|Drezzo|Drizzona|Drusacco|Duemiglia|Duino|Dusino|Duttogliano|Elena|Elle|Ellera|Elsane|Endenna|Endine|Enguiso|Eores|Erba Incino|Erbanno|Erpelle Cosina|Ersel In Monte|Escovedu|Esino Inferiore|Esino Superiore|Esio|Esmate|Fabiasco|Fabbrica Durini|Fabbriche Di Vallico|Faetto|Fagnano Sul Naviglio|Falesina|Fallascoso|Falmenta|Famie|Farvengo|Farra Dalpago|Favaro Veneto|Faver|Faverzano|Favogna Di Sotto|Favria Oglianico|Feletto Umberto|Felonica|Fenile|Fenils|Fertilia|Fianona|Fiera Di Primiero|Mirabello Comasco|Figline Valdarno|Figu|Finalborgo|Finale Marina|Finale Pia|Finero|Fiordimonte|Fiorenzuola Di Focara|Fisto|Fiumana|Fiume|Fiumenero|Fiumicello|Flavon|Flecchia|Fleres|Foce|Foiana|Folsogno|Fomarco|Fondra|Fontana Del Conte|Foresto Sesia|Foresto Di Susa|Formignana|Fornero|Forni Di Val Dastico|Forno|Forno|Forno Alpi Graje|Forno Di Zoldo|Forotondo|Fossa Guazzona|Fossarmato|Fosseno|Frascata|Frassinello Olivola|Frassinere|Fraveggio|Frerola|Frignano Maggiore|Frontignano|Frontone Serra|Fuipiano Al Brembo|Fundres|Fusine In Valromana|Gabbioneta|Gabria|Gabrovizza|Gadesco|Gaggino|Gaiola Moiola|Galdo|Gallico|Gallina|Galluzzo|Garabiolo|Gardolo Al Piano|Garegnano|Gargaro|Gattico|Gauna|Gavazzana|Gazzada|Gazzelli|Genzone|Germanedo|Germasino|Gerolanuova|Gerosa|Ghevio|Ionia|Gimino|Ginestreto|Goiaci|Gironico|Giuncugnano|Godovici|Goglione Sopra|Goglione Sotto|Goido|Golese|Goriano|Gorlaprecotto|Gornate Superiore|Gorrino|Gorzone|Gottro|Gozza|Gracova Serravalle|Graglia Piana|Granaglione|Grancona|Grandola|Grauno|Gravedona|Greco Milanese|Gressoney|Gries|Grignano|Grignano Di Polesine|Grimaldo|Grisignana|Grisolia Cipollina|Grona|Groppo|Grotte Santo Stefano|Grumello De Zanchi|Grumello Del Piano|Grumes|Grumo|Guardia Piemontese Terme|Gudon|Guidomandri|Gurone|Iatrinoli|Iavre|Idresca Disonzo|Idria|Idria Di Sotto|Imberido|Incino|Incisa In Val Darno|Indovero|Intimiano|Intra|Introzzo|Inverso Porte|Invorio Inferiore|Invorio Superiore|Inzino|Ioannis|Ipplis|Irgoli Di Galtelli|Ischia|Isola Balba|Isola Comacina|Isola Distria|Isola San Giulio|Isolella|Ivano Fracena|Jerago Con Besnate Ed Orago|Lacinigo|Laglesie San Leopoldo|San Giorgio Di Lago|Lagosta|Laino Bruzio|Lambrate|Lanischie|Lanza|Lanzo Dintelvi|Laorca|Lappago|Lardaro|Lari|Lase|Lasino|Laterina|Laudes|Laurana|Laveno|Lavina|Lazfons|Villabella|Ledine|Legos|Lemna|Lenno|Osmate|Lenzima|Lenzumo|Lesa Belgirate|Lessona|Letojanni Gallodoro|Levrange|Lezza|Libussina|Licignano Di Napoli|Licusati|Lieto Colle|Ligonchio|Ligosullo|Limonta|Linate Al Lambro|Lingueglietta|Linzanico|Lisanza|Lisignago|Lissago|Livemmo|Lizzana|Lizzola|Locadi|Locarno|Locate Bergamasco|Locavizza Di Aidussina|Locavizza Di Canale|Locca|Lodrone|Lomaniga|Lomaso|Lon|Lonato|Longarone|Longiaru|Lorentino|Lorenzana|Lose|Loseto|Lottulo|Loveno Grumello|Loveno Sopra Menaggio|Lover|Lozzo|Lu|Lucernate|Lucinico|Lucino|Ludriano|Lugnacco|Vazia|Luico|Lumezzane Pieve|Lumezzane San Sebastiano|Lumezzane Santapollonio|Lundo|Lusciano E Ducenta|Lusiana|Lussingrande|Lussinpiccolo|Lutago|Luzzogno|Maccagno|Maccagno Inferiore|Maccio|Maderno|Madrano|Madruzzo|Maggianico|Magno Sopra Inzino|Magognino|Magras|Magre|Magre Vicentino|Maia Alta|Maia Bassa|Malborghetto|Malchina|Malgolo|Mallas|Malpotremo|Malvino|Maniglia|Mantana|Manzano|Marano|Maranola|Maranza|Marcellise|Marco|Marcorengo|Maresego|Mareta|Margone|Mariano Al Brembo|Marmorito|Maro Castello|Martina Olba|Masciago Milanese|Masi Di Vigo|Masnago|Mason Vicentino|Massa Fiscaglia|Massama|Massa Superiore|Masse Di San Martino|Masse Di Siena|Mastellina|Mattarello|Matteria|Mattuglie|Mazia|Mazzo Milanese|Mazzoleni E Falghera|Mazzunno|Meano|Meano|Mechel|Medana|Megliadino San Fidenzio|Mel|Melezet|Menarola|Mendatica Montegrosso|Mentoulles|Mercurago|Merna|Mestre|Mestriago|Meugliano|Mezzana Superiore|Mezzani|Mezzano Imer|Mezzegra|Mezzolago|Migiandone|Migliarino|Migliaro|Mignette|Millan Sarnes|Millaures|Milzanello|Minoprio|Miola|Mirabello|Mirabello Ed Uniti Di Pavia|Mizzole|Moano|Mocchie|Moerna|Moiana|Molassana|Molina|Molina Di Ledro|Molini Di Colognola|Molini Di Tures|Molino Alzano|Mollaro|Mollieres|Molo Di Borbera|Montegrazie|Moltedo Superiore|Molvena|Mombello Lago Maggiore|Monasterolo Torinese|Monate|Novello Monchiero|Monclassico|Mondonico|Mondonio|Mondrone|Monghezzo Di Fuori|Montagne|Montalcino|Montalto Ligure|Montalero|Montano Comasco|Montassilone|Monte Di Mezzodi|Monte Di Tramontana|Montecatini Di Val Di Nievole|Montecelio|Montechiaro|Montechiaro Denice|Monte Colombo|Monte Di Capodistria|Montefontana|Montegrino|Montemaggiore Al Metauro|Montenero Didria|Monte Ossolano|Monteponente|Monterado|Montes|Monte San Candido|Montesanto Vigi|Monte San Vito|Montescudo|Montesicuro|Montesilvano Marina|Montespino|Montestrutto|Monte Urabice|Monteveglio|Monteviasco|Montiglio|Montona|Montorio Veronese|Montoro Inferiore|Montoro Superiore|Montrigiasco|Montrone|Montu Berchielli|Morca|Moregnano|Morondo|Morosolo|Mortano|Mortaso|Morter|Mortizza|Moschiena|Mossano|Mosso Santa Maria|Mozzio|Mu|Muceno|Mules|Villa Poma|Murano|Muriaglio|Musadino|Muscoli Strassoldo|Musellaro|Musignano|Musocco|Nacla San Maurizio|Nanno|Nava|Nave San Rocco|Navono|Naz|Negarine|Neresine|Nervi|Nese|Nettunia|Nibbiano|Nicastro|Nigoline|Niguarda|Noarna|Nocco|Nogare|Nomesino|Noriglio|Novacella|Novale|Novareglia|Novate Brianza|Novillara|Nozza|Nuchis|Nuraxinieddu|Olba|Olcio|Olgia|Olgiate Calco|Olginasio|Tavernette|Olivastri|Oltrepovo|Oltresarca|Oltresonzia|Oltressenda Bassa|Oltrona Al Lago|Ombriano|Oneglia|Onies|Onno|Ono Degno|Opacchiasella|Orasso|Orciano Di Pesaro|Oreno|Orezzo|Oriano|Oriano Di Brianza|Orino Azzio|Oris|Orsera|Orta Novarese|Orti|Ossanesga|Ossecca Vittuglie|Ossegliano San Michele|Ossero|Ossolaro|Ossuccio|Padergnone|Padernello|Paderno Cremonese|Paderno Del Grappa|Paganica|Paglieres|Paisco|Palanzo|Palazzo Piverone|Pallanza|Palvareto|Paniqua|Pannone|Pantasina|Papigno|Pare|Parenzo|Parona Di Valpolicella|Parone|Parravicino|Rivolto|Passerano|Paterno Dancona|Patone|Patrignone|Pavone Dalessandria|Pecco|Pecorara|Pedace|Pedanea|Pederzano|Pegli|Pellaro|Pellestrina|Pellio Intelvi|Penzano|Perego|Pergine Valdarno|Perno|Perra|Persico|Persone|Perteole|Peschiera Maraglio|Pessina Valsassina|Pezzoro|Piadena|Piagge|Piaggine Soprane|Pianavia|Pianceri|Pian Dartogne|Pian Di Sco|Piane Sesia|Pian Gaiano|Piani|Piano Porlezza|Piano|Pianura|Piavon|Piazza Santo Stefano|Piazzo|Piazzo Alto|Piazzo Basso|Piediluco|Piedimonte Del Calvario|Pietra Gavina|Pieve Di Coriano|Pievebovigliana|Pieve Dalpago|Pieve Delmona|Pieve Di Bono|Pieve Di Ledro|Ramiseto|Pilcante|Pilzone|Pinguente|Pino Sulla Sponda Del Lago Maggiore|Pione|Piovera|Pirano|Pirri|Piscinola|Piscopio|Pisino|Pissarello|Pistolesa|Piteglio|Pizzocorno|Planol|Planina|Plata|Plezzo|Pliscovizza Della Madonna|Pocrai Del Piro|Podargoni|Podraga|Poggi|Poggio Berni|Poggio Fidoni|Pola|Polengo|Polesine Parmense|Pometo|Poncarale Flero|Pontagna|Ponte Lambro|Pontebba Nova|Pontedecimo|Ponte Di Nossa|Ponticelli|Ponzate|Por|Portese|Porto Dadda|Porto Civitanova|Portole|Porto Maurizio|Porzano|Poscante|Postumia Grotte|Poverio|Povo|Pozza Di Fassa|Pozzo Alto|Pra|Prandaglio|Pranzo|Praso|Prati|Prato Alla Drava|Pratovecchio|Pratovecchio Stia|Pre|Precotto|Pregasina|Preghena|Preglia|Premione|Preore|Presegno|Presicce|Presson|Prestine|Preturo|Prevacina|Prezzo|Priacco|Priero Montezemolo|Primano|Primeglio Schierano|Primiero|Prio|Provaglio Sopra|Provaglio Sotto|Provezze|Prun|Puos Dalpago|Puria|Quaglietta|Quaregna|Quarna|Quarti|Quartiano|Quarto Dei Mille|Virgilio|Quero|Quetta|Quinto Di Valpantena|Quinto Al Mare|Quinzanello|Quinzano Veronese|Quittengo|Raccolana|Radicena|Raffa|Ragoli|Ragusa Ibla|Riscone|Ramo Di Palo|Ramponio|Ramponio Verna|Rancio Di Lecco|Ranziano|Ranzi Pietra|Ranzo|Rasun Di Sopra|Rasun Di Sotto|Retacevo In Monte|Ravellino|Ravina|Rebbio|Redona|Remedello Sopra|Remedello Sotto|Renate Veduggio|Rescalda|Resia|Revere|Reviano Folas|Revigliasco Torinese|Rezzonico|Rhemes|Riclaretto|Ridanna|Rifembergo|Rigosa|Rima San Giuseppe|Rimasco|Rina|Rinco|Rio Nellelba|Rio Marina|Riomolino|Ripalta Nuova|Ripe|Riva Valdobbia|Riva Di Tures|Rivarolo Ligure|Riva Santo Stefano|Rivera|Riviera Dadda|Rivignano|Rivoltella|Ro|Rocca Pietra|Roccacaramanico|Rocca Del Colle|Roccaguglielma|Roccalvecce|Roccapiatta|Rochemolles|Rocchetta Cengio|Rodda|Rodengo|Roditti|Roggiano Valtravaglia|Roio Piano|Romagnano|Romano Brianza|Romans|Romarzolo|Roncogno|Roncone|Rongio|Ronzina|Ronzo|Rosali|Rosciate|Rosingo|Rosora Mergo|Rossano|Rossino|Rota Dentro|Rota Fuori|Rovagnate|Rovate|Rovegro|Rovenna|Rover Carbonare|Roversano|Rovetta Con Fino|Rovigno Distria|Rozzo|Rubbiano|Ruginello|Ruino|Rumianca|Runo|Sabbia|Sabbio Bergamasco|Sabbioncello|Sable Grande|Sacconago|Saga|Sagliano Di Crenna|Sagoria San Martino|Saiano|Sala Al Barro|Salabue|Salcano|Sale Castelnuovo|Salecchio|Saletto|Salice Calabro|Salina|Salona Disonzo|Saltara|Salto|Salvaterra|Samaria|Sambasso|Sambatello|Sambiase|Sambuco Pietraporzio|Sambughetto|Samoclevo|Samo Di Calabria|San Bartolomeo Valmara|San Bernardino|San Daniele Del Carso|San Fedele Intelvi|San Felice Di Scovolo|San Felice|San Francesco Dalbaro|San Gallo|San Germano Dei Berici|San Gervasio Dadda|San Giacomo|San Giacomo|San Giacomo In Colle|San Gillio Torinese|San Giorgio|San Giorgio Di Pesaro|San Giovanni|San Giovanni Alla Castagna|San Giovanni A Teduccio|San Giovanni Battista|San Giovanni Dasso|San Giovanni Di Galermo|San Giovanni Reatino|San Giuseppe Di Casto|Villa San Giuseppe|San Lazzaro Reale|San Lazzaro Alberoni|San Lazzaro Parmense|San Leonardo|San Leucio|San Lorenzo In Banale|San Lorenzo Mondinari|San Lugano|San Marcello Pistoiese|San Martino Al Cimino|San Martino Di Perrero|San Martino Al Monte|San Martino De Calvi|San Martino In Beliseto|San Martino In Casies|San Martino Quisca|San Marzano Moasca|San Marzanotto|San Massimo Alladige|San Michele Dasti|San Michele Prazzo|San Michele In Teverina|San Michele Extra|San Michele Di Postumia|San Nazario|San Novo|San Pancrazio Parmense|San Pantaleo|San Paolo Della Valle|San Paolo Cervo|San Pelagio|San Pier Darena|San Pier Fedele|San Piero A Sieve|San Pietro|San Pietro Di Gorizia|San Pietro A Patierno|San Pietro Del Carso|San Pietro Di Barbozza|San Pietro Di Monterosso|San Pietro Dorzio|San Pietro Irpino|San Ponzo Semola|San Quirico In Val Polcevera|San Sigismondo|San Silvestro|Santabbondio|Santa Croce Di Aidussina|Santeufemia Della Fonte|Santagata Sopra Cannobio|Santagata Irpina|Santa Giulia|Santagostino|Santalbano Di Bobbio|Santa Luce Orciano|Santa Lucia Disonzo|Santa Maddalena In Casies|Santa Margherita Dadige|Santa Margherita Di Bobbio|Santa Margherita|Santa Maria Della Croce|Santa Maria Del Monte|Santa Maria Di Rovagnate|Santa Maria In Prato|Santa Maria In Stelle|Santa Maria Maggiore E Crana|Santa Maria Rezzonico|Santambrogio Olona|Santandrea Di Gorizia|Santandrea Di Vallefredda|Santandrea In Monte|Santangelo In Lizzola|Santantonio Dadda|Santantonio A Trebbia|Santapollinare Con Selva|Santa Valeria|Santeufemia Lamezia|Santicolo|Santilario Ligure|Santino|Zoldo Alto|Santomobono Terme|Santo Spirito Della Bainsizza|Santo Stefano Del Monte Degli Angeli|Santo Stefano Di Briga|San Valentino Al Brennero|San Valentino Alla Mutta|San Vero Congius|San Vigilio|Sanvincenti|San Vincenzo Al Volturno|San Vito E Modesto|San Vito In Monte|San Vito Di Vipacco|Saone|Sardagna|Sarola|Sartirana Briantea|Sassa|Sasso Di Bordighera|Sasso|Sassocorvaro|Savigno|Savoulx|Scaleres|Scaletta Uzzone|Scandeluzza|Scannabue|Scano Al Brembo|Scanzo|Scaria|Scarnafigi Ruffia|Scarperia|Scarpizzolo|Sciaves|Scavolino|Scelmo|Scherbina|Schianno|Schieranco|Scodovacca|Scoppo|Torriana|Scrilla|Sebreghe|Secondigliano|Sedula|Seghebbia|Segno|Segno|Seio|Selino|Sella Delle Trincee|Sellere|Selve Marcone|Senosecchia|Seo|Seppiana|Seprio|Serbariu|Serpenizza|Serra Pedace|Serravalle Dasti|Serravalle Alladige|Serrungarina|Serso|Sesana|Sessant|Sestri Ponente|Sevignano|Sforzatica|Siamanna Siapiccia|Sicci San Biagio|Sili|Silun Montaquila|Sillano|Silvella|Senadole|Siror|Sisini|Sissa|Siurgus|Siviano|Slappe Zorzi|Slingia|Slivia|Smarano|Smeria|Soccavo|Solanas|Solbiate|Solbrito|Solomiac|Solto|Solzago|Somana|Somendenna|Sonzia|Sopramonte|Soprana|Sopraponte|Soprazocco|Sorbano|Sorbolo|Sorbolongo|Sorli|Sovazza|Spadafora San Martino|Spadafora San Pietro|Spera|Spezzano Grande|Spezzano Piccolo|Spinga|Spino Al Brembo|Spinone|Spoccia|Stabello|Staghiglione|Stava|Stazzona Germasino|Stia|Stilves|Storie|Strada|Strambino Romano|Stramentizzo|Strigno|Stropino|Struppa|Stumiaga|Sturia Delle Fusine|Suna|Susa|Tabla|Tagliolo Belforte|Tagliuno|Taio|Tanas|Tapigliano|Tapogliano|Tappia|Tarces|Tarcetta|Tarnova Della Selva|Tarres|Tassullo|Tavarnelle Val Di Pesa|Tavernola San Felice|Tavodo|Tavole|Tavon|Tavordo|Telves|Temenizza|Tenda|Teodone|Teodorano|Teor|Terlago|Termenago|Termon|Ternova Disonzo|Torrenova Di Bisterza|Terrasa|Terrati|Terrazzano|Terres|Terzano|Tesido|Thures|Tiarno|Tiarno Di Sopra|Tiarno Di Sotto|Timoline|Tina|Tiso|Tolmino|Tomadio|Tonadico|Torba|Torbiato|Torra|Torradello|Torrazza|Torre Beretti|Torre Del Mangano|Torre Del Monte|Torre De Ratti|Torre Orsina|Torre Uzzone|Torria|Torriano|Toscolano|Toss|Trabuchello|Traffiume|Transacqua|Trausella|Travedona|Traversa|Traverse|Trebbiano Nizza|Trebecco|Trecasali|Tredossi|Tremenico|Tremezzina|Tremezzo|Trenno|Trens|Trenta|Trenta Disonzo|Treppo Carnico|Tres|Tresche Conca|Tresigallo|Tresilico|Tretto|Trevano|Trevisago|Tribussa|Trichiana|Trivero|Trobaso|Tuenetto|Tuenno|Tunes|Turago Bordone|Turro Milanese|Ugovizza Valbruna|Uggiate|Umago|Unchio|Urio|Ussolo|Ustie|Vaglierano|Vagna|Valas|Vico Canavese|Valchiusella|Valda|Valdarsa|Valgiovo|Valdigna Daosta|Vallalta|Vallarga|Valle Distria|Valle Mosso|Vallelunga|Vallenoncello|Valles|Valle San Felice|Valle San Silvestro|Valle Superiore Mosso|Vallonara|Valloria Marittima|Valmaggia|Valmala|Val Marchirolo|Valprato|Valrovina|Valsaviore|Valsecca|Valstagna|Valtesse|Valvasone|Valverde|Vandoies Di Sopra|Vandoies Di Sotto|Vanga|Vararo|Varengo|Vargo|Varoni|Vas|Vasio|Vassena|Vattaro|Veccana|Veddasca|Velate|Vellano|Vellego|Vello|Venegono|Verderio|Verderio Inferiore|Verderio Superiore|Verdesina|Verezzi|Villa Vergano|Vergano Novarese|Vergemoli|Vergobbio|Vermezzo|Verna|Verpogliano|Verrua Siccomario|Versa|Versciaco|Vertemate|Verteneglio|Vertoiba In Campi Santi|Vertovino|Veruno|Vervo|Vestreno|Vezzano|Vezzano|Vezzi|Vezzo|Vho|Viarago|Viceno|Viconago|Vidolasco|Vigalzano|Viganella|Vigatto|Vigentino|Viggiona|Vignola|Vigo Danaunia|Vigo Di Fassa|Vigolo Baselga|Vigolo Vattaro|Vigo Rendena|Villa Agnedo|Villa Banale|Villabassa Di Senosecchia|Villa Dadige|Villa Castelnuovo|Villa Cogozzo|Villa Corsione|Villa Dallegno|Villa Decani|Villa Del Nevoso|Villa Ottone|Villaguardia|Villalbese|Villanovetta|Villa Rendena|Villa Romano|Villa Santa Caterina|Villa Slavina|Villatalla|Villaviani|Villa Vicentina|Villa Volturno|Villazzano|Ville Del Monte|Ville Montevecchio|Ville San Pietro|Ville San Sebastiano|Villongo San Filastro|Villongo Santalessandro|Vilminore|Vimogno|Vintebbio|Vion|Vipacco|Virle Treponti|Visignano Distria|Visinada|Visino|Viticuso Ed Acquafondata|Vittadone|Vizze|Vocogno E Prestinone|Voissizza Di Comeno|Voldomino|Volosca Abbazia|Voltore|Voltri|Volzana|Voschia|Zambana|Zappello|Zara|Zavattarello Valverde|Zelarino|Zelbio Veleso|Zelo Surrigone|Zeppara|Zibello|Zivido|Zolla|Zorlesco|Zornasco|Zorzino|Zoverallo|Zuclo|Zuri|Valsantamarina|Boville|Mosso|Alme Con Villa|Rasun Valdaora\",provinceOrCountry:\"COTOFUVAPTBZMCBSLECOMINONOVCNOTNGOGOCSCOCECNCOBGTSBZCOCONOPLTOBZALCNTNBSBGBGNOTNTNCNVCBSGOBZPLNONOGEFUMSNOVCVACOVAVAPVCEAQCANONOVABSTNTNVAPLNOPNIMCOCEPUTSTSNOGOBSVRTOCOMIVTALBOPIAQCOTOTOCOCOVAMITNPLVIFIPUBSCOTOSVSVBGMINABGCOVACRVATNPVPVGOMEGEBOTOCOAVROVRBSFUGOCOFECNTNTNFUIMNOVRTNTNVANOSVMNGOGOCOCRCOALFUVATNTNROVAPRVAGEPLNONOVATNTNNOBSGEBGTNBGTOBGIMTNSVMNMNBSBOIMBGGOVCBSVAROTNGEVAIMTNPVBSBSROTOTOTNBGPVGOCOCOTNVCBGBGVABGVRVRGOGOCOCNALTNPLNOVANOSVFIBSBGALTOCOTSGOCOCONOPLCOVEBZREROIMTONOBSTSCRNOVAVACRPVVRBSTNVAROCOCOMIBSTNGOBGBSNOBGMEBNTOLOAQVCBSPCBZCOCOCNVANOBITOTNSVUDVIUDPVSOGOIMPSGEPVTNPLBARCCRCRMICOCOSAPLVAGOBSBGTSVAIMCOBAMNCOTNBSVANOCOCOALNORCCOGOBGVACRIMPVNOPDPDIMCOBSCECRNOCRMNCOCOTNCOCOCOCOCSVICOCOALCOCRTNBZVTANBZALGOARFUPVTETNCNPVBLVCCNPVVCNOCOCOTNBOCBLTPZFUCRSAALIMALALCONOVRBSRCRCBZLONOVBCONOTSCOBZVAGOBAFUTNVAPVTNVCTNBGBGSVBZIMTNBGBGMIGOCOBIVAVCBLCOPGTOBSBZAOTOPLTONAAVGOMIVCTNNOVETNTNBZBSBSCONOBSTNMIGONOUDVIBZPLCOCOBSCOBSFUBSBZGOVATNTNNONOPUATCOBZIMBZREUDBZPGPGBZCOTNTNBGBSTOBZPVTNTNGOBSBSNOROTNCOVITNIMCOCOROCONOTNCOTSCSPVGEGOBZVRCOBGBZBSPVALBSPRBZBZGOTSVAVCBSIMTNTNNONOGOCRBSCOMITSMITVBOPICOTNCOVCCOVCROBIVINOALTNALBZBGBGNOVBPTNONOTNTNTNTNCOBSTNTNTNGOBGTOBGIMIMPLTNNOTSTSVCGOGOGOCATNROPVCACATNCOPLCOGOCOCRTOCRTSALTSLTBZSVFUBGBGTNBZCOBSPLGOCACOCONOBGVACOLUTOMITNCHVBTSBSBLVETNBSBZTOUDMNTOTOCEPLTNCOFICAGEGEGENOMCPSTNFOFUBGUDTNVCBZGEBZNONOBGFUVCTOFENOVINOTNTOBLALCRPVNOALALTOTNBGCEBSPSBGBZUDCRGOGOCRCOCNSARCRCFIVATNMIGONOTOALVAIMPVCOCOBSBGNOCTPLPSGOCOLUGOBSBSPVPRGOMIVACNBSCOGOGONOBOVICOTNCOMIAOBZBGROBZPLCSCOALVTBGBGTNTNCSBZMEVARCTNGOGOGOCOCOFICOCONOLCTONONOBSUDUDNUTNMICOPLNOVCTNMIBZUDTVZACSMIPLMECOCOBZTNPITSTNARBZFUVAIMBZALGOTNCOCOVATNTNNOBIMEBSCOGONASACOREUDCOMIIMCOVATNVABSTNBGMEVCBGGOGOTNTNCOTNTNBSBLBZBGPIGOBACNBSCOTNVAALMIUDCOBSTORIGOBSBSBSTNCEVIPLPLBZNOVAVACOBSTNTNCOBSNOTNBZVIBZBZUDTSTNBZCNALTOBZTNTNLTBZVRTNTOPLBZTNBGALIMSVMITNVAVIFECAROSISITNTNFUFUBZMIBGBSTOTNTNGOPDBLTOSOIMTONOGOVETNTOVAPRTNCOTNNOFEFEMIBZTOBSCOTNFEPVVRIMTOTNCOGECOTNBGBZALTNTOALIMIMVIVATOVACNTNCOALTOBZTNSIIMALCOBZBZBZPTRMBZALRNPLBZVAPUGONOBZANTNBZPGGORNANPEGOTOGOBOVAATPLVRAVAVNOBAPVVCAPVCVAFOTNBZPCFUVIBINOBSVABZMNVETOVAUDPEVAMITSTNCOTNBSBZVRPLGEBGRMPCCZBSMITNNOTNTNTNBZVITOCOPSBSSSCASVCONOCOVATOIMBGTNGOBGVACRIMBZCOBSGONOPUMIBGBSCOVABZPLNORCBGGOGOPLCRCOTNBSCRTVAQCNBSCOTONOCRGOTNIMPGCOPLVRVCCOUDALANTNAPALTOPCCSTOTNGERCVECOCOLCARCNTNCRBSUDBSCOBSCRPUSAIMVCBSARVCBGIMCOTNNATVCOTOBGBGPGUDPVMNMCBLCRTNTNRETNBSPLVAPRALPLCANACZPLPVBIPTPVBZGOBZGOGOGORCGOIMRNRIPLCRPRPVBSBSCOUDGEBGNACOTNBSMIMCPLIMBSBGTSTSTNTNPSGEBSTNTNBZBZARARTNMITNTNNOTNTNBSLETNBSAQGOTNTOCNFUALTNTNBSBSBSVRBLCOAVBINOALMIGEMNBLTNVRGEBSVRBIUDRCBSTNSRBZROCOCOCOGOSVTNBZBZFUCOTNCOBGBSBSMIMIBZMNTNTOCOAOTOBZGOBGVCVCBZALLILIBZCRANVCBZGEIMTOBGUDBSFEVCPEBGFRVTTOTOSVUDBSTSVAAQTNCOGOTNTNTNCOGOTNRCBGALANCSBGBGBGLCVANOCOTNFOBGPLPLCRMIPVNOVAVCBGCOGOVAGOPVFUBSCOALGOTONOPDRCMEGOPUTOROGOGORCCZCNNOTNRCNOCRGOCOBSBZGEBGVIBGBZTNTSTOBZPUBZCONAGESICTPGVCRCIMPCPRBZCETNCRBZPTVTTOBZBGCRBZGOATALVRALCNVTVRTSVIMIPRCAALBITSGERCFIBZGONATSTVCNBGAVPVGEBZCHCOGOBSNOAVSVFEPVPIGOBZPDPVTNCRVACOMIVRNOCOVAUDFRBZPUBGPCROCOCZBSGENOBLBGGOBGMEBZBZCABSPLCBCRTRGOTNTNIMCOAQIMTNPUBOTOBZCNATCRBGBGCOCNFIBSBZPSTNGOVANOUDTSRNGOGONAGOCOSVTNTNBGGOBGBITSTNVBCOCAGOCSALTNPUTNTSALGETNBGCACACAPLLUCRTSTNCAPRCABSGOBZTSTNFUNACACOALTOBGCOCOBGGOTNBIBSBSFOPRPSALNOMEMETNCSCSBZBGBGNOBGPVBZCOARBZTSTNTOTNTNNOGETNGONOTNBZALBGTNBZNOUDNOBZUDGOBZTNFIAVTNIMTNCOBZGOCNBZFOUDTNTNTNGOFUPVCSMITNBSBZTOTNTNTNBSTOBZGOTSTNVABSTNPVIMPVPVPVALPGCNIMPVBSTNBGNOTNTOVACOTOPVPCPRCRLCCOCOMIBZCSGOUDTNVIFERCVICOVAGOBLBINOTNTNBZPVMIUDCOPLNOCOCNGOALNOBZTOTOTNPLBZAOBGBZPLBIBZUDBZTNBZVCVIIMVCCNVATOVIBSBGVIBGPNPVBZBZBZVAALALBNBLTNCOTNVAVAVAPTSVBSVACOLCLCTNSVCONOLUVAMICOGOPVGOBZCOPLGOGONOTNLCBZTNGENOCRTNNOVACRTNVBPRMINOTNTNTNTNTNTNTNTNTSROTOBSATBSPLFUBZIMCOCNTNCOBZTSIMIMUDCETNTNGOIMIMBGBGBGCOVCTNGOBSPLPLCOFRMIBZNOGOVAFUVAGEGOGOTNCRZAPVVECOMICAPRMIGOMINOBGNOTNCAFURMBIBGBZ\"},{belfioreCode:\"00100400500600700800a00d00e00f00g00h00i00j00k00m00n00o00p00q00r00s00t01001101201301601701801901b01c01d01f01g01h01i01j01k01l01m01n01o01p01q01r01s01t01u02002102302402502602702802a02b02c02d02g02h02i02j02k02l02n02o02p02r02s02t02u03003103203403503603703903a03b03c03d03e03f03g03h03j03k03l03m03n03o03p03q03r03s03t03u03v04004104204304404604704904a04b04f04h04i04l04m04p04q04r04t04u04v05005105205305405505605705b05c05d05f05g05h05i05j05k05l05m05n05o05p05q05r05s05t05v06006106206306406506606806906a06b06c06d06e06f06g06i06m06n06o06p06q06s06t06u06v07007107207307407507607707907a07b07c07d07e07f07g07h07i07j07k07l07m07p07r07s07t07u07v08008108208308508608708808908a08b08c08d08e08f08g08h08i08j08m08o08p08q08r08s08t08u08v09009209309409509609709809909b09c09d09e09f09g09h09i09k09l09m09o09p09q09r09t09u09v0a00a10a30a40a50a60a70a80a90aa0ac0ad0ae0af0ah0ai0aj0ak0al0an0ao0ap0aq0ar0as0au0av0b00b20b30b50b60b70b80bb0bd0be0bf0bg0bh0bi0bj0bk0bl0bm0bn0bo0bp0br0bs0bu0bv0c10c20c30c40c50c60c70c80c90ca0cc0cd0ce0cf0cg0ch0ci0cj0cl0cn0cp0cs0ct0cu0cv0d20d30d50d60d80d90db0dd0de0df0dg0dh0di0dj0dk0dl0dm0dn0do0dp0dr0ds0dt0du0dv0e00e10e30e40e50e60e70ea0eb0ec0ed0ee0ef0eg0eh0ei0ej0ek0em0en0eo0ep0eq0er0es0et0eu0ev0f00f10f20f40f50f60f70f80f90fa0fb0fc0fe0ff0fg0fh0fj0fl0fm0fn0fq0fr0fs0ft0fv0g00g20g30g40g50g60g70g80g90ga0gb0gd0ge0gf0gg0gh0gi0gj0gk0gl0gm0gn0go0gp0gq0gr0gs0gt0gu0h00h20h30h60h70h80h90hb0hd0hg0hh0hi0hk0hl0hm0hn0ho0hp0hq0hr0hs0ht0hu0hv0i00i10i20i30i40i50i80ia0ib0ic0id0ie0if0ig0ih0ii0il0in0io0ip0ir0is0it0iu0iv0j10j20j40j50j60j70j80j90ja0jb0jd0jh0ji0jk0jl0jm0jn0jo0jq0jr0jt0ju0k00k30k50k60k70ka0kb0kc0kd0kf0kg0kh0ki0kk0kl0km0kn0ko0kp0kq0kr0ks0kt0ku0kv0l10l20l40l50l60l90lb0lc0le0lf0lh0li0lj0lk0lm0lo0lp0lq0lr0ls0lt0lu0lv0m00m10m20m30m40m50m60m80m90ma0mc0md0me0mf0mg0mh0mi0ml0mo0mp0mq0mr0ms0mt0mu0mv0n00n10n20n30n40n50n60n70n90na0nb0nd0ne0nf0ng0nj0nk0nl0nn0no0np0nq0nr0ns0nt0nu0o00o10o20o30o40o50o60o80o90oa0ob0oc0od0oe0of0og0oh0oi0oj0ok0ol0on0oo0op0oq0or0os0ou0ov0p10p20p40p50p90pa0pb0pc0pd0pf0pg0ph0pi0pj0pk0pl0pn0pp0pq0pr0pv0q00q20q30q40q50q90qa0qb0qc0qd0qe0qf0qg0qh0qi0qj0qk0ql0qm0qn0qo0qp0qr0qt0qv0r00r60r80ra0rc0rd0re0rg0rh0ri0rj0rk0rl0rn0rp0rr0rs0rt0ru0rv0s00s10s20s60s70s80s90sa0sd0se0sf0sg0si0sk0sm0sn0so0sq0st0t10t20t30t40t90tc0td0te0tg0th0ti0tj0tk0tl0tm0to0tp0tq0tr0ts0tt0tu0tv0u00u10u20u30u40u50u80ua0ub0uc0ud0uf0ug0uh0ui0uj0ul0um0un0uo0uq0ur0us0ut0uu0uv0v00v10v30v40v60v70v90va0vb0vd0ve0vf0vg0vh0vi0vk0vm0vn0vo0vp0vq0vr0vs0vt10010110210410510610710910a10b10c10d10e10g10h10i10j10k10m10o10p10r10u10v11011111211511611711811b11c11d11e11f11h11j11k11l11n11o11p11q11r11s11t11u12012312612912a12b12c12d12e12g12h12i12j12l12m12n12o12q12r12s12t12u13013113313413613813913b13c13e13h13i13l13m13n13o13p13t13u14014114214414514614714814914a14d14e14f14h14j14k14l14n14o14q14r14s14t14u14v15015315415715815915a15b15c15d15e15g15h15i15j15k15l15n15p15s15t15u15v16016116216316416516716916b16c16d16e16g16i16j16k16l16m16n16o16q16r16u16v17017117217317717817a17b17d17e17g17h17i17j17k17l17m17o17q17r17s17u17v18018118218418518618718818918c18d18e18f18g18h18k18l18m18n18o18p18q18t18u18v19019119219319519719e19g19k19n1a11a21a51a61a71a81aa1ab1ad1ae1ag1ah1ai1ak1al1am1an1ao1ap1ar1au1av1b01b11b21b31b41b51b61b71b81b91bb1bc1bd1be1bf1bg1bh1bi1bj1bk1bl1bm1bn1bo1bq1br1bs1bt1bu1c01c11c21c51c71c81c91ca1cb1cf1cg1ch1ci1cj1ck1cl1cm1cn1co1cp1cq1cr1cs1ct1cv1d01d11d21d31d41d51d61d71d81da1dc1dd1df1dh1dk1dl1dm1dn1dp1dq1dr1ds1dt1du1dv1e01e11e21e41e51e91ea1eb1ec1ed1ee1ei1ej1ek1el1em1eo1ep1eq1er1es1et1eu1f01f11f21f31f51f61f71f81f91fa1fb1fc1ff1fg1fh1fi1fk1fl1fm1fn1fo1fp1fq1fr1fs1ft1fu1fv1g01g11g21g31g41g51g61g71g81ga1gd1ge1gf1gh1gi1gj1gk1gl1gn1gp1gq1gr1gs1gt1gu1gv1h11h21h41h51h61h81h91ha1hb1hc1hd1he1hg1hi1hj1hk1hl1hm1hn1ho1hp1hq1hr1ht1hu1i21i31i41i51i61i71i81i91ia1ic1id1if1ig1ih1ii1ij1ik1il1io1iq1ir1is1it1iu1iv1j01j11j21j31j41j51j71j81j91ja1jb1jc1jd1je1jf1jg1jh1ji1jj1jl1jn1jo1jq1js1jt1ju1jv1k01k21k31k51k61k71k81ka1kb1kc1kd1ke1kf1kg1kh1ki1kk1kl1km1kn1ko1kp1kq1kr1ks1kt1ku1kv1l01l11l21l51l71l81l91la1lb1lc1ld1le1lf1lg1lj1lk1ll1lm1ln1lo1lq1lr1ls1lt1lu1lv1m11m21m31m41m51m61m71m81ma1mc1md1me1mf1mg1mh1mk1ml1mo1mq1mr1ms1mu1mv1n01n21n31n51n61n71n81n91nb1nc1ne1ng1nh1ni1nj1nk1nl1nm1nn1no1np1nr1ns1nt1nu1nv1o01o21o31o41o61o71o91oa1ob1oc1od1of1og1oh1oi1ok1ol1oo1op1oq1or1os1ou1ov1p01p11p21p31p41p51p61p81pb1pc1pe1pf1pg1ph1pi1pk1pl1pm1pn1po1pq1pr1pt1pu1q01q11q21q31q41q51q61q81q91qa1qb1qc1qd1qe1qf1qg1qh1qj1qk1ql1qm1qn1qo1qp1qq1qr1qt1qu1qv1r01r11r21r31r41r51r61r71r81r91ra1rb1rc1rd1re1rf1rg1rh1ri1rj1rm1rn1ro1rq1rr1rs1rt1ru1rv1s01s11s21s31s41s51s71s81s91sc1sd1se1sf1sg1sh1si1sj1sk1sl1sn1sp1sq1sr1ss1st1su1t01t11t21t31t41t61t71t81t91ta1tb1td1te1tf1tg1th1tj1tm1tp1tq1tr1ts1tu1u01u11u31u41u51u61u71u91ua1uc1ud1ue1uf1ui1uj1uk1um1un1ut1uu1v41v61v81vb1ve1vh1vi1vl1vm1vo1vp1vs1vt1vu1vv20020120220320420520720820920a20b20c20e20f20g20h20i20j20l20m20o20p20q20r20s20u20v21021121221321521621921a21b21d21e21g21h21i21k21l21m21n21o21p21q21r21s21u21v22122222322422522622722822922a22b22d22e22f22g22h22i22l22m22n22o22p22r22t22u22v23123323423523823923a23b23c23d23e23g23h23i23l23m23n23p23s23t23u23v24024124224524724824924a24b24c24d24e24i24j24l24m24n24o24p24q24r24s24t24u24v25025125225325525625725825925a25b25c25e25f25g25h25i25j25k25l25m25n25o25r25s25t26026126226326426526626726826a26b26c26d26e26f26j26l26m26n26p26q26r26s26t26u26v27027127227327427627727827a27b27c27d27e27f27g27h27i27j27k27l27m27o27p27q27s27t27u27v28028228328428528628728828928a28b28c28d28e28f28h28i28j28k28l28n28p28q28r28s28u28v29029129229329429529629729829929a29b29c29d29f29g29h29i29k29l29n29o29p29r29s29t2a12a22a42a72a82a92aa2ac2ad2ae2af2ag2ah2aj2ak2al2am2ao2ap2aq2ar2as2au2b02b42b52b62b72b82b92ba2bc2bd2be2bf2bh2bi2bk2bl2bm2bo2bq2bs2bt2bu2c02c32c42c52c62c72c82c92ca2cb2cc2ce2cf2cg2ch2cl2co2cp2cq2cr2ct2cv2d22d52d62d72d82da2dc2de2df2dg2dh2di2dj2dk2dl2dm2dn2do2dp2ds2dt2du2dv2e02e12e22e42e52e62e72e82e92ea2eb2ec2ed2ee2ef2eg2eh2ei2ej2ek2el2em2eo2ep2er2es2et2ev2f02f12f22f32f42f52f62f82f92fa2fb2fc2fd2fe2ff2fg2fh2fj2fk2fl2fm2fn2fo2fp2fq2fr2fs2ft2fu2fv2g02g12g32g42g52g62g72g82g92gd2ge2gg2gh2gi2gk2gl2gm2gn2go2gp2gr2gs2gt2gv2h12h22h32h42h62h72h82hc2hd2he2hg2hh2hi2hk2hl2hm2hn2ho2hq2hr2hs2ht2hv2i02i12i32i42i52i62i72i82i92ia2ib2id2ie2if2ig2ih2io2ip2iq2ir2is2it2iu2iv2j02j12j22j32j42j52j62j72j92jc2jd2je2jg2jh2ji2jj2jk2jl2jm2jn2jo2jp2js2jt2ju2k12k32k72k82k92ka2kb2kc2kd2ke2kf2kg2kh2kj2kk2kl2km2kn2ko2kp2kq2kr2ks2kt2ku2kv2l22l32l42l52l62l72l82l92la2lc2ld2lf2li2lj2lk2ll2lm2ln2lo2lp2lq2lr2lt2lu2lv2m02m32m42m52m62m72m82mb2mc2md2me2mf2mg2mh2mi2mj2mk2ml2mm2mo2mp2mq2mr2ms2mt2mu2mv2n02n12n32n52n62n72n82n92na2nb2nc2nd2ng2nh2nj2nk2nm2nn2nq2nr2ns2nt2nu2nv2o02o12o22o32o42o52o72o82oa2od2oj2ok2om2on2op2os2ot2ou2ov2p02p22p32p42p52p62p72p82p92pa2pb2pc2pe2pg2ph2pi2pj2pk2pl2pm2pn2po2pr2ps2pt2pu2pv2q02q22q32q42q52q62q82qa2qd2qe2qf2qh2qk2ql2qm2qn2qo2qp2qs2qu2qv2r02r22r52r62r72r82ra2rd2re2rf2rg2rh2ri2rj2rl2rm2rn2ro2rp2rq2rr2rs2rt2rv2s22s42s62s72s82sa2sb2sc2sd2se2sf2sg2si2sj2sk2so2sp2sr2ss2st2su2sv2t02t12t22t32t42t62t72t82ta2tb2tc2te2tf2tg2th2tj2tk2tm2tn2tr2ts2tu2tv2u02u12u22u32u42u52u62u72u82ua2ub2uc2ud2ue2ug2ui2uj2uk2ul2um2up2ut2uu2v02v12v22v32v42v52v62v82v92va2vb2vc2ve2vg2vh2vi2vl2vm2vo2vp2vq2vs30030330430530630730930a30d30e30f30g30h30k30l30m30n30o30r30s30t30u30v31131331431531631731831931a31d31e31f31g31h31i31j31k31m31n31o31r31s31t31u32032132332532632732832932b32d32e32f32i32k32n32p32q32t32u33033233333433733933b33c33d33g33h33i33j33k33l33o33p33r33s33t33u33v34034134234334434534734834934a34b34e34g34h34i34j34l34m34n34q34r34s34t34u34v35035135235435535635735b35c35d35e35f35j35l35n35o35p35q35r35s35t36036136236336436536636736836936d36e36f36g36h36k36m36n36p36q36r36s36t37037137237337437737837937d37e37f37g37i37j37k37l37m37n37p37r37s37t37v38038138238338438538638a38b38d38g38h38i38j38k38m38n38o38r38s38t38u39039139439539639739b39c39d39e39g39h39j39k39n39o39p39q39s39u39v3a03a23a33a63a73a93aa3ab3ae3af3ag3ai3aj3ak3am3an3ao3ar3as3at3au3av3b03b23b43b53b63b73b93ba3bc3bg3bh3bi3bj3bk3bl3bn3bq3br3bs3bt3bu3bv3c03c13c23c33c53c63c73c83c93cb3cc3cd3ce3cf3cg3ch3ci3cj3ck3cl3co3cq3cr3cs3cu3cv3d03d13d23d33d43d53d63d73d83d93db3dd3de3df3dg3dh3dk3dl3dm3dn3do3dp3dq3du3e03e23e33e43e63e73e83ea3eb3ec3eh3ei3ej3ek3el3em3en3eo3ep3eq3er3es3et3eu3ev3f03f13f23f33f53f73f83f93fa3fc3fd3fe3ff3fg3fh3fi3fj3fl3fm3fn3fo3fp3fq3fr3fu3g13g23g33g43g53g63g73g83g93ga3gb3gc3gd3gf3gg3gk3gl3gm3gn3go3gr3gs3gt3gu3gv3h13h33h53h63h73h83hc3hd3he3hi3hj3hk3hl3hm3hn3ho3hp3hr3hs3ht3hu3i13i23i33i43i53i63i73i83ic3id3ie3if3ih3ii3ij3ik3im3in3io3ip3iq3ir3is3it3iu3iv3j03j13j23j33j43j53j63j83j93ja3jb3jd3je3jf3jg3jh3jk3jl3jm3jn3jo3jp3jq3jr3js3jt3ju3jv3k03k23k33k53k63k73k83kd3kf3kg3ki3kj3kk3kl3km3kn3ko3kp3kq3ks3kt3ku3l03l13l23l43l53l63l73l83la3lb3lc3ld3le3lf3lg3lh3li3lj3lk3ll3lm3ln3lo3lp3lq3lr3lt3lu3lv3m03m13m43m53m63m73m83m93ma3mb3mc3md3me3mf3mh3mi3mk3ml3mm3mn3mp3mq3mr3ms3mt3mv3n03n23n33n43n53n63n73n93na3nb3nd3nf3ng3nh3ni3nj3nk3nl3nm3no3nq3nr3ns3nv3o13o23o33o43o53o73o83o93oa3ob3oc3od3oe3of3og3oi3oj3ok3ol3om3on3oo3op3or3os3ot3ou3ov3p03p13p23p33p43p63p73p93pa3pb3pc3pd3pe3pg3ph3pi3pj3pk3pm3pn3po3pp3pq3pr3pt3pu3pv3q13q23q33q53q63q73q83q93qb3qd3qe3qg3qh3qj3qk3ql3qm3qn3qo3qq3qr3qs3qt3qu3qv3r23r43r63r73r83r93ra3rb3rc3rd3rf3rg3rk3rl3rm3rn3ro3rp3rq3rr3rs3rt3ru3rv3s03s13s23s33s43s63s73s83s93sa3sc3sd3se3sf3sg3sj3sk3sm3sp3sq3sr3ss3st3su3sv3t13t33t43t63t73t83t93ta3tb3tc3td3te3tf3tg3th3tj3tk3tl3tm3tn3to3tp3tq3tr3ts3tt3tu3tv3u13u23u43u53u63u73u83u93ub3uc3ud3uf3ug3uh3ui3uk3ul3um3un3uo3up3uq3us3ut3uu3uv3v03v13v23v33v43v53v63v73v83va3ve3vf3vh3vi3vj3vk3vl3vm3vn3vo3vp3vq3vr3vs3vt3vu40040240440540640740840a40b40d40f40h40i40j40k40m40o40q40s40t40u40v41041241341441541641841b41d41e41f41g41h41i41j41k41l41o41p41q41r41s41u41v42042142342442542742842942a42b42c42d42h42i42j42k42m42o42p42r42s42t42v43043143343443743843943a43b43c43d43e43f43g43h43i43k43l43m43n43o43p43r43t43v44044244344444544644844944a44b44c44d44e44f44g44h44i44j44k44l44m44o44p44q44r44s44t44v45045245345545745845945a45d45e45f45g45h45i45o45p45q45r45s45t45v46046146246346446746946b46d46g46h46i46j46l46m46n46p46q46t47047147347547647747847947a47c47d47e47f47g47h47i47j47k47l47m47n47p47q47s47t47u47v48148248448648848b48c48d48e48f48g48h48i48j48k48l48m48n48o48p48r48s48t48u49249349449549649749849949a49b49c49d49e49g49h49i49j49l49m49n49p49q49s49t49u49v4a04a14a34a44a54a64a74a84a94aa4ac4ad4ae4af4ag4ah4ai4aj4ak4al4am4an4ap4ar4at4av4b04b24b34b64b84b94ba4bb4be4bf4bg4bh4bi4bj4bl4bm4bn4bo4bp4bq4br4bs4bv4c04c14c24c34c44c54c64c74c84c94ca4cb4cc4cd4ce4cg4ch4ci4ck4cm4co4cp4cq4cr4ct4cu4d04d24d34d54d64d74d84da4db4dc4de4df4dg4di4dj4dk4dn4do4dp4dq4dr4ds4dt4du4dv4e04e24e34e44e54e64e74e94ea4eb4ed4ee4ef4eg4ei4ej4ek4el4em4ep4eq4er4et4eu4f04f24f54f74f84fb4fc4fd4fe4ff4fg4fh4fi4fk4fl4fn4fo4fq4ft4fu4fv4g04g24g34g54g74g94ga4gc4gd4ge4gf4gg4gh4gi4gj4gl4gm4go4gp4gr4gu4gv4h04h44h54h64h74h84h94hb4hc4he4hf4hg4hj4hk4hl4hm4ho4hp4hq4hs4ht4hv4i14i24i34i54i64i74i84i94ia4ib4ic4id4if4ih4ii4ij4ik4il4im4in4iq4is4j04j14j24j34j44j54j74j94ja4jb4jc4je4jf4ji4jj4jk4jm4jp4jq4jr4ju4jv4k04k14k24k64k74k94ka4kb4kc4kd4ke4kf4kg4kh4ki4kl4km4kn4ko4kp4kr4ks4kv4l14l24l44l54l94la4lb4lc4le4lf4lg4lh4li4lj4lk4ll4lm4ln4lp4lq4lr4lu4lv4m04m14m34m44m54m64m74m84m94ma4mb4mc4md4me4mf4mg4mh4mi4mj4mk4ml4mp4mt4mu4n14n24n34n44n54n64n74n84n94na4nb4nc4nf4ng4ni4nj4nk4nl4nm4nn4no4nq4nr4ns4nu4nv4o04o14o24o44o54o64o84o94oa4ob4oc4od4oe4of4og4oi4oj4ok4ol4on4oo4op4or4os4ot4ou4p04p14p34p44p54p64p74p84p94pa4pb4pc4pe4pf4pg4pi4pj4pl4pn4pp4pq4pr4ps4pt4pv4q04q14q24q34q44q54q64q84qa4qb4qc4qd4qg4qh4qi4qj4ql4qn4qo4qp4qq4qr4qs4qt4qu4qv4r04r14r24r34r54r74r84ra4rb4rc4rd4re4rf4rg4rh4ri4rj4rk4rl4rm4rn4ro4rq4rr4rs4rt4ru4rv4s04s14s24s34s54s64s74s94sa4sb4sc4sd4se4sf4sh4si4sj4sk4sl4sn4so4sp4ss4st4su4sv4t04t14t34t44t54t64t84t94tb4td4th4ti4tj4tk4tl4tm4tn4to4tq4tr4ts4tt4tu4tv4u24u34u54u74u84u94ua4ub4uc4ue4uh4ui4um4uo4up4uq4ur4us4ut4uu4uv4v04v14v44v54v74v84v94va4vc4vd4ve4vg4vh4vi4vj4vk4vl4vm4vn4vo4vp4vq4vr4vs4vt4vu4vv50050250350550650750a50b50c50d50e50f50g50h50i50j50k50l50o50p50q50r50s50t50v51051151251351451551651951a51d51f51g51i51j51k51l51n51o51u51v52052252352452552652752852952a52c52g52h52i52j52l52m52n52o52p52q52t52u53053153253353453553753853953a53d53e53f53g53h53m53n53o53p53q53r53s53u53v54054154254354654854954a54b54c54d54e54f54h54i54j54k54l54m54n54o54q54r54s54t54u54v55055155355455755855a55d55e55f55h55j55l55o55p55r55s55t55u55v56056156356456556656756856a56b56c56d56e56f56g56h56i56k56l56n56o56p56q56s56u56v57257357457757857a57b57c57d57e57f57g57h57j57k57l57n57o57p57q57r57s57t57u57v58058158258358458558658758858958a58b58e58f58g58h58i58j58l58m58n58o58p58r58s58t58v59059159259359659759859959b59c59e59f59g59i59j59k59l59m59o59p59q59t5a05a15a25a35a55a65a85a95aa5ac5ad5ae5af5ag5ah5ai5ak5al5am5an5ao5ap5ar5as5at5av5b15b25b35b55b65b75b85b95ba5bb5bc5be5bf5bg5bh5bj5bk5bl5bm5bn5bo5bp5bq5br5bs5bt5bu5bv5c05c25c35c45c55c65c75c85c95ca5cb5cc5cd5ce5cf5cg5ci5cj5ck5cm5cn5co5cp5cr5cs5ct5cu5cv5d05d15d25d45d55d65d75d85d95da5db5dc5dd5de5df5dg5dh5dk5dl5dm5dn5do5dp5dq5dr5ds5dt5du5dv5e05e15e25e45e55e65e85ea5eb5ec5ed5ee5eh5ei5ej5el5em5en5eo5eq5er5es5et5eu5ev5f05f15f35f45f55f65f75f85f95fa5fb5fc5fe5fg5fi5fj5fk5fl5fm5fn5fp5fq5fr5fs5ft5fv5g05g25g45g55g65g75g85ga5gc5ge5gg5gj5gl5gm5gn5go5gp5gs5gt5gu5h05h15h25h35h45h55h65h75h85ha5hb5hc5hd5hf5hg5hh5hi5hl5hm5hn5ho5hp5hq5hs5i05i15i25i55i75i85i95ia5ib5ic5id5ie5if5ig5ih5ij5ik5il5im5io5ip5iq5ir5is5it5iu5iv5j05j15j25j35j45j55j65j75j85j95ja5jb5jc5jf5jg5jh5ji5jj5jk5jl5jm5jn5jq5js5ju5k05k15k25k45k55k65k75ka5kb5kc5kd5ke5kf5kg5kh5kj5kk5kl5kn5ko5kp5kq5ks5kt5kv5l15l35l55l65l75l95la5le5lg5lh5li5lj5ll5lm5ln5lo5lp5lq5ls5lu5m25m45m55m65m75m85m95mb5mc5me5mf5mg5mh5mi5mj5mk5ml5mm5mn5mo5mp5mr5ms5n05n15n25n35n55n65n75n85n95na5nb5nc5ne5nf5ng5ni5nk5nl5nm5no5np5nq5nr5ns5nu5nv5o15o25o35o45o55o65o75oa5ob5oc5od5oe5og5oi5oj5ok5om5on5oo5op5oq5or5os5ot5ou5p05p15p25p35p45p55p65p75p95pa5pb5pc5pd5pe5pf5ph5pj5pl5pm5pn5po5pr5ps5pt5pu5pv5q05q35q45q55q65q85q95qa5qb5qc5qd5qe5qf5qg5qi5qk5qm5qn5qo5qp5qq5qr5qs5qt5qu5qv5r15r25r35r45r55r65r75r85r95ra5rb5rc5rd5re5rf5rh5ri5rj5rk5rl5rm5rn5ro5rp5rq5rr5rs5rv5s05s25s35s45s55s65s75s95sa5sc5se5sf5sg5si5sk5sl5sn5so5sp5sq5sr5ss5st5su5sv5t05t15t25t65t85ta5td5te5tf5tg5th5ti5tk5tm5tn5tq5tr5ts5tu5tv5u05u15u25u35u45u65u75u85ua5ud5uf5ug5uh5ui5um5un5up5ur5us5ut5uu5uv5v15v25v35v45v55v65v75v85v95va5vb5vc5vd5ve5vg5vh5vi5vj5vl5vm5vn5vo5vp5vr5vs5vt5vu5vv60060160260360460560660760860960a60b60c60d60e60f60g60h60j60k60l60m60n60o60p60q60r60t61261361561761861961a61b61c61d61e61f61g61h61i61j61k61l61m61n61o61p61q61r61s61t61u61v62062162262362462562762962a62c62e62f62g62h62i62j62k62l62m62o62p62q62t62u63063163263363763863963a63b63c63d63e63f63h63i63j63k63l63m63n63o63q63r63s63u63v64064164264364464564664864964a64b64c64d64e64f64g64h64i64j64k64l64m64n64o64p64q64r64s64u64v65065165265365465565765865b65c65d65e65f65g65j65k65l65n65o65q65r65t65u65v66066166266366466666866a66b66c66d66e66g66h66i66m66n66p66q66s66t66v67067267367467667867967a67b67d67e67f67g67h67i67j67k67l67n67o67p67q67r67t67u68268368468668768868a68b68c68f68g68h68i68j68k68l68o68q68s68t68u68v69069169269369469569669769969a69b69c69d69e69f69h69i69k69l69m69n69o69p69q69r69t69u69v6a16a36a56a76aa6ab6ac6ad6ae6af6ag6ah6ai6aj6ak6al6am6an6ao6ap6ar6as6at6au6av6b06b16b26b36b46b66b86b96ba6bb6bc6bd6be6bf6bg6bh6bi6bj6bk6bl6bm6bn6bo6bp6bq6br6bs6bt6bu6c06c16c46c66c76ca6cc6cd6ce6cf6ch6ci6cj6cl6cn6cp6cr6cs6ct6cu6cv6d06d16d46d56d66d86da6db6dc6de6df6dg6dh6dj6dk6dm6dn6dr6ds6dt6du6dv6e06e16e26e46e56e66e86e96ea6eb6ec6ed6ee6ef6eg6eh6ei6ej6ek6el6em6en6eo6eq6er6es6et6eu6ev6f06f16f26f36f46f56f66f76f86fa6fb6fc6ff6fi6fj6fl6fm6fn6fo6fp6fq6fr6ft6g06g16g26g36g46g56g66g76g86g96ga6gd6ge6gf6gg6gh6gi6gk6gm6go6gp6gq6gr6gs6gt6gu6gv6h06h26h36h46h56h66h86h96ha6hb6he6hf6hg6hh6hj6hm6ho6hp6hs6ht6hu6hv6i06i16i26i46i66i76i86i96id6ie6if6ig6ih6ik6il6im6in6iq6ir6it6iv6j06j16j26j46j56j66j86j96ja6jb6jc6jd6je6jf6jg6jh6ji6jj6jk6jl6jm6jn6jo6jp6jr6js6ju6k06k16k26k36k46k56k66k76k86k96ka6kb6kc6kd6ke6kf6kg6kh6ki6kj6kk6kl6km6kn6ko6kp6kr6ks6kt6ku6kv6l06l16l26l46l56l66l76l96la6lb6ld6le6lf6lh6li6lk6ll6lm6ln6lo6lq6lr6ls6lu6lv6m06m16m26m36m46m56m66m76m86ma6mb6mc6md6me6mg6mh6mi6mj6ml6mm6mn6mo6mp6mq6mr6mt6mu6mv6n16n26n66n76n86n96na6nb6ne6nf6nk6nm6nn6no6np6nq6nr6nt6nu6o06o16o26o46o56o76o86o96oa6ob6oc6od6oe6of6oh6oj6ok6ol6om6on6oo6op6or6os6ou6ov6p06p16p36p56p76p96pa6pb6pd6pf6pg6ph6pi6pj6pk6pl6pm6po6pp6pq6ps6pt6pu6pv6q06q16q26q36q46q56q66q96qa6qb6qc6qe6qf6qg6qh6qi6qj6ql6qn6qp6qq6qs6qu6qv6r26r36r56r66r76r96ra6rb6rc6rd6re6ri6rj6rk6rl6rm6rp6rq6rs6rt6ru6s06s26s36s56s66s86sc6sf6sg6sj6sl6sm6sn6ss6st6su6sv6t06t16t26t46t56t66t96tb6td6te6tf6tg6th6ti6tj6tm6tn6to6tp6tq6ts6tt6tu6u06u26u36u46u56u66ua6ud6ue6uf6ug6uh6ui6um6un6uo6up6uq6ur6us6uu6v46v76va6vb6vc6ve6vf6vg6vh6vi6vk6vl6vn6vp6vr6vt6vu70070570670770870970c70e70f70g70h70i70j70k70l70o70q70r70s70u70v71071271371471571671771a71b71c71d71e71g71i71j71k71l71m71n71o71p71r71s71t71u72172372472672872a72b72c72d72e72f72i72l72m72n72o72p72q72r72u72v73073173273373473573673773873973a73b73c73d73g73h73i73k73l73m73n73o73p73t73u74274374474574674774874b74c74f74g74h74i74j74k74n74o74p74r74s74t74u74v75075275375575675775875975a75c75d75e75f75g75i75j75k75m75p75q75r75s75t75v76176276376476576676776976b76c76d76f76g76h76i76j76k76m76n76o76p76q76r76t76u76v77077177277377477677777877977a77b77c77d77e77f77g77h77i77j77k77l77m77o77p77q77s77t77u77v78078178278378478578778878978a78c78d78e78f78g78h78i78j78k78l78m78n78o78p78q78r78s78t78u78v79079279379479579679979a79b79c79e79g79h79i79j79l79m79n79o79p79s79t79u7a07a17a27a37a47a57a67a77a97aa7ac7ad7ae7af7ah7ai7aj7ak7al7an7ao7aq7as7at7au7av7b17b27b37b57b77b87b97bb7bc7bd7be7bf7bg7bh7bi7bj7bk7bl7bm7bo7bq7br7bt7c07c17c27c37c47c67c77c87c97ca7cc7cd7ce7cg7ch7ci7ck7cl7cm7cn7cp7cq7cs7ct7cv7d07d17d47d57d67d77d87d97da7de7df7dh7di7dk7dm7dn7do7dp7dq7ds7du7dv7e27e47e57e67e77e97eb7ec7ed7ee7ef7eg7eh7ei7ej7en7ep7eq7er7es7et7eu7ev7f27f47f67f77f97fa7fb7fd7fe7fh7fi7fl7fm7fn7fo7fp7fq7fr7fs7ft7fu7fv7g17g27g37g47g67g77g87g97ga7gb7gd7ge7gf7gj7gk7gl7gm7gn7go7gq7gr7gs7gu7h07h17h27h37h47h57h77h87hb7hc7hd7he7hf7hh7hi7hj7hk7hl7hm7hn7ho7hq7hr7hv7i07i17i27i57i87i97ia7ib7ic7id7ig7ij7ik7il7im7in7io7ip7iq7ir7is7it7iu7iv7j17j27j37j47j57j67j77j87j97ja7jb7jd7je7jf7jg7jh7ji7jj7jk7jl7jm7jn7jo7jp7jq7jr7js7jt7ju7jv7k07k17k27k37k47k67k77k87ka7kb7kc7kd7ke7kf7kg7kh7ki7kj7kl7kn7kp7kq7kr7ks7ku7kv7l07l17l27l37l47l57l67l77l87la7lb7lc7lf7lg7lh7li7lj7lk7ll7lm7lp7lr7ls7lu7m07m17m37m47m57m67m87m97ma7mb7mc7md7mf7mg7mh7mi7mj7mk7ml7mm7mn7mo7mp7mq7mr7ms7mt7mv7n27n37n67n87n97na7nc7nd7ne7nf7ng7nh7ni7nj7nk7nm7no7np7nq7nr7nt7nv7o07o17o27o37o47o57o67o77o87o97od7of7og7oh7oj7ok7ol7om7on7op7oq7os7ov7p17p27p37p57p67p77p87p97pa7pb7pd7pe7pg7ph7pi7pj7pk7pl7pm7pn7po7pq7ps7pt7pv7q27q37q57q77q87qb7qc7qe7qg7qh7qi7qj7qn7qo7qp7qq7qr7qs7qt7qu7qv7r07r27r37r57r87ra7rd7re7rg7rh7rj7rk7rl7rm7ro7rp7rq7rr7rs7rt7ru7rv7s17s27s77s87s97sc7sf7si7sk7sm7so7sp7sq7ss7st7sv7t07t27t67t77t97tb7tc7td7te7th7ti7tj7tk7tl7tm7tn7to7tp7tq7tr7ts7tt7tu7u07u17u27u37u47u57u77u87u97ua7ub7uc7ue7uf7ug7uh7uj7uk7um7un7uo7up7uq7ur7us7ut7uu7v27v37v47v57v67v87v97va7vb7vc7vd7ve7vf7vg7vh7vi7vj7vl7vm7vn7vo7vp7vr7vs7vt7vu7vv80080180480580680780980a80b80d80e80f80g80i80l80m80n80o80p80r80s80t81081181681881981a81c81d81e81g81i81j81k81n81o81p81r81t81u81v82082282382482582682782882982a82f82h82i82j82k82l82m82n82o82p82q82r82s82u82v83083183283383483583683883a83c83d83e83g83h83i83j83k83l83m83n83o83q83r83s83t83u83v84084184284484684784884984a84c84d84f84g84h84j84l84m84o84q84r84s84u84v85085185285485585785885985a85b85c85d85f85g85i85j85k85l85m85n85o85p85t85u86086486586686786886986a86c86g86h86i86j86k86l86n86o86p86q86r86s86u86v87087187287487587687787887987a87c87d87e87f87g87h87i87j87k87l87m87n87p87q87r87s87t87v88088188388488588688788988c88d88e88f88g88h88i88j88k88l88m88n88o88p88r88s88t88u88v89089289389489589689789989a89c89d89e89g89h89i89j89l89n89o89q89r89u89v8a08a78a88aa8ab8ae8af8ah8ai8aj8ak8al8am8an8ao8ap8aq8ar8as8at8av8b08b18b28b48b58b78b98ba8bb8bc8be8bf8bh8bi8bj8bk8bl8bm8bn8bp8bq8br8bt8c08c18c28c48c58c68c98cc8cd8ce8cf8cg8ch8ci8cj8cl8cm8cn8co8cp8cq8cr8cs8ct8cu8cv8d08d18d28d38d48d58d68d78da8dd8de8dg8dh8di8dj8dk8dl8dm8dn8do8dp8dq8dr8ds8dt8dv8e08e18e28e38e48e58e68e78e88e98eb8ec8ed8ee8ef8eg8eh8ej8ek8el8em8en8eq8er8es8et8ev8f18f48f58f68f78f98fa8fb8fc8fe8ff8fg8fh8fi8fk8fl8fn8fo8fp8fq8fr8fs8ft8fu8fv8g08g18g28g38g58g78g88ga8gb8gc8gd8ge8gg8gh8gj8gk8gl8gm8gn8go8gp8gq8gs8gu8gv8h08h28h38h58h68h78h88h98hb8hc8hd8he8hf8hg8hh8hi8hk8hl8hm8hn8hp8ht8hv8i38i68i78i98ia8ib8ic8id8ie8if8ih8ii8ij8im8in8ip8iq8is8it8iu8iv8j08j18j28j38j48j58j88j98jc8jd8jf8jh8jj8jk8jl8jm8jn8jo8jp8jq8jr8js8jt8ju8jv8k08k68k78k88k98kb8kc8kf8kg8kh8ki8kj8kk8kl8km8kn8ko8kp8kq8ks8kt8ku8kv8l08l18l28l38l48l58l78l88l98la8lb8lc8ld8le8lf8lg8lh8lk8ll8lm8ln8lo8lr8ls8lt8lu8lv8m08m38m58m68m78m88m98ma8mb8mc8md8me8mf8mg8mi8mk8ml8mn8mp8mq8mr8ms8mt8mu8mv8n08n18n28n48n78n88n98na8nb8nd8ne8nf8nh8ni8nj8nk8nl8nm8nn8np8nq8nr8ns8nv8o08o28o38o48o58o88o98oa8od8oe8of8og8oh8oi8ok8ol8om8oo8op8oq8ou8ov8p08p18p28p38p48p58p6anqanransanuanvao0ao1ao2ao3ao5ao6ao7ao8ao9aoaaobaocaoeaofaogaohaoiaojaomaooaoqaoraosaotaouaovap0ap2ap6ap7ap8ap9apaapfapgaphapiapjaplapmapnapoappapqaptapuapvaq1aq2aq3aq6aq9aqaaqbaqcaqdaqeaqfaqgaqhaqiaqlaqmaqoaqpaqsaquaqvar0ar1ar2ar4ar5ar7ar8ar9arbarcardareargarhariarjarkarlarmarnarrarsaruas0as2as3as4as6as7as8as9asaasbasdaseasgashasiasjaskaslasmasoassastasuasvat0at1at4at5at6at7at8at9ataatcatdateatfatgathatiatjatkatlatmatnatoatpatqatrattatvau0au2au3au4au5au6au7auaaubaucaudaueaufaugauhauiaujaukaulaunauoaupaurausautauuauvav1av3av5av6av7av8av9avbavcavdaveavfavgaviavjavkavlavmavoavpavqavravuavvb01b03b05b06b07b08b09b0ab0cb0db0eb0fb0gb0hb0ib0kb0lb0mb0nb0qb0rb0sb0tb0ub0vb10b11b12b13b15b16b17b18b19b1ab1bb1cb1db1eb1gb1ib1jb1kb1lb1nb1pb1qb1rb1sb1tb1ub1vb20b22b23b24b25b26b27b28b29b2bb2cb2eb2hb2ib2jb2kb2lb2pb2rb2sb2tb2vb31b33b34b36b37b39b3cb3hb3ib3jb3kb3mb3nb3ob3qb3sb3tb40b41b44b45b46b47b48b49b4ab4bb4cb4eb4fb4gb4hb4ib4jb4lb4mb4nb4ob4qb4rb4sb4tb4vb50b51b52b53b54b55b56b57b58b59b5ab5bb5db5eb5fb5gb5kb5lb5nb5ob5pb5qb5rb5sb5tb5ub5vb62b63b64b65b66b67b68b6ab6cb6db6eb6fb6gb6hb6ib6jb6lb6mb6ob6qb6rb6sb6tb6vb70b71b72b74b76b78b79b7ab7bb7cb7db7eb7fb7hb7ib7jb7kb7lb7nb7ob7pb7qb7rb7sb7tb7vb81b82b84b85b86b87b88b89b8bb8cb8db8fb8hb8ib8jb8kb8ob8pb8qb8rb8vb90b92b93b94b95b96b99b9ab9bb9cb9db9eb9fb9gb9hb9ib9jb9kb9lb9mb9nb9ob9pb9qb9rb9sb9tb9ub9vba0ba2ba4ba5ba6ba7ba9baababbacbadbaebafbahbajbakbalbanbapbarbasbatbaubb0bb1bb4bb7bb8bb9bbabbbbbcbbdbbfbbhbbibbmbbnbbobbpbbqbbrbbsbbvbc3bc5bc6bc7bc8bcabccbcgbchbcibcjbckbclbcmbcnbcobcpbcrbcsbctbcubd0bd1bd2bd5bd6bd7bd9bdabdbbddbdgbdibdjbdkbdmbdnbdobdqbdrbdtbdubdvbe0be1be3be4be7be8beabebbecbedbeebefbegbehbeibejbelbembenbeobepbeqberbesbetbeubevbf0bf1bf2bf3bf4bf5bf6bf7bf8bf9bfebfibfkbflbfpbfrbfsbftbfubfvbg0bg1bg2bg3bg4bg5bg7bg8bg9bgbbgcbggbgjbglbgnbgpbgqbgsbgtbgubgvbh0bh1bh2bh3bh4bh6bh7bh8bh9bhbbhcbhfbhibhjbhkbhlbhmbhnbhpbhqbhrbhsbhtbhubi0bi1bi2bi3bi4bi5bi6bi7bi8biabibbiebigbihbiibijbikbipbiqbisbitbj0bj1bj2bj4bj6bj7bj8bj9bjabjbbjdbjebjfbjgbjhbjibjkbjmbjpbjqbjrbjsbk0bk1bk2bk3bk4bk5bk8bk9bkbbkcbkdbkfbkgbkibkjbkkbkmbkobkpbkrbktbkubl0bl1bl2bl3bl6bl7bl8bl9blablbblcbldbleblfblgblhblkbllblmblnblpblrblsbltblublvbm0bm1bm2bm3bm4bm5bm6bm7bm9bmabmbbmcbmdbmebmfbmgbmhbmibmjbmkbmlbmmbmnbmobmqbmrbmubmvbn2bn3bn4bn7bn9bnbbndbnebnfbngbnhbnibnjbnlbnmbnnbnpbnqbnrbnsbnubnvbo0bo9boabobbocbodbogboibokbolbonbopboqborbosboubovbp1bp3bp5bp6bp7bp8bp9bpdbpebpfbpgbphbpibpjbplbpmbpobppbpqbprbpsbptbpubpvbq0bq2bq4bq5bq6bq7bq8bq9bqabqcbqdbqebqfbqhbqjbqkbqmbqnbqobqpbqqbqrbqsbqtbqubqvbr2br3br4br5br8brabrbbrcbrdbrfbrgbrhbrjbrmbrobrpbrsbrubs1bs2bs3bs5bs6bs7bs8bs9bsabsbbscbsdbsgbshbsibsjbskbsmbsnbsobspbsrbssbstbsubt2bt4bt5bt7bt8bt9btabtbbtcbtfbtgbthbtibtjbtkbtlbtmbutbuvbv0bv1bv2bv3bv4bv5bv6bv7bv8bv9bvabvbbvcbvdbvebvfbvgbvhbvibvjbvkbvlbvmbvnbvobvpbvqbvrbvsbvtbvubvvc00c01c02c03c04c06c07c09c0ac0cc0dc0ec0fc0kc0lc0nc0oc0pc0qc0rc0sc0tc0uc0vc10c11c12c13c14c15c16c17c18c19c1ac1bc1cc1dc1ec1fc1gc1hc1ic1jc1kc1lc1mc1nc1oc1pc1qc1rc1sc1tc1uc1vc20c21c22c23c24c25c26c27c28c29c2ac2bc2cc2dc2ec2fc2gc2hc2ic2jc2kc2lc2mc2nc2oc2pc2qc2rc2sc2tc2uc2vc30c31c32c33c34c35c36c37c38c39c3ac3bc3cc3dc3ec3fc3gc3hc3ic3jc3kc3lc3mc3nc3oc3pc3qc3rc3sc3tc3uc3vc40c41c42c43c44c45c46c47c48c49c4ac4bc4c\",creationDate:\"0234002b0nun02ap002b002b02u8002b002b002b002b002b002b002b002b0lad002b002b002b002b002b002b002b0eq9002b002b002b02li02fs03ii002b002b01or002b00lk00nc00ks002b002b002b002b03ii0nr0002b002b002b0234002b023403ii002b002b002b002b002b002b0ir8002b002b0234002b002b002b00lk002b023403ii002b02sc00qa002b002b002b0234002b0h9j002b002b002b012m0o110lcu002b002b002b002b0bhp002b002b002b002b012k0lad014d002b01bu002b027k002b03ii002b122r002b002b002b00sr00mn00pt046400pi00sr02bs00kh00md0o38002b00nj0c4t002b0o500234002b00mu0lad002b002b0234002b002b002b002b002b02tf002b002b002b0472002b02fs0lad0lad002b00nc002b00nu002b04f3002b002b002b00o8002b002b0nrc002b002b002b00o800mn002b0hlm002b002b002b002b023409f2002b03ii002b08ic002b08ic002b0234002b002b002b002b002b002b00o800mn00l600mn02c3002b002b002b02340234002b002b002b077o002b002b02r9002b0nm6014d002b002b002b0234002b043e002b002b002b002b05gr002b002b002b0lad0234002b03ii002b002b002b002b0lad002b002b0ocg002b002b0234002b002b0lad002b002b002b002b0234002b002b002b0865046n002b00o800of02b7002b002b002b0lad082403ii046k071k002b002b002b0o1d002b00sr00mn002b03ii017l014d002b002b002b002b002b0lad027r002b06g40mf4002b002b002b0qrj002b00l600qn0lcu00mn002b002b0b81002b02340o0q0p0g002b002b0234002b002b002b002b0123002b0arg002b0lad039n0234031k03450234002b002b002b002b002b002b00tn002b002b002b002b002b002b002b002b002b002b02r902ap03ii002b002b002b002b0nss05jg002b002b002b002b002b03ii002b002b002b002b002b002b002b002b002b02h802lu00nj00lk02340529002b042i02340234002b03ii0234023404av002b002b0lag002b002b02340234002b002b024v00l6002b0234002b0h4h01bu02li0234002b002b002b002b06us002b002b05kq002b002b07lk06tb002b002b002b002b02ut002b0234002b002b002b077o002b002b023400k3002b06060lad002b002b002b002b002b002b0234002b002b07lk0lad002b002b002b002b002b00o800sr00kh02c3002b002b002b002b0kn0002b0lad002b02ap0234002b002b002b002b002b00pi00nj017l02c3002b002b0dbv0fso002b0361002b00lk00pt02bs00j700md00md00lo00kh02ap02340bqo03ii002b002b002b002b002b002b002b002b00md00mu00mu002b031k0np6002b002b002b002b002b002b002b002b002b02r9002b0eel0234002b002b002b04ec1i8n002b01bu002b002b045k002b002b002b002b002b0lad0234002b0234002b002b002b002b0234002b002b002b002b002b002b002b002b002b00nc00js002b002b002b002b0eer002b002b002b002b002b002b002b002b002b002b002b002b002b002b0472002b002b0lad002b002b00l6002b023403ii02en067u03ii011l03ii03ii002b00md002b08l8002b0234002b0ocg0470002b03ii002b002b002b002b002b0lad075l002b002b002b002b002b02bs00nj00mn00l30472002b002b002b002b11u8073q002b00kv00qa002b002b0234002b00nj00nu00nc00mn014d0456002b002b00of00o800ks00pt00pt00md002b002b00mn00md0c70002b002b002b002b08t4002b01520b09002b002b046h002b002b0234002b002b002b002b02sj00lr002b002b0234002b00o800of00tn002b002b02t0002b002b0lad002b0gil002b002b08li002b0o5n002b002b0234002b002b002b002b002b002b002b002b002b002b002b0g4u002b002b0234002b03ii002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b04nr002b002b002b0lad002b002b002b02h8002b002b002b002b002b0lad002b00nj00lr002b0nss002b002b002b002b002b02u4002b0401002b002b07rg002b002b03ii002b0lad002b02c303ii002b0hu0002b024f002b002b002b0ael0234002b0lad002b002b002b002b002b002b002b055509dk002b02340234002b002b0kti002b002b002b002b00qa05mq00nj00qn002b002b002b002b002b0pq80lad0dbv002b002b002b02h800pi0bpl002b01pf002b002b002b002b00mu002b002b0o7300o800pi02vi002b002b00of002b002b002b002b026408a3002b08bp02ut002b002b0472002b002b002b002b002b023401pf002b002b002b002b0234023400o80234002b05on05on002b0v40002b002b002b002b128712nn002b0nve002b002b002b0grv002b002b002b002b002b02340234002b02li002b002b03ii002b0lad002b002b002b002b002b002b002b02h802n3002b0234002b0o3p002b002b002b0234002b0lad002b002b0o5o0lad03fo002b06ub0lad0o5e0lad023408dr0lad002b002b002b002b002b002b0uu9002b00sr0o20002b00nu002b002b002b02sl002b0nss002b002b002b002b0234002b002b002b02s9002b0lad002b002b0o52002b024s0234002b03i4002b002b002b002b0lad002b002b002b002b002b002b002b002b08ic002b002b002b002b002b03dc002b002b002b0234132902s713c507vf00sr002b002b0234002b002b002b002b002b002b002b002b002b00mn002b002b002b002b002b002b002b002b002b002b002b002b0vue002b002b002b0a9b002b0234002b002b031k002b029t023400mu002b036o09f20c4m002b002b002b002b002b002b0o3q01p2002b0lad06pa002b03vi002b002b002b002b002b00l6017l0lad002b002b0lad002b002b002b02tf06ub002b002b0234002b002b002b002b002b002b002b002b002b002b0c4803ii0lad08ej0inh002b002b002b002b002b0lad002b00ks0lad023402340lad002b002b0b0905qt00pi002b002b002b002b002b0lad0nk4002b002b002b002b002b002b002b01uo023402340861002b002b002b002b002b0234002b002b00nu00mn00q0002b002b002b002b002b002b002b002b002b002b002b002b0cpl002b002b002b00of00sr048q002b002b002b002b002b002b0234002b02c3002b002b002b002b02b700lk045k002b00md00kh002b002b002b00q0002b017l017l00kh0o8p02c3002b002b0lad002b017l002b002b002b002b02340lad002b002b002b0o7d002b02bs002b1055002b002b0234002b089v002b002b002b00nu00tn002b02b7002b002b03ks0bvb0234002b002b002b002b00qn00of02340234002b024f002b002b0lad002b002b0234049q0lad02340lad002b002b0234002b002b00pi00mu0675002b002b002b002b002b00q003ii0234002b002b03ii002b002b002b002b02vi002b02li08te002b002b002b0a3600nc01bu002b0ffl002b002b002b00nj014d00q0048q002b0can03ii002b002b002b002b002b023405mg002b002b13ie002b08cc03ii02vi002b0o7j002b002b002b002b002b02ap03ii002b0n0d002b0g4u002b002b002b002b002b002b002b02en002b02fs0fh7002b00q0002b02mu045603ii07lr002b03ii002b002b002b00l6002b0lad00kh00nj0nub00ko002b002b002b002b02bs002b002b0lcu002b002b00sr017l002b00md002b0lad12jh04pa002b002b02t00nse002b002b002b002b03ii00of00js00mn00pi002b002b02340rf2002b0234002b0152002b002b002b002b002b002b002b002b002b002b002b002b0ffl002b002b002b002b002b002b002b002b002b0lad002b0o0q002b0234002b03i4002b002b002b02bs002b0h9j0lad0nu9002b002b002b02tf002b002b002b002b002b002b002b002b002b02ig002b00nu00qa047208br00nu00sr049c002b002b002b02340c4m002b002b002b002b002b0234002b002b002b0234002b002b002b002b0lad002b002b002b03vf002b002b002b002b002b0ceo00mn02c7002b002b002b0b4h02tf02rb02bs0do502h8002b0q3700nj00qa002b023403dc00mn002b002b002b002b002b002b0bi0002b02ut002b00nj02c802li002b00nc00l600nu00pt02li002b02li023409mc00pt002b00l600l6002b002b002b002b002b002b002b00qa00qa002b03ii002b002b002b08ic002b002b067102c3002b04uc05on0ugn002b002b002b002b002b0n0d002b03oo0bkp00q000nu00mu002b01kl002b0234002b002b002b0cl700sr07mb0rc8002b00pi00nc002b00k3002b0eke00pi02tf002b002b002b02340nm600nu00nc00of00nc02tf002b002b002b0c4803dc002b002b002b002b002b00lr00tn0234002b00sr0234002b0ceo002b00o80152002b002b01j2014d002b06e502340234002b0234002b0o9g002b00o8002b002b002b013700nj002b0234002b002b029t02340no1002b002b002b002b002b08bp002b002b0q3700lk00qn002b00sr014d002b05dl002b0lad002b002b00nu00ks00pt00l602en002b013f00md03ii002b04i10234002b05l00234002b002b002b002b002b00nu002b002b002b0urg002b002b02tf002b002b002b002b0jb800o800qa01bu02fs002b002b002b0o7d002b002b002b002b03o2002b002b002b002b002b002b00nu00md069100l600sr0lad002b002b002b0ntu00k30lad09f20lad03th08j2002b002b0bn4002b002b03ii002b002b002b0o3o017l002b00l600l60ag500md02ap0lad02c3002b03ls00of013j00js00q002bs002b002b002b002b002b002b002b002b002b03ii002b0o7n002b0aqf03c5002b002b002b002b002b002b0557002b0lad002b00nc002b002b02in00ks047p0ihg002b03ii0o01002b002b002b002b002b00qa0g8i002b002b002b00mn00nu00pt002b00mn00lo06ku002b002b002b002b002b00q000mn00nu00of00nc00qa00pi00nj00l300mu00tn053r002b036o02li02ap002b03ii002b002b00sr002b01or002b002b00sr00sr02340epj002b002b002b0b21002b002b002b046k03so07n8002b002b002b00l600qn002b002b002b002b002b002b002b002b04ph0cf3002b046h00l3002b002b00qa002b02bs0lad002b002b002b002b0lad002b0b4o0234023402c3002b023403oq0aep0lad0lad02s900q0002b002b0lad002b002b02li002b00of00of00sr02bs03ii002b0b75002b002b002b002b02340151002b013f00l6002b00o802tj002b002b002b002b00o800md00l600qa00mn03ii03ii00lo00sr002b002b002b0234002b0234002b002b002b002b05aj002b002b002b01pf03ii002b0a4q00mn002b002b002b002b002b002b0152002b002b023405so002b002b02340234002b02li002b03mr00mu002b00of00pi002b002b002b02t0002b002b002b002b002b093i002b002b024s00of00nu00q000o8002b00md002b002b013700pt06dd00l302bs002b002b0oaj002b079n0234002b002b002b002b002b002b03ii002b002b002b0lcu002b002b002b002b002b00of03cc002b02t0002b002b002b002b002b002b027k002b0234002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b002b002b07bj002b023401od00pt002b002b002b002b002b002b0lad068m002b002b023414f806q6002b002b017l00pi0234002b02340lcu002b002b0hu0002b0lad00md00nc00mu02c3002b00o800lk002b002b002b002b002b002b04k60eol0234002b002b002b002b03ii002b002b002b002b002b002b002b0234002b002b002b002b002b02340lad002b08ah02lf002b002b0o69002b002b002b002b0lad02bs02b7002b0d9i0v4n002b002b002b002b002b002b10i60lad00sr00qa002b002b03dc02en002b00o8049c002b002b0234002b002b002b002b002b002b002b002b002b0lad002b023400sr09a4002b002b03ii002b03ii002b014d014d002b059303ii00lo00nu00j7002b002b03ii002b0lag002b03ii002b002b002b02340234002b002b0lad00nc002b0lad002b00tn002b002b002b054j0nlr002b0234002b002b032802s90234002b002b0ksm002b002b0234002b002b002b0mem02fs002b0bhp002b002b00nu00k302en002b0ntp0bnq002b002b002b002b0v3f0qiu002b002b002b03ii0gim002b002b002b002b002b002b0lad002b03jv00lk00tn002b12an0123002b002b0234002b002b02bs002b00sr024s02bs03ii002b002b002b002b002b002b002b002b002b0kt8002b02340c410234002b0nrq002b002b002b00pt02li0o5e08hk0bk6002b0nm8002b023400lk00nu0i150234002b002b02r901v4002b002b002b002b0234002b002b002b002b002b0234055r06rq002b002b002b002b002b002b002b002b002b002b02s8002b002b06rg023403ii002b02340234023409l600mu00mn002b03ii002b00lo002b002b002b00nc00nu002b03ls0lcu002b002b002b002b023406hv00md045t002b023402sg0205023403lh002b002b0234002b002b002b002b002b002b0lad002b002b002b002b002b02fs02hs0o38002b002b002b002b002b002b00o80lad02s5002b002b0lad05on002b02340bmi00l600sr002b0152002b002b002b002b002b002b002b00of01bu02ap0234002b00q0002b002b038i03ea002b08e80234002b002b002b002b002b002b002b0ag5002b002b002b002b002b0234002b002b0o38052j002b0bnq002b002b002b002b002b002b023406iv0234002b002b002b00mn002b0l0b002b002b002b002b002b002b0eq5002b002b0aod0lad002b002b023400mn002b002b002b11o2002b002b002b00md002b03o2002b002b002b00lk00fa002b002b002b002b002b0ael0o1s002b023403th002b002b026s00mn002b002b0vc6002b002b126m002b0lad12jp0nog0lad0234002b002b0apg002b002b002b002b002b002b002b002b002b002b063a002b002b002b002b0lad002b02l1002b002b002b00jl002b002b05ha002b00nj00mn002b03ls03ls002b0bgb0234002b002b002b002b002b0lad0lcu002b002b02340234002b002b0lcu0fs40lcu0234002b002b002b0234002b08c9002b002b002b0371002b002b002b002b0ekl01pm002b02li002b002b002b002b02n2002b002b002b0lad0234002b0lad002b002b002b002b002b023412810o4i002b002b002b0nu9002b002b0lad002b12q6002b002b002b002b002b0o3802340234002b002b002b002b0234002b02340234002b002b002b002b0234002b00js002b002b002b002b0nq202fs002b0234002b002b0nnc00of002b002b049q002b02vp0234002b0lad002b002b02340o0q002b00nc00qn0be20lad002b023414v700of00nc002b04mm002b002b002b0o0q03ii0lad002b0234002b002b03oo017l00qa00q0002b002b0234002b002b002b02fs03ii0lcu02en002b002b002b002b00qa04he002b002b002b0345002b002b002b002b002b0234002b002b002b002b03ii002b002b0614002b002b002b0415002b002b0234002b00of00pi014d002b002b002b002b002b0456002b002b0lad002b002b0234002b09f20lad0lad002b01kl002b02ap02b700mn01330uuj03ii02am002b002b01or03ii002b10ek03mr089s002b002b00tn0nhk00sr00of00sr00mn00mu01qv0361002b002b032l002b002b0234002b00mn00m6002b002b0234002b002b02nu002b002b002b002b002b002b002b0lcu002b00lo00nu0lad002b002b0234002b0lag002b0vtt002b0lad002b002b00nu08bp0234002b002b002b023400qa00mn002b002b02340234002b00ko00j7002b002b0234002b002b0c48002b002b002b002b002b00sr0234002b002b00nu002b002b002b03ii00e3002b002b002b002b0lad002b02340234023402340cji00sr0bnq0ili0lad002b002b002b002b002b00nc00nu02b702b7002b013300q00aef0234002b0234002b002b002b002b002b002b002b04c200nj015202am06hh00nc00pt00pt002b002b002b002b002b03ii002b0lad06d500tn002b002b002b03f800nu00q000q000q002ap002b08ul02ut002b0234002b002b002b0ob9002b002b002b0234002b002b002b03ii002b002b002b002b002b002b023403ii0lad002b0ksm002b002b002b002b002b002b002b0nvn002b002b10i10o11002b0ctn002b02tq002b002b00mn017l00lo002b002b03280234002b002b002b0lad00qn002b002b002b002b002b002b02tf03ii00of002b002b002b046k002b002b02bs0v4t0234002b002b10pg002b002b0234002b002b029f002b0k46002b0234002b002b002b0234002b002b002b002b002b002b00qa0152002b0234002b002b002b002b0lad002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b002b03ii002b002b002b06k50nmu002b023402bs09oh02li00ks002b0234002b03ii002b002b002b002b04io002b002b049i002b002b0ft100sr03ii002b002b002b002b002b002b002b00sr002b002b002b002b002b002b002b002b00mn002b002b002b0234002b002b00nu00q0002b002b002b002b002b002b002b13bh01u2002b002b002b002b002b002b002b002b002b159o002b002b002b00nc00ko00qn00pt00l600pt002b002b0lad002b002b002b002b00nu002b00nu046k002b002b002b047203i4002b0lad002b002b002b0lad059i02en002b002b03th002b002b002b0234002b002b002b002b002b05la002b03ii08v6002b002b002b0lcu002b0jng03dc002b002b002b149j002b002b0234002b002b002b002b002b002b0lcu0lcu03ii002b03ii002b002b00lo002b002b0593002b0nq6002b002b002b02340imk002b002b002b002b0ihi002b00nc00mn002b02r9002b002b002b002b002b002b002b002b002b0234002b03th002b0lad0234002b002b02c30v4n07qs002b002b002b002b02lj09mc002b002b002b002b002b002b08ee002b002b002b002b002b03ii002b002b002b0234002b02fs002b00qn00nc01370234002b002b002b002b002b002b002b002b03ii002b002b002b0234002b00nu002b002b002b002b002b002b002b002b002b002b002b002b002b002b02li0rd006t803mr002b002b002b002b002b002b002b002b002b002b06c70234002b002b0lad01or0me00o7k12nn00o8002b00of002b002b002b002b002b002b046h002b03dc0nvj002b0h4h002b002b002b0c77002b002b002b0456002b002b0lad002b002b002b00o800nu031400qa00sr00sr002b002b002b0234002b002b0o3p0234002b043e05r40pbl002b002b002b002b002b002b002b002b002b0234002b002b002b002b002b002b002b03ii0gil002b01od002b0mdv002b06pv002b002b02tq00nc002b0lad002b002b002b0234002b002b002b002b002b0lad002b002b03dc002b002b002b0lad0lad002b002b00nu002b002b002b023400nj056l0d0i002b0lad002b002b0472002b002b002b002b00mu002b002b002b0d0i002b002b0lad002b002b002b002b002b0234002b03ii002b002b002b0pk10234002b002b023400pt00mn0lad002b002b002b057i002b03oo002b023402340lad0lad002b002b0nth002b002b0lad02340frj00qn002b002b002b002b0234002b0234002b002b002b002b02kp0hfh002b002b002b002b02t0002b002b002b002b002b002b00nj00md002b002b002b002b002b002b0cqt002b03np002b0234002b10pg002b002b002b002b002b002b002b0lad0cji002b00j7002b002b02u40do5049q002b002b135m002b0234002b002b02ut0234002b002b00nj00md002b0472002b002b026o002b002b002b002b01bu002b02uj0mfe002b002b0lad002b0lad002b00qa02sg002b036o069g002b002b00of00kv002b002b002b002b002b05nk002b002b002b08g601p2002b002b002b002b002b0lad002b02tq002b002b0234002b02fs002b002b002b00of04ec00q00234002b0234002b02340234002b00sr09f200q000mn002b002b002b002b002b002b002b02h802bs002b03ii00nc08cc002b002b002b002b002b002b03be00q0002b02h80a0s002b0ccs002b0nss002b002b002b002b0uus002b083f002b002b002b002b0ufs0lad063h002b02340234002b0lad002b002b002b002b002b002b002b002b002b002b002b00ko002b002b002b002b0o1d002b002b02lm002b0nuo03ii0c480lad002b002b002b002b002b00lk00md00md00l302rh00q012lr002b002b002b002b023402tt02c3002b002b0o28002b0234002b05ha002b002b002b002b02sl08g6002b002b0c9n0o3h02340lad002b002b002b002b0hfh002b002b002b002b0ntf002b0234002b0lad002b002b002b002b002b002b002b002b002b002b00of00qa002b002b002b002b002b002b023402um002b0234002b002b0234023403ii002b002b002b002b00mn00nu00qa048t0biv02bs02c3002b002b002b002b03dc03th002b0hgn002b002b002b002b089h0bvb002b002b002b02340lad002b02en002b002b002b06e5002b02li00mn0lcu002b002b002b0v7a002b03ii0lad002b002b03th002b01pm002b002b0234002b002b002b002b002b002b002b03ii002b02340lad023400mu002b0152002b00md14fr1288002b002b002b02sg002b00l300pt0472002b002b002b002b002b002b00of0234002b02h802340234002b137a002b002b00lk00qn02on00q0002b002b06id002b002b002b0234036o002b002b002b00l6002b0lad002b002b08d9002b002b002b002b002b002b002b11o200sr002b044v002b00l6002b0lad00sr00js00mu002b002b0lcu04ih002b02rv002b02li002b08dr02340234002b0234002b002b002b002b002b002b002b002b0qu4002b002b0lgt00l600nc017l002b002b002b0234002b0lad002b002b002b002b002b002b0cec0234002b0lad002b002b002b002b0ggd032l002b002b002b0234002b002b002b0234002b002b002b002b002b002b002b002b01pf0234002b002b00qa0lad002b04d00234002b002b0lad002b0lad002b002b0lad002b002b0234002b002b002b002b002b002b002b002b002b04ec06ku002b002b00mn00nu002b11i9002b002b023402s700nc0152002b06ju002b002b02fs00mn00mn00o800nu0472002b002b0234002b00tn036o002b07fu07kv002b002b002b002b002b002b002b002b06id002b002b0lad002b023405la002b02h8002b0o1r002b026o023400sr00l600nc002b002b002b002b002b002b002b0fbd0aqf002b002b002b00nc002b002b002b0lad002b002b002b002b002b00o800mu002b002b002b002b002b002b002b002b00o800md00mu00sr00md00md02h8002b002b002b002b002b002b002b00o8002b002b002b002b002b002b002b0lcu002b00md00pt0234002b002b002b00nj002b002b0371002b0lad002b002b002b002b0c4t002b0lcu0bf500lk01370234002b002b002b002b002b002b002b0lad002b0234002b002b05dl03jv002b078r002b00o800md00pi002b002b002b002b002b025d012m00pi047700mu002b03dc002b01370o1s002b002b002b002b002b00md002b002b00sr02c30234002b002b00l600pi002b077o002b002b002b00q0002b030b00nj06pa0v4n002b02340234002b00o800o8061m002b002b002b03ii002b002b002b002b002b002b002b0234002b0ge902ii002b002b03f700nu00nu002b002b002b03ii00sr00lk00q002ut03ii00nu00mn02bs002b002b002b002b031a02340234002b002b002b002b0dda002b002b002b0ntb00o800mu0kov002b0nu4002b03ii002b0bf500nu00kl00q000q000jl00q0002b03ii002b00sr002b002b00md00q0002b00nu002b01bu00md002b002b002b002b002b002b02in002b00kl002b0ekj002b002b002b0234002b002b002b002b07ii002b002b002b002b002b049c002b002b002b002b02en01p2002b002b002b002b03ii015200k303ii00nu00md00qa00sr03ii13m502nb00nq00mn07jp046k00pi002b013300mn002b002b002b00q0002b00mu002b0265002b002b002b002b002b002b002b002b002b002b03ea002b002b002b002b002b0g5h002b002b002b002b002b067j00pi05mg002b07kv0234002b002b002b002b002b0bkp002b00q006tb002b014d0bqk03ii0234002b002b002b002b024s03th002b00o800sr002b0lcu002b002b002b036101fe002b01or002b002b0hlm002b03be0234002b002b0lad023403ii002b002b002b03ii002b03oq002b00sr00pi03ii002b00nu00of00q0013300nu002b0234002b002b0b6n002b0234002b002b00sr002b0lad0lcu02h802lu002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b0lcu002b00pt00nu02sj002b002b002b09dk0a5m002b002b002b002b00lo00qn002b01pf002b0234002b0234002b002b02c3002b0lad0lad023401og002b002b002b0ekj057i002b002b002b002b0lad002b002b0o9g03ii05k9002b0234002b002b002b03ii002b002b03ii002b03ii023402ut002b002b037103ii002b002b002b002b002b002b02no002b002b002b002b002b002b0234002b002b00pt002b0234002b002b002b00nu00q0002b002b002b002b002b00pt02340lad02bs02c300nc002b002b002b0bpl0lad002b002b002b002b00mu002b03ii002b0o52002b002b002b0lad002b0lad0lad00l6002b00lo00sr0234002b01p2002b02bs02b7023400nj01v400mn03dc002b002b00js002b002b002b036o002b002b002b002b02hc002b002b002b002b002b002b12jt002b002b0234002b002b002b002b0234002b002b002b002b002b002b002b0152002b002b00mn002b00jl002b002b03au002b00pi047h00pi00mn00of002b002b002b00pi002b002b00qn00nc0nsj0afm002b002b002b002b002b002b00o800sr002b002b00of002b002b002b002b0ccs03ii002b002b002b002b00q0002b002b002b002b023400qn00pt0lad002b002b002b002b00kh002b023406hv002b002b0gp2002b002b00nj00sr0152002b046n002b002b0234002b002b002b002b002b002b002b023400q008dr002b002b002b00mn00l6002b0o7i03ii002b002b05930lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02340me700qn00nj02bs0lad0234002b024g0lad002b002b0hcc002b002b02li0234002b002b002b0bf8002b002b002b002b002b002b002b03th002b002b002b002b002b00tn00ks002b002b002b0lgt002b002b002b002b002b00md00of08u00o8r002b0234002b002b002b002b0234002b002b002b0j35002b0234002b002b00lk00nu0o6g002b002b12js0gim002b002b002b002b002b131i002b00pf00nc00mu002b00j700mn00sr02c3002b002b002b002b03ii002b03ii002b002b002b002b00nc00tn0234002b00js00js002b002b002b00nc00l30cec002b002b0lad0234002b0lad0234002b002b04d00lad02me002b002b03ne002b002b002b002b002b002b11i9002b0234002b002b002b0lad002b002b002b06pk002b002b01pm04fq002b002b002b002b002b002b002b0603002b02340234002b0oba002b02bl002b002b0234002b002b0133002b00qn03ii05bf002b002b002b0234002b0123002b002b0b4h002b080e02c300l300mu00q0002b002b002b002b002b002b02340lad002b0234002b002b002b002b002b05la002b0lad002b002b03cc002b0lad0lad002b002b00q0002b002b002b002b002b002b002b002b02340lad0do5002b12q1002b002b002b0lad002b002b002b002b002b002b002b023400mu00nj0c60002b0o7j002b0o710o75002b002b002b002b002b023406hh02fs002b002b002b002b00qn02bs0c83002b002b002b002b002b002b002b002b002b03dc02kv002b0mg6002b00nu002b002b002b00nu00qn002b002b02t8002b002b002b002b073m002b00nu00qn0234002b002b002b0nvn02bs002b0o9c049q00lk06ub002b002b00nj002b14dh002b00nc002b00of00lo002b002b0234002b002b023400ks01mu01p203ii002b002b002b024k002b00sr00ks00pi002b07lu002b002b002b002b002b002b002b00js00mn00mn002b002b002b002b00l600qa002b002b002b002b002b002b002b002b098u0bmi002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b00l600kv02s80fso0alb0234002b0234002b02c0002b03f8025p02lt002b0lad002b0o3803ii002b00js00lk00nc002b002b002b002b002b03mu002b06d5002b00o8002b02c30lad002b00md00mu002b0314002b02bs002b002b002b0234023405pt002b03ii002b02b7002b03rh0bhp002b002b002b061t002b02li002b002b002b002b002b002b002b002b002b002b002b002b0c700234002b002b002b002b0234077o002b03ii002b002b029t1492002b002b002b002b002b002b002b057a002b002b002b002b12bt002b002b002b002b002b002b0234002b002b0234023403ii002b132300nc07ka002b002b002b00pt002b002b05pm002b002b002b002b002b002b0234002b03d9002b002b00o80lad002b0rla002b0o0c002b002b02li002b002b002b002b002b0234002b002b0ihg01520lad023407vf0i140234002b002b002b002b002b002b002b02340o17002b002b02340o3h002b002b002b023406i6002b002b002b002b03th07nb0qip002b00sr002b002b002b00o800lk044702h8002b002b002b002b0inh023403r40234002b002b0234002b002b002b002b00j708bl002b00of00sr0234002b002b002b0234002b02340be5061410ek002b04c2002b002b0o8g002b002b0234002b0234002b12an0lad002b002b002b002b023402340234002b0234002b002b002b00kv02c3002b002b002b002b0234002b02rv02c3002b0234002b002b002b002b0o0q002b002b0c60002b002b0234002b002b002b002b002b00nu0d9i00qn00sr03i40gf2002b00q000qa02c30oc900kl00qn0234002b002b0234002b002b0lad0lad002b002b0234002b002b002b036o002b002b002b002b002b023406c7002b002b068m06i606gi002b0o3p002b002b00mn00mn002b002b002b002b03ii002b002b002b03ii0o1r002b0lad002b002b002b0v6v002b0o8r002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0v35023400js002b002b002b03vf002b002b002b0234002b02h801bu02c300l302340lad002b002b002b002b0lad002b002b002b002b0b81023401or00mn002b002b00of002b002b002b002b002b002b002b002b002b002b002b002b11io002b002b002b0234002b002b0234002b002b002b002b02c3002b002b0be5002b002b023401uo02li002b0a6m002b002b00kh01or002b002b002b02340ntb002b002b0lad023402tf0234002b0234002b002b002b00o802md0lad002b002b002b0kem0o2b002b002b002b002b002b03ii002b002b002b002b002b002b0m2m00qa02vi002b0234002b051o0lad002b00q000l604ae0234002b002b014d0lad03ii002b002b002b03mr08dr014d002b002b002b002b0o1b002b0b75002b002b002b03ii002b002b028o00l60lad002b002b00o80ajn002b002b002b00mu0jbj02li002b002b002b0234002b002b002b002b03oo02bs00tn002b02vc002b002b002b002b002b002b002b03dc00md03dc05on002b002b002b061m00pt002b002b002b002b08aa03ii002b07i1002b002b002b002b002b002b002b0gp2002b0ha5002b00qn03ii002b00nj00md017l002b002b03ii002b03ii002b002b002b06sf002b03ii002b002b002b002b002b002b002b01or002b03ii002b002b002b002b002b002b002b03ii002b002b046k002b05ct002b002b002b002b002b002b002b002b00pt00pt089s00mn00l600pi002b002b002b002b002b0314002b002b002b0lad0nrg002b0mdv002b02li002b002b002b017l002b002b002b002b002b03ii00nu002b002b002b08ee00qa00nu002b0lad002b002b00sr00mu02h80o0g002b0lad002b002b002b06pa05o1002b002b0lad002b0lcu0lad023403ii00sr00qa0h9j00qa00mu02bs0234002b002b002b002b002b0lad002b002b002b0234002b002b002b0g90002b002b002b002b00l600o800kh00pt0234002b002b002b002b02c3002b002b0nm100pt02ut002b002b002b002b002b0234002b002b07fu05s8023402340lad023402c306gi0lad0675002b03ii0234002b023403f80234002b002b0lcu002b002b002b002b0lad0jj80lad002b002b002b002b00nc00nu0pto013302li002b0234023403ii002b002b00qa0lcu0lad002b002b002b002b002b002b002b002b00o800ks00of00qa02tf00nc002b00pt002b002b0234002b002b002b002b00md002b002b00q000mu002b0v4l023401330152002b02bs002b0234002b002b002b0lad002b002b002b002b002b002b0bs206jk02mh002b00kl0b5h023402tq002b002b012m015203ii002b00nc002b002b0lad002b002b002b00of002b002b002b002b002b023400lk00md029t0u810uma002b002b0o63017l01bu00l605o1002b0234002b002b0lad0lcu00mu002b01kl002b00nu00mn002b002b01df00mn00pi00l3036100qa00nj03cl002b0cs8013300nc002b002b00o800md067502fs02c300nc00qn002b002b002b023400mn015200nu03dc0234002b00nc00j700mn048f0o2b00nc002b002b002b0234002b0lcu002b00nj131j002b002b002b002b0123002b0lad03mr002b0aod00nj00lk014d01520m0c002b002b002b002b002b00o800nu00pt00lo029t00l300pi00lo00pt017l00mu03th002b0234002b0234002b07lu002b002b002b00q000pt0234002b002b0m0c03ii06g40234002b002b002b002b0cf3002b002b0234002b00nc002b0bgv0c4801df002b00mu002b027k002b00mn00nu045k00nc023400ks002b02340nvn002b002b0lad00l6030b002b002b002b0lcu002b03ii002b002b002b002b00qn00nu00l3002b002b00m602en002b002b002b0d9s0lad0lad00tn013j00nu00nc02ap00mu02c3049c023402li02fs0234002b02sj002b002b00o8015200l3002b00mu002b00sr00n800pt013700mu002b002b00qn00mn00md02b70lad0o7h002b00tn12nn00sr002b00nc00l600j700sr00sr0gs50i62002b002b02h813dj00lo00of00l600mn0nu9002b0lcu049i002b02h800mn00nj02rv002b00tn002b002b0o0i0234023408ej002b023403th002b002b002b02sj0234002b002b0234002b015200kh02en03ii00mu002b00nu00lk002b002b02ig00k30234002b002b002b002b002b002b00o800nu00pt002b00of05pm00mu00kh00nj002b00tn00pt002b1iko002b002b002b002b002b00ks00pt00pt0ine0lad014d00pi017l00q000sr07so002b002b015201bu11i9002b06r9002b00of00ks00m600l600q0002b002b002b002b002b01uo002b0234023401mu00md00pi017l0v6g0mf4002b01a600pt02en00nc01370ocn02s7002b00j704720blb002b002b0234002b002b0gil02340o29002b002b0hfh0vld00nu00mu02bs076v002b002b0c7l00nu0gib00sr002b00nu014d02bs013701or002b002b002b002b002b002b08n0002b002b002b002b002b002b0o8r002b002b00mu002b0n0d002b002b0137002b002b002b002b00nc002b015200jl0q4600lk00md00nc00sr023400pt00js00pt002b02rh068m002b132b00nc00nu002b00nu00qn002b002b00pt00kh002b067c0234002b002b002b03ii02340lad00nc00nc013j00qn00lr00q000qa046k002b002b002b002b002b03mr0234002b023400nu00nu002b0234002b00nu017l0vj4002b029700pt00nu0133042802c3002b02340lcu023410lp00lk0152002b0lad06jn023403dc00pi02en023400pt0234002b002b03ii0234002b002b002b02340lad002b002b002b0234002b002b002b0lad02tj002b002b002b002b00pi002b002b002b002b002b002b002b00nu002b002b002b002b023407kl002b036o002b02bs002b00kl00lk00mn0bkp002b002b02340lcu002b0v3f002b002b00pt002b002b002b0bhp00pt0v4l002b002b002b002b057a002b00js002b0nof002b13g6002b002b0lad002b06c70c7l00nu0234002b002b02340234002b002b002b002b002b13og002b002b002b002b002b002b002b002b002b0234002b0lad002b002b002b002b002b02340234002b002b002b002b002b002b0lag03ii0lad03140234002b002b02h306ku002b002b12880lad02340lad0bgb0234002b002b002b002b14fg002b18hs0lad002b002b002b002b002b002b00of02tn002b002b002b002b0234002b002b03i4023402m3002b002b002b002b0234002b03ii0234002b002b00nu05ue002b002b002b002b00o80ahk002b002b002b002b002b002b002b002b002b00nj00md00q000kl029t00tn002b002b002b03ii002b07er01bu002b002b002b002b00pt02fs032802c30lad02tj002b02t50qbc002b002b02s9002b002b00js00kv002b002b002b002b002b002b002b02t5002b03ii0lad0lcu03ii002b18hn002b002b002b002b002b05mg002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02nu002b002b002b002b002b0npa002b0lad0ksm02340234002b00lk00lo002b002b0234002b0ksm002b02fs002b0fpn0be2002b002b002b0234002b02li002b002b002b002b002b002b0nuo002b07hj002b00l300nc023403ku03ku002b01pf0234002b002b002b002b002b03ii002b0lad002b002b00mn00nu002b002b02fs0234002b002b002b060l03so002b002b002b002b002b002b002b002b02ln02340234002b002b0lad002b002b03i4002b0234002b002b0234002b0od7002b002b002b04t4002b002b002b002b002b002b0o110o6500q000nu002b03th002b002b002b0234002b002b002b025d02mu0o38002b002b002b002b002b0lad0lad002b0234002b002b002b002b0cdl08ic002b02340lcu002b002b002b002b002b002b0lad0lad002b002b0234002b002b002b002b002b0fs4002b0lad0234002b002b002b03ii02340lad002b002b002b002b002b002b002b002b002b002b002b03ii002b002b002b002b002b0h9j002b02tq002b002b002b002b03ii002b002b002b0a6m0234002b03ii0234002b0234002b002b002b002b0234002b0234002b002b002b002b002b002b02340234002b03jv07bv002b002b0234002b002b0lcu0234002b002b002b0nvc002b0234002b002b002b002b00sr08ic002b002b002b002b002b002b02h80q2h002b14kj0lad0lad002b002b0lad0lad0234002b002b002b002b0lad0lad002b0lad00pt002b002b002b002b0bcr03ii0lad002b02mp014600nj00pt017l002b02b70lgt0234002b002b002b0inh002b0lcu0lad002b0lad0lad03ii002b002b002b002b02340234002b002b002b002b002b002b002b002b002b002b0lad054q0lad002b0lad002b002b03ii00tn08br00nu00nu002b002b05j3002b002b03ii002b002b0234002b02340o7q002b002b002b002b01bu00sr03u30lad002b002b00l600nc002b002b00nu0a6i002b002b002b002b02fs002b002b0bk6002b002b002b002b002b0kt8002b017l00md046k00sr05on0234002b02340o37002b002b002b002b002b002b02fs002b002b002b002b0234047202340mdv002b002b002b002b063h002b002b002b00md002b06hh047205di02bs03ii00nu00pi05j911es02s5002b0234002b002b002b0470002b002b002b002b002b002b0sgn03ii0o380bqk00qa00sr002b002b002b0lad002b02340234002b002b002b002b02n911bq002b002b0234002b002b06e5002b0nov002b002b0234002b0234002b002b002b002b0234002b002b0234002b12eo04q0002b002b0lad002b002b0234002b05so02u402ap002b024k002b0234002b046k002b002b08bl0234002b002b0297023400kv00kv00md02s9002b0234002b002b002b04t4002b0234002b0lcu002b002b002b12q303ea002b002b002b023403np002b03ii0234002b002b0lad002b002b002b002b002b00mn002b047202s90lad002b002b002b002b002b002b002b053r0lad02sl002b002b002b002b0lcu002b03jv002b002b002b0234002b002b0rfc03f7002b0lad002b002b002b0234002b0od7002b002b002b002b002b002b0606002b002b02tf002b002b002b002b002b0ihg002b002b0c830133002b002b0lad002b002b00o800pt002b00md0vk7002b002b00mn0nq40o110bkp002b02340lad0sdl002b002b002b002b002b0arc002b0p9h023401og03th002b03ii002b002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b0lad002b029700l600pi00tn0o9n002b002b03ii002b0oca002b13qg0gib002b01fe03ii03ii002b002b12nn03mr002b002b023403ii002b078d00mn00mu00nj002b002b002b03ii0o0i002b002b002b002b002b0ntf002b002b002b002b10740oam16bk002b054500kv00qa002b002b002b04ih002b002b04gb002b0lad002b00e6002b03i402340lad002b048f002b002b002b002b002b0234002b00of00mn03q0002b01pf0234002b002b044v002b01bu03ii04720bgb02c30lad002b002b002b07i1002b002b002b002b002b002b07s3002b002b0v6j00nc002b002b0234002b0lad0rv2002b002b002b01og002b002b002b002b002b002b03oq0lad002b002b03dc03mr002b002b002b002b002b03ii0234002b002b002b00mu0obg0ocp002b002b002b0234002b002b0234002b002b002b002b0234002b002b03ii002b00pi00md00qa03vf03jv02li002b002b002b002b002b036o002b002b02r9002b002b023400nj00l6046k002b002b002b02sj09pb08ej03ii04720234002b002b00nc00mn00tn002b0ekt0234002b002b002b002b02bs00o800qa002b03ii0314002b11io002b002b002b023406pa002b002b002b02340234002b00nu00mn00sr054q02c302340ale0lad002b002b0ntp0n880ist002b002b002b15p4002b002b002b0234002b02en0oc90234002b002b00nc00o80bqo02bs00nj02bs0ocs002b0234002b0o1d0lad002b002b002b002b002b002b002b0234002b03cq002b0lad066u00l600md00qa067c00qa02bs0cdl002b08oh002b00qn0234002b002b0234002b002b002b002b046h00lo002b08in0ajn002b002b002b002b002b002b002b002b002b002b0257002b0hlm002b002b002b002b002b002b002b002b0234002b002b0lcu02340nqr02340nnc002b002b002b002b002b002b02no002b002b002b0lad0152002b002b002b0lcu002b002b0472002b002b03ii0eq9023403ii002b024f002b002b07ql002b002b04890234002b002b02tj00tn0234002b0eei002b0234002b13c5002b0lad10va03od0234002b002b002b002b002b023403th030b02s500mn00l6002b002b002b0klc002b002b03ii002b002b0234002b002b03mr002b002b02sl002b002b02s0002b002b002b002b002b0234023402340lad03dc002b0234002b08l8002b06t8002b002b002b002b023402340234002b002b02340234073m002b002b002b162q16fk153215kj16rh170l170l16ju002b0a5m18gd18nm18om18p0180j18po180j18ps18pg17de18pg18pg17ls183q18gd195518in1a371a671a671a6719mv1a7b1a9n1ah61al51ak71atf1bi81c0c1c6j1cbi1clj1dem1dgb1dgb1dgb1e191e3f1eq41f6c1fsf1g5i1h3917f31h9u1i6t1kp81kbu1l4l1l4l1lhb1nnt1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mhd1mia1mi61mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mju1mtn1mtn1mtn1mtn1mtn1muk1n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941nap1nap1nki1nki1nki1nki1nki1nki1nki1nki1nm11noe1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1o0u1o0u1o1e1o1e1o2o1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1ocb1oc91oc91oc91oci1ocp1ocu1ocu1ofi\",dataSource:\"0\",name:\"Abano Terme|Abbadia Cerreto|Abbadia Lariana|Abbadia San Salvatore|Abbasanta|Abbateggio|Abbiategrasso|Abriola|Acate|Accadia|Acceglio|Accettura|Acciano|Accumoli|Acerenza|Cermes|Acerno|Acerra|Aci Bonaccorsi|Aci Castello|Aci Catena|Acireale|Aci Santantonio|Acquafondata|Acquaformosa|Acquafredda|Acqualagna|Acquanegra Sul Chiese|Acquanegra Cremonese|Acquapendente|Acquappesa|Acquaro|Acquasanta Terme|Acquasparta|Acquaviva Picena|Acquaviva Delle Fonti|Acquaviva Platani|Acquaviva Collecroce|Acquaviva Disernia|Acqui Terme|Acri|Acuto|Adelfia|Adrano|Adrara San Martino|Adrara San Rocco|Adria|Adro|Affi|Affile|Afragola|Africo|Agazzano|Agerola|Aggius|Agira|Agliana|Agliano Terme|Aglie|Agna|Agnadello|Agnana Calabra|Agnone|Villa Latina|Agnosine|Agordo|Agosta|Agra|Agrate Brianza|Agrate Conturbia|Agrigento|Agropoli|Agugliano|Agugliaro|Ayas|Aicurzio|Aidomaggiore|Aidone|Aielli|Aiello Del Sabato|Aiello Calabro|Aiello Del Friuli|Aieta|Ailano|Ailoche|Aymavilles|Airasca|Airola|Airole|Airuno|Aisone|Ala Dei Sardi|Ala|Ala Di Stura|Alagna|Alagna Valsesia|Alanno|Alano Di Piave|Alassio|Alatri|Alba|Alba Adriatica|Albagiara|Albairate|Albanella|Albano Santalessandro|Albano Vercellese|Albano Di Lucania|Albano Laziale|Albaredo Arnaboldi|Albaredo Per San Marco|Albaredo Dadige|Albareto|Albaretto Della Torre|Albavilla|Albenga|Albera Ligure|Alberobello|Alberona|Albese Con Cassano|Albettone|Albi|Albiano Divrea|Albiano|Albiate|Albidona|Albignasego|Albinea|Albino|Albiolo|Albissola Marina|Albisola Superiore|Albizzate|Albonese|Albosaggia|Albugnano|Albuzzano|Alcamo|Alcara Li Fusi|Aldeno|Aldino|Ales|Alessandria Della Rocca|Alessandria|Alessandria Del Carretto|Alessano|Alezio|Alfano|Alfedena|Alfianello|Alfiano Natta|Alfonsine|Alghero|Algua|Ali|Alia|Aliano|Alice Bel Colle|Alice Castello|Alife|Ali Terme|Alimena|Aliminusa|Allai|Allein|Alleghe|Allerona|Alliste|Allumiere|Alme|Villa Dalme|Almenno San Bartolomeo|Almenno San Salvatore|Almese|Alonte|Alpette|Alpignano|Alseno|Alserio|Altamura|Altare|Altavilla Monferrato|Altavilla Irpina|Altavilla Milicia|Altavilla Silentina|Altavilla Vicentina|Altidona|Altilia|Altino|Altissimo|Altivole|Alto|Altofonte|Altomonte|Altopascio|Alviano|Alvignano|Alvito|Alzano Scrivia|Alzano Lombardo|Alzate Brianza|Amalfi|Amandola|Amantea|Amaro|Amaroni|Amaseno|Amato|Amatrice|Ambivere|Ameglia|Amelia|Amendolara|Ameno|Amorosi|Cortina Dampezzo|Ampezzo|Anacapri|Anagni|Ancarano|Ancona|Andali|Andalo Valtellino|Andalo|Andezeno|Andora|Andorno Micca|Andrano|Andrate|Andreis|Andretta|Andria|Andriano|Anela|Anfo|Angera|Anghiari|Angiari|Angolo Terme|Angri|Angrogna|Anguillara Veneta|Anguillara Sabazia|Annicco|Castello Di Annone|Annone Di Brianza|Annone Veneto|Anoia|Antegnate|Antey Saint Andre|Anterivo|La Magdeleine|Anticoli Corrado|Fiuggi|Antignano|Antillo|Antonimina|Antrodoco|Antrona Schieranco|Anversa Degli Abruzzi|Anzano Del Parco|Anzano Di Puglia|Anzi|Anzio|Anzola Dellemilia|Anzola Dossola|Aosta|Apecchio|Apice|Apiro|Apollosa|Appiano Sulla Strada Del Vino|Appiano Gentile|Appignano|Appignano Del Tronto|Aprica|Apricale|Apricena|Aprigliano|Aprilia|Aquara|Aquila Darroscia|Laquila|Aquileia|Aquilonia|Aquino|Aradeo|Aragona|Aramengo|Arba|Tortoli|Arborea|Arborio|Arbus|Arcade|Arce|Arcene|Arcevia|Archi|San Nicolo Darcidano|Arcidosso|Arcinazzo Romano|Arcisate|Arco|Arcola|Arcole|Arconate|Arcore|Arcugnano|Ardara|Ardauli|Ardenno|Ardesio|Ardore|Arena|Arena Po|Arenzano|Arese|Arezzo|Argegno|Argelato|Argenta|Argentera|Arguello|Argusto|Ari|Ariano Irpino|Ariano Nel Polesine|Ariccia|Arielli|Arienzo|Arignano|Aritzo|Arizzano|Arlena Di Castro|Arluno|Armeno|Armento|Armo|Armungia|Arnara|Arnasco|Arnad|Arnesano|Arola|Arona|Arosio|Arpaia|Arpaise|Arpino|Arqua Petrarca|Arqua Polesine|Arquata Scrivia|Arquata Del Tronto|Arre|Arrone|Arzago Dadda|Arsago Seprio|Arsie|Arsiero|Arsita|Arsoli|Arta Terme|Artegna|Artena|Artogne|Arvier|Arzachena|Arzana|Arzano|Arzergrande|Arzignano|Ascea|Asciano|Ascoli Piceno|Ascoli Satriano|Ascrea|Asiago|Asigliano Vercellese|Asigliano Veneto|Sinalunga|Asola|Asolo|Casperia|Assago|Assemini|Assisi|Asso|Assolo|Assoro|Asti|Asuni|Ateleta|Atella|Atena Lucana|Atessa|Atina|Atrani|Atri|Atripalda|Attigliano|Attimis|Atzara|Augusta|Auletta|Aulla|Aurano|Aurigo|Auronzo Di Cadore|Ausonia|Austis|Avegno|Avelengo|Avella|Avellino|Averara|Aversa|Avetrana|Avezzano|Aviano|Aviatico|Avigliana|Avigliano|Avio|Avise|Avola|Avolasca|Azeglio|Azzanello|Azzano Dasti|Azzano San Paolo|Azzano Mella|Azzano Decimo|Azzate|Azzio|Azzone|Baceno|Bacoli|Badalucco|Badia|Badia Pavese|Badia Polesine|Badia Calavena|Badia Tedalda|Badolato|Bagaladi|Bagheria|Bagnacavallo|Bagnaria|Bagnara Di Romagna|Bagnara Calabra|Bagnaria Arsa|Bagnasco|Bagnatica|Bagni Di Lucca|Montecatini Terme|San Giuliano Terme|Bagno A Ripoli|Bagno Di Romagna|Bagnoli Irpino|Bagnoli Del Trigno|Bagnoli Di Sopra|Bagnolo Mella|Bagnolo Cremasco|Bagnolo Piemonte|Bagnolo Del Salento|Bagnolo In Piano|Bagnolo Di Po|Bagnolo San Vito|Bagnone|Bagnoregio|Bagolino|Baia E Latina|Baiano|Bajardo|Bairo|Baiso|Balangero|Baldichieri Dasti|Baldissero Dalba|Baldissero Canavese|Baldissero Torinese|Balestrate|Balestrino|Ballabio|Ballao|Balme|Balmuccia|Balocco|Balsorano|Balvano|Balzola|Banari|Banchette|Villa Verde|Bannio Anzino|Banzi|Baone|Baradili|Baragiano|Baranello|Barano Dischia|Baranzate|Barasso|Baratili San Pietro|Barbania|Barbara|Barbarano Romano|Barbaresco|Barbariga|Barbata|Barberino Di Mugello|Barbianello|Barbiano|Barbona|Barcellona Pozzo Di Gotto|Barcis|Bard|Bardello|Bardi|Bardineto|Bardolino|Bardonecchia|Bareggio|Barengo|Baressa|Barete|Barga|Bargagli|Barge|Barghe|Bari|Bari Sardo|Bariano|Baricella|Barile|Barisciano|Barlassina|Barletta|Barni|Barolo|Barone Canavese|Baronissi|Barrafranca|Barrali|Barrea|Barumini|Barzago|Barzana|Barzano|Barzio|Basaluzzo|Bascape|Baschi|Basciano|Baselga Di Pine|Baselice|Basiano|Basico|Basiglio|Basiliano|Vasanello|Bassano Bresciano|Bassano Del Grappa|Bassano Romano|Tronzano Lago Maggiore|Bassano In Teverina|Bassiano|Bassignana|Bastia Mondovi|Bastia Umbra|Bastida Pancarana|Bastiglia|Battaglia Terme|Battifollo|Battipaglia|Battuda|Baucina|Boville Ernica|Bauladu|Baunei|Baveno|Bedero Valcuvia|Bedizzole|Bedollo|Bedonia|Bedulita|Bee|Beinasco|Beinette|Belcastro|Belfiore|Belforte Monferrato|Belforte Del Chienti|Belforte Allisauro|Belgioioso|Belgirate|Bella|Bellano|Bellante|Bellaria Igea Marina|Bellegra|Bellino|Bellinzago Lombardo|Bellinzago Novarese|Bellona|Bellosguardo|Belluno|Bellusco|Belmonte Piceno|Belmonte Del Sannio|Belmonte Calabro|Belmonte Castello|Belmonte Mezzagno|Belmonte In Sabina|Belpasso|Belsito|Belvedere Ostrense|Belveglio|Lizzano In Belvedere|Belvedere Di Spinello|Belvedere Marittimo|Belvedere Langhe|Belvi|Bema|Bene Lario|Bene Vagienna|Benestare|Benetutti|Benevello|Benevento|Benna|Bentivoglio|Berbenno|Berbenno Di Valtellina|Berceto|Berchidda|Beregazzo Con Figliaro|Bereguardo|Bergamasco|Bergamo|Bergantino|Bergeggi|Bergolo|Berlingo|Bernalda|Bernareggio|Bernate Ticino|Bernezzo|Bertinoro|Bertiolo|Bertonico|Berzano Di San Pietro|Berzano Di Tortona|Berzo San Fermo|Berzo Demo|Berzo Inferiore|Besana In Brianza|Besano|Besate|Besenello|Besenzone|Besnate|Besozzo|Bessude|Bettola|Bettona|Beura Cardezza|Bevagna|Beverino|Bevilacqua|Biancavilla|Bianchi|Bianco|Biandrate|Biandronno|Bianzano|Bianze|Bianzone|Biassono|Bibbiano|Bibbiena|Bibbona|Bibiana|Biccari|Bicinicco|Bidoni|Blera|Biella|Bienno|Bieno|Bientina|Binago|Binasco|Binetto|Bioglio|Bionaz|Bione|Birori|Bisaccia|Bisacquino|Bisceglie|Bisegna|Bisenti|Bisignano|Bistagno|Bisuschio|Bitetto|Bitonto|Bitritto|Bitti|Bivona|Bivongi|Bizzarone|Bleggio Superiore|Blello|Blessagno|Blevio|Boara Pisani|Bobbio|Bobbio Pellice|Boca|Bocchigliero|Boccioleto|Bocenago|Bodio Lomnago|Boffalora Dadda|Boffalora Sopra Ticino|Bogliasco|Bognanco|Bogogno|Bojano|Boissano|Bolano|Bolgare|Bollate|Bollengo|Nova Siri|Bologna|Bolognano|Bolognetta|Bolognola|Bolotana|Bolsena|Boltiere|Bolzano|Bolzano Novarese|Bolzano Vicentino|Bomarzo|Bomba|Bompensiere|Bompietro|Bomporto|Bonarcado|Bonassola|Bonate Sotto|Bonate Sopra|Bonavigo|Bondeno|Bondone|Bonea|Bonefro|Bonemerse|Bonifati|Bonito|Bonnanaro|Bono|Bonorva|Bonvicino|Borbona|Borca Di Cadore|Bordano|Bordighera|Bordolano|Bore|Boretto|Borgarello|Borgaro Torinese|Borgetto|Borghetto Di Vara|Borghetto Darroscia|Borghetto Lodigiano|Borgo Velino|Borghetto Di Borbera|Borghetto Santo Spirito|Borghi|Borgia|Borgiallo|Borgio Verezzi|Borgo Valsugana|Borgo A Mozzano|Borgorose|Borgo Dale|Borgo Di Terzo|Motteggiana|Suardi|Borgofranco Divrea|Borgolavezzaro|Borgo San Giovanni|Borgomale|Borgomanero|Borgomaro|Borgomasino|Borgone Susa|Borgonovo Val Tidone|Borgo Pace|Borgo Priolo|Borgoratto Alessandrino|Borgoratto Mormorolo|Borgoricco|Borgo San Dalmazzo|Fidenza|Borgo San Giacomo|Borgo San Lorenzo|Borgo San Martino|Borgo San Siro|Borgosatollo|Borgosesia|Borgo Val Di Taro|Borgo Ticino|Borgo Tossignano|Borgo Vercelli|Bormida|Bormio|Bornasco|Borno|Boroneddu|Borore|Borrello|Borriana|Borso Del Grappa|Bortigali|Bortigiadas|Borutta|Borzonasca|Bosa|Bosaro|Boschi Santanna|Bosco Marengo|Bosco Chiesanuova|Bosconero|Boscoreale|Boscotrecase|Bosia|Bosio|Bosisio Parini|Bosnasco|Bossico|Bossolasco|Botricello|Botrugno|Bottanuco|Botticino|Bottidda|Bova|Bovalino|Bova Marina|Bovegno|Boves|Bovezzo|Bovino|Bovisio Masciago|Bovolenta|Bovolone|Bozzole|Bozzolo|Bra|Bracca|Bracciano|Bracigliano|Braies|Brallo Di Pregola|Brancaleone|Brandico|Brandizzo|Branzi|Braone|Brebbia|Breda Di Piave|Castelverde|Bregano|Breganze|Bregnano|Brembate|Brembate Di Sopra|Brembio|Breme|Brendola|Brenna|Brennero|Breno|Brenta|Brentino Belluno|Brentonico|Brenzone Sul Garda|Brescello|Brescia|Bresimo|Bressana Bottarone|Bressanone|Bressanvido|Bresso|Brez|Brezzo Di Bedero|Briaglia|Briatico|Bricherasio|Brienno|Brienza|Briga Alta|Briga Novarese|Brignano Gera Dadda|Brignano Frascata|Brindisi|Brindisi Montagna|Brinzio|Briona|Brione|Briosco|Brisighella|Brissago Valtravaglia|Brissogne|Brittoli|Brivio|Broccostella|Brogliano|Brognaturo|Brolo|Brondello|Broni|Bronte|Bronzolo|Brossasco|Brosso|Brovello Carpugnino|Brozolo|Brugherio|Brugine|Brugnato|Brugnera|Bruino|Brumano|Brunate|Brunello|Brunico|Bruno|Brusaporto|Brusasco|Brusciano|Brusimpiano|Brusnengo|Brusson|Bruzolo|Bruzzano Zeffirio|Bubbiano|Bubbio|Buccheri|Bucchianico|Bucciano|Buccinasco|Buccino|Bucine|Budduso|Budoia|Budoni|Budrio|Buggerru|Buggiano|Buglio In Monte|Bugnara|Buguggiate|Buja|Bulciago|Bulgarograsso|Bultei|Bulzi|Buonabitacolo|Buonalbergo|Montebello Sul Sangro|Buonconvento|Buonvicino|Burago Di Molgora|Burcei|Burgio|Burgos|Buriasco|Burolo|Buronzo|Busachi|Busalla|Busano|Busca|Buscate|Buscemi|Buseto Palizzolo|Busnago|Bussero|Busseto|Bussi Sul Tirino|Busso|Bussolengo|Bussoleno|Busto Arsizio|Busto Garolfo|Butera|Buti|Buttapietra|Buttigliera Alta|Buttigliera Dasti|Buttrio|San Paolo Dargon|Cabella Ligure|Castello Cabiaglio|Cabiate|Cabras|Caccamo|Poggio Sannita|Caccuri|Cadegliano Viconago|Cadelbosco Di Sopra|Cadeo|Caderzone Terme|Cadoneghe|Cadorago|Caerano Di San Marco|Cafasse|Caggiano|Cagli|Cagliari|Caglio|Cagnano Varano|Cagnano Amiterno|Cagno|Caianello|Caiazzo|Caines|Caino|Caiolo|Cairano|Cairate|Cairo Montenotte|Caivano|Calabritto|Calalzo Di Cadore|Calamandrana|Calamonaci|Calangianus|Calanna|Calasca Castiglione|Calascibetta|Calascio|Calasetta|Calatabiano|Calatafimi Segesta|Lungavilla|Calcata|Calceranica Al Lago|Calci|Calciano|Calcinaia|Calcinate|Calcinato|Calcio|Calco|Caldaro Sulla Strada Del Vino|Caldarola|Calderara Di Reno|Caldes|Caldiero|Caldogno|Caldonazzo|Calendasco|Calenzano|Calestano|Calice Ligure|Calice Al Cornoviglio|Calimera|Calitri|Calizzano|Callabiana|Calliano|Calliano|Calolziocorte|Calopezzati|Calosso|Caloveto|Caltabellotta|Caltagirone|Caltanissetta|Caltavuturo|Caltignaga|Calto|Caltrano|Calusco Dadda|Caluso|Calvagese Della Riviera|Calvanico|Calvatone|Calvello|Calvene|Calvenzano|Calvera|Calvi|Calvi Risorta|Calvi Dellumbria|Calvignano|Calvignasco|Calvisano|Calvizzano|Camagna Monferrato|Camaiore|Camandona|Camastra|Cambiago|Cambiano|Cambiasca|Camburzano|Santelena Sannita|Camerana|Camerano|Camerano Casasco|Camerata Picena|Camerata Cornello|Camerata Nuova|Cameri|Camerino|Camerota|Camigliano|Camini|Camino|Camino Al Tagliamento|Camisano|Camisano Vicentino|Cammarata|Camogli|Chamois|Campagna|Campagna Lupia|Castel Campagnano|Campagnano Di Roma|Campagnatico|Campagnola Cremasca|Campagnola Emilia|Campana|Camparada|Campegine|Campello Sul Clitunno|Campertogno|Campi Salentina|Campi Bisenzio|Campiglia Marittima|Valprato Soana|Campiglia Dei Berici|Campiglione Fenile|Campione Ditalia|Campitello Di Fassa|Campli|Campo Calabro|Campobasso|Campobello Di Licata|Campobello Di Mazara|Campochiaro|Campodarsego|Campodenno|Campo Di Giove|Campodimele|Campodipietra|Campo Di Trens|Campodolcino|Campodoro|Campofelice Di Roccella|Campofelice Di Fitalia|Campofilone|Campofiorito|Campoformido|Campofranco|Campo Ligure|Campogalliano|Champorcher|Campolattaro|Campoli Del Monte Taburno|Campoli Appennino|Campolieto|Campolongo Maggiore|Campomaggiore|Campomarino|Campomorone|Campo Nellelba|Camponogara|Campora|Camporeale|Camporgiano|Camporosso|Camporotondo Etneo|Camporotondo Di Fiastrone|Camposampiero|Campo San Martino|Camposano|Camposanto|Campospinoso|Campotosto|Campo Tures|Camugnano|Canale|Canale Dagordo|Canale Monterano|Canal San Bovo|Canaro|Canazei|Cancellara|Cancello Ed Arnone|Canda|Candela|Candelo|Candia Lomellina|Candia Canavese|Candiana|Candida|Candidoni|Candiolo|Canegrate|Canelli|Orvinio|Canepina|Caneva|Canicatti|Canicattini Bagni|Canino|Canischio|Canistro|Canna|Cannalonga|Cannara|Cannero Riviera|Canneto Sulloglio|Canneto Pavese|Cannobio|Cannole|Canolo|Canonica Dadda|Canosa Di Puglia|Canosa Sannita|Canosio|Cansano|Cantagallo|Cantalice|Cantalupa|Cantalupo Ligure|Cantalupo Nel Sannio|Cantalupo In Sabina|Mandela|Cantarana|Cantello|Canterano|Cantiano|Cantoira|Cantu|Canzano|Canzo|Caorle|Caorso|Capaccio Paestum|Capaci|Capalbio|Capannoli|Capannori|Capena|Capergnanica|Capestrano|Capiago Intimiano|Capistrano|Capistrello|Capitignano|Capizzi|Capizzone|Ponte Nelle Alpi|Capodimonte|Capo Di Ponte|Capo Dorlando|Capodrise|Capoliveri|Capolona|Caponago|Caporciano|Caposele|Capoterra|Capovalle|Cappadocia|Cappella Maggiore|Cappella Cantone|Cappella De Picenardi|Cappelle Sul Tavo|Capracotta|Capraia E Limite|Capraia Isola|Capralba|Capranica Prenestina|Capranica|Marzabotto|Caprarica Di Lecce|Caprarola|Caprauna|Caprese Michelangelo|Caprezzo|Capri Leone|Capri|Capriana|Capriano Del Colle|Capriata Dorba|Capriate San Gervasio|Capriati A Volturno|Caprie|Capriglia Irpina|Capriglio|Caprile|Caprino Veronese|Caprino Bergamasco|Capriolo|Capriva Del Friuli|Capua|Capurso|Caraffa Di Catanzaro|Caraffa Del Bianco|Caraglio|Caramagna Piemonte|Caramanico Terme|Carano|Carapelle|Carapelle Calvisio|Carasco|Carassai|Carate Brianza|Carate Urio|Caravaggio|Caravate|Caravino|Caravonica|Carbognano|Carbonara Scrivia|Villasimius|Carbonara Di Nola|Carbonara Al Ticino|Carbonate|Carbone|Carbonera|Carbonia|Carcare|Carceri|Carcoforo|Cardano Al Campo|Carde|Cardeto|Cardinale|Cardito|Careggine|Carema|Carenno|Carentino|Careri|Caresana|Caresanablot|Carezzano|Carfizzi|Cargeghe|Cariati|Carife|Carignano|Carimate|Carinaro|Carini|Carinola|Carisio|Carisolo|Carlantino|Carlazzo|Carlentini|Carlino|Carloforte|Carlopoli|Carmagnola|Carmiano|Carmignano|Carmignano Di Brenta|Carnago|Carnate|Cornedo Allisarco|Carobbio Degli Angeli|Carolei|Carona|Caronia|Caronno Pertusella|Caronno Varesino|Carosino|Carovigno|Carovilli|Carpaneto Piacentino|Carpanzano|Carpegna|Carpenedolo|Carpeneto|Carpi|Carpiano|Carpignano Salentino|Carpignano Sesia|Cura Carpignano|Carpineti|Carpineto Sinello|Carpineto Della Nora|Carpineto Romano|Carpino|Carpinone|Carrara|Carre|Carrega Ligure|Carro|Carrodano|Carrosio|Carru|Carsoli|Cartigliano|Cartignano|Cartoceto|Cartosio|Cartura|Carugate|Carugo|Carunchio|Carvico|Carzano|Casabona|Casacalenda|Casacanditella|Casagiove|Casalanguida|Casalattico|Casalbeltrame|Casalbordino|Casalbore|Casalborgone|Casalbuono|Casalbuttano Ed Uniti|Casal Cermelli|Casalciprano|Casal Di Principe|Casalduni|Casale Litta|Casale Corte Cerro|Casale Di Scodosia|Casale Marittimo|Casale Sul Sile|Casalecchio Di Reno|Casale Cremasco Vidolasco|Casaleggio Boiro|Casaleggio Novara|Casale Monferrato|Casaleone|Casaletto Lodigiano|Casaletto Spartano|Casaletto Ceredano|Casaletto Di Sopra|Casaletto Vaprio|Casalfiumanese|Casalgrande|Casalgrasso|Casal Velino|Casalincontrada|Casalino|Casalmaggiore|Casalmaiocco|Casalmorano|Casalmoro|Casalnoceto|Villapiana|Casalnuovo Monterotaro|Casalnuovo Di Napoli|San Paolo Albanese|Casaloldo|Casalpusterlengo|Casalromano|Casalserugo|Pozzaglio Ed Uniti|Trinitapoli|Casaluce|Casalvecchio Di Puglia|Casalvecchio Siculo|Casalvieri|Casalvolone|Casalzuigno|Casamarciano|Casamassima|Casamicciola Terme|Casandrino|Casanova Lerrone|Casanova Elvo|Casanova Lonati|Casape|Casapinta|Casaprota|Casapulla|Casarano|Casargo|Casarile|Casarza Ligure|Casarsa Della Delizia|Casasco|Casatenovo|Casatisma|Casavatore|Casazza|Cascia|Casciago|Cascina|San Giacomo Vercellese|Cascinette Divrea|Casei Gerola|Caselette|Casella|Caselle Lurani|Caselle In Pittari|Caselle Torinese|Caselle Landi|Scandicci|Caserta|Casier|Casignana|Casina|Castelsilano|Castel Di Casio|Casirate Dadda|Caslino Derba|Casnate Con Bernate|Casnigo|Casola In Lunigiana|Casola Di Napoli|Casola Valsenio|Casole Delsa|Casoli|Casorate Sempione|Casorate Primo|Casorezzo|Casoria|Casorzo|Caspoggio|Cassacco|Cassago Brianza|Cassano Irpino|Cassano Delle Murge|Cassano Valcuvia|Cassano Allionio|Cassano Dadda|Cassano Magnago|Cassaro|Cassiglio|Pero|Cassina De Pecchi|Cassina Rizzardi|Cassinasco|Cassina Valsassina|Cassine|Cassinelle|Cassinetta Di Lugagnano|Cassino|Cassola|Cassolnovo|Castel Castagna|Castagnaro|Castagneto Carducci|Castagneto Po|Castagnito|Castagnole Monferrato|Castagnole Piemonte|Castagnole Delle Lanze|Castana|Castellumberto|Castano Primo|Casteggio|Castegnato|Castegnero|Castelbaldo|Castel Baronia|Castelbelforte|Castelbellino|Castelbello Ciardes|Castelbianco|Castel Boglione|Castel Bolognese|Castelbottaccio|Castelbuono|Castelcivita|Servigliano|Castelcovati|Castelcucco|Casteldaccia|Castel Daiano|Castel Dario|Castel Dazzano|Castelli Calepio|Casteldelci|Casteldelfino|Castel Del Giudice|Castel Del Monte|Castel Del Piano|Castel Del Rio|Casteldidone|Castel Di Ieri|Castel Di Iudica|Castel Di Lama|Castel Di Lucio|Castel Di Sangro|Castel Di Sasso|Castel Di Tora|Castelfidardo|Castelfiorentino|Castel Focognano|Castelfondo|Castelforte|Castelfranci|Castelfranco In Miscano|Castelfranco Emilia|Castrolibero|Castel Vittorio|Castelfranco Veneto|Castelfranco Di Sotto|Castel Frentano|Castel Gabbiano|Castel Gandolfo|Castel Giorgio|Castel Goffredo|Castelgomberto|Castelgrande|Castel Guelfo Di Bologna|Castelguglielmo|Castelguidone|Castellabate|Castellafiume|Castellalfero|Castellalto|Castellammare Di Stabia|Castellammare Del Golfo|Castellamonte|Castellana Grotte|Castellana Sicula|Castellaneta|Castellania Coppi|Castellanza|Castellarano|Castellar Guidobono|Castellaro|Castellarquato|Castellazzara|Castellazzo Bormida|Castellazzo Novarese|Castelleone Di Suasa|Castelleone|Castellero|Castelletto Cervo|Castelletto Derro|Castelletto Di Branduzzo|Castelletto Dorba|Castelletto Merli|Castelletto Molina|Castelletto Monferrato|Castelletto Stura|Castelletto Sopra Ticino|Castelletto Uzzone|Castelli|Castellina In Chianti|Castellinaldo Dalba|Castellina Marittima|Castellino Del Biferno|Castellino Tanaro|Castelliri|Castello Del Matese|Castelveccana|Castel Condino|Castello Dagogna|Castello Dargile|Castello Dellacqua|Castello Di Brianza|Castello Di Cisterna|Castello Molina Di Fiemme|Castello Di Godego|Castello Tesino|Castellucchio|Castelmauro|Castelluccio Dei Sauri|Castelluccio Inferiore|Castelverrino|Castelluccio Superiore|Castelluccio Valmaggiore|Castel Madama|Castel Maggiore|Castelmagno|Castelmarte|Castelmassa|Castel Mella|Castelmezzano|Castelmola|Castel Morrone|Castelnovetto|Castelnuovo Di Ceva|Castelnovo Bariano|Castelnuovo|Castelnovo Del Friuli|Castelnovo Di Sotto|Castelnovo Ne Monti|Castelnuovo Bozzente|Castelnuovo Della Daunia|Castelnuovo Parano|Castelnuovo Di Farfa|Castelnuovo Del Garda|Castelnuovo Belbo|Castelnuovo Berardenga|Castelnuovo Bocca Dadda|Castelnuovo Bormida|Castelnuovo Calcea|Castelnuovo Cilento|Castelnuovo Don Bosco|Castelnuovo Di Conza|Castelnuovo Di Garfagnana|Castelnuovo Di Porto|Castelnuovo Magra|Castelnuovo Nigra|Castelnuovo Rangone|Castelnuovo Scrivia|Castelnuovo Di Val Di Cecina|Castelpagano|Castelpetroso|Castelpizzuto|Castelplanio|Castelpoto|Castelraimondo|Castel Ritaldi|Castel Rocchero|Castelrotto|Castel Rozzone|Castel San Giorgio|Castel San Giovanni|Castel San Lorenzo|Castel San Niccolo|Castel San Pietro Terme|Castel San Pietro Romano|Castelsantangelo Sul Nera|Castel Santangelo|Castel Santelia|Castel San Vincenzo|Castelsaraceno|Castelsardo|Castelseprio|Castelspina|Casteltermini|Castelvecchio Di Rocca Barbena|Castelvecchio Calvisio|Castelvecchio Subequo|Castelvenere|Verres|Castelvetere Sul Calore|Castelvetere In Val Fortore|Caulonia|Castelvetrano|Castelvetro Di Modena|Castelvetro Piacentino|Castel Viscardo|Castelvisconti|Castel Volturno|Castenaso|Castenedolo|Chatillon|Castiglione Dei Pepoli|Castiglione Di Sicilia|Castiglione Messer Marino|Castiglione Olona|Castiglione Cosentino|Castiglione Chiavarese|Castiglione Di Garfagnana|Castiglione Dadda|Castiglione Del Genovesi|Castiglione Torinese|Castiglione A Casauria|Castiglione Del Lago|Castiglione Della Pescaia|Colledara|Castiglione Delle Stiviere|Castiglione Dorcia|Castiglione Falletto|Castiglione In Teverina|Castiglione Messer Raimondo|Castiglione Tinella|Castiglion Fibocchi|Castiglion Fiorentino|Castignano|Castilenti|Castino|Castione Della Presolana|Castione Andevenno|Castions Di Strada|Castiraga Vidardo|Casto|Castorano|Castrezzato|Castri Di Lecce|Castrignano De Greci|Castrignano Del Capo|Castro|Castro Dei Volsci|Castrocaro Terme E Terra Del Sole|Castrocielo|Castrofilippo|Enna|Castronno|Castronovo Di Sicilia|Castronuovo Di Santandrea|Castropignano|Castroreale|Castroregio|Castrovillari|Catania|Catanzaro|Catenanuova|Catignano|Cattolica Eraclea|Cattolica|Cautano|Cava Manara|Cava De Tirreni|Cavaglia|Cavaglietto|Cavaglio Dagogna|Cavagnolo|Cavaion Veronese|Cavalese|Cavallerleone|Cavallermaggiore|Cavallino|Cavallirio|Cavareno|Cavargna|Cavaria Con Premezzo|Cavarzere|Cavaso Del Tomba|Cavasso Nuovo|Cavatore|Jesolo|Cavazzo Carnico|Cave|Cavedago|Cavedine|Cavenago Dadda|Cavenago Di Brianza|Cavernago|Cavezzo|Cavizzana|Cavour|Cavriago|Cavriana|Cavriglia|Cazzago San Martino|Cazzago Brabbia|Cazzano Santandrea|Cazzano Di Tramigna|Ceccano|Cecima|Cecina|Cedegolo|Cedrasco|Cefala Diana|Cefalu|Ceggia|Ceglie Messapica|Celano|Celenza Sul Trigno|Celenza Valfortore|Celico|Cella Monte|Cella Dati|Cellamare|Cellara|Cellarengo|Cellatica|Celle Enomondo|Celle Di Macra|Celle Di San Vito|Celle Ligure|Celle Di Bulgheria|Celleno|Cellere|Cellino San Marco|Cellino Attanasio|Cenadi|Cenate Sopra|Cenate Sotto|Cencenighe Agordino|Cene|Ceneselli|Cengio|Centallo|Cento|Centola|Centuripe|Centrache|Cepagatti|Ceppaloni|Ceppo Morelli|Ceprano|Cerami|Ceranesi|Cerano Dintelvi|Cerano|Ceranova|Ceraso|Cercemaggiore|Cercenasco|Cercepiccola|Cerchiara Di Calabria|Cerchio|Cercino|Cercivento|Cercola|Cerda|Ceres|Cerea|Ceregnano|Cerenzia|Ceresara|Cereseto|Ceresole Alba|Ceresole Reale|Cerete|Cerreto Grue|Ceretto Lomellina|Cergnago|Ceriale|Ceriana|Ceriano Laghetto|Cerignale|Cerignola|Cerisano|Cermenate|Cermignano|Cerreto Laziale|Cernobbio|Cernusco Lombardone|Cernusco Sul Naviglio|Cerreto Desi|Cerreto Sannita|Cerreto Di Spoleto|Cerreto Dasti|Cerreto Guidi|Cerretto Langhe|Cerrina Monferrato|Cerrione|Cerro Tanaro|Cerro Al Volturno|Cerro Al Lambro|Cerro Maggiore|Cerro Veronese|Cersosimo|Certaldo|Certosa Di Pavia|Cerva|Cervara Di Roma|Cervarese Santa Croce|Cervaro|Cervasca|Cervatto|Cerveno|Cervere|Cervesina|Cerveteri|Cervia|Cervicati|Cervignano Dadda|Cervignano Del Friuli|Cervinara|Cervino|Cervo|Cerzeto|Cesa|Cesana Brianza|Cesana Torinese|Cesano Boscone|Cesano Maderno|Cesara|Cesaro|Cesate|Cesena|Cesenatico|Cesinali|Cesiomaggiore|Cesio|Cessalto|Cessaniti|Cessapalombo|Cessole|Cetara|Ceto|Cetona|Cetraro|Ceva|Cevo|Challand Saint Anselme|Challand Saint Victor|Chambave|Champdepraz|Charvensod|Cherasco|Cheremule|Chialamberto|Chiampo|Chianche|Chianciano Terme|Chianni|Chianocco|Chiaramonte Gulfi|Chiaramonti|Chiarano|Chiaravalle|Chiaravalle Centrale|Chiari|Chiaromonte|Chiauci|Chiavari|Chiavenna|Chiaverano|Chienes|Chieri|Chiesa In Valmalenco|Chiesanuova|Chies Dalpago|Chiesina Uzzanese|Chieti|Chieuti|Chieve|Chignolo Disola|Chignolo Po|Chioggia|Chiomonte|Chions|Chiopris Viscone|Chitignano|Chiuduno|Chiuppano|Chiuro|Chiusa|Chiusa Di Pesio|Chiusa Sclafani|Chiusa Di San Michele|Chiusaforte|Chiusanico|Chiusano Dasti|Chiusano Di San Domenico|Chiusavecchia|Chiusdino|Chiusi|Chiusi Della Verna|Chivasso|Cianciana|Canossa|Crocetta Del Montello|Cibiana Di Cadore|Cicagna|Cicala|Cicciano|Cicerale|Ciciliano|Cicognolo|Ciconio|Cigliano|Ciglie|Cigognola|Cigole|Cilavegna|Cimadolmo|Cimbergo|Cimina|Ciminna|Cimitile|Tavernole Sul Mella|Cimolais|Cimone|Cinaglio|Cineto Romano|Cingia De Botti|Cingoli|Cinigiano|Cinisello Balsamo|Cinisi|Cino|Cinquefrondi|Cintano|Cinte Tesino|Cinto Euganeo|Cinto Caomaggiore|Cinzano|Ciorlano|Santa Maria Del Cedro|Cipressa|Circello|Cirie|Cirigliano|Cirimido|Ciro|Ciro Marina|Cis|Cisano Bergamasco|Cisano Sul Neva|Ciserano|Cislago|Cisliano|Cison Di Valmarino|Cissone|Cisterna Dasti|Cisterna Di Latina|Cisternino|Citerna|Cittadella|Citta Della Pieve|Citta Di Castello|Cittaducale|Cittanova|Cittareale|Citta Santangelo|Cittiglio|Civate|Civezza|Civezzano|Civiasco|Cividale Del Friuli|Cividate Al Piano|Cividate Camuno|Civita|Civitacampomarano|Civita Castellana|Civita Dantino|Lanuvio|Civitaluparella|Civitanova Del Sannio|Civitanova Marche|Civitaquana|Duronia|Civitavecchia|Civitella In Val Di Chiana|Civitella Messer Raimondo|Civitella Di Romagna|Civitella Alfedena|Civitella Casanova|Civitella Dagliano|Civitella Del Tronto|Civitella Paganico|Civitella Roveto|Civitella San Paolo|Civo|Claino Con Osteno|Ubiale Clanezzo|Claut|Clauzetto|Clavesana|Claviere|Cles|Cleto|Clivio|Cloz|Clusone|Coassolo Torinese|Coazze|Coazzolo|Coccaglio|Cocconato|Cocquio Trevisago|Cocullo|Codevigo|Codevilla|Codigoro|Codogne|Codogno|Codroipo|Codrongianos|Coggiola|Cogliate|Cogne|Cogoleto|Cogollo Del Cengio|Cogorno|Colazza|Colere|Colfelice|Coli|Colico|Collalto Sabino|Collarmele|Collazzone|Colle Sannita|Colle Di Val Delsa|Colle Umberto|Collebeato|Colle Brianza|Collecchio|Collecorvino|Colle Danchise|Colledimacine|Colledimezzo|Colle Di Tora|Colleferro|Collegiove|Collegno|Collelongo|Collepardo|Collepasso|Collepietro|Colleretto Castelnuovo|Colleretto Giacosa|Collesalvetti|Colle San Magno|Collesano|Colle Santa Lucia|Colletorto|Collevecchio|Colli Del Tronto|Colli A Volturno|Colliano|Colli Sul Velino|Collinas|Collio|Collobiano|Colloredo Di Monte Albano|Colmurano|Colobraro|Cologna Veneta|Cologne|Cologno Al Serio|Cologno Monzese|Colognola Ai Colli|Colonna|Colonnella|Colonno|Colorina|Colorno|Colosimi|Colturano|Colzate|Comabbio|Comacchio|Comano|Comazzo|Comeglians|Santo Stefano Di Cadore|Comelico Superiore|Comerio|Comezzano Cizzago|Comignago|Comiso|Comitini|Comiziano|Commessaggio|Commezzadura|Como|Compiano|Comunanza|Valsolda|Comun Nuovo|Cona|Conca Della Campania|Conca Dei Marini|Conca Casale|Concamarise|Concerviano|Concesio|Concordia Sagittaria|Concordia Sulla Secchia|Concorezzo|Condofuri|Condove|Condro|Conegliano|Confienza|Configni|Conflenti|Coniolo|Conselice|Conselve|Contessa Entellina|Contigliano|Contrada|Controguerra|Controne|Contursi Terme|Conversano|Conza Della Campania|Conzano|Copertino|Copiano|Copparo|Corana|Corato|Corbara|Corbetta|Corbola|Corchiano|Corciano|Cordenons|Cordignano|Cordovado|Coreglia Ligure|Coreglia Antelminelli|Coreno Ausonio|Corfinio|Cori|Coriano|Corigliano Dotranto|Corinaldo|Corio|Corleone|Corleto Perticara|Corleto Monforte|Courmayeur|Cormano|Cormons|Corna Imagna|Cornalba|Cornaredo|Cornate Dadda|Cornedo Vicentino|Cornegliano Laudense|Corneliano Dalba|Tarquinia|Corniglio|Corno Di Rosazzo|Corno Giovine|Cornovecchio|Cornuda|Morimondo|Correggio|Correzzana|Correzzola|Corrido|Corridonia|Corropoli|Corsano|Corsico|Corsione|Cortaccia Sulla Strada Del Vino|Cortale|Cortandone|Cortanze|Cortazzone|Corte Brugnatella|Corte De Cortesi Con Cignone|Corte De Frati|Corte Franca|Cortemaggiore|Cortemilia|Corteno Golgi|Cortenova|Cortenuova|Corte Palasio|Cortiglione|Cortina Sulla Strada Del Vino|Cortino|Cortona|Corvara|Corvara In Badia|Corvino San Quirico|Corzano|Coseano|Cosenza|Cosio Darroscia|Cosio Valtellino|Cosoleto|Cossano Canavese|Cossano Belbo|Cossato|Cosseria|Cossignano|Cossogno|Cossoine|Cossombrato|Costa Vescovato|Costa Valle Imagna|Costa Di Rovigo|Costabissara|Costacciaro|Costa De Nobili|Costa Di Mezzate|Costa Serina|Costa Masnaga|Costanzana|Costarainera|Costa Volpino|Costermano Sul Garda|Costigliole Dasti|Costigliole Saluzzo|Cotignola|Crotone|Cotronei|Cottanello|Covo|Cozzo|Craco|Crandola Valsassina|Cravagliana|Cravanzana|Craveggia|Creazzo|Crecchio|Credaro|Credera Rubbiano|Crema|Cremella|Cremenaga|Cremeno|Cremia|Cremolino|Cremona|Cremosano|Crescentino|Crespadoro|Crespiatica|Crespino|Cressa|Crevacuore|Crevalcore|Crevoladossola|Crispano|Crispiano|Crissolo|Crocefieschi|Crodo|Crognaleto|Cropalati|Cropani|Crosia|Crosio Della Valle|Crotta Dadda|Crova|Croviana|Crucoli|Cuasso Al Monte|Veronella|Cuccaro Vetere|Cucciago|Cuceglio|Cuggiono|Cugliate Fabiasco|Cuglieri|Cugnoli|Cumiana|Cumignano Sul Naviglio|Cunardo|Cuneo|Cunico|Cuorgne|Cupello|Cupra Marittima|Cupramontana|Curcuris|Cureggio|Curiglia Con Monteviasco|Curinga|Curino|Curno|Curon Venosta|Cursi|Curtarolo|Curtatone|Curti|Cusago|Cusano Mutri|Cusano Milanino|Cusino|Cusio|Custonaci|Cutro|Cutrofiano|Cuveglio|Cuvio|Daiano|Dairago|Dalmine|Dambel|Danta Di Cadore|Darfo Boario Terme|Dasa|Davagna|Daverio|Davoli|Dazio|Decimomannu|Decimoputzu|Decollatura|Dego|Deiva Marina|Delebio|Delia|Delianuova|Deliceto|Dello|Demonte|Denice|Denno|Dernice|Derovere|Deruta|Dervio|Desana|Desenzano Del Garda|Desio|Desulo|Diamante|Scigliano|Diano Dalba|Teggiano|Diano Arentino|Diano Castello|Diano Marina|Diano San Pietro|Dicomano|Dignano|Dinami|Dipignano|Diso|Divignano|Dizzasco|Dobbiaco|Doberdo Del Lago|Dogliani|Dogliola|Dogna|Dolce|Dolceacqua|Dolcedo|Dolegna Del Collio|Dolianova|San Dorligo Della Valle Dolina|Dolo|Dolzago|Domanico|Domaso|Domegge Di Cadore|Domicella|Domodossola|Domus De Maria|Domusnovas|Donnas|Donato|Dongo|Donori|Dorgali|Dorio|Dormelletto|Dorno|Dorzano|Dosolo|Dossena|Dosso Del Liro|Doues|Dovadola|Dovera|Dozza|Dragoni|Drapia|Drena|Drenchia|Dresano|Dro|Dronero|Druento|Druogno|Dualchi|Dubino|Dueville|Dugenta|Duino Aurisina|Dumenza|Duno|Durazzano|Dusino San Michele|Eboli|Edolo|Egna|Elice|Elini|Ello|Elmas|Elva|Emarese|Empoli|Endine Gaiano|Enego|Enemonzo|Entracque|Entratico|Envie|Episcopia|Eraclea|Erba|Erbe|Erbezzo|Erbusco|Erchie|Erice|Erli|Erto E Casso|Erve|Esanatoglia|Escalaplano|Escolca|Exilles|Esine|Esino Lario|Esperia|Esporlatu|Este|Esterzili|Etroubles|Eupilio|Fabbrica Curone|Fabbrico|Fabriano|Fabrica Di Roma|Fabrizia|Fabro|Faedis|Faedo Valtellino|Faedo|Faenza|Faeto|Fagagna|Faggeto Lario|Faggiano|Fagnano Castello|Fagnano Alto|Fagnano Olona|Fai Della Paganella|Faicchio|Falcade|Falciano Del Massico|Falconara Marittima|Falconara Albanese|Falcone|Faleria|Falerna|Falerone|Fallo|Faloppio|Falvaterra|Falzes|Fanano|Fanna|Fano|Fano Adriano|Fara Gera Dadda|Fara Olivana Con Sola|Fara Novarese|Fara In Sabina|Fara Filiorum Petri|Fara San Martino|Fara Vicentino|Fardella|Farigliano|Farindola|Farini|Farnese|Farra Disonzo|Farra Di Soligo|Fasano|Fascia|Fauglia|Faule|Favale Di Malvaro|Valsinni|Favara|Favignana|Favria|Orco Feglino|Feisoglio|Feletto|Felino|Felitto|Felizzano|Feltre|Fenegro|Fenestrelle|Fenis|Ferentillo|Ferentino|Ferla|Fermignano|Fermo|Ferno|Feroleto Antico|Feroleto Della Chiesa|Pianopoli|Ferrandina|Ferrara|Ferrara Di Monte Baldo|Ferrazzano|Ferrera Di Varese|Ferrera Erbognone|Moncenisio|Ferrere|Ferriere|Ferruzzano|Fraconalto|Fiamignano|Fiano Romano|Fiano|Fiastra|Fiave|Poggio San Vicino|Ficarazzi|Ficarolo|Ficarra|Ficulle|Fie Allo Sciliar|Fierozzo|Fiesco|Fiesole|Fiesse|Fiesso Umbertiano|Fiesso Dartico|Figino Serenza|Figline Vegliaturo|Gonnosno|Filacciano|Filadelfia|Filago|Filandari|Filattiera|Filettino|Filetto|Filiano|Filighera|Filignano|Filogaso|Filottrano|Finale Emilia|Finale Ligure|Fino Del Monte|Fino Mornasco|Fiorano Al Serio|Fiorano Modenese|Fiorano Canavese|Fiorenzuola Darda|Firenze|Firenzuola|Firmo|Fisciano|Fiumalbo|Fiumara|Fiume Veneto|Fiumedinisi|Fiumefreddo Di Sicilia|Fiumefreddo Bruzio|Fiuminata|Fivizzano|Flaibano|Flero|Floresta|Floridia|Florinas|Flumeri|Fluminimaggiore|Flussio|Fobello|Foggia|Foglianise|Fogliano Redipuglia|Foglizzo|Foiano Della Chiana|Foiano Di Val Fortore|Folgaria|Folignano|Foligno|Follina|Follo|Follonica|Fombio|Fondachelli Fantina|Fondi|Fondo|Fonni|Fontainemore|Fontana Liri|Fontanelice|Fontanafredda|Fontanarosa|Fontanella|Fontanellato|Fontanelle|Fontaneto Dagogna|Fontanetto Po|Fontanigorda|Fontanile|Fontaniva|Fonte|Fontecchio|Fontechiari|Fontegreca|Fonteno|Fontevivo|Fonzaso|Foppolo|Forano|San Giovanni Teatino|Force|Forchia|Forcola|Fordongianus|Forenza|Foresto Sparso|Forgaria Nel Friuli|Forino|Forio|Forli Del Sannio|Forli|Forlimpopoli|Formazza|Formello|Formia|Formicola|Formigara|Formigine|Formigliana|Fornace|Fornelli|Tonezza Del Cimone|Forni Avoltri|Forni Di Sopra|Forni Di Sotto|Forno Canavese|Fornovo San Giovanni|Fornovo Di Taro|Forte Dei Marmi|Fortezza|Fortunago|Forza Dagro|Fosciandora|Fosdinovo|Fossa|Fossalto|Fossacesia|Fossalta Di Piave|Fossalta Di Portogruaro|Fossano|Fossato Serralta|Fossato Di Vico|Montebello Jonico|Fosso|Fossombrone|Foza|Frabosa Soprana|Frabosa Sottana|Fragagnano|Fragneto Labate|Fragneto Monforte|Fraine|Framura|Francavilla Bisio|Francavilla Dete|Francavilla Fontana|Francavilla Angitola|Francavilla Al Mare|Francavilla Marittima|Francavilla Di Sicilia|Francavilla In Sinni|Francica|Francofonte|Francolise|Frascaro|Frascarolo|Frascati|Frascineto|Frassilongo|Frassinelle Polesine|Frassinello Monferrato|Frassineto Po|Frassinetto|Frassino|Frassinoro|Frasso Telesino|Frasso Sabino|Umbertide|Fratta Todina|Fratta Polesine|Frattamaggiore|Frattaminore|Fratte Rosa|Frazzano|Fregona|Fresagrandinaria|Fresonara|Frigento|Frignano|Villa Di Briano|Frinco|Frisa|Frisanco|Front|Frontino|Frontone|Frosinone|Frosolone|Frossasco|Frugarolo|Fubine Monferrato|Fucecchio|Fuipiano Valle Imagna|Fumane|Fumone|Funes|Furci|Furci Siculo|Furnari|Furore|Furtei|Fuscaldo|Fusignano|Fusine|Futani|Gabbioneta Binanuova|Gabiano|Gabicce Mare|Gaby|Gadesco Pieve Delmona|Gadoni|Gaeta|Gaggi|Gaggiano|Gaggio Montano|Gaglianico|Gagliano Castelferrato|Gagliano Aterno|Gagliano Del Capo|Gagliato|Gagliole|Gaiarine|Gaiba|Gaiola|Gaiole In Chianti|Gairo|Gais|Galati Mamertino|Galatina|Galatone|Galatro|Galbiate|Galeata|Galgagnano|Gallarate|Gallese|Galliate Lombardo|Galliate|Galliavola|Gallicano|Gallicano Nel Lazio|Gallicchio|Galliera|Galliera Veneta|Gallinaro|Gallio|Gallipoli|Gallo Matese|Gallodoro|Galluccio|Galtelli|Galzignano Terme|Gamalero|Gambara|Gambarana|Gambasca|Gambassi Terme|Gambatesa|Gambellara|Gamberale|Gambettola|Gambolo|Gambugliano|Gandellino|Gandino|Gandosso|Gangi|Garaguso|Garbagna|Garbagna Novarese|Garbagnate Milanese|Garbagnate Monastero|Garda|Gardone Riviera|Gardone Val Trompia|Garessio|Gargallo|Gargazzone|Gargnano|Garlasco|Garlate|Garlenda|Garniga Terme|Garzeno|Garzigliana|Gasperina|Gassino Torinese|Gattatico|Gatteo|Gattinara|Gavardo|Gavello|Gaverina Terme|Gavi|Gavignano|Gavirate|Gavoi|Gavorrano|Gazoldo Degli Ippoliti|Gazzada Schianno|Gazzaniga|Gazzo|Gazzo Veronese|Gazzola|Gazzuolo|Gela|Gemmano|Gemona Del Friuli|Gemonio|Genazzano|Genga|Genivolta|Genola|Genoni|Genova|Genuri|Genzano Di Lucania|Genzano Di Roma|Gera Lario|Gerace|Locri|Geraci Siculo|Gerano|Gerenzago|Gerenzano|Gergei|Germagnano|Germagno|Germignaga|Gerocarne|Gerola Alta|Gerre De Caprioli|Gesico|Gessate|Gessopalena|Gesturi|Gesualdo|Ghedi|Ghemme|Ghiffa|Ghilarza|Ghisalba|Ghislarengo|Giacciano Con Baruchella|Giaglione|Gianico|Giano Vetusto|Giano Dellumbria|Giardinello|Giardini Naxos|Giarole|Giarratana|Giarre|Giave|Giaveno|Giavera Del Montello|Giba|Gibellina|Gifflenga|Giffone|Giffoni Sei Casali|Giffoni Valle Piana|Gignese|Gignod|Gildone|Gimigliano|Ginestra|Ginestra Degli Schiavoni|Ginosa|Gioi|Gioia Del Colle|Gioia Sannitica|Gioia Dei Marsi|Gioia Tauro|Gioiosa Marea|Gioiosa Ionica|Giove|Giovinazzo|Giovo|Girasole|Girifalco|Gissi|Giuggianello|Giugliano In Campania|Giuliana|Giuliano Teatino|Giuliano Di Roma|Giulianova|Giungano|Giurdignano|Giussago|Giussano|Giustenice|Giustino|Giusvalla|Givoletto|Gizzeria|Glorenza|Sesta Godano|Godega Di Santurbano|Godiasco Salice Terme|Godrano|Goito|Golasecca|Golferenzo|Gombito|Gonars|Goni|Gonnosfanadiga|Gonnesa|Gonnoscodina|Gonnostramatza|Gonzaga|Gordona|Gorga|Gorgo Al Monticano|Gorgoglione|Gorgonzola|Goriano Sicoli|Gorizia|Gorlago|Gorla Maggiore|Gorla Minore|Gorle|Gornate Olona|Gorno|Goro|Gorreto|Gorzegno|Gosaldo|Gossolengo|Gottasecca|Gottolengo|Govone|Gozzano|Gradara|Gradisca Disonzo|Grado|Gradoli|Graffignana|Graffignano|Graglia|Gragnano|Gragnano Trebbiense|Grammichele|Grana|Granarolo Dellemilia|Grandate|Grandola Ed Uniti|Graniti|Granozzo Con Monticello|Grantola|Grantorto|Granze|Grassano|Grassobbio|Gratteri|Gravellona Lomellina|Gravellona Toce|Gravere|Gravina In Puglia|Gravina Di Catania|Grazzanise|Grazzano Badoglio|Greccio|Greci|Greggio|Gremiasco|Gressan|Gressoney La Trinite|Gressoney Saint Jean|Greve In Chianti|Grezzago|Grezzana|Griante|Gricignano Di Aversa|Grignasco|Grigno|Grimacco|Grimaldi|Grinzane Cavour|Grisignano Di Zocco|Grisolia|Grizzana Morandi|Grognardo|Gromo|Grondona|Grone|Grontardo|Gropello Cairoli|Gropparello|Groscavallo|Grosio|Grosotto|Grosseto|Grosso|Grottaferrata|Grottaglie|Grottaminarda|Grottammare|Grottazzolina|Grotte|Grotte Di Castro|Grotteria|Grottole|Grottolella|Gruaro|Grugliasco|Grumello Cremonese Ed Uniti|Grumello Del Monte|Grumento Nova|Grumo Appula|Grumo Nevano|Grumolo Delle Abbadesse|Guagnano|Gualdo|Gualdo Cattaneo|Gualdo Tadino|Gualtieri|Gualtieri Sicamino|Guamaggiore|Guanzate|Guarcino|Guardabosone|Guardamiglio|Guardavalle|Guarda Veneta|Guardea|Guardia Piemontese|Guardiagrele|Guardialfiera|Guardia Lombardi|Guardia Perticara|Guardiaregia|Guardia Sanframondi|Guardistallo|Guarene|Guasila|Guastalla|Guazzora|Gubbio|Gudo Visconti|Guglionesi|Guidizzolo|Guidonia Montecelio|Guiglia|Siziano|Guilmi|Gurro|Guspini|Gussago|Gussola|Hone|Jacurso|Idro|Iglesias|Igliano|Ilbono|Illasi|Illorai|Imbersago|Imer|Imola|Imperia|Impruneta|Inarzo|Incisa Scapaccino|Incudine|Induno Olona|Ingria|Intragna|Introbio|Introd|Introdacqua|Inverigo|Inverno E Monteleone|Inverso Pinasca|Inveruno|Invorio|Inzago|Jolanda Di Savoia|Ionadi|Irgoli|Irma|Irsina|Isasca|Isca Sullo Ionio|Ischia|Ischia Di Castro|Ischitella|Iseo|Isera|Isernia|Isili|Isnello|Isola Dasti|Isola Di Capo Rizzuto|Isola Del Liri|Isola Del Cantone|Madesimo|Isola Del Gran Sasso Ditalia|Isolabella|Isolabona|Isola Del Giglio|Isola Della Scala|Isola Delle Femmine|Isola Del Piano|Isola Di Fondra|Isola Vicentina|Isola Dovarese|Isola Rizza|Isola Santantonio|Isole Tremiti|Isorella|Ispani|Ispica|Ispra|Issiglio|Issime|Isso|Issogne|Vasto|Istrana|Itala|Itri|Ittireddu|Ittiri|Ivrea|Izano|Jelsi|Jenne|Jerago Con Orago|Jerzu|Jesi|Joppolo|Joppolo Giancaxio|Jovencan|Labico|Labro|La Cassa|Lacchiarella|Lacco Ameno|Lacedonia|Laces|Laconi|Laerru|Laganadi|Laghi|Laglio|Lagnasco|Lago|Lagonegro|Lagosanto|Lagundo|Lajatico|Laigueglia|Lainate|Laino|Laino Borgo|Laino Castello|Laion|Laives|Lallio|La Loggia|Lama Dei Peligni|La Maddalena|Lama Mocogno|Lambrugo|Lamon|La Morra|Lampedusa E Linosa|Lamporecchio|Lamporo|Lana|Lanciano|Landiona|Landriano|Langhirano|Langosco|Lanusei|Lanzada|Lanzo Torinese|Lapedona|Lapio|Lappano|Larciano|Lardirago|Larino|Lasa|La Salle|Lascari|Lasnigo|La Spezia|Las Plassas|Lastebasse|Lastra A Signa|Latera|Laterza|La Thuile|Latiano|Latina|Latisana|Latronico|Lattarico|Lauco|Laureana Di Borrello|Laureana Cilento|Lauregno|Laurenzana|Lauria|Lauriano|Laurino|Laurito|Lauro|Lavagna|Lavagno|La Valle Agordina|La Valle|Lavarone|Lavello|Lavena Ponte Tresa|Laveno Mombello|Lavenone|Laviano|Lavis|Lazise|Lazzate|Lecce Nei Marsi|Lecce|Lecco|Leffe|Leggiuno|Legnago|Legnano|Legnaro|Lei|Leini|Leivi|Lemie|Lendinara|Leni|Lenna|Leno|Lenola|Lenta|Lentate Sul Seveso|Lentella|Lentini|Leonessa|Leonforte|Leporano|Lequile|Lequio Tanaro|Lequio Berria|Lercara Friddi|Lerici|Lerma|Lesa|Lesegno|Lesignano De Bagni|Terenzo|Lesina|Lesmo|Lessolo|Lestizza|Letino|Letojanni|Lettere|Lettomanoppello|Lettopalena|Levanto|Levate|Leverano|Levice|Levico Terme|Levone|Lezzeno|Liberi|Librizzi|Licata|Licciana Nardi|Licenza|Licodia Eubea|Lierna|Lignana|Lignano Sabbiadoro|Lillianes|Limana|Limatola|Limbadi|Limbiate|Limena|Limido Comasco|Limina|Limone Sul Garda|Limone Piemonte|Limosano|Linarolo|Linguaglossa|Lioni|Lipari|Lipomo|Lirio|Liscate|Liscia|Lisciano Niccone|Lisio|Lissone|Milena|Liveri|Livigno|Livinallongo Del Col Di Lana|Livo|Livo|Livorno|Livorno Ferraris|Livraga|Lizzanello|Lizzano|Loano|Loazzolo|Locana|Locate Varesino|Locate Di Triulzi|Locatello|Loceri|Locorotondo|Loculi|Lode|Lodi|Lodine|Lodi Vecchio|Lodrino|Lograto|Loiano|Lomagna|Lomazzo|Lombardore|Lombriasco|Lomello|Lona Lases|Lonate Ceppino|Lonate Pozzolo|Londa|Longano|Longare|Longhena|Longi|Longiano|Longobardi|Longobucco|Longone Al Segrino|Porto Azzurro|Longone Sabino|Lonigo|Loranze|Loreggia|Loreglia|Lorenzago Di Cadore|Loreo|Loreto|Loreto Aprutino|Loria|Loro Ciuffenna|Loro Piceno|Lorsica|Losine|Lotzorai|Lovere|Lovero|Lozio|Lozza|Lozzo Di Cadore|Lozzo Atestino|Lozzolo|Lubriano|Lucca Sicula|Lucca|Lucera|Lucignano|Lucinasco|Lucito|Luco Dei Marsi|Lucoli|Lugagnano Val Darda|Lugnano In Teverina|Lugo|Lugo Di Vicenza|Luino|Luisago|Lula|Lumarzo|Lumezzane|Lunamatrona|Lunano|Lungro|Luogosano|Luogosanto|Lupara|Lurago Derba|Lurago Marinone|Lurano|Luras|Lurate Caccivio|Lusciano|Luserna|Luserna San Giovanni|Lusernetta|Lusevera|Lusia|Lusiglie|Luson|Lustra|Luvinate|Luzzana|Luzzara|Luzzi|Maccastorna|Macchia Disernia|Macchiagodena|Macchia Valfortore|Macello|Macerata|Macerata Campania|Macerata Feltria|Macherio|Maclodio|Macomer|Macra|Macugnaga|Maddaloni|Madignano|Madone|Madonna Del Sasso|Maenza|Mafalda|Magasa|Magenta|Maggiora|Magherno|Magione|Magisano|Magliano Di Tenna|Magliano Alpi|Magliano Alfieri|Magliano In Toscana|Magliano De Marsi|Magliano Sabina|Magliano Romano|Magliano Vetere|Maglie|Magliolo|Maglione|Magnacavallo|Magnago|Magnano In Riviera|Magnano|Magomadas|Magre Sulla Strada Del Vino|Magreglio|Majano|Maida|Maiera|Maierato|Maiolati Spontini|Maiolo|Maiori|Mairago|Mairano|Maissana|Malagnino|Malalbergo|Malborghetto Valbruna|Malcesine|Male|Malegno|Maleo|Malesco|Maletto|Malfa|Malgesso|Malgrate|Malito|Mallare|Malles Venosta|Malnate|Malo|Malonno|Malosco|Maltignano|Malvagna|Malvicino|Malvito|Mammola|Mamoiada|Manciano|Mandanici|Mandas|Mandatoriccio|Mandello Del Lario|Mandello Vitta|Manduria|Manerba Del Garda|Manerbio|Manfredonia|Mango|Mangone|Maniago|Manocalzati|Manoppello|Mansue|Manta|Mantello|Mantova|Manzano|Manziana|Mapello|Mara|Maracalagonis|Maranello|Marano Sul Panaro|Marano Di Napoli|Marano Ticino|Marano Equo|Marano Lagunare|Marano Di Valpolicella|Marano Vicentino|Marano Marchesato|Marano Principato|Maranzana|Maratea|Marcallo Con Casone|Marcaria|Marcedusa|Marcellina|Marcellinara|Marcetelli|Marcheno|Marchirolo|Marciana|Marciana Marina|Marcianise|Marciano Della Chiana|Marcignago|Marcon|Marebbe|Marene|Mareno Di Piave|Marentino|Maretto|Margarita|Margherita Di Savoia|Margno|Mariana Mantovana|Mariano Comense|Mariano Del Friuli|Marianopoli|Mariglianella|Marigliano|Marina Di Gioiosa Ionica|Marineo|Marino|Marlengo|Marliana|Marmentino|Marmirolo|Marmora|Marnate|Marone|Maropati|Marostica|Marradi|Marrubiu|Marsaglia|Marsala|Marsciano|Marsico Nuovo|Marsicovetere|Marta|Martano|Martellago|Martello|Martignacco|Martignana Di Po|Martignano|Martina Franca|Martinengo|Martiniana Po|Martinsicuro|Martirano|Martirano Lombardo|Martis|Martone|Marudo|Maruggio|Marzano Di Nola|Marzano Appio|Marzano|Marzi|Marzio|Masate|Mascali|Mascalucia|Maschito|Masciago Primo|Maser|Masera|Masera Di Padova|Maserada Sul Piave|Masi|Masio|Masi Torello|Maslianico|Masone|Massa Fermana|Massa Dalbe|Massa|Massa Martana|Massa E Cozzile|Massafra|Massalengo|Massa Lombarda|Massa Lubrense|Massa Marittima|Massanzago|Massarosa|Massazza|Massello|Masserano|San Marco Evangelista|Massignano|Massimeno|Massimino|Massino Visconti|Massiola|Masullas|Matelica|Matera|Mathi|Matino|Matrice|Mattie|Mattinata|Mazara Del Vallo|Mazzano|Mazzano Romano|Mazzarino|Mazzarra Santandrea|Mazze|Mazzin|Mazzo Di Valtellina|Meana Sardo|Meana Di Susa|Meda|Mede|Medea|Medesano|Medicina|Mediglia|Medolago|Medole|Medolla|Meduna Di Livenza|Meduno|Megliadino San Vitale|Meina|Melara|Melazzo|Meldola|Mele|Melegnano|Melendugno|Meleti|Melfi|Melicucca|Melicucco|Melilli|Melissa|Melissano|Melito Irpino|Melito Di Napoli|Melito Di Porto Salvo|Melizzano|Melle|Mello|Silea|Melpignano|Meltina|Melzo|Menaggio|Menconico|Mendatica|Mendicino|Menfi|Mentana|Meolo|Merana|Merano|Merate|Mercallo|Mercatello Sul Metauro|Mercatino Conca|Novafeltria|Mercato San Severino|Mercato Saraceno|Mercenasco|Mercogliano|Mereto Di Tomba|Mergo|Mergozzo|Meri|Merlara|Merlino|Merone|Mesagne|Mese|Mesenzana|Mesero|Mesola|Mesoraca|Messina|Mestrino|Meta|Mezzago|Mezzana Mortigliengo|Mezzana|Mezzana Bigli|Mezzana Rabattone|Mezzane Di Sotto|Mezzanego|Mezzanino|Mezzano|Mezzenile|Mezzocorona|Mezzojuso|Mezzoldo|Mezzolombardo|Mezzomerico|Miagliano|Miane|Miasino|Miazzina|Micigliano|Miggiano|Miglianico|Miglierina|Miglionico|Mignanego|Mignano Monte Lungo|Milano|Milazzo|Mileto|Milis|Militello In Val Di Catania|Militello Rosmarino|Millesimo|Milo|Milzano|Mineo|Minerbe|Minerbio|Minervino Murge|Minervino Di Lecce|Minori|Minturno|Minucciano|Mioglia|Mira|Mirabella Eclano|Mirabella Imbaccari|Mirabello Monferrato|Mirabello Sannitico|Miradolo Terme|Miranda|Mirandola|Mirano|Mirto|Misano Di Gera Dadda|Misano Adriatico|Misilmeri|Misinto|Missaglia|Missanello|Misterbianco|Mistretta|Moasca|Moconesi|Modena|Modica|Modigliana|Tavazzano Con Villavesco|Modolo|Modugno|Moena|Moggio|Moggio Udinese|Moglia|Mogliano|Mogliano Veneto|Mogorella|Ruinas|Mogoro|Moiano|Moimacco|Moio De Calvi|Moio Alcantara|Moio Della Civitella|Moiola|Mola Di Bari|Molare|Molazzana|Molfetta|Molinara|Molinella|Molini Di Triora|Molino Dei Torti|Molise|Moliterno|Mollia|Porto Empedocle|Molochio|Molteno|Moltrasio|Molveno|Mombaldone|Mombarcaro|Mombaroccio|Mombaruzzo|Mombasiglio|Mombello Monferrato|Mombello Di Torino|Mombercelli|Momo|Mompantero|Mompeo|Momperone|Monacilioni|Monale|Monasterace|Monastero Bormida|Monastero Di Vasco|Monastero Di Lanzo|Monasterolo Del Castello|Monasterolo Casotto|Monasterolo Di Savigliano|Monastier Di Treviso|Monastir|Moncalieri|Moncalvo|Moncestino|Monchiero|Monchio Delle Corti|Moncrivello|Moncucco Torinese|Mondaino|Mondavio|Mondolfo|Mondovi|Mondragone|Moneglia|Monesiglio|Monfalcone|Serramazzoni|Monforte Dalba|Monforte San Giorgio|Monfumo|Mongardino|Monghidoro|Mongiana|Mongiardino Ligure|Montjovet|Mongiuffi Melia|Mongrando|Mongrassano|Monguelfo Tesido|Monguzzo|Moniga Del Garda|Monleale|Monno|Monopoli|Monreale|Monrupino|Monsampietro Morico|Monsampolo Del Tronto|Monsano|Monselice|Monserrato|Monsummano Terme|Monta|Montabone|Montacuto|Montafia|Montagano|Montagna|Montagna In Valtellina|Montagnana|Montagnareale|Montaguto|Montaione|Montalbano Jonico|Montalbano Elicona|Ostra|Montaldeo|Montaldo Bormida|Montaldo Di Mondovi|Montaldo Torinese|Montaldo Roero|Montaldo Scarampi|Montale|Montalenghe|Montallegro|Montalto Delle Marche|Montalto Uffugo|Montalto Pavese|Montalto Di Castro|Montalto Dora|Montanaro|Montanaso Lombardo|Montanera|Montano Antilia|Montano Lucino|Montappone|Montaquila|Montasola|Montauro|Montazzoli|Monte Cremasco|Monte Argentario|Montebello Della Battaglia|Montebello Di Bertona|Montebello Vicentino|Montebelluna|Montebruno|Montebuono|Montecalvo Irpino|Montecalvo Versiggia|Montecalvo In Foglia|Montecarlo|Montecarotto|Montecassiano|Montecastello|Monte Castello Di Vibio|Montecastrilli|Montecatini Val Di Cecina|Monte Cavallo|Montecchia Di Crosara|Montecchio|Montecchio Emilia|Montecchio Maggiore|Montecchio Precalcino|Monte Cerignone|Montechiaro Dasti|Montechiaro Dacqui|Montichiari|Montechiarugolo|Monteciccardo|Montecilfone|Monte Compatri|Montecopiolo|Montecorice|Montecorvino Pugliano|Montecorvino Rovella|Montecosaro|Montecrestese|Montecreto|Monte Di Malo|Montedinove|Monte Di Procida|Montedoro|Montefalcione|Montefalco|Montefalcone Appennino|Montefalcone Di Val Fortore|Montefalcone Nel Sannio|Montefano|Montefelcino|Monteferrante|Montefiascone|Montefino|Montefiore Dellaso|Montefiore Conca|Montefiorino|Monteflavio|Monteforte Irpino|Monteforte Cilento|Monteforte Dalpone|Montefortino|Montefranco|Montefredane|Montefusco|Montegabbione|Montegalda|Montegaldella|Montegallo|Monte Giberto|Montegioco|Montegiordano|Montegiorgio|Montegranaro|Montegridolfo|Monte Grimano Terme|Montegrino Valtravaglia|Montegrosso Dasti|Montegrosso Pian Latte|Montegrotto Terme|Monteiasi|Monte Isola|Montelabbate|Montelanico|Montelapiano|Monteleone Di Fermo|Vibo Valentia|Monteleone Di Puglia|Monteleone Di Spoleto|Monteleone Sabino|Monteleone Rocca Doria|Monteleone Dorvieto|Montelepre|Montelibretti|Montella|Montello|Montelongo|Montelparo|Montelupo Albese|Montelupo Fiorentino|Montelupone|Montemaggiore Belsito|Montemagno|Santarcangelo Trimonte|Montemale Di Cuneo|Montemarano|Montemarciano|Monte Marenzo|Montemarzino|Montemesola|Montemezzo|Montemignaio|Montemiletto|Pollenza|Montemilone|Montemitro|Montemonaco|Montemurlo|Montemurro|Montenars|Montenero Di Bisaccia|Montenerodomo|Montenero Sabino|Montenero Val Cocchiara|Ostra Vetere|Monteodorisio|Roseto Degli Abruzzi|Montepaone|Monteparano|Monte Porzio|Monte Porzio Catone|Monteprandone|Montepulciano|Monterchi|Montereale|Montereale Valcellina|Monterenzio|Monteriggioni|Monte Rinaldo|Monte Roberto|Monteroduni|Monte Romano|Monteroni Di Lecce|Monteroni Darbia|Monterosi|Monterosso Calabro|Monterosso Grana|Monterosso Al Mare|Monterosso Almo|Monterotondo|Monterotondo Marittimo|Monterubbiano|Monte San Biagio|Monte San Giacomo|Monte San Giovanni In Sabina|Monte San Giovanni Campano|Monte San Giusto|Monte San Martino|Montesano Salentino|Montesano Sulla Marcellana|Monte San Pietrangeli|Monte San Pietro|Monte San Savino|Monte Santa Maria Tiberina|Monte Santangelo|Potenza Picena|Monte San Vito|Montesarchio|Montescaglioso|Montescano|Montescheno|Montescudaio|Montese|Montesegale|Montesilvano|Montespertoli|Monteu Da Po|Monte Urano|Monteu Roero|Montevago|Montevarchi|Montevecchia|Monteverde|Monteverdi Marittimo|Monteviale|Monte Vidon Combatte|Monte Vidon Corrado|Montezemolo|Monti|Montiano|Monticello Dalba|Monticelli Pavese|Monticelli Dongina|Monticelli Brusati|Monticello Brianza|Monticello Conte Otto|Monticiano|Montieri|Montignoso|Montirone|Montodine|Montoggio|Montone|Montopoli In Val Darno|Montopoli Di Sabina|Montorfano|Montorio Nei Frentani|Montorio Al Vomano|Montorio Romano|Montorso Vicentino|Montottone|Montresta|Montu Beccaria|Monvalle|Monza|Monzambano|Monzuno|Morano Sul Po|Morano Calabro|Moransengo|Moraro|Morazzone|Morbegno|Morbello|Morciano Di Romagna|Morciano Di Leuca|Morcone|Mordano|Morengo|Mores|Moresco|Moretta|Morfasso|Morgano|Morgex|Morgongiori|Mori|Moriago Della Battaglia|Moricone|Morigerati|Morino|Moriondo Torinese|Morlupo|Mormanno|Mornago|Mornese|Mornico Al Serio|Mornico Losana|Morolo|Morozzo|Morra De Sanctis|Morro Dalba|Morro Reatino|Morro Doro|Morrone Del Sannio|Morrovalle|Morsano Al Tagliamento|Morsasco|Mortara|Mortegliano|Morterone|Moruzzo|Moscazzano|Moschiano|Mosciano Santangelo|Moscufo|Moso In Passiria|Mossa|Motta Di Livenza|Motta Baluffi|Motta Camastra|Motta Daffermo|Motta De Conti|Mottafollone|Mottalciata|Motta Montecorvino|Motta San Giovanni|Motta Santa Lucia|Motta Santanastasia|Motta Visconti|Mottola|Mozzagrogna|Mozzanica|Mozzate|Mozzecane|Mozzo|Muccia|Muggia|Muggio|Mugnano Del Cardinale|Mugnano Di Napoli|Mulazzano|Mulazzo|Mura|Muravera|Murazzano|Salcedo|Murello|Murialdo|Murisengo|Murlo|Muro Leccese|Muro Lucano|Muros|Muscoline|Musei|Musile Di Piave|Musso|Mussolente|Mussomeli|Pineto|Muzzana Del Turgnano|Muzzano|Nago Torbole|Nalles|Nanto|Napoli|Narbolia|Narcao|Nardo|Nardodipace|Narni|Naro|Narzole|Nasino|Naso|Naturno|Nave|Navelli|Naz Sciaves|Nazzano|Ne|Nebbiuno|Negrar Di Valpolicella|Neirone|Neive|Nembro|Nemi|Nemoli|Neoneli|Nepi|Nereto|Nerola|Nervesa Della Battaglia|Nerviano|Nespolo|Nesso|Netro|Nettuno|Neviano|Neviano Degli Arduini|Neviglie|Niardo|Nibbiola|Nibionno|Nichelino|Nicolosi|Nicorvo|Nicosia|Nicotera|Niella Belbo|Niella Tanaro|Nimis|Niscemi|Nissoria|Nizza Di Sicilia|Nizza Monferrato|Noale|Noasca|Nocara|Nocciano|Nocera Terinese|Nocera Umbra|Nocera Inferiore|Nocera Superiore|Noceto|Noci|Nociglia|Noepoli|Nogara|Nogaredo|Nogarole Rocca|Nogarole Vicentino|Noicattaro|Nola|Nole|Noli|Nomaglio|Nomi|Nonantola|None|Nonio|Noragugume|Norbello|Norcia|Norma|Nosate|Ponte Nossa|Notaresco|Noto|Nova Milanese|Novaledo|Novalesa|Nova Levante|Nova Ponente|Novara Di Sicilia|Novara|Novate Milanese|Novate Mezzola|Nove|Novedrate|Novellara|Novello|Noventa Padovana|Noventa Di Piave|Noventa Vicentina|Novi Ligure|Novi Di Modena|Novi Velia|Noviglio|Novoli|Nucetto|Nughedu Santa Vittoria|Nughedu San Nicolo|Nule|Nulvi|Numana|Nuoro|Nurachi|Nuragus|Nurallao|Nuraminis|Nureci|Nurri|Nus|Nusco|Nuvolento|Nuvolera|Nuxis|Occhieppo Inferiore|Occhieppo Superiore|Occhiobello|Occimiano|Ocre|Odalengo Grande|Odalengo Piccolo|Oderzo|Odolo|Ofena|Offagna|Offanengo|Offida|Offlaga|Oggebbio|Oggiona Con Santo Stefano|Oggiono|Oglianico|Ogliastro Cilento|Oyace|Olbia|Olcenengo|Oldenico|Oleggio|Oleggio Castello|Olevano Di Lomellina|Olevano Romano|Olevano Sul Tusciano|Olgiate Comasco|Olgiate Molgora|Olgiate Olona|Olginate|Oliena|Oliva Gessi|Olivadi|Oliveri|Oliveto Lucano|Oliveto Citra|Oliveto Lario|Olivetta San Michele|Olivola|Ollastra|Ollolai|Ollomont|Olmedo|Olmeneta|Olmo Gentile|Olmo Al Brembo|Oltre Il Colle|Oltressenda Alta|Oltrona Di San Mamette|Olzai|Ome|Omegna|Omignano|Onani|Onano|Oncino|Oneta|Onifai|Oniferi|Ono San Pietro|Onore|Onzo|Opera|Opi|Oppeano|Oppido Lucano|Oppido Mamertina|Ora|Orani|Oratino|Orbassano|Orbetello|Orciano Pisano|Orero|Orgiano|Pieve Fissiraga|Orgosolo|Oria|Oricola|Origgio|Orino|Orio Litta|Orio Al Serio|Orio Canavese|Oriolo|Oriolo Romano|Oristano|Ormea|Ormelle|Ornago|Ornavasso|Ornica|Orosei|Orotelli|Orria|Orroli|Orsago|Orsara Bormida|Orsara Di Puglia|Orsenigo|Orsogna|Orsomarso|Orta Di Atella|Orta Nova|Ortacesus|Orta San Giulio|Orte|Ortelle|Ortezzano|Ortignano Raggiolo|Ortisei|Ortona|Ortona Dei Marsi|Luni|Ortovero|Ortucchio|Ortueri|Orune|Orvieto|Orzinuovi|Orzivecchi|Osasco|Osasio|Oschiri|Osidda|Osiglia|Osilo|Osimo|Osini|Osio Sopra|Osio Sotto|Osnago|Osoppo|Ospedaletti|Ospedaletto Dalpinolo|Ospedaletto Lodigiano|Ospedaletto Euganeo|Ospedaletto|Ospitale Di Cadore|Ospitaletto|Ossago Lodigiano|Ossana|Ossi|Ossimo|Ossona|Ostana|Ostellato|Ostiano|Ostiglia|Ostuni|Otranto|Otricoli|Ottaviano|Ottana|Ottati|Ottiglio|Ottobiano|Ottone|Oulx|Ovada|Ovaro|Oviglio|Ovindoli|Ovodda|Ozegna|Ozieri|Ozzano Monferrato|Ozzano Dellemilia|Ozzero|Pabillonis|Paceco|Pace Del Mela|Pacentro|Pachino|Paciano|Padenghe Sul Garda|Paderna|Paderno Franciacorta|Paderno Dadda|Paderno Dugnano|Paderno Ponchielli|Robbiate|Padova|Padria|Padula|Paduli|Paesana|Paese|Pagani|Paganico Sabino|Pagazzano|Pagliara|Paglieta|Pagnacco|Pagno|Pagnona|Pago Del Vallo Di Lauro|Pago Veiano|Paisco Loveno|Paitone|Paladina|Palagano|Palagianello|Palagiano|Palagonia|Palaia|Palanzano|Palata|Palau|Palazzago|Palazzo Pignano|Palazzo San Gervasio|Palazzo Canavese|Palazzo Adriano|Palazzolo Sulloglio|Palazzolo Vercellese|Palazzolo Acreide|Palazzolo Dello Stella|Palazzuolo Sul Senio|Palena|Palermiti|Palermo|Palestrina|Palestro|Paliano|Palizzi|Pallagorio|Pallanzeno|Pallare|Palma Di Montechiaro|Palma Campania|Palmanova|Palmariggi|Palmas Arborea|San Giovanni Suergiu|Palmi|Palmiano|Palmoli|Palo Del Colle|Palomonte|Palombara Sabina|Palombaro|Palosco|Palu Del Fersina|Palu|Paludi|Plaus|Paluzza|Pamparato|Pancalieri|Pancarana|Panchia|Pandino|Panettieri|Panicale|Villaricca|Pannarano|Panni|Pantelleria|Pantigliate|Paola|Paolisi|Valderice|Papasidero|Papozze|Parabiago|Parabita|Paratico|Parcines|Parella|Parenti|Parete|Pareto|Parghelia|Parlasco|Parma|Parodi Ligure|Paroldo|Parolise|Parona|Parrano|Parre|Partanna|Partinico|Paruzzaro|Parzanica|Pasian Di Prato|Pasiano Di Pordenone|Paspardo|Passerano Marmorito|Passignano Sul Trasimeno|Passirano|Pastena|Pastorano|Pastrengo|Pasturana|Pasturo|Paternopoli|Paterno|Paterno Calabro|Patrica|Pattada|Patti|Patu|Pau|Paularo|Pauli Arbarei|San Nicolo Gerrei|Paulilatino|Paullo|Paupisi|Pavarolo|Pavia|Pavia Di Udine|Pavone Del Mella|Pavone Canavese|Pavullo Nel Frignano|Pazzano|Peccioli|Pecetto Di Valenza|Pecetto Torinese|Pedara|Pedaso|Pedavena|Pedemonte|San Paolo|Pederobba|Pedesina|Pedivigliano|Pedrengo|Peglio|Peglio|Pegognaga|Peia|Peio|Pelago|Pella|Pellegrino Parmense|Pellezzano|Pellizzano|Pelugo|Penango|Poggiridenti|Penna In Teverina|Pennabilli|Pennadomo|Pennapiedimonte|Penna San Giovanni|Penna Santandrea|Penne|Pentone|Perano|Perarolo Di Cadore|Perca|Percile|Perdasdefogu|Perdaxius|Perdifumo|Pereto|Perfugas|Pergine Valsugana|Pergola|Perinaldo|Perito|Perledo|Perletto|Perlo|Perloz|Pernumia|Perosa Canavese|Perosa Argentina|Perrero|San Giovanni In Persiceto|Persico Dosimo|Pertengo|Pertica Alta|Pertica Bassa|Pertosa|Pertusio|Perugia|Pesaro|Pescaglia|Pescantina|Pescara|Pescarolo Ed Uniti|Pescasseroli|Pescate|Pesche|Peschici|Peschiera Borromeo|Peschiera Del Garda|Pescia|Pescina|Pescocostanzo|Pesco Sannita|Pescolanciano|Pescopagano|Pescopennataro|Pescorocchiano|Pescosansonesco|Pescosolido|Pessano Con Bornago|Pessina Cremonese|Pessinetto|Petacciato|Turania|Petilia Policastro|Petina|Petralia Soprana|Petralia Sottana|Petrella Tifernina|Petrella Salto|Petriano|Petriolo|Petritoli|Petrizzi|Petrona|Petruro Irpino|Pettenasco|Pettinengo|Pettineo|Pettoranello Del Molise|Pettorano Sul Gizio|Pettorazza Grimani|Peveragno|Pezzana|Pezzaze|Pezzolo Valle Uzzone|Piacenza Dadige|Piacenza|Piaggine|Valle Dellangelo|Piana Di Monte Verna|Piana Crixia|Piana Degli Albanesi|Pontboset|Pian Camuno|Piancastagnaio|Piancogno|Piandimeleto|Piane Crati|Pianella|Pianello Del Lario|Pianello Val Tidone|Pianengo|Pianezza|Pianezze|Pianfei|Pianico|Pianiga|San Benedetto Val Di Sambro|Piano Di Sorrento|Pianoro|Piansano|Piantedo|Piario|Piasco|Piateda|Piatto|Piazza Brembana|Piazza Armerina|Piazza Al Serchio|Piazzatorre|Piazzola Sul Brenta|Piazzolo|Picciano|Picerno|Picinisco|Pico|Piea|Piedicavallo|Piedimonte Matese|Piedimonte Etneo|Piedimonte San Germano|Piedimulera|Piegaro|Pienza|Pieranica|Pietramontecorvino|Pietra Ligure|Pietrabbondante|Pietrabruna|Pietracamela|Pietracatella|Pietracupa|Pietradefusi|Pietra De Giorgi|Pietraferrazzana|Satriano Di Lucania|Pietrafitta|Pietragalla|Pietralunga|Pietra Marazzi|Pietramelara|Pietranico|Pietrapaola|Pietrapertosa|Pietraperzia|Pietraporzio|Pietraroja|Pietrarubbia|Pietrasanta|Pietrastornina|Pietravairano|Pietrelcina|Pieve Di Teco|Pieve Emanuele|Pieve Albignola|Pieve A Nievole|Pieve Del Cairo|Pieve Di Cadore|Pieve Di Cento|Pieve Di Soligo|Pieve Ligure|Pieve Dolmi|Pieve Fosciana|Pievepelago|Pieve Porto Morone|Pieve San Giacomo|Pieve Santo Stefano|Pieve Tesino|Pieve Torina|Pieve Vergonte|Piglio|Pigna|Pignataro Maggiore|Pignataro Interamna|Pignola|Pignone|Pigra|Pila|Pimentel|Pimonte|Pinarolo Po|Pinasca|Pincara|Pinerolo|Pino Dasti|Pino Torinese|Pinzano Al Tagliamento|Pinzolo|Piobbico|Piobesi Dalba|Piobesi Torinese|Piode|Pioltello|Piombino|Piombino Dese|Pioraco|Piossasco|Piova Massaia|Piove Di Sacco|Piovene Rocchette|Piozzano|Piozzo|Priverno|Piraino|Pisa|Pisano|Pisoniano|Piscina|Pisciotta|Pisogne|Pisticci|Pistoia|Pitigliano|Piubega|Piuro|Piverone|Pizzale|Pizzighettone|Pizzo|Pizzoferrato|Pizzoli|Pizzone|Pizzoni|Placanica|Plataci|Platania|Plati|Taipana|Plesio|Ploaghe|Plodio|Pocapaglia|Pocenia|Podenzana|Podenzano|Pofi|Poggiardo|Poggibonsi|Poggio Rusco|Poggio A Caiano|Poggio Bustone|Poggio Catino|Poggiodomo|Poggiofiorito|Poggio Imperiale|Poggiomarino|Poggio Mirteto|Poggio Moiano|Poggio Nativo|Poggio Picenze|Poggioreale|Poggio Renatico|Poggiorsini|Poggio San Lorenzo|Poggio San Marcello|Pogliano Milanese|Pognana Lario|Pognano|Pogno|Pojana Maggiore|Poirino|Polaveno|Polcenigo|Polesella|Poli|Polia|Policoro|Polignano A Mare|San Pietro In Cerro|Polinago|Polino|Polistena|Polizzi Generosa|Polla|Pollein|Pollena Trocchia|Pollica|Pollina|Pollone|Pollutri|Polonghera|Polpenazze Del Garda|Polverara|Polverigi|Pomarance|Pomaretto|Pomarico|Pomaro Monferrato|Pomarolo|Pombia|Pomezia|Pomigliano Darco|Pompei|Pompeiana|Pompiano|Pomponesco|Pompu|Poncarale|Ponderano|Ponna|Ponsacco|Ponso|Pontassieve|Pont Canavese|Ponte|Ponte In Valtellina|Ponte Gardena|Pontebba|Ponte Buggianese|Pontecagnano Faiano|Pontecchio Polesine|Pontechianale|Pontecorvo|Pontecurone|Pontedassio|Ponte Dellolio|Pontedera|Ponte Di Legno|Ponte Di Piave|Ponte Lambro|Pontelandolfo|Pontelatone|Pontelongo|Ponte Nizza|Pontenure|Ponteranica|Pont Saint Martin|Ponte San Nicolo|Ponte San Pietro|Pontestura|Pontevico|Pontey|Ponti|Ponti Sul Mincio|Pontida|Pontinia|Pontinvrea|Pontirolo Nuovo|Pontoglio|Pontremoli|Ponza|Ponzano Monferrato|Ponzano Di Fermo|Ponzano Romano|Ponzano Veneto|Ponzone|Popoli|Poppi|Porano|Porcari|Porcia|Stella Cilento|Pordenone|Porlezza|Pornassio|Porpetto|Portacomaro|Portalbera|Porte|Portici|Portico Di Caserta|Portico E San Benedetto|Portigliola|Porto Ceresio|Porto Valtravaglia|Portobuffole|Portocannone|Portoferraio|Portofino|Portogruaro|Portomaggiore|Porto Mantovano|Porto Recanati|Porto San Giorgio|Porto Santelpidio|Portoscuso|Porto Tolle|Porto Torres|Portovenere|Porto Viro|Portula|Posada|Posina|Positano|Possagno|Posta|Posta Fibreno|Postal|Postalesio|Postiglione|Postua|Potenza|Pove Del Grappa|Povegliano|Povegliano Veronese|Poviglio|Povoletto|Pozzaglia Sabina|Pozzallo|Pozzilli|Pozzo Dadda|Pozzoleone|Pozzolengo|Pozzol Groppo|Pozzolo Formigaro|Pozzomaggiore|Pozzonovo|Pozzuoli|Pozzuolo Martesana|Pozzuolo Del Friuli|Pradalunga|Pradamano|Pradleves|Sasso Marconi|Pragelato|Pray|Praia A Mare|Praiano|Pralboino|Prali|Pralormo|Pralungo|Pramaggiore|Pramollo|Prarolo|Prarostino|Prasco|Prascorsano|Prata Di Principato Ultra|Prata Sannita|Prata Dansidonia|Prata Camportaccio|Prata Di Pordenone|Pratella|Pratiglione|Prato|Prato Sesia|Prato Carnico|Prato Allo Stelvio|Pratola Serra|Pratola Peligna|Pravisdomini|Prazzo|Samo|Precenicco|Preci|Predappio|Predazzo|Predoi|Predore|Predosa|Preganziol|Pregnana Milanese|Prela|Premana|Premariacco|Premeno|Premia|Premilcuore|Premolo|Premosello Chiovenda|Preone|Prepotto|Pre Saint Didier|Preseglie|Presenzano|Presezzo|Pressana|Pretoro|Prevalle|Prezza|Priero|Prignano Sulla Secchia|Prignano Cilento|Primaluna|Priocca|Priola|Prizzi|Proceno|Procida|Propata|Proserpio|Prossedi|Provaglio Val Sabbia|Provaglio Diseo|Proves|Provvidenti|Prunetto|Puegnago Sul Garda|Puglianello|Pula|Pulfero|Pulsano|Pumenengo|Pusiano|Putifigari|Putignano|Quadrelle|Quadri|Quagliuzzo|Qualiano|Quaranti|Quargnento|Quarna Sopra|Quarna Sotto|Quarona|Quarrata|Quart|Quarto|Quarto Daltino|Quartu Santelena|Quartucciu|Quassolo|Quattordio|Quattro Castella|Quiliano|Quincinetto|Quindici|Quingentole|Quintano|Quinto Di Treviso|Quinto Vercellese|Quinto Vicentino|Quinzano Doglio|Quistello|Rabbi|Racale|Racalmuto|Racconigi|Raccuja|Racines|Radda In Chianti|Raddusa|Radicofani|Radicondoli|Raffadali|Ragogna|Ragusa|Ruviano|Raiano|Ramacca|Rancio Valcuvia|Ranco|Randazzo|Ranica|Ranzanico|Ranzo|Rapagnano|Rapallo|Rapino|Rapolano Terme|Rapolla|Rapone|Rassa|Rasun Anterselva|Rasura|Ravanusa|Ravarino|Ravascletto|Ravello|Ravenna|Raveo|Raviscanina|Re|Rea|Realmonte|Reana Del Rojale|Reano|Recale|Recanati|Recco|Recetto|Recoaro Terme|Redavalle|Redondesco|Refrancore|Refrontolo|Regalbuto|Reggello|Reggio Nellemilia|Reggio Di Calabria|Reggiolo|Reino|Reitano|Remanzacco|Remedello|Renate|Rende|Renon|Resana|Rescaldina|Resia|Ercolano|Resiutta|Resuttano|Retorbido|Revello|Revigliasco Dasti|Revine Lago|Revo|Rezzago|Rezzato|Rezzo|Rezzoaglio|Val Rezzo|Rhemes Notre Dame|Rhemes Saint Georges|Rho|Riace|Rialto|Riano|Riardo|Ribera|Ribordone|Ricadi|Ricaldone|Riccia|Riccione|Ricco Del Golfo Di Spezia|Ricengo|Ricigliano|Riese Pio X|Riesi|Rieti|Rifiano|Rifreddo|Rignano Sullarno|Rignano Garganico|Rignano Flaminio|Rigolato|Rimella|Rimini|Rio Saliceto|Rio Di Pusteria|Riofreddo|Riola Sardo|Riolo Terme|Riolunato|Riomaggiore|Rionero In Vulture|Rionero Sannitico|Ripabottoni|Ripacandida|Ripalimosani|Ripalta Arpina|Ripalta Cremasca|Ripalta Guerina|Riparbella|Ripa Teatina|Ripatransone|Ripe San Ginesio|Ripi|Riposto|Rittana|Rivamonte Agordino|Riva Ligure|Riva Del Garda|Riva Di Solto|Rivalba|Rivalta Bormida|Rivalta Di Torino|Rivanazzano Terme|Riva Presso Chieri|Rivara|Rivarolo Canavese|Rivarolo Del Re Ed Uniti|Rivarolo Mantovano|Rivarone|Rivarossa|Rive|Rive Darcano|Rivello|Rivergaro|Rivisondoli|Rivodutri|Rivoli|Rivoli Veronese|Rivolta Dadda|Rizziconi|Roana|Roaschia|Roascio|Rovasenda|Roasio|Roatto|Robassomero|Robbio|Robecchetto Con Induno|Robecco Doglio|Robecco Sul Naviglio|Robecco Pavese|Robella|Robilante|Roburent|Rocca Pietore|Roccavaldina|Roccabascerana|Roccabernarda|Roccabianca|Roccabruna|Rocca Canavese|Rocca Canterano|Roccacasale|Roccafluvione|Rocca Ciglie|Rocca Darazzo|Rocca Darce|Roccadaspide|Rocca De Baldi|Rocca De Giorgi|Rocca Devandro|Rocca Di Botte|Rocca Di Cambio|Rocca Di Cave|Rocca Di Mezzo|Rocca Di Neto|Rocca Di Papa|Roccafiorita|Roccaforte Ligure|Roccaforte Mondovi|Roccaforte Del Greco|Roccaforzata|Roccafranca|Roccagiovine|Roccagloriosa|Roccagorga|Rocca Grimalda|Rocca Imperiale|Roccalbegna|Roccalumera|Roccamandolfi|Rocca Massima|Roccamena|Roccamonfina|Roccamontepiano|Roccamorice|Roccanova|Roccantica|Roccapalumba|Rocca Pia|Roccapiemonte|Rocca Priora|Roccarainola|Roccaraso|Roccaromana|Rocca San Casciano|Rocca San Felice|Rocca San Giovanni|Rocca Santa Maria|Rocca Santo Stefano|Roccascalegna|Roccasecca|Roccasecca Dei Volsci|Roccasicura|Rocca Sinibalda|Roccasparvera|Roccaspinalveti|Roccastrada|Rocca Susella|Roccaverano|Roccavignale|Roccavione|Roccavivara|Roccella Valdemone|Roccella Ionica|Rocchetta A Volturno|Rocchetta E Croce|Rocchetta Nervina|Rocchetta Di Vara|Rocchetta Belbo|Rocchetta Ligure|Rocchetta Palafea|Rocchetta Santantonio|Rocchetta Tanaro|Rodano|Roddi|Roddino|Rodello|Rodengo|Rodengo Saiano|Rodero|Rodi Milici|Rodi Garganico|Rodigo|Roe Volciano|Rofrano|Rogeno|Roggiano Gravina|Roghudi|Rogliano|Rognano|Rogno|Rogolo|Roiate|Roio Del Sangro|Roisan|Roletto|Rolo|Roma|Romagnano Sesia|Romagnano Al Monte|Romagnese|Romallo|Romana|Romanengo|Romano Di Lombardia|Romano Canavese|Romano Dezzelino|Romans Disonzo|Rombiolo|Romeno|Romentino|Rometta|Ronago|Ronca|Roncade|Roncadelle|Roncaro|Roncegno Terme|Roncello|Ronchi Dei Legionari|Ronchi Valsugana|Ronchis|Ronciglione|Roncobello|Ronco Scrivia|Ronco Briantino|Ronco Biellese|Ronco Canavese|Ronco Alladige|Roncoferraro|Roncofreddo|Roncola|Rondanina|Rondissone|Ronsecco|Ronzone|Roppolo|Rora|Roure|Rosa|Rosarno|Rosasco|Rosate|Rosazza|Rosciano|Roscigno|Rose|Rosello|Roseto Valfortore|Rosignano Monferrato|Rosignano Marittimo|Roseto Capo Spulico|Rosolina|Rosolini|Rosora|Rossa|Rossana|Rossano Veneto|Rossiglione|Rosta|Rota Dimagna|Rota Greca|Rotella|Rotello|Rotonda|Rotondella|Rotondi|Rottofreno|Rotzo|Rovato|Rovegno|Rovellasca|Rovello Porro|Roverbella|Roverchiara|Rovere Della Luna|Rovere Veronese|Roveredo In Piano|Roveredo Di Gua|Rovereto|Rovescala|Rovetta|Roviano|Rovigo|Rovito|Rovolon|Rozzano|Rubano|Rubiana|Rubiera|Ruda|Rudiano|Rueglio|Ruffano|Ruffia|Ruffre Mendola|Rufina|Rumo|Ruoti|Russi|Rutigliano|Rutino|Ruvo Di Puglia|Ruvo Del Monte|Sabaudia|Sabbio Chiese|Sabbioneta|Sacco|Saccolongo|Sacile|Sacrofano|Sadali|Sagama|Sagliano Micca|Sagrado|Sagron Mis|Saint Christophe|Saint Denis|Saint Marcel|Saint Nicolas|Saint Oyen|Saint Pierre|Saint Rhemy En Bosses|Saint Vincent|Sala Monferrato|Sala Bolognese|Sala Comacina|Sala Biellese|Sala Baganza|Sala Consilina|Salbertrand|Salento|Salandra|Salaparuta|Salara|Salasco|Salassa|Salcito|Sale|Sale Delle Langhe|Sale Marasino|Salemi|Salerano Sul Lambro|Salerano Canavese|Salerno|Sale San Giovanni|Salgareda|Sali Vercellese|Salice Salentino|Saliceto|San Mauro Di Saline|Salisano|Salizzole|Salle|Salmour|Salo|Salorno|Salsomaggiore Terme|Saltrio|Saludecio|Saluggia|Salussola|Saluzzo|Salve|Savoia Di Lucania|Salvirola|Salvitelle|Salza Irpina|Salza Di Pinerolo|Salzano|Samarate|Samassi|Samatzai|Sambuca Di Sicilia|Sambuca Pistoiese|Sambuci|Sambuco|Sammichele Di Bari|Samolaco|Samone|Samone|Sampeyre|Samugheo|Sanarica|San Bartolomeo Val Cavargna|San Bartolomeo Al Mare|San Bartolomeo In Galdo|San Basile|San Basilio|San Bassano|San Bellino|San Benedetto Del Tronto|San Benedetto Belbo|San Benedetto Po|San Benedetto Dei Marsi|San Benedetto In Perillis|San Benedetto Ullano|San Benigno Canavese|San Bernardino Verbano|San Biagio Platani|San Biagio Saracinisco|San Biagio Della Cima|San Biagio Di Callalta|San Biase|San Bonifacio|San Buono|San Calogero|San Candido|San Canzian Disonzo|San Carlo Canavese|San Casciano Dei Bagni|San Casciano In Val Di Pesa|San Cataldo|San Cesario Di Lecce|San Cesario Sul Panaro|San Chirico Nuovo|San Chirico Raparo|San Cipirello|San Cipriano Daversa|San Cipriano Po|San Cipriano Picentino|San Clemente|San Colombano Certenoli|San Colombano Al Lambro|San Colombano Belmonte|San Cono|San Cosmo Albanese|San Costantino Calabro|San Costantino Albanese|San Costanzo|San Cristoforo|San Damiano Dasti|San Damiano Macra|San Damiano Al Colle|San Daniele Po|San Daniele Del Friuli|San Demetrio Corone|San Demetrio Ne Vestini|San Didero|Sandigliano|San Donaci|San Dona Di Piave|San Donato Val Di Comino|San Donato Di Ninea|San Donato Di Lecce|San Donato Milanese|Sandrigo|San Fele|San Felice Del Molise|San Felice A Cancello|San Felice Sul Panaro|San Felice Circeo|San Felice Del Benaco|San Ferdinando Di Puglia|San Fermo Della Battaglia|San Fili|San Filippo Del Mela|San Fior|San Fiorano|San Floriano Del Collio|San Floro|San Francesco Al Campo|Aglientu|San Fratello|Sanfre|Sanfront|Sangano|San Gavino Monreale|San Gemini|San Genesio Atesino|San Genesio Ed Uniti|San Gennaro Vesuviano|San Germano Vercellese|San Germano Chisone|San Gervasio Bresciano|San Giacomo Degli Schiavoni|San Giacomo Filippo|San Giacomo Delle Segnate|Sangiano|San Gillio|San Gimignano|San Ginesio|Sangineto|San Giorgio Monferrato|San Giorgio A Liri|San Giorgio Albanese|San Giorgio Ionico|San Giorgio Bigarello|San Giorgio Su Legnano|San Giorgio Di Lomellina|San Giorgio Piacentino|San Giorgio Lucano|San Giorgio Morgeto|San Giorgio Canavese|San Giorgio Della Richinvelda|San Giorgio A Cremano|San Giorgio Delle Pertiche|San Giorgio Del Sannio|San Giorgio Di Nogaro|San Giorgio Di Piano|San Giorgio In Bosco|San Giorgio La Molara|San Giorgio Scarampi|San Giorio Di Susa|San Giovanni Valdarno|San Giovanni Di Gerace|San Giovanni Al Natisone|San Giovanni A Piro|San Giovanni Bianco|San Giovanni Del Dosso|Villa San Giovanni In Tuscia|San Giovanni Gemini|San Giovanni Ilarione|San Giovanni Incarico|San Giovanni In Croce|San Giovanni In Fiore|San Giovanni In Galdo|San Giovanni In Marignano|San Giovanni La Punta|San Giovanni Lipioni|San Giovanni Lupatoto|San Giovanni Rotondo|San Giuliano Del Sannio|San Giuliano Di Puglia|San Giuliano Milanese|San Giuseppe Vesuviano|San Giuseppe Jato|San Giustino|San Giusto Canavese|San Godenzo|San Gregorio Nelle Alpi|San Gregorio Matese|San Gregorio Di Catania|San Gregorio Dippona|San Gregorio Da Sassola|San Gregorio Magno|Sanguinetto|San Lazzaro Di Savena|San Leo|San Leonardo|San Leonardo In Passiria|San Leucio Del Sannio|San Lorenzello|San Lorenzo Di Sebato|San Lorenzo Al Mare|San Lorenzo In Campo|San Lorenzo|San Lorenzo Bellizzi|San Lorenzo Del Vallo|San Lorenzo Isontino|San Lorenzo Maggiore|San Lorenzo Nuovo|San Luca|San Lucido|San Lupo|Sanluri|San Mango Sul Calore|San Mango Daquino|San Mango Piemonte|San Marcellino|San Marcello|San Marco Argentano|San Marco Dalunzio|San Marco Dei Cavoti|San Marco In Lamis|San Marco La Catola|San Martino Alfieri|San Martino In Badia|San Martino In Passiria|San Martino In Pensilis|San Martino Sulla Marrucina|San Martino Di Finita|San Martino Dagri|San Martino Di Venezze|San Martino Canavese|San Martino Al Tagliamento|San Martino Sannita|San Martino Buon Albergo|San Martino Dallargine|San Martino Del Lago|San Martino Di Lupari|San Martino In Rio|San Martino In Strada|San Martino Siccomario|San Martino Valle Caudina|San Marzano Oliveto|San Marzano Di San Giuseppe|San Marzano Sul Sarno|San Massimo|San Maurizio Canavese|San Maurizio Dopaglio|San Mauro Marchesato|San Mauro Pascoli|San Mauro Castelverde|San Mauro Forte|San Mauro Torinese|San Mauro Cilento|San Mauro La Bruca|San Michele Di Serino|San Michele Di Ganzaria|San Michele Mondovi|San Michele Al Tagliamento|San Michele Alladige|San Michele Salentino|San Miniato|Sannazzaro De Burgondi|San Nazzaro|San Nazzaro Val Cavargna|San Nazzaro Sesia|Sannicandro Di Bari|San Nicandro Garganico|San Nicola La Strada|San Nicola Dellalto|San Nicola Da Crissa|Sannicola|San Nicola Arcella|San Nicola Baronia|San Nicola Manfredi|San Nicolo Di Comelico|San Pancrazio|San Pancrazio Salentino|San Paolo Di Jesi|San Paolo Di Civitate|San Paolo Bel Sito|San Paolo Solbrito|San Pellegrino Terme|San Pier Disonzo|San Pier Niceto|San Piero Patti|San Pietro Di Cadore|San Pietro Al Tanagro|San Pietro Val Lemina|San Pietro Al Natisone|San Pietro A Maida|San Pietro Apostolo|San Pietro Avellana|San Pietro Clarenza|San Pietro Di Carida|San Pietro Di Feletto|San Pietro Di Morubio|San Pietro In Gu|San Pietro In Amantea|San Pietro In Cariano|San Pietro In Casale|San Pietro Infine|San Pietro In Guarano|San Pietro In Lama|San Pietro Mosezzo|San Pietro Mussolino|Villa San Pietro|San Pietro Vernotico|San Pietro Viminario|San Pio Delle Camere|San Polo Matese|San Polo Denza|San Polo Di Piave|San Polo Dei Cavalieri|San Ponso|San Possidonio|San Potito Ultra|San Potito Sannitico|San Prisco|San Procopio|San Prospero|San Quirico Dorcia|San Quirino|San Raffaele Cimena|Sanremo|San Roberto|San Rocco Al Porto|San Romano In Garfagnana|San Rufo|San Salvatore Monferrato|San Salvatore Telesino|San Salvatore Di Fitalia|San Salvo|San Sebastiano Curone|San Sebastiano Al Vesuvio|San Sebastiano Da Po|San Secondo Parmense|San Secondo Di Pinerolo|Sansepolcro|San Severino Marche|San Severino Lucano|San Severo|San Siro|San Sossio Baronia|San Sostene|San Sosti|San Sperate|Santa Brigida|Santa Caterina Villarmosa|Santa Caterina Dello Ionio|Santa Caterina Albanese|Santa Cesarea Terme|Santa Cristina Valgardena|Santa Cristina Gela|Santa Cristina E Bissone|Santa Cristina Daspromonte|Santa Croce Sullarno|Santa Croce Camerina|Santa Croce Del Sannio|Santa Croce Di Magliano|Santadi|Santa Domenica Talao|Santa Domenica Vittoria|Santa Elisabetta|Santa Fiora|Santa Flavia|Santagapito|Santagata Fossili|Santagata Bolognese|Santagata Di Esaro|Santagata Di Puglia|Santagata Sul Santerno|Santagata De Goti|Santagata Del Bianco|Santagata Di Militello|Santagata Feltria|Santagata Li Battiati|Santa Giuletta|Santa Giusta|Santa Giustina|Santa Giustina In Colle|Santagnello|Santalbano Stura|Santalessio Con Vialone|Santalessio In Aspromonte|Santalessio Siculo|Santalfio|Santa Luce|Santa Lucia Di Serino|Santa Lucia Del Mela|Santa Lucia Di Piave|Santa Margherita Di Belice|Santa Margherita Ligure|Santa Margherita Di Staffora|Santa Maria A Monte|Santa Maria A Vico|Santa Maria Capua Vetere|Travaco Siccomario|Santa Maria Della Versa|Santa Maria Del Molise|Santa Maria Di Licodia|Santa Maria Di Sala|Santa Maria Hoe|Santa Maria Imbaro|Santa Maria La Fossa|Santa Maria La Longa|Santa Maria Maggiore|Santa Maria Nuova|Santa Marina|Santa Marina Salina|Santa Marinella|Santambrogio Sul Garigliano|Santambrogio Di Torino|Santambrogio Di Valpolicella|Santomenna|San Tammaro|Santanastasia|Santanatolia Di Narco|Santandrea Di Conza|Santandrea Del Garigliano|Santandrea Apostolo Dello Ionio|Santandrea Frius|Santangelo Dalife|Santangelo Lodigiano|Santangelo Di Piove Di Sacco|Santangelo Lomellina|Santangelo A Cupolo|Santangelo A Fasanella|Santangelo Allesca|Santangelo A Scala|Santangelo Dei Lombardi|Santangelo Del Pesco|Santangelo Di Brolo|Santangelo Romano|Santangelo In Pontano|Santangelo In Vado|Santangelo Le Fratte|Santangelo Limosano|Santangelo Muxaro|Santa Ninfa|Santanna Dalfaedo|Santantimo|Santantioco|Santantonino Di Susa|Villa Santantonio|Santantonio Abate|Santa Paolina|Santapollinare|Santarcangelo Di Romagna|Santarcangelo|Santarpino|Santarsenio|Santa Severina|Santa Sofia Depiro|Santa Sofia|Santa Teresa Di Riva|Santa Teresa Gallura|Santa Venerina|Santa Vittoria In Matenano|Santa Vittoria Dalba|Santegidio Del Monte Albino|Santegidio Alla Vibrata|Santelena|Santelia A Pianisi|Santelia Fiumerapido|Vallefiorita|Santelpidio A Mare|Sante Marie|Santena|San Teodoro|San Teodoro|Santeramo In Colle|Santeufemia A Maiella|Santeufemia Daspromonte|Santeusanio Del Sangro|Santeusanio Forconese|Santhia|Santi Cosma E Damiano|Santilario Dello Ionio|Santilario Denza|Santippolito|Santolcese|San Tomaso Agordino|Santomero|Santonofrio|Santopadre|Santoreste|Santorso|Santorsola Terme|Santo Stefano Quisquina|Santo Stefano Del Sole|Santo Stefano Di Rogliano|Santo Stefano Di Sessanio|Santo Stefano Ticino|Santo Stefano Lodigiano|Santo Stefano Di Magra|Villa Santo Stefano|Santo Stefano Al Mare|Santo Stefano Belbo|Santo Stefano Daveto|Santo Stefano Di Camastra|Santo Stefano In Aspromonte|Santo Stefano Roero|San Stino Di Livenza|Santu Lussurgiu|Santurbano|San Valentino In Abruzzo Citeriore|San Valentino Torio|San Venanzo|San Vendemiano|San Vero Milis|San Vincenzo La Costa|San Vincenzo Valle Roveto|San Vincenzo|San Vitaliano|San Vito Di Cadore|San Vito Sullo Ionio|San Vito Chietino|San Vito Dei Normanni|San Vito Romano|San Vito Di Leguzzano|San Vito|San Vito Al Tagliamento|San Vito Al Torre|San Vito Di Fagagna|San Vito Lo Capo|San Vittore Del Lazio|San Vittore Olona|Sanza|Sanzeno|San Zeno Naviglio|San Zeno Di Montagna|San Zenone Al Lambro|San Zenone Al Po|San Zenone Degli Ezzelini|Saonara|Saponara|Sappada|Sapri|Saracena|Saracinesco|Sarcedo|Sarconi|Sardara|Sardigliano|Sarego|Sarentino|Sarezzano|Sarezzo|Sarmato|Sarmede|Sarnano|Sarnico|Sarno|Sarnonico|Saronno|Sarre|Sarroch|Sarsina|Sarteano|Sartirana Lomellina|Sarule|Sarzana|Sassano|Sassari|Sassello|Sassetta|Sassinoro|Sasso Di Castalda|Sassofeltrio|Sassoferrato|Sassuolo|Satriano|Sauris|Sauze Di Cesana|Sauze Doulx|Sava|Savelli|Saviano|Savigliano|Savignano Irpino|Savignano Sul Rubicone|Savignano Sul Panaro|Savignone|Saviore Delladamello|Savoca|Savogna|Savogna Disonzo|Savona|Scafa|Scafati|Scagnello|Scala Coeli|Scala|Scaldasole|Scalea|Scalenghe|Scaletta Zanclea|Scampitella|Scandale|Scandiano|Scandolara Ravara|Scandolara Ripa Doglio|Scandriglia|Scanno|Scano Di Montiferro|Scansano|Scanzorosciate|Scapoli|Scarlino|Scarmagno|Scarnafigi|Scena|Scerni|Scheggia E Pascelupo|Scheggino|Schiavi Di Abruzzo|Schiavon|Schignano|Schilpario|Schio|Schivenoglia|Sciacca|Sciara|Scicli|Scido|Scilla|Scillato|Sciolze|Scisciano|Sclafani Bagni|Scontrone|Scopa|Scopello|Scoppito|Scordia|Scorrano|Scorze|Scurcola Marsicana|Scurelle|Scurzolengo|Seborga|Secinaro|Secli|Secugnago|Sedegliano|Sedico|Sedilo|Sedini|Sedriano|Sedrina|Sefro|Segariu|Seggiano|Segni|Segonzano|Segrate|Segusino|Selargius|Selci|Selegas|Sellano|Sellero|Sellia|Sellia Marina|Selva Di Val Gardena|Selva Di Cadore|Selva Dei Molini|Selva Di Progno|Selvazzano Dentro|Selvino|Semestene|Semiana|Seminara|Semproniano|Senago|Senale San Felice|Senales|Seneghe|Senerchia|Seniga|Senigallia|Senis|Senise|Senna Comasco|Senna Lodigiana|Sennariolo|Sennori|Senorbi|Sepino|Sequals|Seravezza|Serdiana|Seregno|Seren Del Grappa|Sergnano|Seriate|Serina|Serino|Serle|Sermide E Felonica|Sirmione|Sermoneta|Sernaglia Della Battaglia|Sernio|Serole|Serra San Bruno|Serra Ricco|Serracapriola|Serra Daiello|Serra De Conti|Serradifalco|Serralunga Di Crea|Serralunga Dalba|Serramanna|Serramezzana|Serramonacesca|Serrapetrona|Serrara Fontana|Serra San Quirico|Serra Santabbondio|Serrastretta|Serrata|Serravalle Scrivia|Serravalle Langhe|Serravalle Pistoiese|Serravalle Di Chienti|Serravalle A Po|Serravalle Sesia|Serre|Serrenti|Serri|Serrone|Sersale|Sovramonte|Sessa Aurunca|Sessa Cilento|Sessame|Sessano Del Molise|Sestino|Sesto Campano|Sesto Ed Uniti|Sesto Fiorentino|Sesto Al Reghena|Sesto|Sesto Calende|Sestola|Sesto San Giovanni|Sestriere|Sestri Levante|Sestu|Settala|Settefrati|Settime|Settimo San Pietro|Settimo Milanese|Settimo Rottaro|Settimo Vittone|Settimo Torinese|Settingiano|Setzu|Seui|Seulo|Seveso|Sezzadio|Sezze|Sfruz|Sgonico Zgonik|Sgurgola|Siamaggiore|Siamanna|Siano|Siapiccia|Siculiana|Siddi|Siderno|Siena|Sigillo|Signa|Silandro|Silanus|Siligo|Siliqua|Silius|Sillavengo|Silvano Dorba|Silvano Pietra|Silvi|Simala|Simaxis|Simbario|Simeri Crichi|Sinagra|Sindia|Sini|Sinio|Siniscola|Sinnai|Sinopoli|Siracusa|Sirignano|Siris|Sirolo|Sirone|Sirtori|Siurgus Donigala|Sizzano|Sluderno|Smerillo|Soave|Socchieve|Soddi|Sogliano Al Rubicone|Sogliano Cavour|Soglio|Soiano Del Lago|Solagna|Solarino|Solaro|Solarolo|Solarolo Rainerio|Solarussa|Solbiate Arno|Solbiate Olona|Soldano|Soleminis|Solero|Solesino|Soleto|Solferino|Soliera|Solignano|Sulmona|Solofra|Solonghello|Solopaca|Solto Collina|Solza|Somaglia|Somano|Somma Lombardo|Somma Vesuviana|Sommacampagna|Sommariva Del Bosco|Sommariva Perno|Sommatino|Sommo|Sona|Soncino|Sondalo|Sondrio|Songavazzo|Sonico|Sonnino|Sora|Soraga Di Fassa|Soragna|Sorano|Sorbo Serpico|Sorbo San Basile|Sordevolo|Sordio|Soresina|Sorga|Sorgono|Sori|Sorianello|Soriano Calabro|Soriano Nel Cimino|Sorico|Soriso|Sorisole|Sormano|Sorradile|Sorrento|Sorso|Sortino|Sospiro|Sospirolo|Sossano|Sostegno|Sotto Il Monte Giovanni Xxiii|Sover|Soverato|Sovere|Soveria Mannelli|Soveria Simeri|Soverzene|Sovicille|Sovico|Sovizzo|Sozzago|Spadafora|Spadola|Sparanise|Sparone|Specchia|Spello|Sperlinga|Sperlonga|Sperone|Spessa|Spezzano Albanese|Spezzano Della Sila|Spiazzo|Spigno Monferrato|Spigno Saturnia|Spilamberto|Spilimbergo|Spilinga|Spinadesco|Spinazzola|Spinea|Spineda|Spinete|Spineto Scrivia|Spinetoli|Spino Dadda|Spinone Al Lago|Spinoso|Spirano|Spoleto|Spoltore|Spongano|Spormaggiore|Sporminore|Spotorno|Spresiano|Spriana|Squillace|Squinzano|Staffolo|Stagno Lombardo|Staiti|Staletti|Stanghella|Staranzano|Stazzano|Stazzema|Stazzona|Stefanaconi|Stella|Stellanello|Stelvio|Stenico|Sternatia|Stezzano|Stienta|Stigliano|Stignano|Stilo|Stimigliano|Stio|Stornara|Stornarella|Storo|Stra|Stradella|Strambinello|Strambino|Strangolagalli|Stregna|Strembo|Stresa|Strevi|Striano|Strona|Stroncone|Strongoli|Stroppiana|Stroppo|Strozza|Sturno|Subbiano|Subiaco|Succivo|Sueglio|Suelli|Suello|Suisio|Sulbiate|Sulzano|Sumirago|Summonte|Suni|Suno|Supersano|Supino|Surano|Surbo|Susa|Susegana|Sustinente|Sutera|Sutri|Sutrio|Suvereto|Suzzara|Taceno|Tadasuni|Taggia|Tagliacozzo|Taglio Di Po|Tagliolo Monferrato|Taibon Agordino|Taino|Talamello|Talamona|Talana|Taleggio|Talla|Talmassons|Tambre|Taormina|Tarano|Taranta Peligna|Tarantasca|Taranto|Tarcento|Tarsia|Tartano|Tarvisio|Tarzo|Tassarolo|Taurano|Taurasi|Taurianova|Taurisano|Tavagnacco|Tavagnasco|Tavenna|Taverna|Tavernerio|Tavernola Bergamasca|Taviano|Tavigliano|Tavoleto|Tavullia|Teana|Teano|Teglio|Teglio Veneto|Telese Terme|Telgate|Telti|Telve|Telve Di Sopra|Tempio Pausania|Temu|Tenna|Tenno|Teolo|Teora|Teramo|Terdobbiate|Terelle|Terento|Terlano|Terlizzi|Termeno Sulla Strada Del Vino|Termini Imerese|Termoli|Ternate|Ternengo|Terni|Terno Disola|Terracina|Terragnolo|Terralba|Terranuova Bracciolini|Terranova Da Sibari|Terranova Dei Passerini|Terranova Di Pollino|Terranova Sappo Minulio|Terrasini|Terrassa Padovana|Terravecchia|Terrazzo|Terricciola|Terruggia|Tertenia|Terzigno|Terzo|Terzo Daquileia|Terzolas|Terzorio|Tesero|Tesimo|Tessennano|Testico|Teti|Teulada|Teverola|Tezze Sul Brenta|Thiene|Thiesi|Tiana|Ticengo|Ticineto|Tiggiano|Tiglieto|Tigliole|Tignale|Tinnura|Tione Degli Abruzzi|Tione Di Trento|Tirano|Tires|Tiriolo|Tirolo|Tissi|Tito|Tivoli|Tizzano Val Parma|Toano|Tocco Caudio|Tocco Da Casauria|Toceno|Todi|Toffia|Toirano|Tolentino|Tolfa|Tollegno|Tollo|Tolmezzo|Tolve|Tombolo|Ton|Tonara|Tonco|Tonengo|Tora E Piccilli|Torano Castello|Torano Nuovo|Torbole Casaglia|Torcegno|Torchiara|Torchiarolo|Torella Dei Lombardi|Torella Del Sannio|Torgiano|Torgnon|Torino Di Sangro|Torino|Toritto|Torlino Vimercati|Tornaco|Tornareccio|Tornata|Tornimparte|Torno|Tornolo|Toro|Torpe|Torraca|Torralba|Torrazza Coste|Torrazza Piemonte|Torrazzo|Torre Di Ruggiero|Torre Mondovi|Torre Cajetani|Torre Di Santa Maria|Torre Annunziata|Torreano|Torre Canavese|Torrebelvicino|Torre Beretti E Castellaro|Torre Boldone|Torre Bormida|Torrebruna|Torrecuso|Torre Darese|Torre De Busi|Torre De Picenardi|Torre Del Greco|Torre De Negri|Torre De Passeri|Torre De Roveri|Torre Di Mosto|Torre Disola|Torreglia|Torregrotta|Torre Le Nocelle|Torremaggiore|Torre Orsaia|Torre Pallavicina|Torre Pellice|Torre San Giorgio|Torre San Patrizio|Torre Santa Susanna|Torresina|Torretta|Torrevecchia Teatina|Torrevecchia Pia|Torri In Sabina|Torri Del Benaco|Torrice|Torricella Peligna|Torricella Verzate|Torricella In Sabina|Torricella|Torricella Sicura|Torricella Del Pizzo|Torri Di Quartesolo|Torriglia|Torrile|Torrioni|Torrita Tiberina|Torrita Di Siena|Tortona|Tortora|Tortorella|Tortoreto|Tortorici|Torviscosa|Tuscania|Toscolano Maderno|Tossicia|Tovo San Giacomo|Tovo Di Santagata|Trabia|Tradate|Tramatza|Trambileno|Tramonti|Tramonti Di Sopra|Tramonti Di Sotto|Tramutola|Trana|Trani|Traona|Trapani|Trappeto|Trarego Viggiona|Trasacco|Trasaghis|Trasquera|Tratalias|Travagliato|Traves|Travedona Monate|Traversella|Traversetolo|Travesio|Travo|Trebaseleghe|Trebisacce|Trecastagni|Trecate|Trecchina|Trecenta|Tredozio|Treglio|Tregnago|Treia|Treiso|Tremestieri Etneo|Tremosine Sul Garda|Trentinara|Trento|Trentola Ducenta|Trenzano|Treppo Grande|Trepuzzi|Trequanda|Tresana|Trescore Balneario|Trescore Cremasco|Tresivio|Tresnuraghes|Trevenzuolo|Trevi|Trevi Nel Lazio|Trevico|Treviglio|Trevignano Romano|Trevignano|Treville|Treviolo|Treviso Bresciano|Treviso|Trezzano Rosa|Trezzano Sul Naviglio|Trezzo Tinella|Trezzo Sulladda|Trezzone|Tribano|Tribiano|Tribogna|Tricarico|Tricase|Tricerro|Tricesimo|Triei|Trieste|Triggiano|Trigolo|Trinita|Trinita Dagultu E Vignola|Trino|Triora|Tripi|Trisobbio|Trissino|Triuggio|Trivento|Trivigliano|Trivignano Udinese|Trivigno|Trivolzio|Trodena Nel Parco Naturale|Trofarello|Troia|Troina|Tromello|Trontano|Tronzano Vercellese|Tropea|Trovo|Truccazzano|Tubre|Tufara|Tufillo|Tufino|Tufo|Tuglie|Tuili|Tula|Tuoro Sul Trasimeno|Valvestino|Turano Lodigiano|Turate|Turbigo|Turi|Turri|Turriaco|Turrivalignani|Tursi|Tusa|Uboldo|Ucria|Udine|Ugento|Uggiano La Chiesa|Uggiate Trevano|Ula Tirso|Ulassai|Ultimo|Umbriatico|Urago Doglio|Uras|Urbana|Urbania|Urbe|Urbino|Urbisaglia|Urgnano|Uri|Ururi|Urzulei|Uscio|Usellus|Usini|Usmate Velate|Ussana|Ussaramanna|Ussassai|Usseaux|Usseglio|Ussita|Ustica|Uta|Uzzano|Vaccarizzo Albanese|Vacone|Vacri|Vadena|Vado Ligure|Vaglia|Vaglio Serra|Vaglio Basilicata|Vagli Sotto|Vaiano Cremasco|Vaiano|Vaie|Vailate|Vairano Patenora|Valbondione|Valbrembo|Valbrevenna|Valbrona|Valdagno|Valdaora|Valdastico|Val Della Torre|Valdengo|Valdidentro|Valdieri|Valdina|Val Di Nizza|Valdisotto|Val Di Vizze|Valdobbiadene|Valduggia|Valeggio Sul Mincio|Valeggio|Valentano|Valenza|Valenzano|Valera Fratta|Valfabbrica|Valfenera|Valfloriana|Valfurva|Valganna|Valgioie|Valgoglio|Valgrana|Valgreghentino|Valgrisenche|Valguarnera Caropepe|Vallada Agordina|Vallanzengo|Vallarsa|Vallata|Valle Di Cadore|Valle Di Maddaloni|Valle Lomellina|Valle Agricola|Valle Aurina|Vallebona|Valle Castellana|Vallecorsa|Vallecrosia|Valle Di Casies|Valledolmo|Valledoria|Vallemaio|Vallelonga|Vallelunga Pratameno|Vallepietra|Vallerano|Vallermosa|Vallerotonda|Vallesaccarda|Valle Salimbene|Valle San Nicolao|Valleve|Valli Del Pasubio|Vallinfreda|Vallio Terme|Vallo Di Nera|Vallo Della Lucania|Vallo Torinese|Valloriate|Valmacca|Valmadrera|Val Masino|Valmontone|Valmorea|Valmozzola|Valnegra|Valpelline|Valperga|Valsavarenche|Valstrona|Valtopina|Valtournenche|Valtorta|Valva|Valverde|Vandoies|Vanzaghello|Vanzago|Vanzone Con San Carlo|Vaprio Dadda|Vaprio Dagogna|Varallo|Varallo Pombia|Varano Borghi|Varano De Melegari|Varapodio|Varazze|Varco Sabino|Varedo|Varena|Varenna|Varese Ligure|Varese|Varisella|Varmo|Varna|Varsi|Varzi|Varzo|Vasia|Vastogirardi|Vauda Canavese|Vazzano|Vazzola|Vecchiano|Vedano Olona|Vedano Al Lambro|Vedelago|Vedeseta|Veduggio Con Colzano|Veggiano|Veglie|Veglio|Vejano|Veleso|Velezzo Lomellina|Velletri|Vellezzo Bellini|Velo Veronese|Velo Dastico|Velturno|Venafro|Venaus|Venaria Reale|Venarotta|Venasca|Vendone|Vendrogno|Venegono Inferiore|Venegono Superiore|Venetico|Venezia|Veniano|Venosa|Venticano|Ventimiglia Di Sicilia|Ventimiglia|Ventotene|Venzone|Verano Brianza|Verano|Verbania|Verbicaro|Vercana|Verceia|Vercelli|Vercurago|Verdellino|Verdello|Verduno|Vergato|Verghereto|Vergiate|Vermiglio|Vernante|Vernasca|Vernate|Vernazza|Vernio|Vernole|Verolanuova|Verolavecchia|Verolengo|Veroli|Verona|Verrayes|Verretto|Verrone|Verrua Savoia|Verrua Po|Vertemate Con Minoprio|Vertova|Verucchio|Vervio|Verzegnis|Verzino|Verzuolo|Vescovana|Vescovato|Vesime|Vespolate|Vessalico|Vestenanova|Vestigne|Vestone|Vetralla|Vetto|Vezza Doglio|Vezza Dalba|Vezzano Ligure|Vezzano Sul Crostolo|Vezzi Portio|Viadana|Viadanica|Viagrande|Viale|Vialfre|Viano|Viareggio|Viarigi|Vibonati|Vicalvi|Vicari|Vicchio|Vicenza|Vicoforte|Vico Del Gargano|Vico Nel Lazio|Villa Literno|Vico Equense|Vicoli|Vicolungo|Ziano Piacentino|Vicopisano|Vicovaro|Vidigulfo|Vidor|Vidracco|Vieste|Vietri Di Potenza|Vietri Sul Mare|Vigano San Martino|Vigano|Vigarano Mainarda|Vigasio|Vigevano|Viggianello|Viggiano|Viggiu|Vighizzolo Deste|Vigliano Dasti|Vigliano Biellese|Vignale Monferrato|Vignanello|Vignate|Vignola|Vignola Falesina|Vignole Borbera|Vignolo|Vignone|Vigo Di Cadore|Vigodarzere|Vigolo|Vigolzone|Vigone|Vigonovo|Vigonza|Viguzzolo|Villa Santa Lucia|Villadossola|Villa Di Chiavenna|Villa Di Tirano|Villa Santina|Villa Bartolomea|Villa Basilica|Villabassa|Villabate|Villa Biscossi|Villa Carcina|Villa Castelli|Villa Celiera|Villachiara|Villacidro|Villa Collemandina|Villa Cortese|Villa Dadda|Villadeati|Villa Del Bosco|Villa Del Conte|Villa Di Serio|Villa Estense|Villa Dogna|Villadose|Villafalletto|Villa Faraldi|Villafranca Sicula|Villafranca Dasti|Villafranca In Lunigiana|Villafranca Padovana|Villafranca Piemonte|Villafranca Di Verona|Villafranca Tirrena|Villafrati|Villaga|Villagrande Strisaili|Villa Guardia|Villa Lagarina|Villalago|Villalba|Villalfonsina|Villalvernia|Villamagna|Villamaina|Villamar|Villamarzana|Villamassargia|Villa Minozzo|Villamiroglio|Villandro|Villanova Monferrato|Villanova Del Battista|Villanova Mondovi|Villanova Dalbenga|Villanova Del Sillaro|Villanova Biellese|Villanova Di Camposampiero|Villanova Sullarda|Villeneuve|Villanova Canavese|Villanova Dardenghi|Villanova Dasti|Villanova Del Ghebbo|Villanovaforru|Villanovafranca|Villanova Marchesana|Villanova Monteleone|Villanova Solaro|Villanova Truschedu|Villanova Tulo|Villanterio|Villanuova Sul Clisi|Villaputzu|Villar Dora|Villarbasse|Villarboit|Villareggia|Villar Focchiardo|Villaromagnano|Villarosa|Villar Pellice|Villar Perosa|Villar San Costanzo|Villasalto|Villasanta|Villa San Giovanni|Villa San Secondo|Villa Santa Lucia Degli Abruzzi|Villa Santa Maria|Villa Santangelo|Villasor|Villaspeciosa|Villastellone|Villata|Villaurbana|Villavallelonga|Villaverla|Villetta Barrea|Villette|Villesse|Villimpenta|Villongo|Villorba|Vilminore Di Scalve|Vimercate|Vimodrone|Vinadio|Vinchiaturo|Vinchio|Vinci|Vinovo|Vinzaglio|Viola|Vione|Vipiteno|Virle Piemonte|Visano|Vische|Visciano|Visco|Visone|Visso|Vistarino|Vistrorio|Vita|Viterbo|Viticuso|Vito Dasio|Vitorchiano|Vittoria|Vittorio Veneto|Vittorito|Vittuone|Vitulazio|Vitulano|Viu|Vivaro Romano|Vivaro|Viverone|Vizzini|Vizzola Ticino|Vizzolo Predabissi|Vo|Vobarno|Vobbia|Vocca|Vodo Cadore|Voghera|Voghiera|Vogogna|Volano|Volla|Volongo|Volpago Del Montello|Volpara|Volpedo|Volpeglino|Volpiano|Voltaggio|Voltago Agordino|Volta Mantovana|Volterra|Voltido|Volturara Irpina|Volturara Appula|Volturino|Volvera|Vottignasco|Zaccanopoli|Zafferana Etnea|Zagarise|Zagarolo|Zambrone|Zandobbio|Zane|Zanica|Zavattarello|Zeccone|Zeddiani|Zelbio|Zelo Buon Persico|Zeme|Zenevredo|Zenson Di Piave|Zerba|Zerbo|Zerbolo|Zerfaliu|Zeri|Zermeghedo|Zero Branco|Zevio|Ziano Di Fiemme|Zibido San Giacomo|Zignago|Zimella|Zimone|Zinasco|Zoagli|Zocca|Zogno|Zola Predosa|Zollino|Zone|Zoppe Di Cadore|Zoppola|Zovencedo|Zubiena|Zuccarello|Zugliano|Zuglio|Zumaglia|Zumpano|Zungoli|Zungri|Lariano|Lamezia Terme|Santanna Arresi|Terme Vigliatore|Acquedolci|Ladispoli|Ardea|Badesi|Sicignano Degli Alburni|Molina Aterno|Scanzano Jonico|Portopalo Di Capo Passero|Avigliano Umbro|Viddalba|Casapesenna|Castro|Cellole|Porto Cesareo|San Cassiano|Vajont|Ordona|Zapponeta|Blufi|Paterno|Masainas|Mazzarrone|Ciampino|Santa Maria La Carita|Golfo Aranci|Loiri Porto San Paolo|Santantonio Di Gallura|San Ferdinando|Villaperuccio|Priolo Gargallo|Trecase|Petrosino|Tergu|Maniace|Santa Maria Coghinas|Cardedu|Torrenova|Ragalna|Castiadas|Massa Di Somma|Stintino|Piscinas|Erula|Bellizzi|San Cesareo|Fiumicino|Statte|Due Carrare|Padru|Montiglio Monferrato|Ronzo Chienis|Cavallino Treporti|Fonte Nuova|Campolongo Tapogliano|Lonato Del Garda|Ledro|Comano Terme|Gravedona Ed Uniti|Mappano|Rivignano Teor|Trecastelli|Fabbriche Di Vergemoli|Valsamoggia|Figline E Incisa Valdarno|Castelfranco Piandisco|Fiscaglia|Poggio Torriana|Sissa Trecasali|Scarperia E San Piero|Casciana Terme Lari|Crespina Lorenzana|Pratovecchio Stia|Montoro|Vallefoglia|Quero Vas|Santomobono Terme|Val Brembilla|Bellagio|Colverde|Verderio|Cornale E Bastida|Maccagno Con Pino E Veddasca|Borgo Virgilio|Tremezzina|Longarone|Valdaone|Predaia|San Lorenzo Dorsino|Valvasone Arzene|Sillano Giuncugnano|La Valletta Brianza|Altavalle|Altopiano Della Vigolana|Amblar Don|Borgo Chiese|Borgo Lares|Castel Ivano|Cembra Lisignago|Conta|Madruzzo|Porte Di Rendena|Primiero San Martino Di Castrozza|Sella Giudicarie|Tre Ville|Vallelaghi|Ville Danaunia|Ventasso|Pieve Di Bono Prezzo|Dimaro Folgarida|Polesine Zibello|Montescudo Monte Colombo|Alto Reno Terme|Borgomezzavalle|Lessona|Corteolona E Genzone|Campiglia Cervo|Val Di Zoldo|Alpago|Abetone Cutigliano|San Marcello Piteglio|Montalcino|Terre Roveresche|Colli Al Metauro|Terre Del Reno|Valfornace|Alta Valle Intelvi|Val Liona|Casali Del Manco|Alta Val Tidone|Montalto Carpasio|Cassano Spinola|Alto Sermenza|San Giovanni Di Fassa Sen Jan|Rio|Laterina Pergine Valdarno|Castelgerundo|Centro Valle Intelvi|Valvarrone|Borgo Mantovano|Alluvioni Piovera|Cellio Con Breia|Treppo Ligosullo|Fiumicello Villa Vicentina|Barbarano Mossano|Borgo Veneto|Corigliano Rossano|Valle Cannobina|Val Di Chy|Borgocarbonara|Terre Dadige|Barberino Tavarnelle|Tresignana|Riva Del Po|Sorbolo Mezzani|Solbiate Con Cagno|Sassocorvaro Auditore|Quaregna Cerreto|Valchiusa|Gattico Veruno|Valdilana|Piadena Drizzona|Colli Verdi|Lu E Cuccaro Monferrato|Borgo Valbelluna|Pieve Del Grappa|Valbrenta|Vermezzo Con Zelo|Cadrezzate Con Osmate|Colceresa|Lusiana Conco|Presicce Acquarica\",provinceOrCountry:\"PDLOLCSIORPEMIPZRGFGCNMTAQRIPZBZSANACTCTCTCTCTFRCSBSPUMNCRVTCSVVAPTRAPBACLCBISALCSFRBACTBGBGROBSVRRMNARCPCNASSENPTATTOPDCRRCISFRBSBLRMVAMBNOAGSAANVIAOMBORENAQAVCSUDCSCEBIAOTOBNIMLCCNSSTNTOPVVCPEBLSVFRCNTEORMISABGVCPZRMPVSOVRPRCNCOSVALBAFGCOVICZTOTNMBCSPDREBGCOSVSVVAPVSOATPVTPMETNBZORAGALCSLELESAAQBSALRASSBGMEPAMTALVCCEMEPAPAORAOBLTRLERMBGBGBGBGTOVITOTOPCCOBASVALAVPASAVIFMCSCHVITVCNPACSLUTRCEFRALBGCOSAFMCSUDCZFRCZRIBGSPTRCSNOBNBLUDNAFRTEANCZSOTNTOSVBILETOPNAVBTBZSSBSVAARVRBSSATOPDRMCRATLCVERCBGAOBZAORMFRATMERCRIVBAQCOFGPZRMBOVBAOPUBNMCBNBZCOMCAPSOIMFGCSLTSAIMAQUDAVFRLEAGATPNNUORVCSUTVFRBGANCHORGRRMVATNSPVRMIMBVISSORSOBGRCVVPVGEMIARCOBOFECNCNCZCHAVRORMCHCETONUVBVTMINOPZIMSUFRSVAOLEVBNOCOBNBNFRPDROALAPPDTRBGVABLVITERMUDUDRMBSAOSSNUNAPDVISASIAPFGRIVIVCVISIMNTVRIMICAPGCOORENATORAQPZSACHFRSATEAVTRUDNUSRSAMSVBIMBLFRNUGEBZAVAVBGCETAAQPNBGTOPZTNAOSRALTOCRATBGBSPNVAVABGVBNAIMBZPVROVRARCZRCPARAPVRARCUDCNBGLUPTPIFIFCAVISPDBSCRCNLEREROMNMSVTBSCEAVIMTORETOATCNTOTOPASVLCSUTOVCVCAQPZALSSTOORVBPZPDORPZCBNAMIVAORTOANVTCNBSBGFIPVBZPDMEPNAOVAPRSVVRTOMINOORAQLUGECNBSBANUBGBOPZAQMBBTCOCNTOSAENSUAQSULCBGLCLCALPVTRTETNBNMIMEMIUDVTBSVIVTVAVTLTALCNPGPVMOPDCNSAPVPAFRORNUVBVABSTNPRBGVBTOCNCZVRALMCPUPVVBPZLCTERNRMCNMINOCESABLMBFMISCSFRPARICTCSANATBOKRCSCNNUSOCOCNRCSSCNBNBIBOBGSOPRSSCOPVALBGROSVCNBSMTMBMICNFCUDLOATALBGBSBSMBVAMITNPCVAVASSPCPGVBPGSPVRCTCSRCNOVABGVCSOMBREARLITOFGUDORVTBIBSTNPICOMIBABIAOBSNUAVPABTAQTECSALVABABABANUAGRCCOTNBGCOCOPDPCTONOCSVCTNVALOMIGEVBNOCBSVSPBGMITOMTBOPEPAMCNUVTBGBZNOVIVTCHCLPAMOORSPBGBGVRFETNBNCBCRCSAVSSSSSSCNRIBLUDIMCRPRREPVTOPASPIMLORIALSVFCCZTOSVTNLURIVCBGMNPVTONOLOCNNOIMTOTOPCPUPVALPVPDCNPRBSFIALPVBSVCPRNOBOVCSVSOPVBSORNUCHBITVNUSSSSGEORROVRALVRTONANACNALLCPVBGCNCZLEBGBSSSRCRCRCBSCNBSFGMBPDVRALMNCNBGRMSABZPVRCBSTOBGBSVATVCRVAVICOBGBGLOPVVICOBZBSVAVRTNVRREBSTNPVBZVIMITNVACNVVTOCOPZCNNOBGALBRPZVANOBSMBRAVAAOPELCFRVIVVMECNPVCTBZCNTOVBTOMBPDSPPNTOBGCOVABZATBGTONAVABIAOTORCMIATSRCHBNMISAARSSPNSSBOSUPTSOAQVAUDLCCOSSSSSABNCHSICSMBSUAGSSTOTOVCORGETOCNMISRTPMBMIPRPECBVRTOVAMICLPIVRTOATUDBGALVACOORPAISKRVAREPCTNPDCOTVTOSAPUCACOFGAQTNCECEBZBSSOAVVASVNAAVBLATAGSSRCVBENAQSUCTTPPVVTTNPIMTPIBGBSBGLCBZMCBOTNVRVITNPCFIPRSVSPLEAVSVBIATTNLCCSATCSAGCTCLPANOROVIBGTOBSSACRPZVIBGPZBNCETRPVMIBSNAALLUBIAGMITOVBBIISCNANATANBGRMNOMCSACERCALUDCRVIAGGEAOSAVECERMGRCRRECSMBREPGVCLEFILITOVITOCOTNTERCCBAGTPCBPDTNAQLTCBBZSOPDPAPAFMPAUDCLGEMOAOBNBNFRCBVEPZCBGELIVESAPALUIMCTMCPDPDNAMOPVAQBZBOCNBLRMTNROTNPZCEROFGBIPVTOPDAVRCTOMIATRIVTPNAGSRVTTOAQCSSAPGVBMNPVVBLERCBGBTCHCNAQPORITOALISRIRMATVARMPUTOCOTECOVEPCSAPAGRPILURMCRAQCOVVAQAQMEBGBLVTBSMECELIARMBAQAVCABSAQTVCRCRPEISFILICRRMVTBOLEVTCNARVBMENATNBSALBGCETOAVATBIVRBGBSGOCEBACZRCCNCNPETNFGAQGEAPMBCOBGVATOIMVTALSUNAPVCOPZTVSUSVPDVCVACNRCCZNALUTOLCALRCVCVCALKRSSCSAVTOCOCEPACEVCTNFGCOSRUDSUCZTOLEPOPDVAMBBZBGCSBGMEVAVATABRISPCCSPUBSALMOMILENOPVRECHPERMFGISMSVIALSPSPALCNAQVICNPUALPDMICOCHBGTNKRCBCHCECHFRNOCHAVTOSACRALCBCEBNVAVBPDPITVBOCRALNOALVRLOSACRCRCRBORECNSACHNOCRLOCRMNALCSFGNAPZMNLOMNPDCRBTCEFGMEFRNOVANABANANASVVCPVRMBIRICELELCMIGEPNALLCPVNABGPGVAPIVCTOPVTOGELOSATOLOFICETVRCREKRBOBGCOCOBGMSNARASICHVAPVMINAATSOUDLCAVBAVACSMIVASRBGMIMICOATLCALALMIFRVIPVTEVRLITOCNATTOATPVMEMIPVBSVIPDAVMNANBZSVATRACBPASAFMBSTVPABOMNVRBGRNCNISAQGRBOCRAQCTAPMEAQCERIANFIARTNLTAVBNMOCSIMTVPICHCRRMTRMNVIPZBOROCHSAAQATTENATPTOBAPATAALVAREALIMPCGRALNOANCRATBIALPVALALATALCNNOCNTESICNPICBCNFRCEVATNPVBOSOLCNATNTVTNMNCBFGPZISPZFGRMBOCNCOROBSPZMECEPVCNROTNPNRERECOFGFRRIVRATSILOALATSAATSALURMSPTOMOALPIBNISISANBNMCPGATBZBGSAPCSAARBORMMCRIVTISPZSSVAALAGSVAQAQBNAOAVBNRCTPMOPCTRCRCEBOBSAOBOCTCHVACSGELULOSATOPEPGGRTEMNSICNVTTECNARARAPTECNBGSOUDLOBSAPBSLELELEBGFRFCFRAGENVAPAPZCBMECSCSCTCZENPEAGRNBNPVSABINONOTOVRTNCNCNLENOTNCOVAVETVPNALVEUDRMTNTNLOMBBGMOTNTOREMNARBSVABGVRFRPVLIBSSOPAPAVEBRAQCHFGCSALCRBACSATBSATCNFGSVSAVTVTBRTECZBGBGBLBGROSVCNFESAENCZPEBNVBFRENGECONOPVSACBTOCBCSAQSOUDNAPATOVRROKRMNALCNTOBGALPVPVSVIMMBPCFGCSCOTERMCOLCMIANBNPGATFICNALBIATISMIMIVRPZFIPVCZRMPDFRCNVCBSCNPVRMRACSLOUDAVCEIMCSCELCTOMIMBVBMEMIFCFCAVBLIMTVVVMCATSABSSICSCNBSAOAOAOAOAOCNSSTOVIAVSIPITORGSSTVANCZBSPZISGESOTOBZTOSOTOBLPTCHFGCRBGPVVETOPNUDARBGVISOBZCNPATOUDIMATAVIMSISIARTOAGRETVBLGECZNASARMCRTOVCCNPVBSPVTVBSRCPANABSPNTNATRMCRMCGRMIPASORCTOTNPDVETOCECSIMBNTOMTCOKRKRTNBGSVBGVAMITVCNATLTBRPGPDPGPGRIRCRIPEVALCIMTNVCUDBGBSCSCBVTAQRMCHISMCPECBRMARCHFCAQPEVTTEGRAQRMSOCOBGPNPNCNTOTNCSVATNBGTOTOATBSATVAAQPDPVFETVLOUDSSBIMBAOGEVIGENOBGFRPCLCRIAQPGBNSITVBSLCPRPECBCHCHRIRMRITOAQFRLEAQTOTOLIFRPABLCBRIAPISSARISUBSVCUDMCMTVRBSBGMIVRRMTECOSOPRCSMIBGVAFEMSLOUDBLBLVABSNORGAGNAMNTNCOPRAPCOBGVECESAISVRRIBSVEMOMBRCTOMETVPVRICZALRAPDPARIAVTESASABAAVALLEPVFEPVBASAMIROVTPGPNTVPNGELUFRAQLTRNLEANTOPAPZSAAOMIGOBGBGMIMBVILOCNVTPRUDLOLOTVMIREMBPDCOMCTELEMIATBZCZATATATPCCRCRBSPCCNBSLCBGLOATBZTEARPEBZPVBSUDCSIMSORCTOCNBISVAPVBSSATALBGROVIPGPVBGBGLCVCIMBGVRATCNRAKRKRRIBGPVMTLCVCCNVBVICHBGCRCRLCVALCCOALCRCRVCVILORONOBIBOVBNATACNGEVBTECSCZCSVACRVCTNKRVAVRSACOTOMIVAORPETOCRVACNATTOCHAPANORNOVACZBIBGBZLEPDMNCEMIBNMICOBGTPKRLEVAVATNMIBGTNBLBSVVGEVACZSOCASUCZSVSPSOCLRCFGBSCNALTNALCRPGLCVCBSMBNUCSCSCNSAIMIMIMIMFIUDVVCSLENOCOBZGOCNCHUDVRIMIMGOSUTSVELCCSCOBLAVVBSUSUAOBICOSUNULCNOPVBIMNBGCOAOFCCRBOCEVVTNUDMITNCNTOVBNUSOVIBNTSVAVABNATSABSBZPENULCCACNAOFIBGVIUDCNBGCNPZVECOVRVRBSBRTPSVPNLCMCSUSUTOBSLCFRSSPDSUAOCOALREANVTVVTRUDSOTNRAFGUDCOTACSAQVATNBNBLCEANCSMEVTCZFMCHCOFRBZMOPNPUTEBGBGNORICHCHVIPZCNPEPCVTGOTVBRGEPICNGEMTAGTPTOSVCNTOPRSAALBLCOTOAOTRFRSRPUFMVACZRCCZMTFEVRCBVAPVTOATPCRCALRIRMTOMCTNMCPAROMETRBZTNCRFIBSROVECOCSORRMVVBGVVMSFRCHPZPVISVVANMOSVBGCOBGMOTOPCFIFICSSAMORCPNMECTCSMCMSUDBSMESRSSAVSUORVCFGBNGOTOARBNTNAPPGTVSPGRLOMELTTNNUAOFRBOPNAVBGPRTVNOVCGEATPDTVAQFRCEBGPRBLBGRICHAPBNSOORPZBGUDAVNAISFCFCVBRMLTCECRMOVCTNISVIUDUDUDTOBGPRLUBZPVMELUMSAQCBCHVEVECNCZPGRCVEPUVICNCNTABNBNCHSPALFMBRVVCHCSMEPZVVSRCEALPVRMCSTNROALALTOCNMOBNRIPGPGRONANAPUMETVCHALAVCECEATCHPNTOPUPUFRISTOALALFIBGVRFRBZCHMEMESASUCSRASOSACRALPUAOCRNULTMEMIBOBIENAQLECZMCTVROCNSINUBZMELELERCLCFCLOVAVTVANOPVLURMPZBOPDFRVILECEMECENUPDALBSPVCNFICBVICHFCPVVIBGBGBGPAMTALNOMILCVRBSBSCNNOBZBSPVLCSVTNCOTOCZTOREFCVCBSROBGALRMVANUGRMNVABGPDVRPCMNCLRNUDVARMANCRCNSUGESUPZRMCORCRCPARMPVVASUTOVBVAVVSOCRSUMICHSUAVBSNOVBORBGVCROTOBSCEPGPAMEALRGCTSSTOTVSUTPBIRCSASAVBAOCBCZPZBNTASABACEAQRCMERCTRBATNNUCZCHLENAPACHFRTESALEPVMBSVTNSVTOCZBZSPTVPVPAMNVAPVCRUDSUSUSUORORMNSORMTVMTMIAQGOBGVAVABGVABGFEGECNBLPCCNBSCNNOPUGOGOVTLOVTBINAPCCTATBOCOCOMENOVAPDPDMTBGPAPVVBTOBACTCEATRIAVVCALAOAOAOFIMIVRCOCENOTNUDCSCNVICSBOALBGALBGCRPVPCTOSOSOGRTORMTAAVAPFMAGVTRCMTAVVETOCRBGPZBANAVILEMCPGPGREMESUCOFRVCLOCZROTRCSCHCBAVPZCBBNPICNSUREALPGMICBMNRMMOPVCHVBSUBSCRAOCZBSSUCNNUVRSSLCTNBOIMFIVAATBSVATOVBLCAOAQCOPVTOMINOMIFEVVNUBSMTCNCZNAVTFGBSTNISSUPAATKRFRGESOTETOIMGRVRPAPUBGVICRVRALFGBSSARGVATOAOBGAOCHTVMELTSSSSTOCRCBRMVANUANVVAGAORMRITOMINAAVBZORSSRCVICOCNCSPZFEBZPISVMICOCSCSBZBZBGTOCHSSMOCOBLCNAGPTVCBZCHNOPVPRPVNUSOTOFMAVCSPTPVCBBZAOPACOSPSUVIFIVTTAAOBRLTUDPZCSUDRCSABZPZPZTOSASAAVGEVRBLBZTNPZVAVABSSATNVRMBAQLELCBGVAVRMIPDNUTOGETOROMEBGBSLTVCMBCHSRRIENTALECNCNPASPALNOCNPRPRFGMBTOUDCEMENAPECHSPBGLECNTNTOCOCEMEAGMSRMCTLCVCUDAOBLBNVVMBPDCOMEBSCNCBPVCTAVMECOPVMICHPGCNMBCLNASOBLCOTNLIVCLOLETASVATTOCOMIBGNUBANUNULONULOBSBSBOLCCOTOTOPVTNVAVAFIISVIBSMEFCCSCSCOLIRIVITOPDVBBLROANPETVARMCGEBSNUBGSOBSVABLPDVCVTAGLUFGARIMCBAQAQPCTRRAVIVACONUGEBSSUPUCSAVSSCBCOCOBGSSCOCETNTOTOUDROTOBZSAVABGRECSLOISISCBTOMCCEPUMBBSNUCNVBCECRBGVBLTCBBSMINOPVPGCZFMCNCNGRAQRIRMSALESVTOMNMIUDBIORBZCOUDCZCSVVANRNSALOBSSPCRBOUDVRTNBSLOVBCTMEVALCCSSVBZVAVIBSTNAPMEALCSRCNUGRMESUCSLCNOTABSBSFGCNCSPNAVPETVCNSOMNUDRMBGSSCAMOMONANORMUDVRVICSCSATPZMIMNCZRMCZRIBSVALILICEARPVVEBZCNTVTOATCNBTLCMNCOGOCLNANARCPARMBZPTBSMNCNVABSRCVIFIORCNTPPGPZPZVTLEVEBZUDCRLETABGCNTECZCZSSRCLOTAAVCEPVCSVAMICTCTPZVATVVBPDTVPDALFECOGEFMAQMSPGPTTALORANAGRPDLUBITOBICEAPTNSVNOVBORMCMTTOLECBTOFGTPBSRMCLMETOTNSONUTOMBPVGOPRBOMIBGMNMOTVPNPDNOROALFCGEMILELOPZRCRCSRKRLEAVNARCBNCNSOTVLEBZMICOPVIMCSAGRMVEALBZLCVAPUPURNSAFCTOAVUDANVBMEPDLOCOBRSOVAMIFEKRMEPDNAMBBITNPVPVVRGEPVTNTOTNPABGTNNOBITVNOVBRILECHCZMTGECEMIMEVVORCTMESVCTBSCTVRBOBTLESALTLUSVVEAVCTALCBPVISMOVEMEBGRNPAMBLCPZCTMEATGEMORGFCLOORBATNLCUDMNMCTVORORORBNUDBGMESACNBAALLUBABNBOIMALCBPZVCAGRCLCCOTNATCNPUATCNALTOATNOTORIALCBATRCATCNTOBGCNCNTVSUTOATALCNPRVCATRNPUPUCNCEGECNGOMOCNMETVATBOVVALAOMEBICSBZCOBSALBSBAPATSFMAPANPDCAPTCNATALATCBBZSOPDMEAVFIMTMEANALALCNTOCNATPTTOAGAPCSPVVTTOTOLOCNSACOFMISRICZCHCRGRPVPEVITVGERIAVPVPULUANMCALPGTRPIMCVRTRREVIVIPUATALBSPRPUCBRMPUSASASAMCVBMOVIAPNACLAVPGFMBNCBMCPUCHVTTEAPRNMORMAVSAVRFMTRAVAVTRVIVIAPFMALCSFMFMRNPUVAATIMPDTABSPURMCHFMVVFGPGRISSTRPARMAVBGCBFMCNFIMCPAATBNCNAVANLCALTACOARAVMCPZCBAPPOPZUDCBCHRIISANCHTECZTAPURMAPSIARAQPNBOSIFMANISVTLESIVTVVCNSPRGRMGRFMLTSARIFRMCMCLESAFMBOARPGFGMCANBNMTPVVBPIMOPVPEFITOFMCNAGARLCAVPIVIFMFMCNSSFCCNPVPCBSLCVISIGRMSBSCRGEPGPIRICOCBTERMVIFMORPVVAMBMNBOALCSATGOVASOALRNLEBNBOBGSSFMCNPCTVAOORTNTVRMSAAQTORMCSVAALBGPVFRCNAVANRITECBMCPNALPVUDLCUDCRAVTEPEBZGOTVCRMEMEVCCSBIFGRCCZCTMITACHBGCOVRBGMCTSMBAVNALOMSBSSUCNVICNSVALSILEPZSSBSSUVECOVICLTEUDBITNBZVINAORSULEVVTRAGCNSVMEBZBSAQBZRMGENOVRGECNBGRMPZORVTTERMTVMIRICOBIRMLEPRCNBSNOLCTOCTPVENVVCNCNUDCLENMEATVETOCSPECZPGSASAPRBALEPZVRTNVRVIBANATOSVTOTNMOTOVBNUORPGLTMIBGTESRMBTNTOBZBZMENOMISOVICORECNPDVEVIALMOSAMILECNORSSSSSSANNUORSUSUSUORSUAOAVBSBSSUBIBIROALAQALALTVBSAQANCRAPBSVBVALCTOSAAOSSVCVCNONOPVRMSACOLCVALCNUPVCZMEMTSALCIMALORNUAOSSCRATBGBGBGCONUBSVBSANUVTCNBGNUNUBSBGSVMIAQVRPZRCBZNUCBTOGRPIGEVILONUBRAQVAVALOBGTOCSVTORCNTVMBVBBGNUNUSASUTVALFGCOCHCSCEFGSUNOVTLEFMARBZCHAQSPSVAQNUNUTRBSBSTOTOSSNUSVSSANNUBGBGLCUDIMAVLOPDTNBLBSLOTNSSBSMICNFECRMNBRLETRNANUSAALPVPCTOALUDALAQNUTOSSALBOMISUTPMEAQSRPGBSALBSLCMICRLCPDSSSABNCNTVSARIBGMECHUDCNLCAVBNBSBSBGMOTATACTPIPRCBSSBGCRPZTOPABSVCSRUDFICHCZPARMPVFRRCKRVBSVAGNAUDLEORSURCAPCHBASARMCHBGTNVRCSBZUDCNTOPVTNCRCSPGNABNFGTPMICSBNTPCSROMILEBSBZTOCSCEALVVLCPRALCNAVPVTRBGTPPANOBGUDPNBSATPGBSFRCEVRALLCAVCTCSFRSSMELEORUDSUSUORMIBNTOPVUDBSTOMORCPIALTOCTFMBLVIBSTVSOCSBGCOPUMNBGTNFINOPRSATNTNATSOTRRNCHCHMCTEPECZCHBLBZRMNUSUSAAQSSTNPUIMSALCCNCNAOPDTOTOTOBOCRVCBSBSSATOPGPULUVRPECRAQLCISFGMIVRPTAQAQBNISPZISRIPEFRMICRTOCBRIKRSAPAPACBRIPUMCFMCZCZAVNOBIMEISAQROCNVCBSCNPDPCSASACESVPAAOBSSIBSPUCSPECOPCCRTOVICNBGVEBONABOVTSOBGCNSOBIBGENLUBGPDBGPEPZFRFRATBICECTFRVBPGSICRFGSVISIMTECBCBAVPVCHPZCSPZPGALCEPECSPZENCNBNPULUAVCEBNIMMIPVPTPVBLBOTVGECRLUMOPVCRARTNMCVBFRIMCEFRPZSPCOVCSUNAPVTOROTOATTOPNTNPUCNTOVCMILIPDMCTOATPDVIPCCNLTMEPINORMTOSABSMTPTGRMNSOTOPVCRVVCHAQISVVRCCSCZRCUDCOSSSVCNUDMSPCFRLESIMNPORIRIPGCHFGNARIRIRIAQTPFEBARIANMICOBGNOVITOBSPNRORMVVMTBAPCMOTRRCPASAAONASAPABICHCNBSPDANPITOMTALTNNORMNANAIMBSMNORBSBICOPIPDFITOBNSOBZUDPTSAROCNFRALIMPCPIBSTVCOBNCEPDPVPCBGAOPDBGALBSAOALMNBGLTSVBGBSMSLTALFMRMTVALPEARTRLUPNSAPNCOIMUDATPVTONACEFCRCVAVATVCBLIGEVEFEMNMCFMFMSUROSSSPROBINUVISATVRIFRBZSOSAVCPZVITVVRREUDRIRGISMIVIBSALALSSPDNAMIUDBGUDCNBOTOBICSSABSTOTOBIVETOVCTOALTOAVCEAQSOPNCETOPONOUDBZAVAQPNCNRCUDPGFCTNBZBGALTVMIIMLCUDVBVBFCBGVBUDUDAOBSCEBGVRCHBSAQCNMOSALCCNCNPAVTNAGECOLTBSBSBZCBCNBSBNCAUDTABGCOSSBAAVCHTONAATALVBVBVCPTAONAVECACATOALRESVTOAVMNCRTVVCVIBSMNTNLEAGCNMEBZSICTSISIAGUDRGCEAQCTVAVACTBGBGIMFMGECHSIPZPZVCBZSOAGMOUDSARAUDCEVBPVAGUDTOCEMCGENOVIPVMNATTVENFIRERCREBNMEUDBSMBCSBZTVMIUDNAUDCLPVCNATTVTNCOBSIMGECOAOAOMIRCSVRMCEAGTOVVALCBRNSPCRSATVCLRIBZCNFIFGRMUDVCRNREBZRMORRAMOSPPZISCBPZCBCRCRCRPICHAPMCFRCTCNBLIMTNBGTOALTOPVTOTOTOCRMNALTOVCUDPZPCAQRITOVRCRRCVICNCNVCVCATTOPVMICRMIPVATCNCNBLMEAVKRPRCNTORMAQAPCNATFRSACNPVCEAQAQRMAQKRRMMEALCNRCTABSRMSALTALCSGRMEISLTPACECHPEPZRIPAAQSARMNAAQCEFCAVCHTERMCHFRLTISRICNCHGRPVATSVCNCBMERCISCEIMSPCNALATFGATMICNCNCNBZBSCOMEFGMNBSSALCCSRCCSPVBGSORMCHAOTORERMNOSAPVTNSSCRBGTOVIGOVVTNNOMECOVRTVBSPVTNMBGOTNUDVTBGGEMBBITOVRMNFCBGGETOVCTNBITOTOVIRCPVMIBIPESACSCHFGALLICSROSRANVCCNVIGETOBGCSAPCBPZMTAVPCVIBSGECOCOMNVRTNVRPNVRTNPVBGRMROCSPDMIPDTOREUDBSTOLECNTNFITNPZRABASABAPZLTBSMNSAPDPNRMSUORBIGOTNAOAOAOAOAOAOAOAOALBOCOBIPRSATOSAMTTPROVCTOCBALCNBSTPLOTOSACNTVVCLECNVRRIVRPECNBSBZPRVARNVCBICNLEPZCRSAAVTOVEVASUSUAGPTRMCNBASOTOTNCNORLECOIMBNCSSUCRROAPCNMNAQAQCSTOVBAGFRIMTVCBVRCHVVBZGOTOSIFICLLEMOPZPZPACEPVSARNGEMITOCTCSVVPZPUALATCNPVCRUDCSAQTOBIBRVEFRCSLEMIVIPZCBCEMOLTBSBTCOCSMETVLOGOCZTOSSMECNCNTOSUTRBZPVNAVCTOBSCBSOMNVATOSIMCCSALFRCSTAMNMIPVPCMTRCTOPNNAPDBNUDBOPDBNATTOARRCUDSABGMNVTAGVRFRCRCSCBRNCTCHVRFGCBCBMINAPAPGTOFIBLCECTVVRMSAVRBORNUDBZBNBNBZIMPURCCSCSGOBNVTRCCSBNSUAVCZSACEANCSMEBNFGFGATBZBZCBCHCSPZROTOPNBNVRMNCRPDRELOPVAVATTASACBTONOKRFCPAMTTOSASAAVCTCNVETNBRPIPVBNCONOBAFGCEKRVVLECSAVBNBLBZBRANFGNAATBGGOMEMEBLSATOUDCZCZISCTRCTVVRPDCSVRBOCECSLENOVICABRPDAQCBRETVRMTOMOAVCECERCMOSIPNTOIMRCLOLUSAALBNMECHALNATOPRTOARMCPZFGCOAVCZCSSUBGCLCZCSLEBZPAPVRCPIRGBNCBSUCSMEAGGRPAISALBOCSFGRABNRCMERNCTPVORBLPDNACNPVRCMECTPIAVMETVAGGEPVPICECEPVPVISCTVELCCHCEUDVBANSAMERMFRTOVRSACENAPGAVFRCZSUCELOPDPVBNSAAVAVAVISMERMMCPUPZCBAGTPVRNASUTOORNAAVFRRNPZCESAKRCSFCMESSCTFMCNSATEPDCBFRCZFMAQTOMESSBAPERCCHAQVCLTRCREPUGEBLTEVVFRRMVITNAGAVCSAQMILOSPFRIMCNGEMERCCNVEORPDPESATRTVORCSAQLINABLCZCHBRRMVISUPNUDUDTPFRMISATNBSVRMIPVTVPDMEUDSACSRMVIPZSUALVIBZALBSPCTVMCBGSATNVAAOCAFCSIPVNUSPSASSSVLIBNPZPUANMOCZUDTOTOTAKRNACNAVFCMOGEBSMEUDGOSVPESACNCSSAPVCSTOMEAVKRRECRCRRIAQORGRBGISGRTOCNBZCHPGPGCHVICOBGVIMNAGPARGRCRCPATONAPAAQVCVCAQCTLEVEAQTNATIMAQLELOUDBLORSSMIBGMCSUGRRMTNMITVCARISUPGBSCZCZBZBLBZVRPDBGSSPVRCGRMIBZBZORAVBSANORPZCOLOORSSSUCBPNLUSUMBBLCRBGBGAVBSMNBSLTTVSOATVVGEFGCSANCLALCNSUSAPEMCNAANPUCZRCALCNPTMCMNVCSASUSUFRCZBLCESAATISARISCRFIPNBZVAMOMITOGECAMIFRATCAMITOTOTOCZSUSUSUMBALLTTNTSFRORORSAORAGSURCSIPGFIBZNUSSSUSUNOALPVTEORORVVCZMENUORCNNUCARCSRAVORANLCLCSUNOBZFMVRUDORFCLEATBSVISRMIRACRORVAVAIMSUALPDLEMNMOPRAQAVALBNBGBGLOCNVANAVRCNCNCLPVVRCRSOSOBGBSLTFRTNPRGRAVCZBILOCRVRNUGEVVVVVTCONOBGCOORNASSSRCRBLVIBIBGTNCZBGCZCZBLSIMBVINOMEVVCETOLEPGENLTAVPVCSCSTNALLTMOPNVVCRBTVECRCBALAPCRBGPZBGPGPELETNTNSVTVSOCZLEANCRRCCZPDGOALLUCOVVSVSVBZTNLEBGROMTRCRCRISAFGFGTNVEPVTOTOFRUDTNVBALNABITRKRVCCNBGAVARRMCELCSULCBGMBBSVAAVORNOLEFRLELETOTVMNCLVTUDLIMNLCORIMAQROALBLVARNSONUBGARUDBLMERICHCNTAUDCSSOUDTVALAVAVRCLEUDTOCBCZCOBGLEBIPUPUPZCESOVEBNBGSSTNTNSSBSTNTNPDAVTENOFRBZBZBABZPACBVABITRBGLTTNORARCSLOPZRCPAPDCSVRPIALNUNAALUDTNIMTNBZVTSVNUSUCEVIVISSNUCRALLEGEATBSORAQTNSOBZCZBZSSPZRMPRREBNPEVBPGRISVMCRMBICHUDPZPDTNNUATATCECSTEBSTNSABRAVCBPGAOCHTOBACRNOCHCRAQCOPRCBNUSASSPVTOBICZCNFRSONAUDTOVIPVBGCNCHBNPVBGCRNAPVPEBGVEPVPDMEAVFGSABGTOCNFMBRCNPACHPVRIVRFRCHPVRITATECRVIGEPRAVRMSIALCSSATEMEUDVTBSTESVSOPAVAORTNSAPNPNPZTOBTSOTPPAVBAQUDVBSUBSTOVATOPRPNPCPDCSCTNOPZROFCCHVRMCCNCTBSSATNCEBSUDLESIMSBGCRSOORVRPGFRAVBGRMTVALBGBSTVMIMICNMICOPDMIGEMTLEVCUDNUTSBACRCNSSVCIMMEALVIMBCBFRUDPZPVBZTOFGENPVVBVCVVPVMIBZCBCHNAAVLESUSSPGBSLOCOMIBASUGOPEMTMEVAMEUDLELECOORNUBZKRBSORPDPUSVPUMCBGSSCBNUGEORSSMBSUSUNUTOTOMCPACAPTCSRICHBZSVFIATPZLUCRPOTOCRCEBGBGGECOVIBZVITOBISOCNMEPVSOBZTVVCVRPVVTALBALOPGATTNSOVATOBGCNLCAOENBLBITNAVBLCEPVCEBZIMTEFRIMBZPASSFRVVCLRMVTSUFRAVPVBIBGVIRMBSPGSATOCNALLCSORMCOPRBGAOTOAOVBPGAOBGSACTBZMIMIVBMINOVCNOVAPRRCSVRIMBTNLCSPVATOUDBZPRPVVBIMISTOVVTVPIVAMBTVBGMBPDLEBIVTCOPVRMPVVRVIBZISTOTOAPCNSVLCVAVAMEVECOPZAVPAIMLTUDMBBZVBCSCOSOVCLCBGBGCNBOFCVATNCNPCMISPPOLEBSBSTOFRVRAOPVBITOPVCOBGRNSOUDKRCNPDCRATNOIMVRTOBSVTREBSCNSPRESVMNBGCTATTORELUATSAFRPAFIVICNFGFRCENAPENOPCPIRMPVTVTOFGPZSABGLCFEVRPVPZPZVAPDATBIALVTMIMOTNALCNVBBLPDBGPCTOVEPDALFRVBSOSOUDVRLUBZPAPVBSBRPEBSSULUMIBGALBIPDBGPDBGROCNIMAGATMSPDTOVRMEPAVINUCOTNAQCLCHALCHAVSUROSUREALBZALAVCNSVLOBIPDPCAOTOPVATROSUSUROSSCNORSUPVBSSUTOTOVCTOTOALENTOTOCNSUMBRCATAQCHAQSUSUTOVCORAQVIAQVBGOMNBGTVBGMBMICNCBATFITONOCNBSBZTOBSTONAUDALMCPVTOTPVTFRPNVTRGTVAQMICEBNTORMPNBICTVAMIPDBSGEVCBLPVFEVBTNNACRTVPVALALTOALBLMNPICRAVFGFGTOCNVVCTCZRMVVBGVIBGPVPVORCOLOPVPVTVPCPVPVORMSVITVVRTNMISPVRBIPVGEMOBGBOLEBSBLPNVIBISVVIUDBICSAVVVRMCZSUMEMERMRMSSSAAQMTSRTRSSCELECELELEPNFGFGPAPZSUCTRMNASSSSSSRCSUSRNATPSSCTSSNUMECTSUNASSSUSSSARMRMTAPDSSATTNVERMUDBSTNTNCOTOUDANLUBOFIARFERNPRFIPIPIARAVPUBLBGBGCOCOLCPVVAMNCOBLTNTNTNPNLULCTNTNTNTNTNTNTNTNTNTNTNTNTNTNTNRETNTNPRRNBOVBBIPVBIBLBLPTPTSIPUPUFEMCCOVICSPCIMALVCTNLIARLOCOLCMNALVCUDUDVIPDCSVBTOMNTNFIFEFEPRCOPUBITONOBICRPVALBLTVVIMIVAVIVILE\"}],licenses:[{name:\"Ministero dell'Interno\",url:\"https://developers.italia.it/en/anpr\",license:\"cc-by-4.0\",licenseUrl:\"https://creativecommons.org/licenses/by/4.0/legalcode.it\",termsAndConditions:\"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\",authors:\"https://github.com/italia/anpr/blob/master/AUTHORS\"},{name:\"Istituto nazionale di statistica\",url:\"https://www.istat.it\",license:\"cc-by-3.0\",licenseUrl:\"https://creativecommons.org/licenses/by/3.0/it/\",termsAndConditions:\"https://www.istat.it/it/note-legali\"},{name:\"Agenzia delle Entrate\",url:\"https://www.agenziaentrate.gov.it\",license:\"cc-by-4.0\",licenseUrl:\"https://creativecommons.org/licenses/by/4.0/legalcode.it\",termsAndConditions:\"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\"}],sources:[\"https://www.istat.it/it/files/2011/01/Elenco-codici-e-denominazioni-unita-territoriali-estere.zip\",\"https://www.istat.it/it/files/2011/01/Elenco-Paesi-esteri-cessati.zip\",\"https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv\",\"https://raw.githubusercontent.com/italia/anpr/master/src/archivi/ANPR_archivio_comuni.csv\"]}),b=\"[12][0-9]{3}\",s=\"0[1-9]|1[0-2]\",c=\"(?:\".concat(s,\")-(?:0[1-9]|[12]\\\\d)|(?:0[469]|11)-30|(?:0[13578]|1[02])-3[01]\"),u=\"[01]\\\\d|2[0-3]\",C=\"Z|[-+](?:\".concat(u,\")(?::?[0-5]\\\\d)?\"),d=\"(?:\".concat(u,\")(?::[0-5]\\\\d(?::[0-5]\\\\d(\\\\.\\\\d{3})?)?(?:\").concat(C,\")?)?\"),g=\"\".concat(b,\"-(?:\").concat(c,\")(?:T\").concat(d,\")?\"),S=\"\".concat(b,\"(?:-(?:(?:\").concat(s,\")|(?:\").concat(c,\")(?:T\").concat(d,\")?))?\");Object.freeze({__proto__:null,DAY:\"0[1-9]|[12][0-9]|3[01]\",DAYS_30_MONTHS:\"0[469]|11\",DAYS_31_MONTHS:\"0[13578]|1[02]\",HOURS:u,ISO8601_DATE_TIME:S,ISO8601_SHORT_DATE:g,LEAP_MONTH:\"02\",MILLISECONDS:\"\\\\d{3}\",MINUTES:\"[0-5]\\\\d\",MONTH:s,MONTH_DAY:c,SECONDS:\"[0-5]\\\\d\",TIME:d,TIMEZONE:C,YEAR:b});class m{static parseDate(a){if(!(a instanceof Date||a instanceof n||\"string\"==typeof a&&new RegExp(\"^(?:\".concat(S,\")$\")).test(a)||Array.isArray(a)&&a.length&&!a.some((a=>\"number\"!=typeof a||isNaN(a)))))return null;try{let o;if(Array.isArray(a)){const[e,i=0,r=1]=a;if(!(i>=0&&i<=11&&r>0&&r<=31))return null;o=n(Date.UTC(e,i||0,r||1))}else o=n(a);return o.isValid()?o.toDate():null}catch(E){return null}}static ymdToDate(a,o,e){return this.parseDate([a,o,e])}}const h=\"B-DF-HJ-NP-TV-Z\",M=\"AEIOU\",v=\"[A-Z][\".concat(M,\"][\").concat(M,\"X]|[\").concat(M,\"]X{2}|[\").concat(h,\"]{2}[A-Z]\"),A=v,P=\"(?:\".concat(v,\"){2}\"),B=\"[02468LNQSU][048LQU]|[13579MPRTV][26NS]\",f=\"[0L4Q][1-9MNP-V]|[1256MNRS][\\\\dLMNP-V]\",V=\"(?:\".concat(f,\"|[37PT][0L1M])\"),T=\"[A-EHLMPR-T](?:\".concat(f,\")|[DHPS][[37PT]][0L]|[ACELMRT][[37PT]][0L1M]\"),p=\"[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[0L4Q][1-9MNP-V]|[15MR][\\\\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][0L1M]|[DHPSACELMRT][26NS][9V])|(?:\".concat(B,\")B[26NS][9V]\"),O=\"[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[0L][1-9MNP-V]|[1M][\\\\dLMNP-V]|[2N][0-8LMNP-U])|[DHPS][3P][0L]|[ACELMRT][3P][0L1M]|[DHPSACELMRT][2N][9V])|(?:\".concat(B,\")B[2N][9V]\"),R=\"[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[4Q][1-9MNP-V]|[5R][\\\\dLMNP-V]|[6S][0-8LMNP-U])|[DHPS][7T][0L]|[ACELMRT][7T][0L1M]|[DHPSACELMRT][6S][9V])|(?:\".concat(B,\")B[6S][9V]\"),N=\"(?:[A-MZ][1-9MNP-V][\\\\dLMNP-V]{2})|(?:[A-M][0L](?:[1-9MNP-V][\\\\dLMNP-V]|[0L][1-9MNP-V]))\",D=\"\".concat(P,\"(?:\").concat(p,\")(?:\").concat(N,\")[A-Z]\"),L=\"[A-Z][\".concat(M,\"]?|[\").concat(h,\"]{1,2}\"),G=\"(?:\".concat(L,\")|(?:(?:\").concat(v,\")(?:\").concat(L,\")?)\"),z=\"[\\\\dLMNP-V]|(?:[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T][0L12456MNQRS]?|[DHPSACELMRT][37PT])?)\",k=\"\".concat(G,\"|(?:\").concat(P,\"(?:(?:\").concat(z,\")|(?:\").concat(p,\")(?:(?:[A-MZ](?:[1-9MNP-V][\\\\dLMNP-V]?)?|[Z](?:[0L][\\\\dLMNP-V]?)?)|(?:\").concat(N,\")[A-Z]?)?)?)?\");var I,E;Object.freeze({__proto__:null,CONSONANT_LIST:h,VOWEL_LIST:M,OMOCODE_NUMBER_LIST:\"\\\\dLMNP-V\",OMOCODE_NON_ZERO_NUMBER_LIST:\"1-9MNP-V\",OMOCODE_ZERO_LIST:\"0L\",MONTH_LIST:\"A-EHLMPR-T\",MONTH_30DAYS_LIST:\"DHPS\",MONTH_31DAYS_LIST:\"ACELMRT\",CITY_CODE_LIST:\"A-M\",COUNTRY_CODE_LIST:\"Z\",CF_NAME_MATCHER:v,CF_SURNAME_MATCHER:A,CF_FULL_NAME_MATCHER:P,YEAR_MATCHER:\"[\\\\dLMNP-V]{2}\",LEAP_YEAR_MATCHER:B,MONTH_MATCHER:\"[A-EHLMPR-T]\",DAY_2X_MATCHER:\"[26NS]\",DAY_3X_MATCHER:\"[37PT]\",DAY_29_MATCHER:f,DAY_30_MATCHER:\"[[37PT]][0L]\",DAY_31_MATCHER:\"[[37PT]][0L1M]\",DAY_MATCHER:V,MALE_DAY_MATCHER:\"(?:[0L][1-9MNP-V]|[12MN][\\\\dLMNP-V]|[3P][0L1M])\",FEMALE_DAY_MATCHER:\"(?:[4Q][1-9MNP-V]|[56RS][\\\\dLMNP-V]|[7T][0L1M])\",MONTH_DAY_MATCHER:T,FULL_DATE_MATCHER:p,MALE_FULL_DATE_MATCHER:O,FEMALE_FULL_DATE_MATCHER:R,CITY_CODE_MATCHER:\"[A-M](?:[1-9MNP-V][\\\\dLMNP-V]{2}|[0L](?:[1-9MNP-V][\\\\dLMNP-V]|[0L][1-9MNP-V]))\",COUNTRY_CODE_MATCHER:\"Z[1-9MNP-V][\\\\dLMNP-V]{2}\",BELFIORE_CODE_MATCHER:N,CHECK_DIGIT:\"[A-Z]\",CODICE_FISCALE:D,PARTIAL_CF_NAME_MATCHER:L,PARTIAL_CF_FULL_NAME:G,PARTIAL_YEAR:\"[\\\\dLMNP-V]\",PARTIAL_MONTH_DAY:\"[A-EHLMPR-T][0L12456MNQRS]?|[DHPSACELMRT][37PT]\",PARTIAL_FULL_DATE:z,PARTIAL_BELFIORE_CODE_MATCHER:\"[A-MZ](?:[1-9MNP-V][\\\\dLMNP-V]?)?|[Z](?:[0L][\\\\dLMNP-V]?)?\",PARTIAL_CF:k});(E=I||(I={}))[E.B=0]=\"B\",E[E.A=1]=\"A\",E[E.K=2]=\"K\",E[E.P=3]=\"P\",E[E.L=4]=\"L\",E[E.C=5]=\"C\",E[E.Q=6]=\"Q\",E[E.D=7]=\"D\",E[E.R=8]=\"R\",E[E.E=9]=\"E\",E[E.V=10]=\"V\",E[E.O=11]=\"O\",E[E.S=12]=\"S\",E[E.F=13]=\"F\",E[E.T=14]=\"T\",E[E.G=15]=\"G\",E[E.U=16]=\"U\",E[E.H=17]=\"H\",E[E.M=18]=\"M\",E[E.I=19]=\"I\",E[E.N=20]=\"N\",E[E.J=21]=\"J\",E[E.W=22]=\"W\",E[E.Z=23]=\"Z\",E[E.Y=24]=\"Y\",E[E.X=25]=\"X\";var j,q=I;class F{static checkDigit(a){if(\"string\"==typeof a&&new RegExp(k).test(a)){const o=a.substr(0,15);let e=0;for(const a of this.evaluateChar(o))e+=a;return String.fromCharCode(e%this.CRC_MOD+this.CHAR_OFFSET)}return null}static evaluateChar(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";return r(this.evaluateCharGenerator(a))}static evaluateCharGenerator(){var a=this;let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";return function*(){if(\"string\"==typeof o&&o.length)for(let e=0;e<o.length;e++){let n=o[e].toUpperCase();/^\\d$/u.test(n)&&(n=String.fromCharCode(parseInt(n,10)+a.CHAR_OFFSET)),e%2?yield n.charCodeAt(0)-a.CHAR_OFFSET:yield parseInt(q[n],10)}return 0}()}}F.CHAR_OFFSET=65,F.CRC_MOD=26,function(a){a[a.A=0]=\"A\",a[a.B=1]=\"B\",a[a.C=2]=\"C\",a[a.D=3]=\"D\",a[a.E=4]=\"E\",a[a.H=5]=\"H\",a[a.L=6]=\"L\",a[a.M=7]=\"M\",a[a.P=8]=\"P\",a[a.R=9]=\"R\",a[a.S=10]=\"S\",a[a.T=11]=\"T\"}(j||(j={}));var _,U=j;!function(a){a[a.M=0]=\"M\",a[a.F=40]=\"F\"}(_||(_={}));var y,Z=_;!function(a){a[a.L=0]=\"L\",a[a.M=1]=\"M\",a[a.N=2]=\"N\",a[a.P=3]=\"P\",a[a.Q=4]=\"Q\",a[a.R=5]=\"R\",a[a.S=6]=\"S\",a[a.T=7]=\"T\",a[a.U=8]=\"U\",a[a.V=9]=\"V\"}(y||(y={}));var w=y;class Y{static getDay(a){const o=a%Z.F;return o>0&&o<=this.MAX_MONTH_DAY?o:null}static getGender(a){return this.toArray().find((o=>a>=Z[o]&&a<=Z[o]+this.MAX_MONTH_DAY))||null}static genderizeDay(a,o){return a+Z[o]}static toArray(){return[\"M\",\"F\"]}}Y.MAX_MONTH_DAY=31;const H=new i;class x{static cfDeomocode(a){if(a&&a.length<=6)return a;const o=this.partialCfDeomocode(a);return o.length<15?o:o.substr(0,15)+this.appyCaseToChar(F.checkDigit(o)||\"\",o.substr(15,1))}static cfOmocode(a,o){if(!o)return this.cfDeomocode(a);const e=a.split(\"\");for(let i=a.length-1,r=0;i>=0;i--)if(2**i&this.OMOCODE_BITMAP){if(!!(o&2**r)!==isNaN(parseInt(e[i],10))){const a=e[i].toUpperCase();e[i]=w[a]}r++}const n=e[15];if(n){const a=e.slice(0,15).join(\"\");e[15]=this.appyCaseToChar(F.checkDigit(a)||\"\",n)}return e.join(\"\")}static cfOmocodeId(a){const o=a.split(\"\").filter(((a,o)=>2**o&this.OMOCODE_BITMAP)).map((a=>/^[a-z]$/i.test(H[a])?1:0)).join(\"\");return parseInt(o,2)}static cfToLastName(a){if(\"string\"!=typeof a||a.length<3||!new RegExp(\"^(?:\".concat(A,\")\"),\"iu\").test(a))return null;const o=a.substr(0,3),[e=\"\"]=o.match(new RegExp(\"^[\".concat(h,\"]{1,3}\"),\"ig\"))||[],[n=\"\"]=o.match(new RegExp(\"[\".concat(M,\"]{1,3}\"),\"ig\"))||[],i=e.length+n.length;if(i<2||i<3&&\"X\"!==o[2].toUpperCase())return null;switch(e.length){case 3:return(e+n).split(\"\").join(this.JOLLY_CHAR)+this.JOLLY_CHAR;case 2:return\"\".concat(e[0]).concat(n[0],\"*\").concat(e[1]).concat(this.JOLLY_CHAR);case 1:return\"\".concat(e[0]).concat(n).concat(this.JOLLY_CHAR);default:return\"\".concat(n).concat(3===n.length?this.JOLLY_CHAR:\"\")}}static cfToFirstName(a){return\"string\"!=typeof a||a.length<6||!new RegExp(\"^(\".concat(P,\")\"),\"iu\").test(a)?null:this.cfToLastName(a.substr(3,3))}static cfToGender(a){if(\"string\"!=typeof a||a.length<10)return null;const o=a.substr(9,1),e=10*parseInt(this.partialCfDeomocode(o,9),10);return Y.getGender(e)}static cfToBirthYear(a){if(\"string\"!=typeof a||a.length<8)return null;const o=a.substr(6,2),e=parseInt(this.partialCfDeomocode(o,6),10);if(isNaN(e))return null;const i=parseInt(n().format(\"YY\"),10),r=100*(e>i?1:0);return n().subtract(i-e+r,\"years\").year()}static cfToBirthMonth(a){if(\"string\"!=typeof a||a.length<9)return null;const o=a.substr(8,1).toUpperCase(),e=U[o];return\"number\"!=typeof e||e<0||e>11?null:e}static cfToBirthDay(a){if(\"string\"!=typeof a||a.length<11)return null;const o=a.substr(9,2),e=parseInt(this.partialCfDeomocode(o,9),10);return isNaN(e)?null:Y.getDay(e)}static cfToBirthDate(a){const o=this.cfToBirthDay(a);if(!o)return null;const e=this.cfToBirthMonth(a);if(\"number\"!=typeof e)return null;const n=this.cfToBirthYear(a);return m.ymdToDate(n,e,o)}static cfToBirthPlace(a){if(\"string\"!=typeof a||a.length<15)return null;const o=a.substr(11,4),e=this.partialCfDeomocode(o,11),i=l[e];if(!i)return null;const{creationDate:r,expirationDate:t}=i;if(r||t){const o=this.cfToBirthDate(a);if(o){let a=!0;if(t&&(a=n(t).isSameOrAfter(o)),!a)return null}}return i}static cfDecode(a){const o=this.cfToBirthYear(a)||void 0,e=this.cfToBirthMonth(a)||void 0,n=this.cfToBirthDay(a)||void 0,i=m.ymdToDate(o,e,n)||void 0,r=this.cfToBirthPlace(a),t={firstName:this.cfToFirstName(a)||void 0,lastName:this.cfToLastName(a)||void 0,day:n,month:e,year:o,date:i,gender:this.cfToGender(a)||void 0,place:r?r.name:void 0,omocodeId:this.cfOmocodeId(a)};return o&&e&&n&&(t.date=new Date(Date.UTC(o,e,n))),t}static lastNameToCf(a){if(!a||(a||\"\").trim().length<2)return null;if(!/^[A-Z ']+$/iu.test(H.replace(a)))return null;const o=(this.charExtractor(a,h)+this.charExtractor(a,M)).padEnd(3,\"X\").substr(0,3);return o.length<3?null:o.toUpperCase()}static firstNameToCf(a){if(!a||(a||\"\").trim().length<2)return null;const o=this.charExtractor(a,h);return o.length>=4?(o[0]+o.substr(2,2)).toUpperCase():this.lastNameToCf(a)}static yearToCf(a){let o;return o=\"string\"==typeof a?parseInt(a,10):a,\"number\"!=typeof o||isNaN(o)||!(o>=1900||o<100)?null:(\"0\"+o).substr(-2)}static monthToCf(a){return a<0||a>11?null:U[a]||null}static dayGenderToCf(a,o){if(a<1||a>31)return null;const e=Z[o];return\"number\"!=typeof e?null:(\"0\"+(a+e)).substr(-2)}static yearMonthDayToDate(a){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(!a||a<1861||[o,e].some((a=>\"number\"!=typeof a)))return null;const i=n(Date.UTC(a,o||0,e||1));return i.isValid()&&i.year()===a&&i.month()===o&&i.date()===e?i.toDate():null}static parsePlace(a){let o,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l;return a?(\"object\"==typeof a&&a.belfioreCode?o=e[a.belfioreCode]:\"string\"==typeof a&&(o=e[a]||e.findByName(a)),o||null):null}static dateGenderToCf(a,o){const e=m.parseDate(a);return e?\"\".concat(this.yearToCf(e.getFullYear())).concat(this.monthToCf(e.getMonth())).concat(this.dayGenderToCf(e.getDate(),o)):null}static placeToCf(a,o,e){const n=m.parseDate(a);let i,r;if(n||\"string\"!=typeof a){if(!o)return null;i=o,r=e}else i=a,r=o;let t=l;if(r&&(t=t.byProvince(r)),n&&t&&(t=t.from(n)),t){const a=this.parsePlace(i,t);if(a)return a.belfioreCode}return null}static encodeCf(a){let{lastName:o,firstName:e,year:n,month:i,day:r,date:t,gender:l,place:b,omocodeId:s=0}=a;const c=m.parseDate(t)||this.yearMonthDayToDate(n,i,r);if(!(c&&o&&e&&l&&b))return null;const u=[()=>this.lastNameToCf(o),()=>this.firstNameToCf(e),()=>this.dateGenderToCf(c,l),()=>this.placeToCf(c,b)];let C=\"\";for(const d of u){const a=d();if(!a)return null;C+=a}return this.cfOmocode(C,s)}static checkBitmap(a){return!!(2**a&this.OMOCODE_BITMAP)}static charOmocode(a,o){return/^[A-Z]$/giu.test(a)&&this.checkBitmap(o)?w[a.toUpperCase()]:a}static charExtractor(a,o){const e=new RegExp(\"[\".concat(o,\"]+\"),\"ig\");return(H.replace(a).trim().match(e)||[]).join(\"\")}static partialCfDeomocode(a){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return a.replace(/[\\dA-Z]/giu,((a,e)=>this.charOmocode(a,e+o)))}static appyCaseToChar(a,o){if(a&&o){const e=o[0]===o[0].toUpperCase(),n=o[0]===o[0].toLowerCase();if(e&&!n)return a[0].toUpperCase();if(!e&&n)return a[0].toLowerCase()}return a[0]}}x.OMOCODE_BITMAP=30400,x.JOLLY_CHAR=\"*\";const Q=\"Provided lastName is not valid, only letters, diacritics and apostrophe allowed\",W=\"Provided name is not valid, only letters, diacritics and apostrophe allowed\",K=\"Provided gender is not valid\",J=\"Provided year is not valid, only 2 or 4 digit numbers are allowed\",$=\"Provided date is not valid\";var X=Object.freeze({__proto__:null,INVALID_DATE:$,INVALID_DAY:\"Provided day is not valid\",INVALID_DAY_OR_GENDER:\"Provided day and/or gender are not valid\",INVALID_GENDER:K,INVALID_NAME:W,INVALID_PLACE_NAME:\"Proviced City/Country name is not valid\",INVALID_SURNAME:Q,INVALID_YEAR:J});class aa extends Error{constructor(a){super((Object.entries(X).find((o=>{let[e]=o;return e===a}))||[])[1]||a)}}const oa=new i;class ea{static cfLastName(a){let o=A;if(a){if(!this.lastName().test(a))throw new aa(Q);o=x.lastNameToCf(a)||o}return this.isolatedInsensitiveTailor(o)}static cfFirstName(a){let o=v;if(a){if(!this.lastName().test(a))throw new aa(W);o=x.firstNameToCf(a)||o}return this.isolatedInsensitiveTailor(o)}static cfYear(a){let o=\"[\\\\dLMNP-V]{2}\";if(a){const e=x.yearToCf(a);if(!e)throw new aa(J);o=this.deomocode(e)}return this.isolatedInsensitiveTailor(o)}static cfMonth(a){let o=\"[A-EHLMPR-T]\";return a&&(o=x.monthToCf(a)||o),this.isolatedInsensitiveTailor(o)}static cfDay(a){let o=V;if(a){const e=x.dayGenderToCf(a,\"M\"),n=x.dayGenderToCf(a,\"F\");if(!e||!n)throw new aa(\"Provided day is not valid\");o=\"(?:\".concat(this.deomocode(e),\")|(?:\").concat(this.deomocode(n),\")\")}return this.isolatedInsensitiveTailor(o)}static cfDayGender(a,o){if(!o)return this.cfDay(a);let e;if(a){const n=x.dayGenderToCf(a,o);if(!n)throw new aa(\"Provided day and/or gender are not valid\");e=this.deomocode(n)}else switch(o){case\"M\":e=\"(?:[0L][1-9MNP-V]|[12MN][\\\\dLMNP-V]|[3P][0L1M])\";break;case\"F\":e=\"(?:[4Q][1-9MNP-V]|[56RS][\\\\dLMNP-V]|[7T][0L1M])\";break;default:throw new aa(K)}return this.isolatedInsensitiveTailor(e)}static cfDateGender(a,o){if(a&&!m.parseDate(a))throw new aa($);if(o&&!Y.toArray().includes(o))throw new aa(K);let e=p;if(a){const n=o&&x.dateGenderToCf(a,o);if(n)e=this.deomocode(n);else{const o=o=>{const e=x.dateGenderToCf(a,o);if(!e)throw new aa($);return e&&this.deomocode(e)};e=\"(?:\".concat(Y.toArray().map(o).join(\"|\"),\")\")}}else\"M\"===o?e=O:\"F\"===o&&(e=R);return this.isolatedInsensitiveTailor(e)}static cfPlace(a,o){let e=N;if(a){const n=m.parseDate(a);if(n&&o){const a=o,i=x.placeToCf(n,a);e=this.deomocode(i||\"\")}else if(!n&&\"string\"==typeof a){const o=a,n=x.placeToCf(o);e=this.deomocode(n||\"\")}}return this.isolatedInsensitiveTailor(e)}static codiceFiscale(a){let o=D;if(a){const e=x.encodeCf(a);if(e)o=this.deomocode(e);else{const{lastName:e,firstName:n,year:i,month:r,day:t,date:l,gender:b,place:s}=a;if(e||n||i||r||t||l||b||s){let a=null;l?a=m.parseDate(l):i&&(a=x.yearMonthDayToDate(i,r,t));const c=[()=>this.cfLastName(e),()=>this.cfFirstName(n),()=>this.cfDateGender(a,b),()=>this.cfPlace(a,s)];o=\"\";for(const e of c){const a=e().toString(),n=a.match(/\\^(.+)\\$/),i=n&&n[1];if(!i)throw new Error(\"Unable to handle [\".concat(a,\"]\"));o+=\"(?:\".concat(i,\")\")}o+=\"[A-Z]\"}}}return this.isolatedInsensitiveTailor(o)}static lastName(a){const o=\"[A-Z\".concat(oa.matcherBy(/^[A-Z]$/iu),\"]\");let e=\"(?:\".concat(o,\"+[' ]?)\")+\"+\";if(a&&/^[A-Z]{1,3}/iu.test(a)){const n=a.substr(0,3),i=a=>a.split(\"\").map((a=>\"[\".concat(oa.insensitiveMatcher[a],\"]\"))),[r,t]=[\"^[\".concat(h,\"]{1,3}\"),\"[\".concat(M,\"]{1,3}\")].map((a=>i((n.match(new RegExp(a,\"ig\"))||[])[0]||\"\"))),l=\"[\".concat(M+oa.matcherBy(new RegExp(\"^[\".concat(M,\"]$\"),\"ui\")),\"]\"),b=\"(?:\".concat(l,\"[' ]?)*\"),s=\"(?:[' ]?\".concat(b).concat(l,\")?\");switch(r.length){case 3:{const a=b;e=a+r.join(\"[' ]?\"+a)+\"(?:[' ]?\".concat(o,\"*\").concat(o,\")?\");break}case 2:e=\"(?:\".concat([\"\".concat(t[0]).concat(b,\"[' ]?\").concat(r[0]).concat(b).concat(r[1]),r[0]+\"[' ]?\"+t.join(\"[' ]?\")+\"[' ]?\".concat(b).concat(r[1]),r.join(\"[' ]?\")+\"[' ]?\"+t[0]].join(\"|\"),\")\").concat(s);break;case 1:e=\"(?:\".concat([t.slice(0,2).join(\"[' ]?\")+b+r.join(\"[' ]?\"),t[0]+\"[' ]?\"+r.join(\"[' ]?\")+t[1],[r[0],...t.slice(0,2)].join(\"[' ]?\")].join(\"|\"),\")\").concat(s);break;default:e=\"\".concat(t.join(\"[' ]?\")).concat(s)}}return this.isolatedInsensitiveTailor(\" *(\".concat(e,\") *\"))}static firstName(a){if(a&&new RegExp(\"^[A-Z]{3}[\".concat(h,\"]{3}\"),\"iu\").test(a)){const o=\"[A-Z\".concat(oa.matcherBy(/^[A-Z]$/iu),\"]\"),e=\"(?:'? ?)\",n=((a.substr(3,3).match(new RegExp(\"^[\".concat(h,\"]{1,3}\"),\"ig\"))||[])[0]||\"\").split(\"\").map((a=>\"[\".concat(oa.insensitiveMatcher[a],\"]\"))),[i,r]=[M,h].map((a=>a+oa.matcherBy(new RegExp(\"^[\".concat(a,\"]$\"),\"ui\")))),t=\"(?:[\".concat(i,\"]+\").concat(e,\")*\").concat(n[0]).concat(e,\"(?:[\").concat(i,\"]+\").concat(e,\")*(?:[\").concat(r,\"]\").concat(e,\"(?:[\").concat(i,\"]+\").concat(e,\")*)?\")+n.slice(1,3).join(\"(?:[\".concat(i,\"]+\").concat(e,\")*\"))+o+\"*\";return this.isolatedInsensitiveTailor(t)}return this.lastName((a||\"\").substr(3,3))}static date(a){let o=S;if(a){const e=x.cfToBirthDate(a);if(e){const a=e.toJSON();if(n().diff(n(e),\"y\")<50){const e=parseInt(a.substr(0,2),10);o=\"(?:\".concat([e-1,e].map((a=>a.toString().padStart(2,\"0\"))).join(\"|\"),\")\")+a.substr(2,8)}else o=a.substr(0,10)}}return this.isolatedInsensitiveTailor(\"\".concat(o,\"(?:T\").concat(d,\"(?:\").concat(C,\")?)?\"))}static gender(a){const o=a&&x.cfToGender(a)||\"[\".concat(Y.toArray().join(\"\"),\"]\");return this.isolatedInsensitiveTailor(o)}static place(a){let o=\".+\";const e=a&&x.cfToBirthPlace(a);return e&&(o=\"(?:(?:\".concat(e.name.replace(/./gu,(a=>oa[a]===a?a:\"[\".concat(a).concat(oa[a],\"]\"))),\")|\").concat(e.belfioreCode,\")\")),this.isolatedInsensitiveTailor(o)}static deomocode(a){return a.replace(/\\d/gu,(a=>\"[\".concat(a).concat(w[a],\"]\")))}static isolatedInsensitiveTailor(a){return new RegExp(\"^(?:\".concat(a,\")$\"),\"iu\")}}class na{constructor(a){this.codiceFiscale=a}get hasLastName(){return this.codiceFiscale.length>=3}get hasFirstName(){return this.codiceFiscale.length>=6}get hasBirthYear(){return this.codiceFiscale.length>=8}get hasBirthDate(){return this.codiceFiscale.length>=11}get hasGender(){return this.codiceFiscale.length>=10}get hasBirthPlace(){return this.codiceFiscale.length>=15}get hasCRC(){return this.codiceFiscale.length>=16}matchPersonalInfo(a){return ea.codiceFiscale(a).test(this.codiceFiscale)}mismatchPersonalInfo(a){return!(!(this.codiceFiscale&&a&&a.lastName&&a.firstName&&(a.date||a.day&&a.month&&a.year)&&a.gender&&a.place)||this.matchPersonalInfo(a))}matchLastName(a){return this.hasLastName&&ea.lastName(this.codiceFiscale).test(a||\"\")}mismatchLastName(a){return this.hasLastName&&!!a&&!this.matchLastName(a)}matchFirstName(a){return this.hasFirstName&&ea.firstName(this.codiceFiscale).test(a||\"\")}mismatchFirstName(a){return this.hasFirstName&&!!a&&!this.matchFirstName(a)}matchBirthDate(a){if(this.hasBirthDate){const o=x.cfToBirthDate(this.codiceFiscale),e=m.parseDate(a);if(o&&e)return n(o).isSame(e,\"d\")}return!1}mismatchBirthDate(a){return this.hasBirthYear&&!!m.parseDate(a)&&!this.matchBirthDate(a)}matchGender(a){return this.hasGender&&ea.gender(this.codiceFiscale).test(a||\"\")}mismatchGender(a){return this.hasGender&&!!a&&!this.matchGender(a)}matchBirthPlace(a){if(this.hasBirthPlace&&a){const o=ea.place(this.codiceFiscale),e=x.parsePlace(a);return!!e&&o.test(e.belfioreCode)}return!1}mismatchBirthPlace(a){return this.hasBirthPlace&&!!a&&!this.matchBirthPlace(a)}get valid(){return!!(this.hasCRC&&ea.codiceFiscale().test(this.codiceFiscale)&&this.codiceFiscale.substr(15,1).toUpperCase()===F.checkDigit(this.codiceFiscale)&&x.cfToBirthPlace(this.codiceFiscale))}get invalid(){return!!this.codiceFiscale&&!this.valid}}class ia{static codiceFiscale(a){return new na(a)}static isLastNameValid(a){return ea.lastName().test(a)}static isLastNameInvalid(a){return!!a&&!this.isLastNameValid(a)}static isFirstNameValid(a){return ea.firstName().test(a)}static isFirstNameInvalid(a){return!!a&&!this.isFirstNameValid(a)}static isBirthDateValid(a){return!!m.parseDate(a)}static isBirthDateInvalid(a){return!!a&&!this.isBirthDateValid(a)}static isGenderValid(a){return ea.gender().test(a)}static isGenderInvalid(a){return!!a&&!this.isGenderValid(a)}static isBirthPlaceValid(a){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l;const e=x.parsePlace(a);return!!e&&!!o[e.belfioreCode]}static isBirthPlaceInvalid(a){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l;return!!a&&!this.isBirthPlaceValid(a,o)}static birthDatePlaceMatch(a,o){const e=x.parsePlace(o);return this.isBirthDateValid(a)&&!!e&&!!l.from(a)[e.belfioreCode]}static birthDatePlaceMismatch(a,o){const e=x.parsePlace(o);return this.isBirthDateValid(a)&&!!e&&!this.birthDatePlaceMatch(a,o)}static birthPlaceDateMatch(a,o){return this.birthDatePlaceMatch(o,a)}static birthPlaceDateMismatch(a,o){return this.birthDatePlaceMismatch(o,a)}}},421:function(a,o,e){(function(a){a.exports=function(){\"use strict\";var o,e;function n(){return o.apply(null,arguments)}function i(a){o=a}function r(a){return a instanceof Array||\"[object Array]\"===Object.prototype.toString.call(a)}function t(a){return null!=a&&\"[object Object]\"===Object.prototype.toString.call(a)}function l(a,o){return Object.prototype.hasOwnProperty.call(a,o)}function b(a){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(a).length;var o;for(o in a)if(l(a,o))return!1;return!0}function s(a){return void 0===a}function c(a){return\"number\"===typeof a||\"[object Number]\"===Object.prototype.toString.call(a)}function u(a){return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function C(a,o){var e,n=[],i=a.length;for(e=0;e<i;++e)n.push(o(a[e],e));return n}function d(a,o){for(var e in o)l(o,e)&&(a[e]=o[e]);return l(o,\"toString\")&&(a.toString=o.toString),l(o,\"valueOf\")&&(a.valueOf=o.valueOf),a}function g(a,o,e,n){return Qe(a,o,e,n,!0).utc()}function S(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function m(a){return null==a._pf&&(a._pf=S()),a._pf}function h(a){if(null==a._isValid){var o=m(a),n=e.call(o.parsedDateParts,(function(a){return null!=a})),i=!isNaN(a._d.getTime())&&o.overflow<0&&!o.empty&&!o.invalidEra&&!o.invalidMonth&&!o.invalidWeekday&&!o.weekdayMismatch&&!o.nullInput&&!o.invalidFormat&&!o.userInvalidated&&(!o.meridiem||o.meridiem&&n);if(a._strict&&(i=i&&0===o.charsLeftOver&&0===o.unusedTokens.length&&void 0===o.bigHour),null!=Object.isFrozen&&Object.isFrozen(a))return i;a._isValid=i}return a._isValid}function M(a){var o=g(NaN);return null!=a?d(m(o),a):m(o).userInvalidated=!0,o}e=Array.prototype.some?Array.prototype.some:function(a){var o,e=Object(this),n=e.length>>>0;for(o=0;o<n;o++)if(o in e&&a.call(this,e[o],o,e))return!0;return!1};var v=n.momentProperties=[],A=!1;function P(a,o){var e,n,i,r=v.length;if(s(o._isAMomentObject)||(a._isAMomentObject=o._isAMomentObject),s(o._i)||(a._i=o._i),s(o._f)||(a._f=o._f),s(o._l)||(a._l=o._l),s(o._strict)||(a._strict=o._strict),s(o._tzm)||(a._tzm=o._tzm),s(o._isUTC)||(a._isUTC=o._isUTC),s(o._offset)||(a._offset=o._offset),s(o._pf)||(a._pf=m(o)),s(o._locale)||(a._locale=o._locale),r>0)for(e=0;e<r;e++)s(i=o[n=v[e]])||(a[n]=i);return a}function B(a){P(this,a),this._d=new Date(null!=a._d?a._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===A&&(A=!0,n.updateOffset(this),A=!1)}function f(a){return a instanceof B||null!=a&&null!=a._isAMomentObject}function V(a){!1===n.suppressDeprecationWarnings&&\"undefined\"!==typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+a)}function T(a,o){var e=!0;return d((function(){if(null!=n.deprecationHandler&&n.deprecationHandler(null,a),e){var i,r,t,b=[],s=arguments.length;for(r=0;r<s;r++){if(i=\"\",\"object\"===typeof arguments[r]){for(t in i+=\"\\n[\"+r+\"] \",arguments[0])l(arguments[0],t)&&(i+=t+\": \"+arguments[0][t]+\", \");i=i.slice(0,-2)}else i=arguments[r];b.push(i)}V(a+\"\\nArguments: \"+Array.prototype.slice.call(b).join(\"\")+\"\\n\"+(new Error).stack),e=!1}return o.apply(this,arguments)}),o)}var p,O={};function R(a,o){null!=n.deprecationHandler&&n.deprecationHandler(a,o),O[a]||(V(o),O[a]=!0)}function N(a){return\"undefined\"!==typeof Function&&a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}function D(a){var o,e;for(e in a)l(a,e)&&(N(o=a[e])?this[e]=o:this[\"_\"+e]=o);this._config=a,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+\"|\"+/\\d{1,2}/.source)}function L(a,o){var e,n=d({},a);for(e in o)l(o,e)&&(t(a[e])&&t(o[e])?(n[e]={},d(n[e],a[e]),d(n[e],o[e])):null!=o[e]?n[e]=o[e]:delete n[e]);for(e in a)l(a,e)&&!l(o,e)&&t(a[e])&&(n[e]=d({},n[e]));return n}function G(a){null!=a&&this.set(a)}n.suppressDeprecationWarnings=!1,n.deprecationHandler=null,p=Object.keys?Object.keys:function(a){var o,e=[];for(o in a)l(a,o)&&e.push(o);return e};var z={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"};function k(a,o,e){var n=this._calendar[a]||this._calendar.sameElse;return N(n)?n.call(o,e):n}function I(a,o,e){var n=\"\"+Math.abs(a),i=o-n.length;return(a>=0?e?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,i)).toString().substr(1)+n}var E=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,j=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,q={},F={};function _(a,o,e,n){var i=n;\"string\"===typeof n&&(i=function(){return this[n]()}),a&&(F[a]=i),o&&(F[o[0]]=function(){return I(i.apply(this,arguments),o[1],o[2])}),e&&(F[e]=function(){return this.localeData().ordinal(i.apply(this,arguments),a)})}function U(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function y(a){var o,e,n=a.match(E);for(o=0,e=n.length;o<e;o++)F[n[o]]?n[o]=F[n[o]]:n[o]=U(n[o]);return function(o){var i,r=\"\";for(i=0;i<e;i++)r+=N(n[i])?n[i].call(o,a):n[i];return r}}function Z(a,o){return a.isValid()?(o=w(o,a.localeData()),q[o]=q[o]||y(o),q[o](a)):a.localeData().invalidDate()}function w(a,o){var e=5;function n(a){return o.longDateFormat(a)||a}for(j.lastIndex=0;e>=0&&j.test(a);)a=a.replace(j,n),j.lastIndex=0,e-=1;return a}var Y={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"};function H(a){var o=this._longDateFormat[a],e=this._longDateFormat[a.toUpperCase()];return o||!e?o:(this._longDateFormat[a]=e.match(E).map((function(a){return\"MMMM\"===a||\"MM\"===a||\"DD\"===a||\"dddd\"===a?a.slice(1):a})).join(\"\"),this._longDateFormat[a])}var x=\"Invalid date\";function Q(){return this._invalidDate}var W=\"%d\",K=/\\d{1,2}/;function J(a){return this._ordinal.replace(\"%d\",a)}var $={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",ss:\"%d seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",w:\"a week\",ww:\"%d weeks\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function X(a,o,e,n){var i=this._relativeTime[e];return N(i)?i(a,o,e,n):i.replace(/%d/i,a)}function aa(a,o){var e=this._relativeTime[a>0?\"future\":\"past\"];return N(e)?e(o):e.replace(/%s/i,o)}var oa={};function ea(a,o){var e=a.toLowerCase();oa[e]=oa[e+\"s\"]=oa[o]=a}function na(a){return\"string\"===typeof a?oa[a]||oa[a.toLowerCase()]:void 0}function ia(a){var o,e,n={};for(e in a)l(a,e)&&(o=na(e))&&(n[o]=a[e]);return n}var ra={};function ta(a,o){ra[a]=o}function la(a){var o,e=[];for(o in a)l(a,o)&&e.push({unit:o,priority:ra[o]});return e.sort((function(a,o){return a.priority-o.priority})),e}function ba(a){return a%4===0&&a%100!==0||a%400===0}function sa(a){return a<0?Math.ceil(a)||0:Math.floor(a)}function ca(a){var o=+a,e=0;return 0!==o&&isFinite(o)&&(e=sa(o)),e}function ua(a,o){return function(e){return null!=e?(da(this,a,e),n.updateOffset(this,o),this):Ca(this,a)}}function Ca(a,o){return a.isValid()?a._d[\"get\"+(a._isUTC?\"UTC\":\"\")+o]():NaN}function da(a,o,e){a.isValid()&&!isNaN(e)&&(\"FullYear\"===o&&ba(a.year())&&1===a.month()&&29===a.date()?(e=ca(e),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+o](e,a.month(),Xa(e,a.month()))):a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+o](e))}function ga(a){return N(this[a=na(a)])?this[a]():this}function Sa(a,o){if(\"object\"===typeof a){var e,n=la(a=ia(a)),i=n.length;for(e=0;e<i;e++)this[n[e].unit](a[n[e].unit])}else if(N(this[a=na(a)]))return this[a](o);return this}var ma,ha=/\\d/,Ma=/\\d\\d/,va=/\\d{3}/,Aa=/\\d{4}/,Pa=/[+-]?\\d{6}/,Ba=/\\d\\d?/,fa=/\\d\\d\\d\\d?/,Va=/\\d\\d\\d\\d\\d\\d?/,Ta=/\\d{1,3}/,pa=/\\d{1,4}/,Oa=/[+-]?\\d{1,6}/,Ra=/\\d+/,Na=/[+-]?\\d+/,Da=/Z|[+-]\\d\\d:?\\d\\d/gi,La=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,Ga=/[+-]?\\d+(\\.\\d{1,3})?/,za=/[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;function ka(a,o,e){ma[a]=N(o)?o:function(a,n){return a&&e?e:o}}function Ia(a,o){return l(ma,a)?ma[a](o._strict,o._locale):new RegExp(Ea(a))}function Ea(a){return ja(a.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,(function(a,o,e,n,i){return o||e||n||i})))}function ja(a){return a.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}ma={};var qa={};function Fa(a,o){var e,n,i=o;for(\"string\"===typeof a&&(a=[a]),c(o)&&(i=function(a,e){e[o]=ca(a)}),n=a.length,e=0;e<n;e++)qa[a[e]]=i}function _a(a,o){Fa(a,(function(a,e,n,i){n._w=n._w||{},o(a,n._w,n,i)}))}function Ua(a,o,e){null!=o&&l(qa,a)&&qa[a](o,e._a,e,a)}var ya,Za=0,wa=1,Ya=2,Ha=3,xa=4,Qa=5,Wa=6,Ka=7,Ja=8;function $a(a,o){return(a%o+o)%o}function Xa(a,o){if(isNaN(a)||isNaN(o))return NaN;var e=$a(o,12);return a+=(o-e)/12,1===e?ba(a)?29:28:31-e%7%2}ya=Array.prototype.indexOf?Array.prototype.indexOf:function(a){var o;for(o=0;o<this.length;++o)if(this[o]===a)return o;return-1},_(\"M\",[\"MM\",2],\"Mo\",(function(){return this.month()+1})),_(\"MMM\",0,0,(function(a){return this.localeData().monthsShort(this,a)})),_(\"MMMM\",0,0,(function(a){return this.localeData().months(this,a)})),ea(\"month\",\"M\"),ta(\"month\",8),ka(\"M\",Ba),ka(\"MM\",Ba,Ma),ka(\"MMM\",(function(a,o){return o.monthsShortRegex(a)})),ka(\"MMMM\",(function(a,o){return o.monthsRegex(a)})),Fa([\"M\",\"MM\"],(function(a,o){o[wa]=ca(a)-1})),Fa([\"MMM\",\"MMMM\"],(function(a,o,e,n){var i=e._locale.monthsParse(a,n,e._strict);null!=i?o[wa]=i:m(e).invalidMonth=a}));var ao=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),oo=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),eo=/D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,no=za,io=za;function ro(a,o){return a?r(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||eo).test(o)?\"format\":\"standalone\"][a.month()]:r(this._months)?this._months:this._months.standalone}function to(a,o){return a?r(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[eo.test(o)?\"format\":\"standalone\"][a.month()]:r(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function lo(a,o,e){var n,i,r,t=a.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],n=0;n<12;++n)r=g([2e3,n]),this._shortMonthsParse[n]=this.monthsShort(r,\"\").toLocaleLowerCase(),this._longMonthsParse[n]=this.months(r,\"\").toLocaleLowerCase();return e?\"MMM\"===o?-1!==(i=ya.call(this._shortMonthsParse,t))?i:null:-1!==(i=ya.call(this._longMonthsParse,t))?i:null:\"MMM\"===o?-1!==(i=ya.call(this._shortMonthsParse,t))||-1!==(i=ya.call(this._longMonthsParse,t))?i:null:-1!==(i=ya.call(this._longMonthsParse,t))||-1!==(i=ya.call(this._shortMonthsParse,t))?i:null}function bo(a,o,e){var n,i,r;if(this._monthsParseExact)return lo.call(this,a,o,e);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;n<12;n++){if(i=g([2e3,n]),e&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp(\"^\"+this.months(i,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[n]=new RegExp(\"^\"+this.monthsShort(i,\"\").replace(\".\",\"\")+\"$\",\"i\")),e||this._monthsParse[n]||(r=\"^\"+this.months(i,\"\")+\"|^\"+this.monthsShort(i,\"\"),this._monthsParse[n]=new RegExp(r.replace(\".\",\"\"),\"i\")),e&&\"MMMM\"===o&&this._longMonthsParse[n].test(a))return n;if(e&&\"MMM\"===o&&this._shortMonthsParse[n].test(a))return n;if(!e&&this._monthsParse[n].test(a))return n}}function so(a,o){var e;if(!a.isValid())return a;if(\"string\"===typeof o)if(/^\\d+$/.test(o))o=ca(o);else if(!c(o=a.localeData().monthsParse(o)))return a;return e=Math.min(a.date(),Xa(a.year(),o)),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+\"Month\"](o,e),a}function co(a){return null!=a?(so(this,a),n.updateOffset(this,!0),this):Ca(this,\"Month\")}function uo(){return Xa(this.year(),this.month())}function Co(a){return this._monthsParseExact?(l(this,\"_monthsRegex\")||So.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(l(this,\"_monthsShortRegex\")||(this._monthsShortRegex=no),this._monthsShortStrictRegex&&a?this._monthsShortStrictRegex:this._monthsShortRegex)}function go(a){return this._monthsParseExact?(l(this,\"_monthsRegex\")||So.call(this),a?this._monthsStrictRegex:this._monthsRegex):(l(this,\"_monthsRegex\")||(this._monthsRegex=io),this._monthsStrictRegex&&a?this._monthsStrictRegex:this._monthsRegex)}function So(){function a(a,o){return o.length-a.length}var o,e,n=[],i=[],r=[];for(o=0;o<12;o++)e=g([2e3,o]),n.push(this.monthsShort(e,\"\")),i.push(this.months(e,\"\")),r.push(this.months(e,\"\")),r.push(this.monthsShort(e,\"\"));for(n.sort(a),i.sort(a),r.sort(a),o=0;o<12;o++)n[o]=ja(n[o]),i[o]=ja(i[o]);for(o=0;o<24;o++)r[o]=ja(r[o]);this._monthsRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+n.join(\"|\")+\")\",\"i\")}function mo(a){return ba(a)?366:365}_(\"Y\",0,0,(function(){var a=this.year();return a<=9999?I(a,4):\"+\"+a})),_(0,[\"YY\",2],0,(function(){return this.year()%100})),_(0,[\"YYYY\",4],0,\"year\"),_(0,[\"YYYYY\",5],0,\"year\"),_(0,[\"YYYYYY\",6,!0],0,\"year\"),ea(\"year\",\"y\"),ta(\"year\",1),ka(\"Y\",Na),ka(\"YY\",Ba,Ma),ka(\"YYYY\",pa,Aa),ka(\"YYYYY\",Oa,Pa),ka(\"YYYYYY\",Oa,Pa),Fa([\"YYYYY\",\"YYYYYY\"],Za),Fa(\"YYYY\",(function(a,o){o[Za]=2===a.length?n.parseTwoDigitYear(a):ca(a)})),Fa(\"YY\",(function(a,o){o[Za]=n.parseTwoDigitYear(a)})),Fa(\"Y\",(function(a,o){o[Za]=parseInt(a,10)})),n.parseTwoDigitYear=function(a){return ca(a)+(ca(a)>68?1900:2e3)};var ho=ua(\"FullYear\",!0);function Mo(){return ba(this.year())}function vo(a,o,e,n,i,r,t){var l;return a<100&&a>=0?(l=new Date(a+400,o,e,n,i,r,t),isFinite(l.getFullYear())&&l.setFullYear(a)):l=new Date(a,o,e,n,i,r,t),l}function Ao(a){var o,e;return a<100&&a>=0?((e=Array.prototype.slice.call(arguments))[0]=a+400,o=new Date(Date.UTC.apply(null,e)),isFinite(o.getUTCFullYear())&&o.setUTCFullYear(a)):o=new Date(Date.UTC.apply(null,arguments)),o}function Po(a,o,e){var n=7+o-e;return-(7+Ao(a,0,n).getUTCDay()-o)%7+n-1}function Bo(a,o,e,n,i){var r,t,l=1+7*(o-1)+(7+e-n)%7+Po(a,n,i);return l<=0?t=mo(r=a-1)+l:l>mo(a)?(r=a+1,t=l-mo(a)):(r=a,t=l),{year:r,dayOfYear:t}}function fo(a,o,e){var n,i,r=Po(a.year(),o,e),t=Math.floor((a.dayOfYear()-r-1)/7)+1;return t<1?n=t+Vo(i=a.year()-1,o,e):t>Vo(a.year(),o,e)?(n=t-Vo(a.year(),o,e),i=a.year()+1):(i=a.year(),n=t),{week:n,year:i}}function Vo(a,o,e){var n=Po(a,o,e),i=Po(a+1,o,e);return(mo(a)-n+i)/7}function To(a){return fo(a,this._week.dow,this._week.doy).week}_(\"w\",[\"ww\",2],\"wo\",\"week\"),_(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),ea(\"week\",\"w\"),ea(\"isoWeek\",\"W\"),ta(\"week\",5),ta(\"isoWeek\",5),ka(\"w\",Ba),ka(\"ww\",Ba,Ma),ka(\"W\",Ba),ka(\"WW\",Ba,Ma),_a([\"w\",\"ww\",\"W\",\"WW\"],(function(a,o,e,n){o[n.substr(0,1)]=ca(a)}));var po={dow:0,doy:6};function Oo(){return this._week.dow}function Ro(){return this._week.doy}function No(a){var o=this.localeData().week(this);return null==a?o:this.add(7*(a-o),\"d\")}function Do(a){var o=fo(this,1,4).week;return null==a?o:this.add(7*(a-o),\"d\")}function Lo(a,o){return\"string\"!==typeof a?a:isNaN(a)?\"number\"===typeof(a=o.weekdaysParse(a))?a:null:parseInt(a,10)}function Go(a,o){return\"string\"===typeof a?o.weekdaysParse(a)%7||7:isNaN(a)?null:a}function zo(a,o){return a.slice(o,7).concat(a.slice(0,o))}_(\"d\",0,\"do\",\"day\"),_(\"dd\",0,0,(function(a){return this.localeData().weekdaysMin(this,a)})),_(\"ddd\",0,0,(function(a){return this.localeData().weekdaysShort(this,a)})),_(\"dddd\",0,0,(function(a){return this.localeData().weekdays(this,a)})),_(\"e\",0,0,\"weekday\"),_(\"E\",0,0,\"isoWeekday\"),ea(\"day\",\"d\"),ea(\"weekday\",\"e\"),ea(\"isoWeekday\",\"E\"),ta(\"day\",11),ta(\"weekday\",11),ta(\"isoWeekday\",11),ka(\"d\",Ba),ka(\"e\",Ba),ka(\"E\",Ba),ka(\"dd\",(function(a,o){return o.weekdaysMinRegex(a)})),ka(\"ddd\",(function(a,o){return o.weekdaysShortRegex(a)})),ka(\"dddd\",(function(a,o){return o.weekdaysRegex(a)})),_a([\"dd\",\"ddd\",\"dddd\"],(function(a,o,e,n){var i=e._locale.weekdaysParse(a,n,e._strict);null!=i?o.d=i:m(e).invalidWeekday=a})),_a([\"d\",\"e\",\"E\"],(function(a,o,e,n){o[n]=ca(a)}));var ko=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),Io=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),Eo=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),jo=za,qo=za,Fo=za;function _o(a,o){var e=r(this._weekdays)?this._weekdays:this._weekdays[a&&!0!==a&&this._weekdays.isFormat.test(o)?\"format\":\"standalone\"];return!0===a?zo(e,this._week.dow):a?e[a.day()]:e}function Uo(a){return!0===a?zo(this._weekdaysShort,this._week.dow):a?this._weekdaysShort[a.day()]:this._weekdaysShort}function yo(a){return!0===a?zo(this._weekdaysMin,this._week.dow):a?this._weekdaysMin[a.day()]:this._weekdaysMin}function Zo(a,o,e){var n,i,r,t=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],n=0;n<7;++n)r=g([2e3,1]).day(n),this._minWeekdaysParse[n]=this.weekdaysMin(r,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[n]=this.weekdaysShort(r,\"\").toLocaleLowerCase(),this._weekdaysParse[n]=this.weekdays(r,\"\").toLocaleLowerCase();return e?\"dddd\"===o?-1!==(i=ya.call(this._weekdaysParse,t))?i:null:\"ddd\"===o?-1!==(i=ya.call(this._shortWeekdaysParse,t))?i:null:-1!==(i=ya.call(this._minWeekdaysParse,t))?i:null:\"dddd\"===o?-1!==(i=ya.call(this._weekdaysParse,t))||-1!==(i=ya.call(this._shortWeekdaysParse,t))||-1!==(i=ya.call(this._minWeekdaysParse,t))?i:null:\"ddd\"===o?-1!==(i=ya.call(this._shortWeekdaysParse,t))||-1!==(i=ya.call(this._weekdaysParse,t))||-1!==(i=ya.call(this._minWeekdaysParse,t))?i:null:-1!==(i=ya.call(this._minWeekdaysParse,t))||-1!==(i=ya.call(this._weekdaysParse,t))||-1!==(i=ya.call(this._shortWeekdaysParse,t))?i:null}function wo(a,o,e){var n,i,r;if(this._weekdaysParseExact)return Zo.call(this,a,o,e);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;n<7;n++){if(i=g([2e3,1]).day(n),e&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp(\"^\"+this.weekdays(i,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\"),this._shortWeekdaysParse[n]=new RegExp(\"^\"+this.weekdaysShort(i,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\"),this._minWeekdaysParse[n]=new RegExp(\"^\"+this.weekdaysMin(i,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\")),this._weekdaysParse[n]||(r=\"^\"+this.weekdays(i,\"\")+\"|^\"+this.weekdaysShort(i,\"\")+\"|^\"+this.weekdaysMin(i,\"\"),this._weekdaysParse[n]=new RegExp(r.replace(\".\",\"\"),\"i\")),e&&\"dddd\"===o&&this._fullWeekdaysParse[n].test(a))return n;if(e&&\"ddd\"===o&&this._shortWeekdaysParse[n].test(a))return n;if(e&&\"dd\"===o&&this._minWeekdaysParse[n].test(a))return n;if(!e&&this._weekdaysParse[n].test(a))return n}}function Yo(a){if(!this.isValid())return null!=a?this:NaN;var o=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Lo(a,this.localeData()),this.add(a-o,\"d\")):o}function Ho(a){if(!this.isValid())return null!=a?this:NaN;var o=(this.day()+7-this.localeData()._week.dow)%7;return null==a?o:this.add(a-o,\"d\")}function xo(a){if(!this.isValid())return null!=a?this:NaN;if(null!=a){var o=Go(a,this.localeData());return this.day(this.day()%7?o:o-7)}return this.day()||7}function Qo(a){return this._weekdaysParseExact?(l(this,\"_weekdaysRegex\")||Jo.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(l(this,\"_weekdaysRegex\")||(this._weekdaysRegex=jo),this._weekdaysStrictRegex&&a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Wo(a){return this._weekdaysParseExact?(l(this,\"_weekdaysRegex\")||Jo.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(l(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=qo),this._weekdaysShortStrictRegex&&a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Ko(a){return this._weekdaysParseExact?(l(this,\"_weekdaysRegex\")||Jo.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(l(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=Fo),this._weekdaysMinStrictRegex&&a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Jo(){function a(a,o){return o.length-a.length}var o,e,n,i,r,t=[],l=[],b=[],s=[];for(o=0;o<7;o++)e=g([2e3,1]).day(o),n=ja(this.weekdaysMin(e,\"\")),i=ja(this.weekdaysShort(e,\"\")),r=ja(this.weekdays(e,\"\")),t.push(n),l.push(i),b.push(r),s.push(n),s.push(i),s.push(r);t.sort(a),l.sort(a),b.sort(a),s.sort(a),this._weekdaysRegex=new RegExp(\"^(\"+s.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+b.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+l.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+t.join(\"|\")+\")\",\"i\")}function $o(){return this.hours()%12||12}function Xo(){return this.hours()||24}function ae(a,o){_(a,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),o)}))}function oe(a,o){return o._meridiemParse}function ee(a){return\"p\"===(a+\"\").toLowerCase().charAt(0)}_(\"H\",[\"HH\",2],0,\"hour\"),_(\"h\",[\"hh\",2],0,$o),_(\"k\",[\"kk\",2],0,Xo),_(\"hmm\",0,0,(function(){return\"\"+$o.apply(this)+I(this.minutes(),2)})),_(\"hmmss\",0,0,(function(){return\"\"+$o.apply(this)+I(this.minutes(),2)+I(this.seconds(),2)})),_(\"Hmm\",0,0,(function(){return\"\"+this.hours()+I(this.minutes(),2)})),_(\"Hmmss\",0,0,(function(){return\"\"+this.hours()+I(this.minutes(),2)+I(this.seconds(),2)})),ae(\"a\",!0),ae(\"A\",!1),ea(\"hour\",\"h\"),ta(\"hour\",13),ka(\"a\",oe),ka(\"A\",oe),ka(\"H\",Ba),ka(\"h\",Ba),ka(\"k\",Ba),ka(\"HH\",Ba,Ma),ka(\"hh\",Ba,Ma),ka(\"kk\",Ba,Ma),ka(\"hmm\",fa),ka(\"hmmss\",Va),ka(\"Hmm\",fa),ka(\"Hmmss\",Va),Fa([\"H\",\"HH\"],Ha),Fa([\"k\",\"kk\"],(function(a,o,e){var n=ca(a);o[Ha]=24===n?0:n})),Fa([\"a\",\"A\"],(function(a,o,e){e._isPm=e._locale.isPM(a),e._meridiem=a})),Fa([\"h\",\"hh\"],(function(a,o,e){o[Ha]=ca(a),m(e).bigHour=!0})),Fa(\"hmm\",(function(a,o,e){var n=a.length-2;o[Ha]=ca(a.substr(0,n)),o[xa]=ca(a.substr(n)),m(e).bigHour=!0})),Fa(\"hmmss\",(function(a,o,e){var n=a.length-4,i=a.length-2;o[Ha]=ca(a.substr(0,n)),o[xa]=ca(a.substr(n,2)),o[Qa]=ca(a.substr(i)),m(e).bigHour=!0})),Fa(\"Hmm\",(function(a,o,e){var n=a.length-2;o[Ha]=ca(a.substr(0,n)),o[xa]=ca(a.substr(n))})),Fa(\"Hmmss\",(function(a,o,e){var n=a.length-4,i=a.length-2;o[Ha]=ca(a.substr(0,n)),o[xa]=ca(a.substr(n,2)),o[Qa]=ca(a.substr(i))}));var ne=/[ap]\\.?m?\\.?/i,ie=ua(\"Hours\",!0);function re(a,o,e){return a>11?e?\"pm\":\"PM\":e?\"am\":\"AM\"}var te,le={calendar:z,longDateFormat:Y,invalidDate:x,ordinal:W,dayOfMonthOrdinalParse:K,relativeTime:$,months:ao,monthsShort:oo,week:po,weekdays:ko,weekdaysMin:Eo,weekdaysShort:Io,meridiemParse:ne},be={},se={};function ce(a,o){var e,n=Math.min(a.length,o.length);for(e=0;e<n;e+=1)if(a[e]!==o[e])return e;return n}function ue(a){return a?a.toLowerCase().replace(\"_\",\"-\"):a}function Ce(a){for(var o,e,n,i,r=0;r<a.length;){for(o=(i=ue(a[r]).split(\"-\")).length,e=(e=ue(a[r+1]))?e.split(\"-\"):null;o>0;){if(n=ge(i.slice(0,o).join(\"-\")))return n;if(e&&e.length>=o&&ce(i,e)>=o-1)break;o--}r++}return te}function de(a){return null!=a.match(\"^[^/\\\\\\\\]*$\")}function ge(o){var e=null;if(void 0===be[o]&&\"undefined\"!==typeof a&&a&&a.exports&&de(o))try{e=te._abbr,function(){var a=new Error(\"Cannot find module 'undefined'\");throw a.code=\"MODULE_NOT_FOUND\",a}(),Se(e)}catch(n){be[o]=null}return be[o]}function Se(a,o){var e;return a&&((e=s(o)?Me(a):me(a,o))?te=e:\"undefined\"!==typeof console&&console.warn&&console.warn(\"Locale \"+a+\" not found. Did you forget to load it?\")),te._abbr}function me(a,o){if(null!==o){var e,n=le;if(o.abbr=a,null!=be[a])R(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),n=be[a]._config;else if(null!=o.parentLocale)if(null!=be[o.parentLocale])n=be[o.parentLocale]._config;else{if(null==(e=ge(o.parentLocale)))return se[o.parentLocale]||(se[o.parentLocale]=[]),se[o.parentLocale].push({name:a,config:o}),null;n=e._config}return be[a]=new G(L(n,o)),se[a]&&se[a].forEach((function(a){me(a.name,a.config)})),Se(a),be[a]}return delete be[a],null}function he(a,o){if(null!=o){var e,n,i=le;null!=be[a]&&null!=be[a].parentLocale?be[a].set(L(be[a]._config,o)):(null!=(n=ge(a))&&(i=n._config),o=L(i,o),null==n&&(o.abbr=a),(e=new G(o)).parentLocale=be[a],be[a]=e),Se(a)}else null!=be[a]&&(null!=be[a].parentLocale?(be[a]=be[a].parentLocale,a===Se()&&Se(a)):null!=be[a]&&delete be[a]);return be[a]}function Me(a){var o;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return te;if(!r(a)){if(o=ge(a))return o;a=[a]}return Ce(a)}function ve(){return p(be)}function Ae(a){var o,e=a._a;return e&&-2===m(a).overflow&&(o=e[wa]<0||e[wa]>11?wa:e[Ya]<1||e[Ya]>Xa(e[Za],e[wa])?Ya:e[Ha]<0||e[Ha]>24||24===e[Ha]&&(0!==e[xa]||0!==e[Qa]||0!==e[Wa])?Ha:e[xa]<0||e[xa]>59?xa:e[Qa]<0||e[Qa]>59?Qa:e[Wa]<0||e[Wa]>999?Wa:-1,m(a)._overflowDayOfYear&&(o<Za||o>Ya)&&(o=Ya),m(a)._overflowWeeks&&-1===o&&(o=Ka),m(a)._overflowWeekday&&-1===o&&(o=Ja),m(a).overflow=o),a}var Pe=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,Be=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,fe=/Z|[+-]\\d\\d(?::?\\d\\d)?/,Ve=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],[\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/],[\"YYYYMM\",/\\d{6}/,!1],[\"YYYY\",/\\d{4}/,!1]],Te=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],pe=/^\\/?Date\\((-?\\d+)/i,Oe=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,Re={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Ne(a){var o,e,n,i,r,t,l=a._i,b=Pe.exec(l)||Be.exec(l),s=Ve.length,c=Te.length;if(b){for(m(a).iso=!0,o=0,e=s;o<e;o++)if(Ve[o][1].exec(b[1])){i=Ve[o][0],n=!1!==Ve[o][2];break}if(null==i)return void(a._isValid=!1);if(b[3]){for(o=0,e=c;o<e;o++)if(Te[o][1].exec(b[3])){r=(b[2]||\" \")+Te[o][0];break}if(null==r)return void(a._isValid=!1)}if(!n&&null!=r)return void(a._isValid=!1);if(b[4]){if(!fe.exec(b[4]))return void(a._isValid=!1);t=\"Z\"}a._f=i+(r||\"\")+(t||\"\"),Ue(a)}else a._isValid=!1}function De(a,o,e,n,i,r){var t=[Le(a),oo.indexOf(o),parseInt(e,10),parseInt(n,10),parseInt(i,10)];return r&&t.push(parseInt(r,10)),t}function Le(a){var o=parseInt(a,10);return o<=49?2e3+o:o<=999?1900+o:o}function Ge(a){return a.replace(/\\([^()]*\\)|[\\n\\t]/g,\" \").replace(/(\\s\\s+)/g,\" \").replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\")}function ze(a,o,e){return!a||Io.indexOf(a)===new Date(o[0],o[1],o[2]).getDay()||(m(e).weekdayMismatch=!0,e._isValid=!1,!1)}function ke(a,o,e){if(a)return Re[a];if(o)return 0;var n=parseInt(e,10),i=n%100;return(n-i)/100*60+i}function Ie(a){var o,e=Oe.exec(Ge(a._i));if(e){if(o=De(e[4],e[3],e[2],e[5],e[6],e[7]),!ze(e[1],o,a))return;a._a=o,a._tzm=ke(e[8],e[9],e[10]),a._d=Ao.apply(null,a._a),a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),m(a).rfc2822=!0}else a._isValid=!1}function Ee(a){var o=pe.exec(a._i);null===o?(Ne(a),!1===a._isValid&&(delete a._isValid,Ie(a),!1===a._isValid&&(delete a._isValid,a._strict?a._isValid=!1:n.createFromInputFallback(a)))):a._d=new Date(+o[1])}function je(a,o,e){return null!=a?a:null!=o?o:e}function qe(a){var o=new Date(n.now());return a._useUTC?[o.getUTCFullYear(),o.getUTCMonth(),o.getUTCDate()]:[o.getFullYear(),o.getMonth(),o.getDate()]}function Fe(a){var o,e,n,i,r,t=[];if(!a._d){for(n=qe(a),a._w&&null==a._a[Ya]&&null==a._a[wa]&&_e(a),null!=a._dayOfYear&&(r=je(a._a[Za],n[Za]),(a._dayOfYear>mo(r)||0===a._dayOfYear)&&(m(a)._overflowDayOfYear=!0),e=Ao(r,0,a._dayOfYear),a._a[wa]=e.getUTCMonth(),a._a[Ya]=e.getUTCDate()),o=0;o<3&&null==a._a[o];++o)a._a[o]=t[o]=n[o];for(;o<7;o++)a._a[o]=t[o]=null==a._a[o]?2===o?1:0:a._a[o];24===a._a[Ha]&&0===a._a[xa]&&0===a._a[Qa]&&0===a._a[Wa]&&(a._nextDay=!0,a._a[Ha]=0),a._d=(a._useUTC?Ao:vo).apply(null,t),i=a._useUTC?a._d.getUTCDay():a._d.getDay(),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[Ha]=24),a._w&&\"undefined\"!==typeof a._w.d&&a._w.d!==i&&(m(a).weekdayMismatch=!0)}}function _e(a){var o,e,n,i,r,t,l,b,s;null!=(o=a._w).GG||null!=o.W||null!=o.E?(r=1,t=4,e=je(o.GG,a._a[Za],fo(We(),1,4).year),n=je(o.W,1),((i=je(o.E,1))<1||i>7)&&(b=!0)):(r=a._locale._week.dow,t=a._locale._week.doy,s=fo(We(),r,t),e=je(o.gg,a._a[Za],s.year),n=je(o.w,s.week),null!=o.d?((i=o.d)<0||i>6)&&(b=!0):null!=o.e?(i=o.e+r,(o.e<0||o.e>6)&&(b=!0)):i=r),n<1||n>Vo(e,r,t)?m(a)._overflowWeeks=!0:null!=b?m(a)._overflowWeekday=!0:(l=Bo(e,n,i,r,t),a._a[Za]=l.year,a._dayOfYear=l.dayOfYear)}function Ue(a){if(a._f!==n.ISO_8601)if(a._f!==n.RFC_2822){a._a=[],m(a).empty=!0;var o,e,i,r,t,l,b,s=\"\"+a._i,c=s.length,u=0;for(b=(i=w(a._f,a._locale).match(E)||[]).length,o=0;o<b;o++)r=i[o],(e=(s.match(Ia(r,a))||[])[0])&&((t=s.substr(0,s.indexOf(e))).length>0&&m(a).unusedInput.push(t),s=s.slice(s.indexOf(e)+e.length),u+=e.length),F[r]?(e?m(a).empty=!1:m(a).unusedTokens.push(r),Ua(r,e,a)):a._strict&&!e&&m(a).unusedTokens.push(r);m(a).charsLeftOver=c-u,s.length>0&&m(a).unusedInput.push(s),a._a[Ha]<=12&&!0===m(a).bigHour&&a._a[Ha]>0&&(m(a).bigHour=void 0),m(a).parsedDateParts=a._a.slice(0),m(a).meridiem=a._meridiem,a._a[Ha]=ye(a._locale,a._a[Ha],a._meridiem),null!==(l=m(a).era)&&(a._a[Za]=a._locale.erasConvertYear(l,a._a[Za])),Fe(a),Ae(a)}else Ie(a);else Ne(a)}function ye(a,o,e){var n;return null==e?o:null!=a.meridiemHour?a.meridiemHour(o,e):null!=a.isPM?((n=a.isPM(e))&&o<12&&(o+=12),n||12!==o||(o=0),o):o}function Ze(a){var o,e,n,i,r,t,l=!1,b=a._f.length;if(0===b)return m(a).invalidFormat=!0,void(a._d=new Date(NaN));for(i=0;i<b;i++)r=0,t=!1,o=P({},a),null!=a._useUTC&&(o._useUTC=a._useUTC),o._f=a._f[i],Ue(o),h(o)&&(t=!0),r+=m(o).charsLeftOver,r+=10*m(o).unusedTokens.length,m(o).score=r,l?r<n&&(n=r,e=o):(null==n||r<n||t)&&(n=r,e=o,t&&(l=!0));d(a,e||o)}function we(a){if(!a._d){var o=ia(a._i),e=void 0===o.day?o.date:o.day;a._a=C([o.year,o.month,e,o.hour,o.minute,o.second,o.millisecond],(function(a){return a&&parseInt(a,10)})),Fe(a)}}function Ye(a){var o=new B(Ae(He(a)));return o._nextDay&&(o.add(1,\"d\"),o._nextDay=void 0),o}function He(a){var o=a._i,e=a._f;return a._locale=a._locale||Me(a._l),null===o||void 0===e&&\"\"===o?M({nullInput:!0}):(\"string\"===typeof o&&(a._i=o=a._locale.preparse(o)),f(o)?new B(Ae(o)):(u(o)?a._d=o:r(e)?Ze(a):e?Ue(a):xe(a),h(a)||(a._d=null),a))}function xe(a){var o=a._i;s(o)?a._d=new Date(n.now()):u(o)?a._d=new Date(o.valueOf()):\"string\"===typeof o?Ee(a):r(o)?(a._a=C(o.slice(0),(function(a){return parseInt(a,10)})),Fe(a)):t(o)?we(a):c(o)?a._d=new Date(o):n.createFromInputFallback(a)}function Qe(a,o,e,n,i){var l={};return!0!==o&&!1!==o||(n=o,o=void 0),!0!==e&&!1!==e||(n=e,e=void 0),(t(a)&&b(a)||r(a)&&0===a.length)&&(a=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=i,l._l=e,l._i=a,l._f=o,l._strict=n,Ye(l)}function We(a,o,e,n){return Qe(a,o,e,n,!1)}n.createFromInputFallback=T(\"value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",(function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))})),n.ISO_8601=function(){},n.RFC_2822=function(){};var Ke=T(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",(function(){var a=We.apply(null,arguments);return this.isValid()&&a.isValid()?a<this?this:a:M()})),Je=T(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",(function(){var a=We.apply(null,arguments);return this.isValid()&&a.isValid()?a>this?this:a:M()}));function $e(a,o){var e,n;if(1===o.length&&r(o[0])&&(o=o[0]),!o.length)return We();for(e=o[0],n=1;n<o.length;++n)o[n].isValid()&&!o[n][a](e)||(e=o[n]);return e}function Xe(){return $e(\"isBefore\",[].slice.call(arguments,0))}function an(){return $e(\"isAfter\",[].slice.call(arguments,0))}var on=function(){return Date.now?Date.now():+new Date},en=[\"year\",\"quarter\",\"month\",\"week\",\"day\",\"hour\",\"minute\",\"second\",\"millisecond\"];function nn(a){var o,e,n=!1,i=en.length;for(o in a)if(l(a,o)&&(-1===ya.call(en,o)||null!=a[o]&&isNaN(a[o])))return!1;for(e=0;e<i;++e)if(a[en[e]]){if(n)return!1;parseFloat(a[en[e]])!==ca(a[en[e]])&&(n=!0)}return!0}function rn(){return this._isValid}function tn(){return Nn(NaN)}function ln(a){var o=ia(a),e=o.year||0,n=o.quarter||0,i=o.month||0,r=o.week||o.isoWeek||0,t=o.day||0,l=o.hour||0,b=o.minute||0,s=o.second||0,c=o.millisecond||0;this._isValid=nn(o),this._milliseconds=+c+1e3*s+6e4*b+1e3*l*60*60,this._days=+t+7*r,this._months=+i+3*n+12*e,this._data={},this._locale=Me(),this._bubble()}function bn(a){return a instanceof ln}function sn(a){return a<0?-1*Math.round(-1*a):Math.round(a)}function cn(a,o,e){var n,i=Math.min(a.length,o.length),r=Math.abs(a.length-o.length),t=0;for(n=0;n<i;n++)(e&&a[n]!==o[n]||!e&&ca(a[n])!==ca(o[n]))&&t++;return t+r}function un(a,o){_(a,0,0,(function(){var a=this.utcOffset(),e=\"+\";return a<0&&(a=-a,e=\"-\"),e+I(~~(a/60),2)+o+I(~~a%60,2)}))}un(\"Z\",\":\"),un(\"ZZ\",\"\"),ka(\"Z\",La),ka(\"ZZ\",La),Fa([\"Z\",\"ZZ\"],(function(a,o,e){e._useUTC=!0,e._tzm=dn(La,a)}));var Cn=/([\\+\\-]|\\d\\d)/gi;function dn(a,o){var e,n,i=(o||\"\").match(a);return null===i?null:0===(n=60*(e=((i[i.length-1]||[])+\"\").match(Cn)||[\"-\",0,0])[1]+ca(e[2]))?0:\"+\"===e[0]?n:-n}function gn(a,o){var e,i;return o._isUTC?(e=o.clone(),i=(f(a)||u(a)?a.valueOf():We(a).valueOf())-e.valueOf(),e._d.setTime(e._d.valueOf()+i),n.updateOffset(e,!1),e):We(a).local()}function Sn(a){return-Math.round(a._d.getTimezoneOffset())}function mn(a,o,e){var i,r=this._offset||0;if(!this.isValid())return null!=a?this:NaN;if(null!=a){if(\"string\"===typeof a){if(null===(a=dn(La,a)))return this}else Math.abs(a)<16&&!e&&(a*=60);return!this._isUTC&&o&&(i=Sn(this)),this._offset=a,this._isUTC=!0,null!=i&&this.add(i,\"m\"),r!==a&&(!o||this._changeInProgress?kn(this,Nn(a-r,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,n.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?r:Sn(this)}function hn(a,o){return null!=a?(\"string\"!==typeof a&&(a=-a),this.utcOffset(a,o),this):-this.utcOffset()}function Mn(a){return this.utcOffset(0,a)}function vn(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Sn(this),\"m\")),this}function An(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if(\"string\"===typeof this._i){var a=dn(Da,this._i);null!=a?this.utcOffset(a):this.utcOffset(0,!0)}return this}function Pn(a){return!!this.isValid()&&(a=a?We(a).utcOffset():0,(this.utcOffset()-a)%60===0)}function Bn(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function fn(){if(!s(this._isDSTShifted))return this._isDSTShifted;var a,o={};return P(o,this),(o=He(o))._a?(a=o._isUTC?g(o._a):We(o._a),this._isDSTShifted=this.isValid()&&cn(o._a,a.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}function Vn(){return!!this.isValid()&&!this._isUTC}function Tn(){return!!this.isValid()&&this._isUTC}function pn(){return!!this.isValid()&&this._isUTC&&0===this._offset}n.updateOffset=function(){};var On=/^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,Rn=/^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Nn(a,o){var e,n,i,r=a,t=null;return bn(a)?r={ms:a._milliseconds,d:a._days,M:a._months}:c(a)||!isNaN(+a)?(r={},o?r[o]=+a:r.milliseconds=+a):(t=On.exec(a))?(e=\"-\"===t[1]?-1:1,r={y:0,d:ca(t[Ya])*e,h:ca(t[Ha])*e,m:ca(t[xa])*e,s:ca(t[Qa])*e,ms:ca(sn(1e3*t[Wa]))*e}):(t=Rn.exec(a))?(e=\"-\"===t[1]?-1:1,r={y:Dn(t[2],e),M:Dn(t[3],e),w:Dn(t[4],e),d:Dn(t[5],e),h:Dn(t[6],e),m:Dn(t[7],e),s:Dn(t[8],e)}):null==r?r={}:\"object\"===typeof r&&(\"from\"in r||\"to\"in r)&&(i=Gn(We(r.from),We(r.to)),(r={}).ms=i.milliseconds,r.M=i.months),n=new ln(r),bn(a)&&l(a,\"_locale\")&&(n._locale=a._locale),bn(a)&&l(a,\"_isValid\")&&(n._isValid=a._isValid),n}function Dn(a,o){var e=a&&parseFloat(a.replace(\",\",\".\"));return(isNaN(e)?0:e)*o}function Ln(a,o){var e={};return e.months=o.month()-a.month()+12*(o.year()-a.year()),a.clone().add(e.months,\"M\").isAfter(o)&&--e.months,e.milliseconds=+o-+a.clone().add(e.months,\"M\"),e}function Gn(a,o){var e;return a.isValid()&&o.isValid()?(o=gn(o,a),a.isBefore(o)?e=Ln(a,o):((e=Ln(o,a)).milliseconds=-e.milliseconds,e.months=-e.months),e):{milliseconds:0,months:0}}function zn(a,o){return function(e,n){var i;return null===n||isNaN(+n)||(R(o,\"moment().\"+o+\"(period, number) is deprecated. Please use moment().\"+o+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),i=e,e=n,n=i),kn(this,Nn(e,n),a),this}}function kn(a,o,e,i){var r=o._milliseconds,t=sn(o._days),l=sn(o._months);a.isValid()&&(i=null==i||i,l&&so(a,Ca(a,\"Month\")+l*e),t&&da(a,\"Date\",Ca(a,\"Date\")+t*e),r&&a._d.setTime(a._d.valueOf()+r*e),i&&n.updateOffset(a,t||l))}Nn.fn=ln.prototype,Nn.invalid=tn;var In=zn(1,\"add\"),En=zn(-1,\"subtract\");function jn(a){return\"string\"===typeof a||a instanceof String}function qn(a){return f(a)||u(a)||jn(a)||c(a)||_n(a)||Fn(a)||null===a||void 0===a}function Fn(a){var o,e,n=t(a)&&!b(a),i=!1,r=[\"years\",\"year\",\"y\",\"months\",\"month\",\"M\",\"days\",\"day\",\"d\",\"dates\",\"date\",\"D\",\"hours\",\"hour\",\"h\",\"minutes\",\"minute\",\"m\",\"seconds\",\"second\",\"s\",\"milliseconds\",\"millisecond\",\"ms\"],s=r.length;for(o=0;o<s;o+=1)e=r[o],i=i||l(a,e);return n&&i}function _n(a){var o=r(a),e=!1;return o&&(e=0===a.filter((function(o){return!c(o)&&jn(a)})).length),o&&e}function Un(a){var o,e,n=t(a)&&!b(a),i=!1,r=[\"sameDay\",\"nextDay\",\"lastDay\",\"nextWeek\",\"lastWeek\",\"sameElse\"];for(o=0;o<r.length;o+=1)e=r[o],i=i||l(a,e);return n&&i}function yn(a,o){var e=a.diff(o,\"days\",!0);return e<-6?\"sameElse\":e<-1?\"lastWeek\":e<0?\"lastDay\":e<1?\"sameDay\":e<2?\"nextDay\":e<7?\"nextWeek\":\"sameElse\"}function Zn(a,o){1===arguments.length&&(arguments[0]?qn(arguments[0])?(a=arguments[0],o=void 0):Un(arguments[0])&&(o=arguments[0],a=void 0):(a=void 0,o=void 0));var e=a||We(),i=gn(e,this).startOf(\"day\"),r=n.calendarFormat(this,i)||\"sameElse\",t=o&&(N(o[r])?o[r].call(this,e):o[r]);return this.format(t||this.localeData().calendar(r,this,We(e)))}function wn(){return new B(this)}function Yn(a,o){var e=f(a)?a:We(a);return!(!this.isValid()||!e.isValid())&&(\"millisecond\"===(o=na(o)||\"millisecond\")?this.valueOf()>e.valueOf():e.valueOf()<this.clone().startOf(o).valueOf())}function Hn(a,o){var e=f(a)?a:We(a);return!(!this.isValid()||!e.isValid())&&(\"millisecond\"===(o=na(o)||\"millisecond\")?this.valueOf()<e.valueOf():this.clone().endOf(o).valueOf()<e.valueOf())}function xn(a,o,e,n){var i=f(a)?a:We(a),r=f(o)?o:We(o);return!!(this.isValid()&&i.isValid()&&r.isValid())&&(\"(\"===(n=n||\"()\")[0]?this.isAfter(i,e):!this.isBefore(i,e))&&(\")\"===n[1]?this.isBefore(r,e):!this.isAfter(r,e))}function Qn(a,o){var e,n=f(a)?a:We(a);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(o=na(o)||\"millisecond\")?this.valueOf()===n.valueOf():(e=n.valueOf(),this.clone().startOf(o).valueOf()<=e&&e<=this.clone().endOf(o).valueOf()))}function Wn(a,o){return this.isSame(a,o)||this.isAfter(a,o)}function Kn(a,o){return this.isSame(a,o)||this.isBefore(a,o)}function Jn(a,o,e){var n,i,r;if(!this.isValid())return NaN;if(!(n=gn(a,this)).isValid())return NaN;switch(i=6e4*(n.utcOffset()-this.utcOffset()),o=na(o)){case\"year\":r=$n(this,n)/12;break;case\"month\":r=$n(this,n);break;case\"quarter\":r=$n(this,n)/3;break;case\"second\":r=(this-n)/1e3;break;case\"minute\":r=(this-n)/6e4;break;case\"hour\":r=(this-n)/36e5;break;case\"day\":r=(this-n-i)/864e5;break;case\"week\":r=(this-n-i)/6048e5;break;default:r=this-n}return e?r:sa(r)}function $n(a,o){if(a.date()<o.date())return-$n(o,a);var e=12*(o.year()-a.year())+(o.month()-a.month()),n=a.clone().add(e,\"months\");return-(e+(o-n<0?(o-n)/(n-a.clone().add(e-1,\"months\")):(o-n)/(a.clone().add(e+1,\"months\")-n)))||0}function Xn(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function ai(a){if(!this.isValid())return null;var o=!0!==a,e=o?this.clone().utc():this;return e.year()<0||e.year()>9999?Z(e,o?\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ\"):N(Date.prototype.toISOString)?o?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace(\"Z\",Z(e,\"Z\")):Z(e,o?\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYY-MM-DD[T]HH:mm:ss.SSSZ\")}function oi(){if(!this.isValid())return\"moment.invalid(/* \"+this._i+\" */)\";var a,o,e,n,i=\"moment\",r=\"\";return this.isLocal()||(i=0===this.utcOffset()?\"moment.utc\":\"moment.parseZone\",r=\"Z\"),a=\"[\"+i+'(\"]',o=0<=this.year()&&this.year()<=9999?\"YYYY\":\"YYYYYY\",e=\"-MM-DD[T]HH:mm:ss.SSS\",n=r+'[\")]',this.format(a+o+e+n)}function ei(a){a||(a=this.isUtc()?n.defaultFormatUtc:n.defaultFormat);var o=Z(this,a);return this.localeData().postformat(o)}function ni(a,o){return this.isValid()&&(f(a)&&a.isValid()||We(a).isValid())?Nn({to:this,from:a}).locale(this.locale()).humanize(!o):this.localeData().invalidDate()}function ii(a){return this.from(We(),a)}function ri(a,o){return this.isValid()&&(f(a)&&a.isValid()||We(a).isValid())?Nn({from:this,to:a}).locale(this.locale()).humanize(!o):this.localeData().invalidDate()}function ti(a){return this.to(We(),a)}function li(a){var o;return void 0===a?this._locale._abbr:(null!=(o=Me(a))&&(this._locale=o),this)}n.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",n.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var bi=T(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",(function(a){return void 0===a?this.localeData():this.locale(a)}));function si(){return this._locale}var ci=1e3,ui=60*ci,Ci=60*ui,di=3506328*Ci;function gi(a,o){return(a%o+o)%o}function Si(a,o,e){return a<100&&a>=0?new Date(a+400,o,e)-di:new Date(a,o,e).valueOf()}function mi(a,o,e){return a<100&&a>=0?Date.UTC(a+400,o,e)-di:Date.UTC(a,o,e)}function hi(a){var o,e;if(void 0===(a=na(a))||\"millisecond\"===a||!this.isValid())return this;switch(e=this._isUTC?mi:Si,a){case\"year\":o=e(this.year(),0,1);break;case\"quarter\":o=e(this.year(),this.month()-this.month()%3,1);break;case\"month\":o=e(this.year(),this.month(),1);break;case\"week\":o=e(this.year(),this.month(),this.date()-this.weekday());break;case\"isoWeek\":o=e(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case\"day\":case\"date\":o=e(this.year(),this.month(),this.date());break;case\"hour\":o=this._d.valueOf(),o-=gi(o+(this._isUTC?0:this.utcOffset()*ui),Ci);break;case\"minute\":o=this._d.valueOf(),o-=gi(o,ui);break;case\"second\":o=this._d.valueOf(),o-=gi(o,ci)}return this._d.setTime(o),n.updateOffset(this,!0),this}function Mi(a){var o,e;if(void 0===(a=na(a))||\"millisecond\"===a||!this.isValid())return this;switch(e=this._isUTC?mi:Si,a){case\"year\":o=e(this.year()+1,0,1)-1;break;case\"quarter\":o=e(this.year(),this.month()-this.month()%3+3,1)-1;break;case\"month\":o=e(this.year(),this.month()+1,1)-1;break;case\"week\":o=e(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case\"isoWeek\":o=e(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case\"day\":case\"date\":o=e(this.year(),this.month(),this.date()+1)-1;break;case\"hour\":o=this._d.valueOf(),o+=Ci-gi(o+(this._isUTC?0:this.utcOffset()*ui),Ci)-1;break;case\"minute\":o=this._d.valueOf(),o+=ui-gi(o,ui)-1;break;case\"second\":o=this._d.valueOf(),o+=ci-gi(o,ci)-1}return this._d.setTime(o),n.updateOffset(this,!0),this}function vi(){return this._d.valueOf()-6e4*(this._offset||0)}function Ai(){return Math.floor(this.valueOf()/1e3)}function Pi(){return new Date(this.valueOf())}function Bi(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function fi(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function Vi(){return this.isValid()?this.toISOString():null}function Ti(){return h(this)}function pi(){return d({},m(this))}function Oi(){return m(this).overflow}function Ri(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function Ni(a,o){var e,i,r,t=this._eras||Me(\"en\")._eras;for(e=0,i=t.length;e<i;++e)switch(\"string\"===typeof t[e].since&&(r=n(t[e].since).startOf(\"day\"),t[e].since=r.valueOf()),typeof t[e].until){case\"undefined\":t[e].until=1/0;break;case\"string\":r=n(t[e].until).startOf(\"day\").valueOf(),t[e].until=r.valueOf()}return t}function Di(a,o,e){var n,i,r,t,l,b=this.eras();for(a=a.toUpperCase(),n=0,i=b.length;n<i;++n)if(r=b[n].name.toUpperCase(),t=b[n].abbr.toUpperCase(),l=b[n].narrow.toUpperCase(),e)switch(o){case\"N\":case\"NN\":case\"NNN\":if(t===a)return b[n];break;case\"NNNN\":if(r===a)return b[n];break;case\"NNNNN\":if(l===a)return b[n]}else if([r,t,l].indexOf(a)>=0)return b[n]}function Li(a,o){var e=a.since<=a.until?1:-1;return void 0===o?n(a.since).year():n(a.since).year()+(o-a.offset)*e}function Gi(){var a,o,e,n=this.localeData().eras();for(a=0,o=n.length;a<o;++a){if(e=this.clone().startOf(\"day\").valueOf(),n[a].since<=e&&e<=n[a].until)return n[a].name;if(n[a].until<=e&&e<=n[a].since)return n[a].name}return\"\"}function zi(){var a,o,e,n=this.localeData().eras();for(a=0,o=n.length;a<o;++a){if(e=this.clone().startOf(\"day\").valueOf(),n[a].since<=e&&e<=n[a].until)return n[a].narrow;if(n[a].until<=e&&e<=n[a].since)return n[a].narrow}return\"\"}function ki(){var a,o,e,n=this.localeData().eras();for(a=0,o=n.length;a<o;++a){if(e=this.clone().startOf(\"day\").valueOf(),n[a].since<=e&&e<=n[a].until)return n[a].abbr;if(n[a].until<=e&&e<=n[a].since)return n[a].abbr}return\"\"}function Ii(){var a,o,e,i,r=this.localeData().eras();for(a=0,o=r.length;a<o;++a)if(e=r[a].since<=r[a].until?1:-1,i=this.clone().startOf(\"day\").valueOf(),r[a].since<=i&&i<=r[a].until||r[a].until<=i&&i<=r[a].since)return(this.year()-n(r[a].since).year())*e+r[a].offset;return this.year()}function Ei(a){return l(this,\"_erasNameRegex\")||Zi.call(this),a?this._erasNameRegex:this._erasRegex}function ji(a){return l(this,\"_erasAbbrRegex\")||Zi.call(this),a?this._erasAbbrRegex:this._erasRegex}function qi(a){return l(this,\"_erasNarrowRegex\")||Zi.call(this),a?this._erasNarrowRegex:this._erasRegex}function Fi(a,o){return o.erasAbbrRegex(a)}function _i(a,o){return o.erasNameRegex(a)}function Ui(a,o){return o.erasNarrowRegex(a)}function yi(a,o){return o._eraYearOrdinalRegex||Ra}function Zi(){var a,o,e=[],n=[],i=[],r=[],t=this.eras();for(a=0,o=t.length;a<o;++a)n.push(ja(t[a].name)),e.push(ja(t[a].abbr)),i.push(ja(t[a].narrow)),r.push(ja(t[a].name)),r.push(ja(t[a].abbr)),r.push(ja(t[a].narrow));this._erasRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\"),this._erasNameRegex=new RegExp(\"^(\"+n.join(\"|\")+\")\",\"i\"),this._erasAbbrRegex=new RegExp(\"^(\"+e.join(\"|\")+\")\",\"i\"),this._erasNarrowRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\")}function wi(a,o){_(0,[a,a.length],0,o)}function Yi(a){return Ji.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Hi(a){return Ji.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function xi(){return Vo(this.year(),1,4)}function Qi(){return Vo(this.isoWeekYear(),1,4)}function Wi(){var a=this.localeData()._week;return Vo(this.year(),a.dow,a.doy)}function Ki(){var a=this.localeData()._week;return Vo(this.weekYear(),a.dow,a.doy)}function Ji(a,o,e,n,i){var r;return null==a?fo(this,n,i).year:(o>(r=Vo(a,n,i))&&(o=r),$i.call(this,a,o,e,n,i))}function $i(a,o,e,n,i){var r=Bo(a,o,e,n,i),t=Ao(r.year,0,r.dayOfYear);return this.year(t.getUTCFullYear()),this.month(t.getUTCMonth()),this.date(t.getUTCDate()),this}function Xi(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}_(\"N\",0,0,\"eraAbbr\"),_(\"NN\",0,0,\"eraAbbr\"),_(\"NNN\",0,0,\"eraAbbr\"),_(\"NNNN\",0,0,\"eraName\"),_(\"NNNNN\",0,0,\"eraNarrow\"),_(\"y\",[\"y\",1],\"yo\",\"eraYear\"),_(\"y\",[\"yy\",2],0,\"eraYear\"),_(\"y\",[\"yyy\",3],0,\"eraYear\"),_(\"y\",[\"yyyy\",4],0,\"eraYear\"),ka(\"N\",Fi),ka(\"NN\",Fi),ka(\"NNN\",Fi),ka(\"NNNN\",_i),ka(\"NNNNN\",Ui),Fa([\"N\",\"NN\",\"NNN\",\"NNNN\",\"NNNNN\"],(function(a,o,e,n){var i=e._locale.erasParse(a,n,e._strict);i?m(e).era=i:m(e).invalidEra=a})),ka(\"y\",Ra),ka(\"yy\",Ra),ka(\"yyy\",Ra),ka(\"yyyy\",Ra),ka(\"yo\",yi),Fa([\"y\",\"yy\",\"yyy\",\"yyyy\"],Za),Fa([\"yo\"],(function(a,o,e,n){var i;e._locale._eraYearOrdinalRegex&&(i=a.match(e._locale._eraYearOrdinalRegex)),e._locale.eraYearOrdinalParse?o[Za]=e._locale.eraYearOrdinalParse(a,i):o[Za]=parseInt(a,10)})),_(0,[\"gg\",2],0,(function(){return this.weekYear()%100})),_(0,[\"GG\",2],0,(function(){return this.isoWeekYear()%100})),wi(\"gggg\",\"weekYear\"),wi(\"ggggg\",\"weekYear\"),wi(\"GGGG\",\"isoWeekYear\"),wi(\"GGGGG\",\"isoWeekYear\"),ea(\"weekYear\",\"gg\"),ea(\"isoWeekYear\",\"GG\"),ta(\"weekYear\",1),ta(\"isoWeekYear\",1),ka(\"G\",Na),ka(\"g\",Na),ka(\"GG\",Ba,Ma),ka(\"gg\",Ba,Ma),ka(\"GGGG\",pa,Aa),ka(\"gggg\",pa,Aa),ka(\"GGGGG\",Oa,Pa),ka(\"ggggg\",Oa,Pa),_a([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],(function(a,o,e,n){o[n.substr(0,2)]=ca(a)})),_a([\"gg\",\"GG\"],(function(a,o,e,i){o[i]=n.parseTwoDigitYear(a)})),_(\"Q\",0,\"Qo\",\"quarter\"),ea(\"quarter\",\"Q\"),ta(\"quarter\",7),ka(\"Q\",ha),Fa(\"Q\",(function(a,o){o[wa]=3*(ca(a)-1)})),_(\"D\",[\"DD\",2],\"Do\",\"date\"),ea(\"date\",\"D\"),ta(\"date\",9),ka(\"D\",Ba),ka(\"DD\",Ba,Ma),ka(\"Do\",(function(a,o){return a?o._dayOfMonthOrdinalParse||o._ordinalParse:o._dayOfMonthOrdinalParseLenient})),Fa([\"D\",\"DD\"],Ya),Fa(\"Do\",(function(a,o){o[Ya]=ca(a.match(Ba)[0])}));var ar=ua(\"Date\",!0);function or(a){var o=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==a?o:this.add(a-o,\"d\")}_(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),ea(\"dayOfYear\",\"DDD\"),ta(\"dayOfYear\",4),ka(\"DDD\",Ta),ka(\"DDDD\",va),Fa([\"DDD\",\"DDDD\"],(function(a,o,e){e._dayOfYear=ca(a)})),_(\"m\",[\"mm\",2],0,\"minute\"),ea(\"minute\",\"m\"),ta(\"minute\",14),ka(\"m\",Ba),ka(\"mm\",Ba,Ma),Fa([\"m\",\"mm\"],xa);var er=ua(\"Minutes\",!1);_(\"s\",[\"ss\",2],0,\"second\"),ea(\"second\",\"s\"),ta(\"second\",15),ka(\"s\",Ba),ka(\"ss\",Ba,Ma),Fa([\"s\",\"ss\"],Qa);var nr,ir,rr=ua(\"Seconds\",!1);for(_(\"S\",0,0,(function(){return~~(this.millisecond()/100)})),_(0,[\"SS\",2],0,(function(){return~~(this.millisecond()/10)})),_(0,[\"SSS\",3],0,\"millisecond\"),_(0,[\"SSSS\",4],0,(function(){return 10*this.millisecond()})),_(0,[\"SSSSS\",5],0,(function(){return 100*this.millisecond()})),_(0,[\"SSSSSS\",6],0,(function(){return 1e3*this.millisecond()})),_(0,[\"SSSSSSS\",7],0,(function(){return 1e4*this.millisecond()})),_(0,[\"SSSSSSSS\",8],0,(function(){return 1e5*this.millisecond()})),_(0,[\"SSSSSSSSS\",9],0,(function(){return 1e6*this.millisecond()})),ea(\"millisecond\",\"ms\"),ta(\"millisecond\",16),ka(\"S\",Ta,ha),ka(\"SS\",Ta,Ma),ka(\"SSS\",Ta,va),nr=\"SSSS\";nr.length<=9;nr+=\"S\")ka(nr,Ra);function tr(a,o){o[Wa]=ca(1e3*(\"0.\"+a))}for(nr=\"S\";nr.length<=9;nr+=\"S\")Fa(nr,tr);function lr(){return this._isUTC?\"UTC\":\"\"}function br(){return this._isUTC?\"Coordinated Universal Time\":\"\"}ir=ua(\"Milliseconds\",!1),_(\"z\",0,0,\"zoneAbbr\"),_(\"zz\",0,0,\"zoneName\");var sr=B.prototype;function cr(a){return We(1e3*a)}function ur(){return We.apply(null,arguments).parseZone()}function Cr(a){return a}sr.add=In,sr.calendar=Zn,sr.clone=wn,sr.diff=Jn,sr.endOf=Mi,sr.format=ei,sr.from=ni,sr.fromNow=ii,sr.to=ri,sr.toNow=ti,sr.get=ga,sr.invalidAt=Oi,sr.isAfter=Yn,sr.isBefore=Hn,sr.isBetween=xn,sr.isSame=Qn,sr.isSameOrAfter=Wn,sr.isSameOrBefore=Kn,sr.isValid=Ti,sr.lang=bi,sr.locale=li,sr.localeData=si,sr.max=Je,sr.min=Ke,sr.parsingFlags=pi,sr.set=Sa,sr.startOf=hi,sr.subtract=En,sr.toArray=Bi,sr.toObject=fi,sr.toDate=Pi,sr.toISOString=ai,sr.inspect=oi,\"undefined\"!==typeof Symbol&&null!=Symbol.for&&(sr[Symbol.for(\"nodejs.util.inspect.custom\")]=function(){return\"Moment<\"+this.format()+\">\"}),sr.toJSON=Vi,sr.toString=Xn,sr.unix=Ai,sr.valueOf=vi,sr.creationData=Ri,sr.eraName=Gi,sr.eraNarrow=zi,sr.eraAbbr=ki,sr.eraYear=Ii,sr.year=ho,sr.isLeapYear=Mo,sr.weekYear=Yi,sr.isoWeekYear=Hi,sr.quarter=sr.quarters=Xi,sr.month=co,sr.daysInMonth=uo,sr.week=sr.weeks=No,sr.isoWeek=sr.isoWeeks=Do,sr.weeksInYear=Wi,sr.weeksInWeekYear=Ki,sr.isoWeeksInYear=xi,sr.isoWeeksInISOWeekYear=Qi,sr.date=ar,sr.day=sr.days=Yo,sr.weekday=Ho,sr.isoWeekday=xo,sr.dayOfYear=or,sr.hour=sr.hours=ie,sr.minute=sr.minutes=er,sr.second=sr.seconds=rr,sr.millisecond=sr.milliseconds=ir,sr.utcOffset=mn,sr.utc=Mn,sr.local=vn,sr.parseZone=An,sr.hasAlignedHourOffset=Pn,sr.isDST=Bn,sr.isLocal=Vn,sr.isUtcOffset=Tn,sr.isUtc=pn,sr.isUTC=pn,sr.zoneAbbr=lr,sr.zoneName=br,sr.dates=T(\"dates accessor is deprecated. Use date instead.\",ar),sr.months=T(\"months accessor is deprecated. Use month instead\",co),sr.years=T(\"years accessor is deprecated. Use year instead\",ho),sr.zone=T(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",hn),sr.isDSTShifted=T(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",fn);var dr=G.prototype;function gr(a,o,e,n){var i=Me(),r=g().set(n,o);return i[e](r,a)}function Sr(a,o,e){if(c(a)&&(o=a,a=void 0),a=a||\"\",null!=o)return gr(a,o,e,\"month\");var n,i=[];for(n=0;n<12;n++)i[n]=gr(a,n,e,\"month\");return i}function mr(a,o,e,n){\"boolean\"===typeof a?(c(o)&&(e=o,o=void 0),o=o||\"\"):(e=o=a,a=!1,c(o)&&(e=o,o=void 0),o=o||\"\");var i,r=Me(),t=a?r._week.dow:0,l=[];if(null!=e)return gr(o,(e+t)%7,n,\"day\");for(i=0;i<7;i++)l[i]=gr(o,(i+t)%7,n,\"day\");return l}function hr(a,o){return Sr(a,o,\"months\")}function Mr(a,o){return Sr(a,o,\"monthsShort\")}function vr(a,o,e){return mr(a,o,e,\"weekdays\")}function Ar(a,o,e){return mr(a,o,e,\"weekdaysShort\")}function Pr(a,o,e){return mr(a,o,e,\"weekdaysMin\")}dr.calendar=k,dr.longDateFormat=H,dr.invalidDate=Q,dr.ordinal=J,dr.preparse=Cr,dr.postformat=Cr,dr.relativeTime=X,dr.pastFuture=aa,dr.set=D,dr.eras=Ni,dr.erasParse=Di,dr.erasConvertYear=Li,dr.erasAbbrRegex=ji,dr.erasNameRegex=Ei,dr.erasNarrowRegex=qi,dr.months=ro,dr.monthsShort=to,dr.monthsParse=bo,dr.monthsRegex=go,dr.monthsShortRegex=Co,dr.week=To,dr.firstDayOfYear=Ro,dr.firstDayOfWeek=Oo,dr.weekdays=_o,dr.weekdaysMin=yo,dr.weekdaysShort=Uo,dr.weekdaysParse=wo,dr.weekdaysRegex=Qo,dr.weekdaysShortRegex=Wo,dr.weekdaysMinRegex=Ko,dr.isPM=ee,dr.meridiem=re,Se(\"en\",{eras:[{since:\"0001-01-01\",until:1/0,offset:1,name:\"Anno Domini\",narrow:\"AD\",abbr:\"AD\"},{since:\"0000-12-31\",until:-1/0,offset:1,name:\"Before Christ\",narrow:\"BC\",abbr:\"BC\"}],dayOfMonthOrdinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var o=a%10;return a+(1===ca(a%100/10)?\"th\":1===o?\"st\":2===o?\"nd\":3===o?\"rd\":\"th\")}}),n.lang=T(\"moment.lang is deprecated. Use moment.locale instead.\",Se),n.langData=T(\"moment.langData is deprecated. Use moment.localeData instead.\",Me);var Br=Math.abs;function fr(){var a=this._data;return this._milliseconds=Br(this._milliseconds),this._days=Br(this._days),this._months=Br(this._months),a.milliseconds=Br(a.milliseconds),a.seconds=Br(a.seconds),a.minutes=Br(a.minutes),a.hours=Br(a.hours),a.months=Br(a.months),a.years=Br(a.years),this}function Vr(a,o,e,n){var i=Nn(o,e);return a._milliseconds+=n*i._milliseconds,a._days+=n*i._days,a._months+=n*i._months,a._bubble()}function Tr(a,o){return Vr(this,a,o,1)}function pr(a,o){return Vr(this,a,o,-1)}function Or(a){return a<0?Math.floor(a):Math.ceil(a)}function Rr(){var a,o,e,n,i,r=this._milliseconds,t=this._days,l=this._months,b=this._data;return r>=0&&t>=0&&l>=0||r<=0&&t<=0&&l<=0||(r+=864e5*Or(Dr(l)+t),t=0,l=0),b.milliseconds=r%1e3,a=sa(r/1e3),b.seconds=a%60,o=sa(a/60),b.minutes=o%60,e=sa(o/60),b.hours=e%24,t+=sa(e/24),l+=i=sa(Nr(t)),t-=Or(Dr(i)),n=sa(l/12),l%=12,b.days=t,b.months=l,b.years=n,this}function Nr(a){return 4800*a/146097}function Dr(a){return 146097*a/4800}function Lr(a){if(!this.isValid())return NaN;var o,e,n=this._milliseconds;if(\"month\"===(a=na(a))||\"quarter\"===a||\"year\"===a)switch(o=this._days+n/864e5,e=this._months+Nr(o),a){case\"month\":return e;case\"quarter\":return e/3;case\"year\":return e/12}else switch(o=this._days+Math.round(Dr(this._months)),a){case\"week\":return o/7+n/6048e5;case\"day\":return o+n/864e5;case\"hour\":return 24*o+n/36e5;case\"minute\":return 1440*o+n/6e4;case\"second\":return 86400*o+n/1e3;case\"millisecond\":return Math.floor(864e5*o)+n;default:throw new Error(\"Unknown unit \"+a)}}function Gr(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*ca(this._months/12):NaN}function zr(a){return function(){return this.as(a)}}var kr=zr(\"ms\"),Ir=zr(\"s\"),Er=zr(\"m\"),jr=zr(\"h\"),qr=zr(\"d\"),Fr=zr(\"w\"),_r=zr(\"M\"),Ur=zr(\"Q\"),yr=zr(\"y\");function Zr(){return Nn(this)}function wr(a){return a=na(a),this.isValid()?this[a+\"s\"]():NaN}function Yr(a){return function(){return this.isValid()?this._data[a]:NaN}}var Hr=Yr(\"milliseconds\"),xr=Yr(\"seconds\"),Qr=Yr(\"minutes\"),Wr=Yr(\"hours\"),Kr=Yr(\"days\"),Jr=Yr(\"months\"),$r=Yr(\"years\");function Xr(){return sa(this.days()/7)}var at=Math.round,ot={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function et(a,o,e,n,i){return i.relativeTime(o||1,!!e,a,n)}function nt(a,o,e,n){var i=Nn(a).abs(),r=at(i.as(\"s\")),t=at(i.as(\"m\")),l=at(i.as(\"h\")),b=at(i.as(\"d\")),s=at(i.as(\"M\")),c=at(i.as(\"w\")),u=at(i.as(\"y\")),C=r<=e.ss&&[\"s\",r]||r<e.s&&[\"ss\",r]||t<=1&&[\"m\"]||t<e.m&&[\"mm\",t]||l<=1&&[\"h\"]||l<e.h&&[\"hh\",l]||b<=1&&[\"d\"]||b<e.d&&[\"dd\",b];return null!=e.w&&(C=C||c<=1&&[\"w\"]||c<e.w&&[\"ww\",c]),(C=C||s<=1&&[\"M\"]||s<e.M&&[\"MM\",s]||u<=1&&[\"y\"]||[\"yy\",u])[2]=o,C[3]=+a>0,C[4]=n,et.apply(null,C)}function it(a){return void 0===a?at:\"function\"===typeof a&&(at=a,!0)}function rt(a,o){return void 0!==ot[a]&&(void 0===o?ot[a]:(ot[a]=o,\"s\"===a&&(ot.ss=o-1),!0))}function tt(a,o){if(!this.isValid())return this.localeData().invalidDate();var e,n,i=!1,r=ot;return\"object\"===typeof a&&(o=a,a=!1),\"boolean\"===typeof a&&(i=a),\"object\"===typeof o&&(r=Object.assign({},ot,o),null!=o.s&&null==o.ss&&(r.ss=o.s-1)),n=nt(this,!i,r,e=this.localeData()),i&&(n=e.pastFuture(+this,n)),e.postformat(n)}var lt=Math.abs;function bt(a){return(a>0)-(a<0)||+a}function st(){if(!this.isValid())return this.localeData().invalidDate();var a,o,e,n,i,r,t,l,b=lt(this._milliseconds)/1e3,s=lt(this._days),c=lt(this._months),u=this.asSeconds();return u?(a=sa(b/60),o=sa(a/60),b%=60,a%=60,e=sa(c/12),c%=12,n=b?b.toFixed(3).replace(/\\.?0+$/,\"\"):\"\",i=u<0?\"-\":\"\",r=bt(this._months)!==bt(u)?\"-\":\"\",t=bt(this._days)!==bt(u)?\"-\":\"\",l=bt(this._milliseconds)!==bt(u)?\"-\":\"\",i+\"P\"+(e?r+e+\"Y\":\"\")+(c?r+c+\"M\":\"\")+(s?t+s+\"D\":\"\")+(o||a||b?\"T\":\"\")+(o?l+o+\"H\":\"\")+(a?l+a+\"M\":\"\")+(b?l+n+\"S\":\"\")):\"P0D\"}var ct=ln.prototype;return ct.isValid=rn,ct.abs=fr,ct.add=Tr,ct.subtract=pr,ct.as=Lr,ct.asMilliseconds=kr,ct.asSeconds=Ir,ct.asMinutes=Er,ct.asHours=jr,ct.asDays=qr,ct.asWeeks=Fr,ct.asMonths=_r,ct.asQuarters=Ur,ct.asYears=yr,ct.valueOf=Gr,ct._bubble=Rr,ct.clone=Zr,ct.get=wr,ct.milliseconds=Hr,ct.seconds=xr,ct.minutes=Qr,ct.hours=Wr,ct.days=Kr,ct.weeks=Xr,ct.months=Jr,ct.years=$r,ct.humanize=tt,ct.toISOString=st,ct.toString=st,ct.toJSON=st,ct.locale=li,ct.localeData=si,ct.toIsoString=T(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",st),ct.lang=bi,_(\"X\",0,0,\"unix\"),_(\"x\",0,0,\"valueOf\"),ka(\"x\",Na),ka(\"X\",Ga),Fa(\"X\",(function(a,o,e){e._d=new Date(1e3*parseFloat(a))})),Fa(\"x\",(function(a,o,e){e._d=new Date(ca(a))})),n.version=\"2.29.4\",i(We),n.fn=sr,n.min=Xe,n.max=an,n.now=on,n.utc=g,n.unix=cr,n.months=hr,n.isDate=u,n.locale=Se,n.invalid=M,n.duration=Nn,n.isMoment=f,n.weekdays=vr,n.parseZone=ur,n.localeData=Me,n.isDuration=bn,n.monthsShort=Mr,n.weekdaysMin=Pr,n.defineLocale=me,n.updateLocale=he,n.locales=ve,n.weekdaysShort=Ar,n.normalizeUnits=na,n.relativeTimeRounding=it,n.relativeTimeThreshold=rt,n.calendarFormat=yn,n.prototype=sr,n.HTML5_FMT={DATETIME_LOCAL:\"YYYY-MM-DDTHH:mm\",DATETIME_LOCAL_SECONDS:\"YYYY-MM-DDTHH:mm:ss\",DATETIME_LOCAL_MS:\"YYYY-MM-DDTHH:mm:ss.SSS\",DATE:\"YYYY-MM-DD\",TIME:\"HH:mm\",TIME_SECONDS:\"HH:mm:ss\",TIME_MS:\"HH:mm:ss.SSS\",WEEK:\"GGGG-[W]WW\",MONTH:\"YYYY-MM\"},n}()}).call(this,e(51)(a))},422:function(a,o,e){\"use strict\";class n{constructor(){this.USE_VALIDATOR=!1,this.FALLBACK_MARKER_MATCHER=\"\\u0338\\u0350\\u0302\\u030d\\u0305\\u0314\\u034b\\u0342\\u0353\\u0333\\u031c\\u032a\\u031f\\u0321\\u0320\\u0322\\u033b\\u0316\\u0357\\u035d\\u0303\\u0308\\u0339\\u0323\\u0324\\u0319\\u035a\\u0331\\u0347\\u0315\\u0358\\u030f\\u030e\\u0345\\u032c\\u0355\\u0330\\u034d\\u032e\\u0304\\u031b\\u033f\\u0335\\u034c\\u0311\\u0336\\u0343\\u0344\\u0307\\u0306\\u035c\\u0328\\u034e\\u031d\\u0348\\u032b\",this.LOWERCASE_MARKER_MATCHER=\"\\\\p{M}\",this.UPPERCASE_MARKER_MATCHER=\"\\\\P{M}\",this.IS_MARKER_REPLACING_AVAILABLE=!1;try{this.IS_MARKER_REPLACING_AVAILABLE=!!new RegExp(\"(\".concat(this.LOWERCASE_MARKER_MATCHER,\")\"),\"gui\")}catch(a){return}}get(a,o,e){return o.length<=1?this.USE_VALIDATOR?this.diacriticValidatorTrap(a,o):this.diacriticTrap(a,o):Reflect.get(a,o,e)}diacriticTrap(a,o){return o.replace(this.diacriticValidatorTrap(a,o),\"\")}diacriticValidatorTrap(a,o){return this.INSENSITIVE_MARKER_REGEXP}get INSENSITIVE_MARKER_REGEXP(){return new RegExp(this.IS_MARKER_REPLACING_AVAILABLE?\"(\".concat(this.LOWERCASE_MARKER_MATCHER,\")\"):\"([\".concat(this.FALLBACK_MARKER_MATCHER,\"]*)\"),\"gui\")}get INSENSITIVE_MARKER_MATCHER(){return this.IS_MARKER_REPLACING_AVAILABLE?\"[\".concat(this.LOWERCASE_MARKER_MATCHER).concat(this.UPPERCASE_MARKER_MATCHER,\"]*\"):\"[\".concat(this.FALLBACK_MARKER_MATCHER).concat(this.FALLBACK_MARKER_MATCHER.toUpperCase(),\"]*\")}}class i extends n{diacriticTrap(a,o){const e=super.diacriticTrap(a,o).toLowerCase(),n=a.dictionary[e]||\"\";return[...new Set([e,e.toUpperCase(),...n,...n.toUpperCase()])].sort().join(\"\")}}class r extends n{constructor(){super(...arguments),this.USE_VALIDATOR=!0}diacriticValidatorTrap(a,o){const e=o.replace(super.diacriticValidatorTrap(a,o),\"\"),n=a.dictionary[o.toLowerCase()]||\"\";let i=\"\",r=\"\";return(e||n)&&(i=\"[\".concat(e).concat(n,\"]\"),r=this.INSENSITIVE_MARKER_MATCHER,a.isUpperCase(e)&&(i=i.toUpperCase())),new RegExp(\"^\".concat(i).concat(r,\"$\"),\"u\")}}class t extends r{diacriticValidatorTrap(a,o){const{source:e}=super.diacriticValidatorTrap(a,o);return new RegExp(e,\"ui\")}}class l extends n{diacriticTrap(a,o){let e=super.diacriticTrap(a,o);const n=a.dictionary[o.toLowerCase()];return n&&(e+=a.isUpperCase(e)?n.toUpperCase():n),e}}class b{constructor(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.dictionary=a,this.matcher=new Proxy(this,new l),this.insensitiveMatcher=new Proxy(this,new i),this.validator=new Proxy(this,new r),this.insensitiveValidator=new Proxy(this,new t)}matcherBy(a){return[...Object.entries(this.dictionary).filter((o=>{let[e,n]=o;return n&&a.test(e)})).map((a=>{let[o,e]=a;return o+e})),...Object.entries(this.dictionary).filter((o=>{let[e,n]=o;return n&&a.test(e.toUpperCase())})).map((a=>{let[o,e]=a;return(o+e).toUpperCase()}))].join(\"\")}replace(a){return a.replace(/./g,(a=>this[a]))}isUpperCase(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";return a.toLowerCase()!==a}isLowerCase(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";return a.toUpperCase()!==a}}class s extends n{diacriticTrap(a,o){const e=super.diacriticTrap(a,o);if(!e.trim()||1!==e.length)return e;const n=e.toLowerCase(),[i]=Object.entries(a.dictionary).find((a=>{let[o,e]=a;return\"string\"===typeof e&&[o,...e].includes(n)}))||[e];return a.isUpperCase(e)?i.toUpperCase():i}}var c={\"\":\"\\u02b0'\\u02bc\\xb7\\u05f3\"},u={a:\"\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\u0101\\u0103\\u0105\\u01ce\\u01df\\u01e1\\u01fb\\u0201\\u0203\\u0227\\u0250\\u0251\\u0252\\u1d00\\u1d8f\\u1e01\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u2c65\\uff41\",ae:\"\\xe6\\u01e3\\u01fd\\u1d01\\u1d02\\u1d2d\\u1d46\",b:\"\\u0180\\u0183\\u0253\\u0299\\u1d6c\\u1d80\\u1e03\\u1e05\\u1e07\\uff42\",c:\"c\\xe7\\u0107\\u0109\\u010b\\u010d\\u0188\\u023c\\u0255\\u0304\\u1d04\\u1e09\\uff43\",d:\"d\\xf0\\xfe\\u010f\\u0111\\u018c\\u0221\\u0256\\u0257\\u0326\\u1d05\\u1d6d\\u1d81\\u1d91\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\uff44\",db:\"\\u0238\",dz:\"\\u01c6\\u01f3\",e:\"\\xe8\\xe9\\xea\\xeb\\u0113\\u0115\\u0117\\u0119\\u011b\\u01dd\\u0205\\u0207\\u0229\\u0247\\u0259\\u025b\\u1d07\\u1d92\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u2c78\\uff45\",eo:\"\\u1d14\",f:\"f\\u0192\\u1d6e\\u1d82\\u1e1f\\ua730\\ufb00\\uff46\",g:\"\\u011d\\u011f\\u0121\\u0123\\u01e5\\u01e7\\u01f5\\u021d\\u0260\\u0262\\u1d83\\u1e21\\uff47\",h:\"h\\u0125\\u0127\\u021f\\u0266\\u029c\\u02b0\\u0331\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e96\\u2c68\\uff48\",i:\"i\\xec\\xed\\xee\\xef\\u0129\\u012b\\u012d\\u012f\\u0131\\u01d0\\u0209\\u020b\\u0268\\u0269\\u026a\\u0307\\u1d7b\\u1d96\\u1e2d\\u1e2f\\u1ec9\\u1ecb\\uff49\",ij:\"\\u0133\",j:\"j\\u0135\\u01f0\\u0237\\u0249\\u025f\\u0284\\u029d\\u030c\\u1d0a\\uff4a\",k:\"\\u0137\\u0199\\u01e9\\u1d0b\\u1d84\\u1e31\\u1e33\\u1e35\\u2c6a\\ua741\\uff4b\",l:\"l\\u013a\\u013c\\u013e\\u0140\\u0142\\u019a\\u0234\\u026b\\u026c\\u026d\\u029f\\u1d85\\u1e37\\u1e39\\u1e3b\\u1e3d\\u2c61\\uff4c\",lj:\"\\u01c9\",m:\"\\u0271\\u1d0d\\u1d6f\\u1d86\\u1e3f\\u1e41\\u1e43\\uff4d\",n:\"n\\xf1\\u0144\\u0146\\u0148\\u019e\\u01f9\\u0235\\u0272\\u0273\\u0274\\u1d70\\u1d87\\u1e45\\u1e47\\u1e49\\u1e4b\\uff4e\",nj:\"\\u014b\\u01cc\\u0308\",o:\"\\xf2\\xf3\\xf4\\xf5\\xf6\\xf8\\u014d\\u014f\\u0151\\u01a1\\u01d2\\u01eb\\u01ed\\u01ff\\u020d\\u020f\\u022b\\u022d\\u022f\\u0231\\u0254\\u0275\\u1d0f\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u2c7a\\uff4f\",oe:\"\\u0153\",p:\"p\\u01a5\\u01bf\\u0303\\u1d18\\u1d71\\u1d7d\\u1d88\\u1e55\\u1e57\\uff50\",q:\"\\u01a3\\u024b\\u02a0\\uff51\",qp:\"\\u0239\",r:\"\\u0155\\u0157\\u0159\\u0211\\u0213\\u024d\\u027c\\u027d\\u027e\\u0280\\u1d72\\u1d73\\u1d89\\u1e59\\u1e5b\\u1e5d\\u1e5f\\ua75b\\uff52\",s:\"s\\u015b\\u015d\\u015f\\u0161\\u017f\\u0219\\u023f\\u0282\\u0283\\u0329\\u1d74\\u1d8a\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e9b\\ua731\\uff53\",ss:\"\\xdf\",t:\"t\\u0163\\u0165\\u0167\\u01ab\\u01ad\\u021b\\u0236\\u0288\\u1d1b\\u1d75\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e97\\u2c66\\uff54\",u:\"\\xf9\\xfa\\xfb\\xfc\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u01b0\\u01d4\\u01d6\\u01d8\\u01da\\u01dc\\u0215\\u0217\\u0289\\u028a\\u1d1c\\u1d7e\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\uff55\",ue:\"\\u1d6b\",uo:\"\\u0223\",ut:\"\\u1d99\",v:\"\\u028b\\u028c\\u1d20\\u1d8c\\u1e7d\\u1e7f\\u2c71\\u2c74\\uff56\",w:\"\\u0175\\u1d21\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e98\\u2c73\\uff57\",x:\"\\u1d8d\\u1e8b\\u1e8d\\uff58\",y:\"\\xfd\\xff\\u0177\\u01b4\\u0233\\u024f\\u028f\\u1e8f\\u1e99\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\uff59\",z:\"z\\u017a\\u017c\\u017e\\u01b6\\u01b9\\u0225\\u0240\\u0290\\u0291\\u0292\\u1d22\\u1d76\\u1d8e\\u1e91\\u1e93\\u1e95\\u2c6c\\uff5a\"};a.exports=class extends b{constructor(){super();for(var a=arguments.length,o=new Array(a),e=0;e<a;e++)o[e]=arguments[e];const n=Object.freeze((o.length?o:[u,c]).reduce(((a,o)=>[...a,...Object.entries(o)]),[]).reduce(((a,o)=>{let[e,n]=o,i=a.find((a=>{let[o]=a;return o===e}));return i||(i=[e,[]],a.push(i)),i[1]=[...i[1],...n],a}),[]).reduce(((a,o)=>{let[e,n]=o;return Object.assign(Object.assign({},a),{[e]:[...new Set(n)].sort().join(\"\")})}),{}));return Object.defineProperty(this,\"dictionary\",{configurable:!1,enumerable:!1,value:n}),new Proxy(this,new s)}}}}]);","name":"static/js/24.a1cb862a.chunk.js","map":{"version":3,"names":["this","push","module","__webpack_exports__","__webpack_require__","scrollbarSize_size","classnames","classnames_default","n","addEventListener","canUseDOM","ownerDocument","removeEventListener","scrollbarSize","recalc","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useCallbackRef","useEventCallback","useMergedRefs","useWillUnmount","transitionEnd","react","Modal","BootstrapModalManager","Fade","ThemeProvider","jsx_runtime","ModalBody","_ref","ref","className","bsPrefix","as","Component","props","Object","displayName","esm_ModalBody","ModalContext","ModalDialog","contentClassName","centered","size","fullscreen","children","scrollable","dialogClass","concat","fullScreenClass","esm_ModalDialog","ModalFooter","esm_ModalFooter","AbstractModalHeader","ModalHeader","closeLabel","closeButton","esm_ModalHeader","divWithClassName","DivStyledAsH4","ModalTitle","esm_ModalTitle","DialogTransition","timeout","BackdropTransition","Modal_Modal","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","handleHide","isRTL","modalContext","getModalManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","documentElement","clientHeight","paddingRight","undefined","paddingLeft","handleWindowResize","dialog","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","backdropProps","baseModalStyle","display","Provider","value","preventDefault","isAppearing","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","__webpack_module__","d","na","moment__WEBPACK_IMPORTED_MODULE_0__","_marketto_diacritic_remover__WEBPACK_IMPORTED_MODULE_1__","a","Symbol","iterator","i","constructor","fromDate","toDate","o","codeMatcher","data","licenses","province","l","sources","r","Error","Proxy","get","BELFIORE_CODE_MATCHER","test","belfioreToInt","toString","padStart","binaryfindIndex","belfioreCode","locationByIndex","includes","RegExp","Reflect","arguments","length","Math","max","min","b","floor","t","substr","ceil","toUpperCase","charCodeAt","parseInt","belfioreFromInt","String","fromCharCode","decodeDate","ITALY_KINGDOM_BIRTHDATE","add","nameByIndex","indexOf","substring","toArray","scanData","provinces","COUNTRY_CODE_MATCHER","parseProvinces","searchByName","findByName","next","active","config","from","byProvince","cities","CITY_CODE_MATCHER","countries","scanDataSourceIndex","name","scanDataGenerator","done","provinceOrCountry","creationDate","startOf","s","expirationDate","endOf","isAfter","isBefore","c","C","dataSource","g","S","iso3166","Set","has","trim","Array","url","license","licenseUrl","termsAndConditions","authors","freeze","__proto__","DAY","DAYS_30_MONTHS","DAYS_31_MONTHS","HOURS","ISO8601_DATE_TIME","ISO8601_SHORT_DATE","LEAP_MONTH","MILLISECONDS","MINUTES","MONTH","MONTH_DAY","SECONDS","TIME","TIMEZONE","YEAR","u","parseDate","Date","isArray","some","isNaN","UTC","isValid","ymdToDate","m","M","B","A","P","V","v","T","p","R","O","N","h","D","f","L","z","G","CONSONANT_LIST","VOWEL_LIST","OMOCODE_NUMBER_LIST","OMOCODE_NON_ZERO_NUMBER_LIST","OMOCODE_ZERO_LIST","MONTH_LIST","MONTH_30DAYS_LIST","MONTH_31DAYS_LIST","CITY_CODE_LIST","COUNTRY_CODE_LIST","CF_NAME_MATCHER","CF_SURNAME_MATCHER","CF_FULL_NAME_MATCHER","YEAR_MATCHER","LEAP_YEAR_MATCHER","MONTH_MATCHER","DAY_2X_MATCHER","DAY_3X_MATCHER","DAY_29_MATCHER","DAY_30_MATCHER","DAY_31_MATCHER","DAY_MATCHER","MALE_DAY_MATCHER","FEMALE_DAY_MATCHER","MONTH_DAY_MATCHER","FULL_DATE_MATCHER","MALE_FULL_DATE_MATCHER","FEMALE_FULL_DATE_MATCHER","CHECK_DIGIT","CODICE_FISCALE","PARTIAL_CF_NAME_MATCHER","PARTIAL_CF_FULL_NAME","PARTIAL_YEAR","PARTIAL_MONTH_DAY","PARTIAL_FULL_DATE","PARTIAL_BELFIORE_CODE_MATCHER","PARTIAL_CF","K","Q","E","F","U","H","I","J","W","Z","Y","X","k","q","checkDigit","evaluateChar","CRC_MOD","CHAR_OFFSET","evaluateCharGenerator","_this","j","getDay","MAX_MONTH_DAY","getGender","find","genderizeDay","_","y","cfDeomocode","partialCfDeomocode","appyCaseToChar","cfOmocode","split","OMOCODE_BITMAP","slice","join","cfOmocodeId","filter","map","cfToLastName","match","JOLLY_CHAR","cfToFirstName","cfToGender","cfToBirthYear","format","subtract","year","cfToBirthMonth","cfToBirthDay","cfToBirthDate","cfToBirthPlace","isSameOrAfter","cfDecode","firstName","lastName","day","month","date","gender","place","omocodeId","lastNameToCf","replace","charExtractor","padEnd","firstNameToCf","yearToCf","monthToCf","dayGenderToCf","yearMonthDayToDate","parsePlace","dateGenderToCf","getFullYear","getMonth","getDate","placeToCf","encodeCf","_ref2","checkBitmap","charOmocode","toLowerCase","$","w","x","INVALID_DATE","INVALID_DAY","INVALID_DAY_OR_GENDER","INVALID_GENDER","INVALID_NAME","INVALID_PLACE_NAME","INVALID_SURNAME","INVALID_YEAR","super","entries","_ref3","aa","cfLastName","isolatedInsensitiveTailor","cfFirstName","cfYear","deomocode","cfMonth","cfDay","cfDayGender","cfDateGender","cfPlace","codiceFiscale","matcherBy","insensitiveMatcher","toJSON","diff","oa","hasLastName","hasFirstName","hasBirthYear","hasBirthDate","hasGender","hasBirthPlace","hasCRC","matchPersonalInfo","mismatchPersonalInfo","matchLastName","mismatchLastName","matchFirstName","mismatchFirstName","matchBirthDate","isSame","mismatchBirthDate","matchGender","mismatchGender","matchBirthPlace","mismatchBirthPlace","valid","invalid","isLastNameValid","isLastNameInvalid","isFirstNameValid","isFirstNameInvalid","isBirthDateValid","isBirthDateInvalid","isGenderValid","isGenderInvalid","isBirthPlaceValid","isBirthPlaceInvalid","birthDatePlaceMatch","birthDatePlaceMismatch","birthPlaceDateMatch","birthPlaceDateMismatch","exports","hookCallback","hooks","apply","setHookCallback","callback","input","prototype","call","isObject","hasOwnProp","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","isUndefined","isNumber","isDate","arr","fn","res","arrLen","extend","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","fun","len","momentProperties","updateInProgress","copyConfig","to","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","args","argLen","stack","keys","deprecations","deprecateSimple","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","mom","now","output","_calendar","zeroFill","number","targetLength","forceSign","absNumber","abs","zerosToFill","pow","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","localeData","removeFormattingTokens","makeFormatFunction","array","formatMoment","expandFormat","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","defaultLongDateFormat","LTS","LT","LL","LLL","LLLL","_longDateFormat","formatUpper","tok","defaultInvalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","future","past","ss","mm","hh","dd","ww","MM","yy","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","aliases","addUnitAlias","unit","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","sort","isLeapYear","absFloor","toInt","argumentForCoercion","coercedNumber","isFinite","makeGetSet","keepTime","set$1","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","_a","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","_months","isFormat","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","parseTwoDigitYear","getSetYear","getIsLeapYear","createDate","ms","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getSetLocaleDayOfWeek","getSetISODayOfWeek","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower","globalLocale","baseConfig","dayOfMonthOrdinalParse","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","loadLocale","isLocaleNameSane","oldLocale","_abbr","code","getSetGlobalLocale","values","getLocale","defineLocale","abbr","parentLocale","forEach","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","exec","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","weekdayOverflow","curWeek","GG","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","orderLen","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","parts","matches","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","createAdder","direction","period","tmp","isAdding","isString","isMomentInput","isNumberOrStringArray","isMomentInputObject","property","objectTest","propertyTest","properties","propertyLen","arrayTest","dataTypeTest","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","calendarFormat","localInput","isBetween","inclusivity","localFrom","localTo","inputMs","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","toISOString","keepOffset","inspect","prefix","datetime","suffix","zone","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOfDate","isoWeekday","unix","toObject","isValid$2","parsingFlags","invalidAt","creationData","localeEras","eras","_eras","since","until","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","_eraYearOrdinalRegex","abbrPieces","namePieces","narrowPieces","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","isoWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","erasParse","eraYearOrdinalParse","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetMillisecond","getSetSecond","parseMs","getZoneAbbr","getZoneName","proto","createUnix","createInZone","parseZone","preParsePostFormat","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","firstDayOfYear","firstDayOfWeek","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME_SECONDS","TIME_MS","factory","DiacriticAbstractHandler","USE_VALIDATOR","FALLBACK_MARKER_MATCHER","LOWERCASE_MARKER_MATCHER","UPPERCASE_MARKER_MATCHER","IS_MARKER_REPLACING_AVAILABLE","err","receiver","diacriticValidatorTrap","diacriticTrap","char","INSENSITIVE_MARKER_REGEXP","INSENSITIVE_MARKER_MATCHER","DiacriticInsensitiveMatcherHandler","lowerCaseChar","lowerCaseDiacritics","dictionary","DiacriticValidatorHandler","cleanChar","diacritics","charMatcher","markerMatcher","isUpperCase","DiacriticInsensitiveValidatorHandler","DiacriticMatcherHandler","DiacriticMapperCore","validator","insensitiveValidator","regexp","_ref4","text","isLowerCase","DiacriticRemoverHandler","plainChar","_ref5","letter","i18nGlobal","LATIN_DICT","ae","db","dz","eo","ij","lj","nj","oe","qp","ue","uo","ut","_len","dictionaries","_key","mergedDictionaries","reduce","dictMerge","currentDict","accumulator","_ref6","targetSet","_ref7","targetLetter","_ref8","defineProperty","configurable","enumerable"],"sources":["static/js/24.a1cb862a.chunk.js"],"mappings":"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"},"input":"(this[\"webpackJsonpyourfoodcoach\"] = this[\"webpackJsonpyourfoodcoach\"] || []).push([[24],{\n\n/***/ 362:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(5);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ./node_modules/dom-helpers/esm/addEventListener.js\nvar addEventListener = __webpack_require__(85);\n\n// EXTERNAL MODULE: ./node_modules/dom-helpers/esm/canUseDOM.js\nvar canUseDOM = __webpack_require__(43);\n\n// EXTERNAL MODULE: ./node_modules/dom-helpers/esm/ownerDocument.js\nvar ownerDocument = __webpack_require__(45);\n\n// EXTERNAL MODULE: ./node_modules/dom-helpers/esm/removeEventListener.js\nvar removeEventListener = __webpack_require__(126);\n\n// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/scrollbarSize.js\n\nvar scrollbarSize_size;\nfunction scrollbarSize(recalc) {\n  if (!scrollbarSize_size && scrollbarSize_size !== 0 || recalc) {\n    if (canUseDOM[\"a\" /* default */]) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      scrollbarSize_size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n  return scrollbarSize_size;\n}\n// EXTERNAL MODULE: ./node_modules/@restart/hooks/esm/useCallbackRef.js\nvar useCallbackRef = __webpack_require__(83);\n\n// EXTERNAL MODULE: ./node_modules/@restart/hooks/esm/useEventCallback.js\nvar useEventCallback = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/@restart/hooks/esm/useMergedRefs.js\nvar useMergedRefs = __webpack_require__(25);\n\n// EXTERNAL MODULE: ./node_modules/@restart/hooks/esm/useWillUnmount.js + 1 modules\nvar useWillUnmount = __webpack_require__(130);\n\n// EXTERNAL MODULE: ./node_modules/dom-helpers/esm/transitionEnd.js + 1 modules\nvar transitionEnd = __webpack_require__(129);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/@restart/ui/esm/Modal.js + 5 modules\nvar Modal = __webpack_require__(128);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/BootstrapModalManager.js + 3 modules\nvar BootstrapModalManager = __webpack_require__(101);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Fade.js\nvar Fade = __webpack_require__(69);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/ThemeProvider.js\nvar ThemeProvider = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./node_modules/react-bootstrap/esm/ModalBody.js\n\"use client\";\n\n\n\n\n\nconst ModalBody = /*#__PURE__*/react[\"forwardRef\"]((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  bsPrefix = Object(ThemeProvider[\"c\" /* useBootstrapPrefix */])(bsPrefix, 'modal-body');\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Component, {\n    ref: ref,\n    className: classnames_default()(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\n/* harmony default export */ var esm_ModalBody = (ModalBody);\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/ModalContext.js\nvar ModalContext = __webpack_require__(86);\n\n// CONCATENATED MODULE: ./node_modules/react-bootstrap/esm/ModalDialog.js\n\"use client\";\n\n\n\n\n\nconst ModalDialog = /*#__PURE__*/react[\"forwardRef\"]((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    contentClassName,\n    centered,\n    size,\n    fullscreen,\n    children,\n    scrollable,\n    ...props\n  } = _ref;\n  bsPrefix = Object(ThemeProvider[\"c\" /* useBootstrapPrefix */])(bsPrefix, 'modal');\n  const dialogClass = \"\".concat(bsPrefix, \"-dialog\");\n  const fullScreenClass = typeof fullscreen === 'string' ? \"\".concat(bsPrefix, \"-fullscreen-\").concat(fullscreen) : \"\".concat(bsPrefix, \"-fullscreen\");\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n    ...props,\n    ref: ref,\n    className: classnames_default()(dialogClass, className, size && \"\".concat(bsPrefix, \"-\").concat(size), centered && \"\".concat(dialogClass, \"-centered\"), scrollable && \"\".concat(dialogClass, \"-scrollable\"), fullscreen && fullScreenClass),\n    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n      className: classnames_default()(\"\".concat(bsPrefix, \"-content\"), contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\n/* harmony default export */ var esm_ModalDialog = (ModalDialog);\n// CONCATENATED MODULE: ./node_modules/react-bootstrap/esm/ModalFooter.js\n\"use client\";\n\n\n\n\n\nconst ModalFooter = /*#__PURE__*/react[\"forwardRef\"]((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  bsPrefix = Object(ThemeProvider[\"c\" /* useBootstrapPrefix */])(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Component, {\n    ref: ref,\n    className: classnames_default()(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\n/* harmony default export */ var esm_ModalFooter = (ModalFooter);\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/AbstractModalHeader.js\nvar AbstractModalHeader = __webpack_require__(127);\n\n// CONCATENATED MODULE: ./node_modules/react-bootstrap/esm/ModalHeader.js\n\"use client\";\n\n\n\n\n\n\nconst ModalHeader = /*#__PURE__*/react[\"forwardRef\"]((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    closeLabel = 'Close',\n    closeButton = false,\n    ...props\n  } = _ref;\n  bsPrefix = Object(ThemeProvider[\"c\" /* useBootstrapPrefix */])(bsPrefix, 'modal-header');\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(AbstractModalHeader[\"a\" /* default */], {\n    ref: ref,\n    ...props,\n    className: classnames_default()(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\n/* harmony default export */ var esm_ModalHeader = (ModalHeader);\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/divWithClassName.js\nvar divWithClassName = __webpack_require__(46);\n\n// CONCATENATED MODULE: ./node_modules/react-bootstrap/esm/ModalTitle.js\n\"use client\";\n\n\n\n\n\n\nconst DivStyledAsH4 = Object(divWithClassName[\"a\" /* default */])('h4');\nconst ModalTitle = /*#__PURE__*/react[\"forwardRef\"]((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = DivStyledAsH4,\n    ...props\n  } = _ref;\n  bsPrefix = Object(ThemeProvider[\"c\" /* useBootstrapPrefix */])(bsPrefix, 'modal-title');\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Component, {\n    ref: ref,\n    className: classnames_default()(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\n/* harmony default export */ var esm_ModalTitle = (ModalTitle);\n// CONCATENATED MODULE: ./node_modules/react-bootstrap/esm/Modal.js\n\"use client\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Fade[\"a\" /* default */], {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Fade[\"a\" /* default */], {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal_Modal = /*#__PURE__*/react[\"forwardRef\"]((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    style,\n    dialogClassName,\n    contentClassName,\n    children,\n    dialogAs: Dialog = esm_ModalDialog,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    /* BaseModal props */\n\n    show = false,\n    animation = true,\n    backdrop = true,\n    keyboard = true,\n    onEscapeKeyDown,\n    onShow,\n    onHide,\n    container,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    onEntered,\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onExited,\n    backdropClassName,\n    manager: propsManager,\n    ...props\n  } = _ref;\n  const [modalStyle, setStyle] = Object(react[\"useState\"])({});\n  const [animateStaticModal, setAnimateStaticModal] = Object(react[\"useState\"])(false);\n  const waitingForMouseUpRef = Object(react[\"useRef\"])(false);\n  const ignoreBackdropClickRef = Object(react[\"useRef\"])(false);\n  const removeStaticModalAnimationRef = Object(react[\"useRef\"])(null);\n  const [modal, setModalRef] = Object(useCallbackRef[\"a\" /* default */])();\n  const mergedRef = Object(useMergedRefs[\"a\" /* default */])(ref, setModalRef);\n  const handleHide = Object(useEventCallback[\"a\" /* default */])(onHide);\n  const isRTL = Object(ThemeProvider[\"d\" /* useIsRTL */])();\n  bsPrefix = Object(ThemeProvider[\"c\" /* useBootstrapPrefix */])(bsPrefix, 'modal');\n  const modalContext = Object(react[\"useMemo\"])(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return Object(BootstrapModalManager[\"b\" /* getSharedManager */])({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM[\"a\" /* default */]) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > Object(ownerDocument[\"a\" /* default */])(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? scrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? scrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = Object(useEventCallback[\"a\" /* default */])(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  Object(useWillUnmount[\"a\" /* default */])(() => {\n    Object(removeEventListener[\"a\" /* default */])(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = Object(transitionEnd[\"a\" /* default */])(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    Object(addEventListener[\"a\" /* default */])(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    Object(removeEventListener[\"a\" /* default */])(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = Object(react[\"useCallback\"])(backdropProps => /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n    ...backdropProps,\n    className: classnames_default()(\"\".concat(bsPrefix, \"-backdrop\"), backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classnames_default()(className, bsPrefix, animateStaticModal && \"\".concat(bsPrefix, \"-static\"), !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(ModalContext[\"a\" /* default */].Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Modal[\"a\" /* default */], {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal_Modal.displayName = 'Modal';\n/* harmony default export */ var esm_Modal = __webpack_exports__[\"a\"] = (Object.assign(Modal_Modal, {\n  Body: esm_ModalBody,\n  Header: esm_ModalHeader,\n  Title: esm_ModalTitle,\n  Footer: esm_ModalFooter,\n  Dialog: esm_ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n}));\n\n/***/ }),\n\n/***/ 420:\n/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Belfiore */\n/* unused harmony export BelfioreConnector */\n/* unused harmony export BirthMonth */\n/* unused harmony export CFMismatchValidator */\n/* unused harmony export CRC */\n/* unused harmony export CheckDigitizer */\n/* unused harmony export DATE_MATCHER */\n/* unused harmony export DateUtils */\n/* unused harmony export Gender */\n/* unused harmony export Matcher */\n/* unused harmony export Omocodes */\n/* unused harmony export Parser */\n/* unused harmony export Pattern */\n/* unused harmony export VALIDATOR */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return na; });\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(421);\n/* harmony import */ var _marketto_diacritic_remover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(422);\n/**\n * @marketto/codice-fiscale-utils 2.1.1\n * Copyright (c) 2019-2021, Marco Ricupero <marco.ricupero@gmail.com>\n * License: MIT\n * ============================================================\n * CITIES_COUNTRIES uses material from the following authors:\n * Agenzia delle Entrate             -   License: CC-BY 4.0\n * Istituto nazionale di Statistica  -   License: CC-BY 3.0\n * Ministero dell'Interno            -   License: CC-BY 4.0\n */\n\n\n\nfunction n(a) {\n  return a[Symbol.iterator] = () => a, a;\n}\nclass i {\n  constructor(_ref) {\n    let {\n      fromDate: a,\n      toDate: o,\n      codeMatcher: n,\n      data: i,\n      licenses: e,\n      province: l,\n      sources: r\n    } = _ref;\n    if (n && l) throw new Error(\"Both codeMatcher and province were provided to Bolfiore, only one is allowed\");\n    if (o && !a) throw new Error(\"Parameter fromDate is mandatory passing toDate\");\n    return this.fromDate = a, this.toDate = o, this.codeMatcher = n, this.data = i, this.licenses = e, this.province = l, this.sources = r, new Proxy(this, this.constructor);\n  }\n  static get(a, o, n) {\n    if (this.BELFIORE_CODE_MATCHER.test(o)) {\n      const n = this.belfioreToInt(o).toString(32).padStart(3, \"0\");\n      for (const o of a.data || []) {\n        const i = this.binaryfindIndex(o.belfioreCode, n);\n        if (i >= 0) return a.locationByIndex(o, i);\n      }\n    }\n    if (!((a.codeMatcher || a.province) && [\"cities\", \"countries\"].includes(o) || \"byProvince\" === o && (a.codeMatcher instanceof RegExp && a.codeMatcher.test(\"Z000\") || a.province))) return Reflect.get(a, o, n);\n  }\n  static binaryfindIndex(a, o) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length - 1;\n    if (!a.length) return -1;\n    const e = Math.max(n, 0),\n      l = Math.min(i, a.length - 1),\n      r = l - e + 1;\n    if (e > l || r % o.length) return -1;\n    const b = e + Math.floor(r / (2 * o.length)) * o.length,\n      t = a.substr(b, o.length);\n    return t === o ? Math.ceil((b + 1) / o.length) - 1 : o > t ? this.binaryfindIndex(a, o, b + o.length, l) : this.binaryfindIndex(a, o, e, b - 1);\n  }\n  static belfioreToInt(a) {\n    const o = a.toUpperCase();\n    return 1e3 * (o.charCodeAt(0) - 65) + parseInt(o.substr(1), 10);\n  }\n  static belfioreFromInt(a) {\n    const o = Math.floor(a / 1e3);\n    return \"\".concat(String.fromCharCode(o + 65)).concat(a.toString().substr(-3).padStart(3, \"0\"));\n  }\n  static decodeDate(o) {\n    const n = parseInt(o, 32);\n    return moment__WEBPACK_IMPORTED_MODULE_0__(this.ITALY_KINGDOM_BIRTHDATE).add(n, \"days\");\n  }\n  static nameByIndex(a, o) {\n    if (\"string\" != typeof a) throw new Error(\"[BelfioreConnector.nameByIndex] Provided list is not a string\");\n    if (!a.length) throw new Error(\"[BelfioreConnector.nameByIndex] Provided list empty\");\n    let n = 0,\n      i = a.indexOf(\"|\", n + 1),\n      e = o;\n    for (; e > 0 && i > n;) e--, n = i + 1, i = a.indexOf(\"|\", n + 1);\n    if (o < 0 || e > 0) throw new Error(\"[BelfioreConnector.nameByIndex] Provided index \".concat(o, \" is out range\"));\n    return !e && i < 0 ? a.substring(n) : a.substring(n, i);\n  }\n  toArray() {\n    return [...this.scanData()];\n  }\n  get provinces() {\n    return this.province ? [this.province] : this.codeMatcher !== i.COUNTRY_CODE_MATCHER ? this.parseProvinces() : [];\n  }\n  searchByName(a) {\n    return a ? [...this.scanData(a)] : null;\n  }\n  findByName(a) {\n    if (!a) return null;\n    const o = new RegExp(\"^\".concat(a, \"$\"), \"i\");\n    return this.scanData(o).next().value;\n  }\n  active() {\n    let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : moment__WEBPACK_IMPORTED_MODULE_0__();\n    return new i({\n      ...this.config,\n      fromDate: moment__WEBPACK_IMPORTED_MODULE_0__(o),\n      toDate: moment__WEBPACK_IMPORTED_MODULE_0__(o)\n    });\n  }\n  from() {\n    let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : moment__WEBPACK_IMPORTED_MODULE_0__();\n    return new i({\n      ...this.config,\n      fromDate: moment__WEBPACK_IMPORTED_MODULE_0__(o)\n    });\n  }\n  byProvince(a) {\n    if (\"string\" == typeof a && /^[A-Z]{2}$/u.test(a)) return new i({\n      ...this.config,\n      codeMatcher: void 0,\n      province: a\n    });\n  }\n  get cities() {\n    return new i({\n      ...this.config,\n      codeMatcher: i.CITY_CODE_MATCHER,\n      province: void 0\n    });\n  }\n  get countries() {\n    return new i({\n      ...this.config,\n      codeMatcher: i.COUNTRY_CODE_MATCHER,\n      province: void 0\n    });\n  }\n  get config() {\n    const {\n      codeMatcher: a,\n      data: o,\n      fromDate: n,\n      licenses: i,\n      sources: e,\n      toDate: l\n    } = this;\n    return {\n      codeMatcher: a,\n      data: o,\n      fromDate: n,\n      licenses: i,\n      sources: e,\n      toDate: l\n    };\n  }\n  *scanDataSourceIndex(a, o) {\n    if (o) for (let n = 0, i = 0; n < a.name.length; i++) {\n      const e = a.name.indexOf(\"|\", n + 1) + 1 || a.name.length,\n        l = a.name.substring(n, e - 1);\n      o.test(l) && (yield i), n = e;\n    } else {\n      const o = a.belfioreCode.length / 3;\n      for (let a = 0; a < o; a++) yield a;\n    }\n    return -1;\n  }\n  scanData(a) {\n    return n(this.scanDataGenerator(a));\n  }\n  *scanDataGenerator(a) {\n    const o = \"string\" == typeof a ? new RegExp(a, \"i\") : a;\n    for (const a of this.data) {\n      const n = this.scanDataSourceIndex(a, o);\n      for (let o = n.next(); !o.done; o = n.next()) {\n        const n = o.value,\n          i = this.locationByIndex(a, n);\n        i && (yield i);\n      }\n    }\n    return null;\n  }\n  locationByIndex(a, o) {\n    const n = 3 * o;\n    if (a.belfioreCode.length - n < 3) return null;\n    const e = parseInt(a.belfioreCode.substr(n, 3), 32),\n      l = i.belfioreFromInt(e),\n      r = a.provinceOrCountry.substr(2 * o, 2);\n    if (this.province && this.province !== r || this.codeMatcher && !this.codeMatcher.test(l)) return null;\n    const b = 4 * o,\n      t = i.decodeDate((a.creationDate || \"\").substr(b, 4) || \"0\").startOf(\"day\"),\n      s = i.decodeDate((a.expirationDate || \"\").substr(b, 4) || \"2qn13\").endOf(\"day\");\n    if (this.fromDate && a.expirationDate && this.fromDate.isAfter(s, \"day\") || this.toDate && a.creationDate && this.toDate.isBefore(t, \"day\")) return null;\n    const c = i.nameByIndex(a.name, o),\n      C = parseInt(a.dataSource, 32).toString(2).padStart(2 * a.belfioreCode.length / 3, \"0\").substr(2 * o, 2),\n      g = this.licenses[parseInt(C, 2)],\n      S = {\n        belfioreCode: l,\n        creationDate: t.toDate(),\n        dataSource: g,\n        expirationDate: s.toDate(),\n        name: c\n      };\n    return \"Z\" === l[0] ? {\n      ...S,\n      iso3166: r\n    } : {\n      ...S,\n      province: r\n    };\n  }\n  parseProvinces() {\n    const a = new Set();\n    for (const o of this.data) {\n      const n = this.scanDataSourceIndex(o);\n      for (let e = n.next(); !e.done; e = n.next()) {\n        const n = e.value,\n          l = o.provinceOrCountry.substr(2 * n, 2);\n        if (!a.has(l)) {\n          const e = parseInt(o.belfioreCode.substr(3 * n, 3), 32),\n            r = i.belfioreFromInt(e);\n          i.CITY_CODE_MATCHER.test(r) && l.trim() && a.add(l);\n        }\n      }\n    }\n    return Array.from(a);\n  }\n}\ni.ITALY_KINGDOM_BIRTHDATE = \"1861-01-01\", i.BELFIORE_CODE_MATCHER = /^[A-Z]\\d{3}$/iu, i.CITY_CODE_MATCHER = /^[A-Y]\\d{3}$/iu, i.COUNTRY_CODE_MATCHER = /^Z\\d{3}$/iu;\nconst e = new i({\n    data: [{\n      belfioreCode: \"oghognoguohfoi5ol2\",\n      dataSource: \"1al\",\n      expirationDate: \"1f2k1ebp1j051en61k2d1ebp\",\n      name: \"Cecoslovacchia|Repubblica Democratica Tedesca|Repubblica Socialista Federale di Jugoslavia|Unione Sovietica|Serbia e Montenegro|Yemen del Sud\",\n      provinceOrCountry: \"  DDYUSU  YD\"\n    }, {\n      belfioreCode: \"ogcogdogeogfoggogiogjogkoglogmogoogpogqogrogsogtogvoh0oh1oh2oh3oh5oh6oh7oh8oh9ohaohbohcohdoheohiohjohkohoohpohqohsohtohuoi1oi2oi3oi4oi6oi7oi8oi9ojgojjojkojlojmojnojoojpojqojrojtojuojvok0ok1ok3ok4ok6ok7ok8ok9okaokbokcokdokgokhokiokjokkoklokookpokqokrokuokvol0ol1ol3ol4ol5ol6ol7ol8ol9olaolbomkomlommompomqomromsomtomuomvon0on1on2on3on4on5on6on7on8on9onaondoneonfongonhonionjonkonlonmonnonoonponqonronsontonuonvoo0oo1oo3oo4oo5oo7oo8oo9ooaooboodooeoofoohoooopooppopqopropsostosuosvot0ot1ot2ot3ot5ot6ot7ot8otaotbotcotfotiotkotlotmotnotootpotqotrotsottp00p01p02p03p04p05p06p08p09p0ap0bp0cp0dp0ep34p37p38p3fp3hp3kp3np3qp3rp3sp3up40p41p42p43p44p45p46p47p9j\",\n      dataSource: \"1alalal\",\n      name: \"Albania|Andorra|Austria|Belgio|Bulgaria|Stato della Città del Vaticano|Danimarca|Isole Fær Øer|Finlandia|Francia|Germania|Gibilterra|Regno Unito|Grecia|Irlanda|Islanda|Liechtenstein|Lussemburgo|Malta|Isola di Man|Monaco|Norvegia|Paesi Bassi|Polonia|Portogallo|Romania|San Marino|Spagna|Svezia|Svizzera|Ungheria|Ucraina|Bielorussia|Moldova|Estonia|Lettonia|Lituania|Macedonia del Nord|Croazia|Slovenia|Bosnia-Erzegovina|Federazione russa|Slovacchia|Repubblica ceca|Serbia|Montenegro|Kosovo|Palestina|Afghanistan|Arabia Saudita|Bahrein|Bhutan|Myanmar/Birmania|Brunei Darussalam|Cambogia|Sri Lanka|Cina|Cipro|Corea del Sud|Corea del Nord|Emirati Arabi Uniti|Filippine|Taiwan|Giappone|Giordania|India|Indonesia|Iran|Iraq|Israele|Kuwait|Laos|Libano|Maldive|Mongolia|Nepal|Oman|Pakistan|Qatar|Siria|Thailandia|Timor Leste|Turchia|Yemen|Malaysia|Singapore|Bangladesh|Vietnam|Armenia|Azerbaigian|Georgia|Kazakhstan|Kirghizistan|Tagikistan|Turkmenistan|Uzbekistan|Namibia|Algeria|Angola|Burundi|Camerun|Capo Verde|Repubblica Centrafricana|Ciad|Comore|Congo|Repubblica Democratica del Congo|Costa d'Avorio|Benin|Etiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Guinea equatoriale|Kenya|Liberia|Libia|Madagascar|Malawi|Mali|Marocco|Mauritania|Maurizio|Mozambico|Niger|Nigeria|Egitto|Zimbabwe|Ruanda|Sahara occidentale|Sant'Elena|Sao Tomé e Principe|Seychelles|Senegal|Sierra Leone|Somalia|Sudafrica|Sudan|Eswatini|Togo|Tunisia|Uganda|Burkina Faso|Zambia|Tanzania|Botswana|Lesotho|Gibuti|Eritrea|Bermuda|Canada|Groenlandia|Saint Pierre e Miquelon|Stati Uniti d'America|Aruba|Bahamas|Costa Rica|Cuba|Repubblica Dominicana|El Salvador|Giamaica|Guatemala|Haiti|Honduras|Belize|Messico|Nicaragua|Panama|Isole Turks e Caicos|Barbados|Grenada|Isole Vergini britanniche|Dominica|Santa Lucia|Saint Vincent e Grenadine|Anguilla|Isole Cayman|Montserrat|Antigua e Barbuda|Saint Kitts e Nevis|Argentina|Bolivia|Brasile|Cile|Colombia|Ecuador|Guyana|Suriname|Isole Falkland (Malvine)|Paraguay|Perù|Trinidad e Tobago|Uruguay|Venezuela|Australia|Isole Cook (NZ)|Figi|Isole Marshall|Nauru|Nuova Caledonia|Nuova Zelanda|Isole Pitcairn|Polinesia francese|Isole Salomone|Samoa|Tonga|Wallis e Futuna|Papua Nuova Guinea|Kiribati|Tuvalu|Vanuatu|Palau|Stati Federati di Micronesia|Sud Sudan\",\n      provinceOrCountry: \"ALADATBEBGVADKFOFIFRDEGIUKGRIEISLILUMTIMMCNONLPLPTROSMESSECHHUUABYMDEELVLTMKHRSIBARUSKCZRSME  PSAFSABHBTMMBNKHLKCNCYKRKPAEPHTWJPJOINIDIRIQILKWLALBMVMNNPOMPKQASYTHTLTRYEMYSGBDVNAMAZGEKZKGTJTMUZNADZAOBICMCVCFTDKMCGCDCIBJETGAGMGHGNGWGQKELRLYMGMWMLMAMRMUMZNENGEGZWRWEHSHSTSCSNSLSOZASDSZTGTNUGBFZMTZBWLSDJERBMCAGLPMUSAWBSCRCUDOSVJMGTHTHNBZMXNIPATCBBGDVGDMLCVCAIKYMSAGKNARBOBRCLCOECGYSRFKPYPETTUYVEAUCKFJMHNRNCNZPNPFSBWSTOWFPGKITVVUPWFMSS\"\n    }, {\n      belfioreCode: \"00200300900b00c00l00v01401a01e01v02202e02f02m02q02v03303803i04504c04e04g04k04n04o05805905a06706h06j06k06l06r07n07o07q08408k08l08n09109a09j09n09s0a20ab0ag0am0at0b10b40bc0bq0bt0cb0ck0cm0co0cq0cr0d00d10d40da0dc0dq0e20e80e90el0f30fd0fi0fk0fo0fp0fu0g10gc0gv0h10h40hc0he0hf0hj0i60i70i90ij0ik0im0iq0j00jg0jj0jp0jv0k10k20k40k80k90ke0kj0l30l70l80la0ld0lg0ll0ln0m70mb0mj0mk0mm0mn0n80nh0ni0nm0nv0om0ot0p30p60p70p80pm0po0ps0q10q60q70q80qq0qu0r10r20r30r40r50r70r90ro0rq0s30s40s50sb0sc0sj0sl0sr0ss0su0sv0t00t50t70t80tf0tn0u60u70u90uk0up0v20v50vc0vj0vl0vu10310f10l10n10s10t11311411911a11g11i11m12112412512712812f12k12p13213513713d13f13g13j13k13q13s13v14314b14c14g14m14p15115215515615m15o15q15r16616816a16p16s16t17417517917c17f17p17t18318a18b18i18s19419619819919d19m19r19s19u19v1a01a31a41a91af1as1at1ba1bp1bv1c61cd1ce1cu1d91de1dg1di1dj1e61e71e81ef1eg1eh1en1ev1f41fd1fe1fj1g91gb1go1h01h31h71hf1hh1hs1hv1i01i11ib1ie1im1ip1j61jk1jm1jp1k11k41k91l41l61lh1li1lp1m01m91mb1mj1mm1mn1mp1mt1n11n41na1nd1nf1nq1o11o81oe1oj1om1ot1p71p91pa1pj1ps1pv1q71qi1qs1rk1rl1s61sm1tc1ti1tl1tn1to1tv1u81ub1uh1ul1v01vd1vr20d20k20n20t21721j22022c22j22k22q22s23023223723j23k23o23r24324424624f24g24h24k25u26926g26o27527927n27r28128m28t29e29j29m29q29u29v2a62ab2an2at2b12b22bg2bn2bp2br2bv2c22cd2ci2ck2cm2cn2cu2d02d12d32d92db2dr2en2eq2eu2f72fi2g22gc2gf2gj2gq2gu2h02h52h92ha2hb2hf2hj2hp2hu2i22ic2in2ja2jb2jf2jq2jv2k02k22k42k62ki2l02l12lb2le2lh2ls2m12m22m92ma2n22n42ne2nf2nl2np2o62o92ob2oc2oe2of2og2oh2oi2ol2oo2oq2pd2pp2pq2q12q92qb2qc2qg2qi2qq2qr2r12r32r42r92rb2rc2rk2ru2s02s12s52s92sh2sl2sm2sn2sq2td2ti2tl2tq2tt2u92uh2un2uo2uv2v72vd2vj2vn2vr2vt30130230830b30c30i30j30p30q31031c31l31q31v32232432a32c32g32h32j32l32m32o32r32s32v33133533633833e33f33n33q34634c34d34f34k34o34p35335935a35g35h35i35k35m35u35v36a36c36i36j36l36o36u36v37537637a37b37c37h37o37q37u38738838938c38e38f38l38v39239339839939a39f39i39m39r39t3a13a43a53a83ac3ad3ah3al3ap3aq3b13b33b83bb3bd3be3bf3bm3bo3bp3c43ca3cm3cn3cp3ct3da3di3dr3ds3dt3dv3e13e53e93ef3eg3f63fb3fk3ft3fv3g03ge3gh3gi3gj3gp3gq3h03h23h43h93hb3hf3hg3hh3hq3i03i93ib3ig3il3ji3jj3k13k43k93ka3kb3kc3ke3kh3kr3kv3l33ls3m23m33mg3mj3mo3mu3n13n83nc3nn3np3nt3nu3o03o63oh3oq3p53p83pf3q43qc3qf3qi3r13r33r53re3ri3s53sh3si3sl3sn3t23ti3u03u33ua3uj3ur3v93vb3vc3vd3vg3vv40340940e40g40l40n40p41141741a41c41m41n42242642e42f42g42l42n42q42u43643j43q43s43u44144n45145645c45j45k45l45m45n45u46546846a46e46f46k46o46r46s46u46v47247447b47o47r48348748948q49149f49k49o49r4a24ab4ao4aq4as4au4b14b44b74bc4bd4bk4bt4bu4cf4cj4cl4cn4cs4d44d94dd4dh4dl4dm4e14e84ec4en4eo4es4f14f44f64f94fa4fm4fp4fr4fs4g14g64g84gb4gk4gn4gq4gs4gt4h14h24h34hd4hh4hi4hn4hr4i04i44ie4ig4io4ip4ir4it4iu4iv4j64j84jd4jg4jh4jl4jn4jo4js4k34k44k54k84kj4kq4kt4ku4l04l64l74l84ld4lo4ls4lt4m24mn4mo4mq4mr4ms4mv4n04ne4nh4np4nt4o34o74oq4ov4p24pd4ph4pk4pu4q74q94qe4qf4qk4qm4r44r64rp4sg4sm4sq4sr4t24t74tc4tf4tg4tp4u04u14u44u64ud4uf4ug4uj4uk4ul4un4v34v64vf50150450850n50u51751851c51h51m51p51t52152b52e52f52k52r52s52v53653b53j53l54454554754g54p55255555655955b55c55g55i55k55m55n55q56256j56m56r56t57557657957i58k58q58u59459h59n59s59u5aj5aq5au5b05b45bd5c15cl5dj5e95eg5ek5ep5ff5fh5g15g35g95gd5gf5gh5gi5gk5gr5gv5he5hj5hr5ht5hu5i35i45i65ii5in5jd5je5jp5jr5jt5jv5k35k85k95ku5l05l25lb5lc5lf5lk5lr5lt5lv5m15m35ma5md5mq5mt5mu5mv5n45nd5nh5nj5nn5nt5o05o85o95oh5ol5ov5p85pg5pp5pq5q15q25qh5qj5ql5r05ru5s15s85sb5sd5sh5sj5t35t45t55t75t95tc5tj5tl5to5tp5tt5u55u95uc5ue5uj5uk5uq5v05vf5vk5vq60u60v61061161461662662862b62d62n62s63663g63t64764t65665965a65i65p65s66566766966k66l67167567767m67s67v68068168968e68m68p68r69869g69j69s6a06a46a66a86aq6b76c56c86c96cb6cg6ck6cm6co6cq6d26d36d76d96dd6di6dl6do6dp6dq6e36e76ep6f96fd6fe6fg6fh6fk6fu6gb6gc6gj6gl6h16h76hc6hd6hi6hk6hl6hn6hq6hr6i36ia6ib6ic6ii6ij6io6ip6is6iu6j36j76jq6jt6jv6kq6l36l86lc6lg6lp6lt6mf6ms6n06nl6ns6nv6o36o66og6oi6ot6p26p46p66pc6pn6q76q86qd6qk6qr6r06r16r46r86rf6rg6rh6rr6rv6s46s76s96sa6sd6se6sh6si6sk6so6sp6sq6sr6t76t86ta6tc6tk6tl6tr6tv6u16u76u86ub6uj6uk6ul6ut6uv6v36v66v96vd6vj6vm6vq6vs6vv70170270370470a70b70d70m70n70p70t71171871h71v72072272772972g72h72j72s72t73e73f73j73q73r73s73v74074174974a74l74q75175475b75h75l75n75o75u76076l76s77577n77r78679179879f79k79q79v7a87ag7am7ap7ar7bn7bp7bs7bu7bv7c57cb7cj7co7cr7cu7d27d37dc7dd7dg7dj7dl7dt7e07e37e87ea7ek7el7em7eo7f07f17f37f57f87fc7ff7fg7fk7g07g57gc7gh7gi7gp7gt7gv7h67h97ha7hg7hp7hs7ht7hu7i37i47i67i77ii7j07k97km7ko7kt7l97le7ln7lo7lq7lt7lv7m27m77me7mu7n17n47n57n77nb7nl7ns7nu7oa7ob7oc7oe7oi7ou7p07p47pc7pr7pu7q17q67q97qa7qd7qk7ql7qm7r17r67r77r97rc7rf7s07s47s57s67sa7se7sh7sj7sl7sn7sr7su7t47t57t87ta7tg7tv7u67uv7v17v77vk7vq80380880c80h80j80q80u80v81281381581b81f81h81l81m81q81s82182d82e82g82t83983b83f83p84e84i84k84n84p84t85385685h85q85r85v86186286386b86e86m87387b87o87u88288888a88b88q89189889b89f89k89m89p89t8a18a28a38a48a58a68ac8ad8ag8au8b38b68b88bd8bg8bo8bs8bu8bv8c38c78c88cb8ck8d88d98db8dc8df8du8ea8ei8ep8eu8f08f28f88fm8g68g98gf8gi8gr8gt8h18h48ha8ho8hq8hr8hs8hu8i08i18i28i48i58i88ig8io8ir8j78jb8je8jg8ji8k18k28k38k48k58ka8kd8ke8kr8l68li8lj8lp8m18m28m48mh8mj8mo8n38n58nc8ng8no8nu8o18o78ob8oc8oj8on8or8os8otantao4aodaokaolaopap1ap3ap4ap5apbapcapdapeapkapraq0aq4aq5aq7aq8aqjaqkaqnaqqaqraqtar3ar6araarfaroarqartarvas1as5ascasnaspasqasrat2at3atbatsatuau1au8au9av0av2av4avhavsavtb00b0bb0jb0ob0pb1fb1hb1mb1ob21b2ab2db2fb2gb2mb2nb2qb30b38b3ab3bb3db3eb3fb3gb3lb3pb3rb3ub3vb42b43b4db4pb4ub5cb5jb60b61b69b6bb6kb6pb6ub73b75b7gb7ub80b8ab8eb8nb8sb8tb8ub91b97b98ba1ba3baibambaobaqbavbb2bb5bb6bbebbgbbjbbkbblbbtbbubc0bc1bc2bc4bc9bcbbcdbcebcfbcqbcvbd3bd8bdcbdebdfbdhbdlbdpbe2be5be6be9bekbfabfbbfcbfdbffbfgbfhbfjbfnbfobfqbg6bgabgdbgebgfbghbgibgkbgmbgobh5bhabhdbhebhgbhhbhobhvbi9bifbinbiobiubivbj3bjcbjjbjlbjnbjobjvbk6bk7bkabkebkhbklbknbkqbksbkvbl5bljblobmpbn6bnabnkbnobntbo1bo2bo3bo4bo5bo6bo7bo8boebofbohbombotbp0bp2bp4bpabpbbpcbpkbpnbq3bqbbqgbqibqlbr0br1br6br7brebrkbrlbrnbrqbrtbs0bs4bsebslbsqbsvbt0bt1bt3bt6btebuuc0bc0gc0hc0j\",\n      creationDate: \"00of01520pa1002b0quf0lad002b002b002b002b08dr002b002b002b002b0lad0lcu0lcu0152002b0o1500pi002b002b0lcu0lad002b002b002b0lcu002b0lad002b002b0lad002b002b002b00qa0lad0lad002b002b002b0lcu0lad0lcu002b002b002b0lcu0rpq002b002b002b002b002b002b04fq0o52002b002b0i0d0i0d002b0lad0lad0nuc002b0rd3002b02340a0e002b0o1b002b0lcu0lcu002b0lcu002b0234002b002b02tq03ii002b07qb0nrq002b002b002b0o8i002b002b06e5002b0lad0lcu02340bd9002b002b002b002b002b002b002b002b002b002b002b002b02gh002b0lad002b002b0lcu002b002b002b002b002b002b0mfe023400nj0lcu0lcu00mn0h4h002b0lad0oao0lp7002b002b0nvv0lad0lad002b06ub002b02340lcu0lcu002b002b002b002b0lcu002b0o280lad02lu002b002b002b0nuc0lcu002b002b002b0lad0lad002b0lad067c002b0lad002b002b002b00nj0lad002b03th029t02bl002b002b0o2b0lcu002b002b0ihi02340lad002b00of002b0lad0caj002b002b023407kl002b0lad0nv9002b0lcu002b002b0lad002b002b002b00of017l023402340lcu0lcu002b00md00of0lad0q1v002b002b002b002b002b002b002b002b0nvj002b0lcu0lcu002b002b002b0lcu002b02340lad002b02ap002b01bu002b002b0lo602s5002b0guo060b02n6002b0234002b0lad002b07ko002b002b002b002b0lad0lcu002b002b002b0b8501pf109000mu002b002b002b002b002b0lad00qn0ben002b00of00mn00qa00mu0lad002b0lcu067u0lcu0o6g002b0lcu002b002b002b002b0lad0lcu00nc002b002b002b002b002b002b0nvh0lcu002b0lcu0nsh0a360lcu002b00l600mn00nc029t002b0lad002b002b002b002b002b002b002b002b002b0lcu002b002b02fs002b0472002b02340234002b0ocb002b0o7i00md0o15002b002b014d00of0lad002b002b00of002b01bu0lad002b00mn002b002b002b0lad0lad03ii002b0lad002b0o0q002b0lcu002b00sr0lad002b002b0234002b002b03oq002b0o3m00mn034j0lad00md002b002b0o0q0lcu002b002b00o800l600o800o800sr00mn02r9002b04jd02570lad002b00mn0nsl002b002b0lcu002b0lad002b0lcu00tn0lcu0lad002b013j0lad01og0lad0nrn0ocd002b0lad002b0lad0nt7002b002b0lcu0o1400qa00sr002b027k0nr0057i002b0nrq0lad0o1s002b0lcu002b00nu002b0lcu03dc073m0lad00mn02340lad0lad0lad002b002b002b002b0nse0lad002b0lcu002b023402340lad0lcu002b002b0o14002b002b0n2r04gb0lad0lcu002b0lad0lad002b02r902ut002b002b0lad07l30lad03vn06910lad002b002b0lad002b0lad0lad00sr002b002b0lad002b0lad0lad0lcu002b002b002b023410mr002b02340lad002b002b002b04c2002b002b0lad014d0lcu00nu002b06tb0lcu0lad0234002b0b850lad002b002b002b00jl002b0lad0lad0lcu0lcu00of002b002b00l60lad0lad002b002b0lcu02lu002b002b002b0lcu002b02en002b0er7002b0lad002b00mn002b002b0234002b0234002b00o80lad002b0lad0nq6002b002b0ntf002b002b002b0lad0lad0lad0lad002b002b0lad0lad0lad0lcu00sr002b0nub002b002b0lcu0lad002b0sfs0nov002b0lcu0lcu0lcu002b0lad0234002b00js00js0lad002b0lp7002b0lcu002b02fs002b02fs0lcu002b0lcu0ctn0lad002b0lcu002b002b0lad0lad0gbf002b0m4q0lcu002b002b002b002b002b002b00of002b002b002b0lad002b002b0lcu002b023404k90lad002b0lad0nqq02c30234002b002b0obk0lcu0lad0nu90133002b05qt002b031t002b002b09st0lad002b0mh5002b0lcu0lad002b0lad002b0lad002b002b002b0lcu00mn014d0h4h08d90n7s002b0lad04ch0234002b002b080e002b002b0o3q002b0lad002b002b002b0o52017l0lad0lcu002b0lcu0lcu01pf002b0o1r002b002b04jd01kl002b0lad002b0lcu0603002b002b002b002b002b002b002b00of002b002b0s5h0lcu002b0lcu002b002b0lcu002b002b002b002b0lcu014d002b002b002b002b0lcu0lcu00mn002b0234002b0lad002b00of0o2b0lad002b02ap0lad0lcu002b002b002b03ii002b002b0lad0lad0ntf0lad002b002b002b0lad0lcu0lcu0lcu002b002b00q006em002b002b002b002b002b002b002b0lcu02340ntm0lad002b0o690lcu002b002b0lad0b4o0lad0lcu02340lcu0o01002b0oc20o4i00mn002b0lad0lad002b0lcu0lad002b0lad0lcu002b002b0lad002b0lo60lad002b002b0b790lad0lad0nvv002b06qf002b002b0lcu08ul002b0o1r002b0234002b002b002b002b002b0lad002b002b0lad002b002b002b00sr0lcu0lcu0lad0lad002b0nvj0lad002b02340lad002b002b0lcu002b002b00of00mn0lad002b002b002b0lcu002b002b002b00qn0lcu002b0lgg002b0lad002b02340lcu0lcu0lad002b002b002b002b002b0lad0o3802sg002b002b0lad0lad02340lad0lad0lcu0lcu0lad0lad002b002b002b0lad0lad0lad002b0lad02340lad002b0lcu0lad0lad00sr002b002b00qa00ht0lad002b0307002b002b0234002b05mg0lad0lad0lcu0lcu0lad00kv002b002b002b0lad0lad0lcu02340234002b002b0o2t002b002b0lcu02340lad002b0eke002b0nth002b0lad002b086114ip002b0lad002b002b002b0lad1374080e0234002b002b0lad002b002b002b0lad002b0lad0o200lad002b00nj043m03oq0a5m00sr00mu002b0nvv0lad002b002b002b0lad0lad002b013q002b00sr0lad0lad0lad002b045k0lad0ocs002b0lcu0lad002b00l30lcu002b0lad002b0lad0lad002b0lcu00if002b0lu40lcu002b0lcu002b002b002b0lcu02bs002b002b002b002b002b002b002b002b002b002b0lad0lad002b0lcu0234002b002b002b002b0lad02sg0234002b002b0lcu002b002b02s90lcu0lad002b0lad002b0lad02340mg6002b002b0s51002b002b002b002b0lad002b0lad0lad0lad0lad0234002b00of002b002b002b002b002b002b002b0nmg002b00nj002b002b0lad0lcu002b014d052j002b0lad002b00lo0lcu002b002b002b002b002b00of0nof0lad0lcu00qa002b002b0lcu0lcu0lcu002b002b0lad002b06cj02en002b002b002b002b0ock06ub0o0i0lcu0lad002b002b002b0lcu02bs002b002b02c3002b00of0lad002b00o8002b002b002b0ob90lad04tm002b0234002b002b03cc032h002b0lad02fs0lad0lcu00sr00of002b002b002b002b002b002b0o9n002b00qa002b002b00sr0lad002b023400of002b002b002b002b0lcu002b029t002b023402vn0nuo0lad049i0lad002b0lcu00of0ni3002b0lcu002b002b002b0lcu002b002b002b002b0lad0lcu0lad0lcu0lcu0lcu002b0lcu002b002b057i0lcu002b02sg0r170nsh002b00mn0lcu0a4q002b002b002b0lad002b002b0in10lcu002b002b002b0lcu0lcu0lad0lad00l3002b002b0lad0lad0lad0lad002b0oaa0lad002b0lad0lad002b0lad0lad002b002b0lad002b002b0lcu0lad002b0oao0lcu002b0nrg0lad002b002b002b02340234002b002b002b0nuo002b002b002b07tr02340lad02bs002b002b02bs002b0234002b002b0lad01or0lad0234002b0nub00of0lcu002b0lad0lad0lad0lcu01330lad002b002b002b002b0ob8002b0lad02340lad00mu002b0o0q002b0lad0lcu002b002b002b0lad002b07kh07kh0lad052j002b00mn0lad03450nuo002b0nvj0234002b0h4h00mn002b0nr5002b03ii002b002b002b023403070lcu014d00qn0lad00mn0lcu0lad0lad0lad002b0lcu0lad002b002b002b0o37002b002b002b002b002b002b002b002b0lad002b0oc90lcu0lcu002b002b002b002b002b002b0137002b0lcu02tj0lcu0arc0lcu002b00of002b0lcu002b002b0234017l026o0o0q002b002b02340lcu0lcu002b002b0o38002b0lad0o37014d052j0lcu002b00nj0lad002b002b02bs00sr0lad0lad0lcu0nvj0lad002b0lad002b002b002b05so002b002b00qa017l00l600lo03cc0lad01v20lad002b0lad00q0046400nj0lad0np902n30lad0lcu0obh002b02bs00o800md04as02bs0lcu0234002b01pm002b00o800qa0lcu002b00pt002b0lad0lcu002b0lcu0234002b002b002b00pi00qa0lad002b002b0lcu00jl00mn002b06ub002b00pi0nhk0lcu0lad02bs013j0lad052j002b0o7g002b0234002b0o3m00of0lcu00mn0lad002b00sr00lo02ap0nvj0qhf002b00qa002b0adp0nnv0lcu00sr002b0lad0lad002b002b0lcu00nu002b00q00lcu0lad0lad002b00of002b00l60lad002b002b002b0lad00md002b002b00tn002b002b0o37002b002b0lad002b0lad0lcu002b002b0lcu0lcu002b0lcu0lcu002b0lcu002b002b0lad0lad002b0lcu002b00qa0lcu0lad002b0o50002b0lcu002b00o80lad04260lad0lcu002b002b0lad002b0v0c02h8002b0lp7002b002b0lcu0lad002b0298002b002b0lcu0lad0lcu0lad0lcu002b002b002b002b002b002b002b002b002b0lcu0lad002b002b002b002b002b002b002b002b002b002b0lad002b002b0lad00sr002b002b002b002b0lad0o01002b0lad0lcu0lad0o1s0lad0lad002b002b0lad0lcu002b0lad0lad0nti002b0lad0lad002b0lcu002b0lad02340lcu0lad0lad0bd902ut0lad002b0lad002b0lad0lcu002b0lad002b02340lad0lad0lad0lcu0lcu002b002b002b0lad002b0lad002b0nub0lad0lad002b002b0lad0lcu0lcu0lad002b002b0lad002b002b002b03mr002b002b002b002b002b0472002b0lad002b002b0lad002b002b002b002b00pi002b029801pn002b0o9a002b02s90lad002b0lcu02sg0lad0g4u140j002b0234002b002b0lcu0234002b002b0lad0lad0lad002b014d0lcu002b0lcu002b002b002b0lcu002b08c90lad00mu002b0lad0lp70lad0ocn002b0lad0lcu002b0lad02340lad0lad0lad002b023400l6002b002b0o5e002b02340nqr002b0234002b0234002b0lad0lad0lad002b002b002b002b02340lad002b0lad002b0o3h002b0820002b002b0o5203uv0fpn0fpn0lad002b00of00qa002b002b002b002b0lcu00q00lcu0lad002b0lcu0lcu0lcu002b0lad002b0lad0lad002b002b02fs0lad002b0bnq002b0lad002b01pm02s9002b0lad0lad0lad0lad0lad0lad0lad0lad0lcu02ap002b002b0o2t002b0lcu0ns60lad002b002b002b0lad002b0lad0lcu002b002b0lcu0nuu0lad0lad0lcu002b002b002b002b002b002b002b0lad0lcu00md0lcu0lcu002b00nu002b0lad002b0lcu002b0lcu002b002b0lcu0lcu0lad002b0lcu0o9q02340nvv002b002b002b002b0lcu002b002b002b002b0lad002b0sp11fc81h730nns0o5o\",\n      dataSource: \"8\",\n      expirationDate: \"0nuo0o7a0utk0o201nki0o9b1nki0nsm1ofi0mfc0mci0o5o0o1r0o4f0nva0nuo0nuu0utk0o110nr10ucp0o1d0tet0o7i0nqf0o4i0o500nm90o2a0utk1obc0oca1nvv0o1d0o5e0nvj0nm60nm60o1r1n940ntf0o840och0o0r0o0q0o5p0utk0o1e0o3i0n700pa10uc40ntb0o4f0o3q0o7i0nt70o4f0o5e0ul80npg0nkr0nrq0nst0o3h0o9v0o4f0ulp0nst0utk0nup1mtn0oaf0o770udp1obc0nm10o4i0nub0nuu0o750nin0nt70ntj0mci0o110o1s1n941mia0npg0nt80oa111kj0np70np70nst0o6916co0utk1o1e1obc1nki0nse0nsf0o390o8r0o8r0nrg067c0n4s0nsh0ntu0o1s0o290o1d16b00o9a1mjc0o3q0ocs0n701mia0o0i1mjc0rme0o8h0o5o0o710moh0utk0rc81obc0nuu1mtn0urg0och0nu90o5o0uu31l4l0nvk0o3h0o640o371obc0nvv0o0q0nq30nvn0no304c10ns60nsj0uls1l4l0nov0nsj0ni40nt20ul60utk0nst0nst0ntb1n940o4f0nup0o9v0n700nq41n940nu40nss0nrg0nvk0o010pq81mjc1obc0o380re10me00uv60o420nq20nqq0o140nov0o650n700ntb0o671n940o5e0nve0nve0o8g0o7i0o0f0o840v4e0o7d0o4i0tet0o2t1n941nvv0o3p1mjc0o5o0occ0o5o0o8s0o420o0i0ntv0utk0o201n940utk0nj50nss0o530oba0o7l0nse0nnt0oci12e00ntf0utk0o0d0o2c0o0q0nub19et0o1r0mfe0ntg1n940nov0nvk0o390o2a0nm80n1p1obc0nup0o3q0o3h0nrg03jv0nlc0ntf0ned1ocp0o8h0ntq1obc0mff0nve1n940utk0no10nqq0o000nk50ocs12nn0nqe1nvv0npg0oa00o521nvv0o9b0tet0o0q1obc0nst0obb1n940obv0nvj0ocn1kp81oc90o1t0v1j0rko0utk0n6h0ob80o4i1obc0o8s0utk0nr00nnv02fr02fr0qss0o7k0o3q0uc019et0nsj0utk12dn0nub0nog0o1d0me00nse0nva1obc0o380o4f0ntp0ntb0o5o0nnc0o2t0nuo0o5o0o0i0o0q0ntb0nu90nt10o7j1nvv0o9a0o531fsf1fsf0oaf0vqp0nu40udp0q370v1e02l004i00o0i1nvv16co06r50o0j0o1r0rc81noe0sdl0nm70o501nvv0ntf0obv0o8s0o9h0nsl1mia0oan0o290utk1mia0utk04710nhl0o9n1obc0o371mju0omh0ouu0o7d0ocu0v4v0nm90mfc0o4i1mia0o020o1s0qhq0utk0qb90ob90oci0me00o3i0ocv1nvv0o4g0o140o370nnv0nnv0nhm1nvv0nsm1obc1nki0nqq0utk0o0i0o0r0nu40o420nva0moh0o3m0nst0oco0o3m1nvv1n940ocd0ur00ocu0oca0nvv1n940v3p0no00o280utk15mn1obc0nth0oa01oc911o30nhl0oc00uqr0p9i0uij0o7i0utk0o0f0nbk0nth0utk0mci0scc0mff0nj50nd70o4f0o030o9h0nu40o010nuo0o390v0m1n940o690utk0nva0o0e1oc90nup19et0o1d1mjc0uv60tet0nrq0utk0nsj0ntg0nuu0nlr0ned0o3m0o2a0o711mia1h39083e0o7e0nvk0n2h1n940o0e0ocb0nhk0nhl0oap0ntv0ob90nuo0njf0o380nqc0o9h03mr0nvj0o3m0utk0nvj0nrq0o000nov1l4l0o8q1ocu1n940o7c1lhb0o3q1fpe0o0r0o0h1mtn0ntg0utk1o2o1mjc0n700o4i0o1t0o1s0nsf0nk50oan0no91n940o750o370tch0o1t0o0r0nuo0utk0o140scc0o8r0me00o8s0o140nva0o6h0o0g0o380nsi0ocb0mff0utk0mci1oc91mia1mia0nm90nuo0ntf0oa00o270oda0nvo1n940rpu0nva1ocb1n940o7j0mdc0uun0o7i0ntg1obc1nki0o380nue1mtn0o8r1n940o010nm90o1r0o5e0o650o8r0o0q0nu40o7i0uq00me70me70utk1n940o2c0utk0sfs0o4f0o420o420o370nnp1n941fpe0ocp0nr10npb1mtn0nq30o750nm90o0g1mjc1obc0oco0l360o4i0nua0utk0njk0o7j0ob90utk0nvc0o380ntt0o8q0ntf0obv0utk0o0d0nq30nq30nq30ntg0nuo0o5f0o521mia0o0f02tp0o8s0o2t1obc0nm10nsm1nap0nd71n940nu40o290ugc0o0s1nmd0nqf0o7i0ul80utk1n940v3g1mia0o1e0nhl0nhl0nhl0o2c1nki0ob80o650n400utk0nq41o0u1n940nuv0o9h04in0oce0o2c0o390o3p0utk0o4f0o6g1obc0ntg0sdl0ntg0o5e0nss1nap0o5202fs0s0a0o0h0o200vp30qtt0o030nrd10gg0nse0ub90o020oan0o1t0nvn0nuu0o420o110o0q0uft0o9a0nnv0nnv0o7l0nst0ned02s80utk1obc0oca1nvv0nmu0o011n940mfc1lhb0o841mjc0o0h0u820utk0ob80ntb1mjc1mtn0ntf0o3p0o3p0o4f0tch0o420mci0nt10nvn0obv0o0q0o0d0utk0o531n941nm10nq61n941lhb0mci0uec0mr00o3p0nov0nup19et0v4n0nq60o500o120nvc0njf1n940o140u0d0ocv0o530nt70nvc0o290o0g0utk0o420o660gbf1mia0o180o7k0rv31nvv0o1d0nvj0nvj0nrq0p4k0o000uc80o8s02sj0vqp19et0o7i0o4f1ner0gim0o9h0o1202mc0utk0uvr0mci0utk0uns1nki0mfc0o211n941mia0nf91n941nvv0ntg0utk0nth0nvv0ocv0rk40o420nvk0o0q1mjc1ocp0o9g0ntt0v0m1n9410pg0o750o180o0g0oba0o5e12641n941o0u0nsk0q3h0nun0nuo0nvj1n940nsj0o710nnc0nm10o820oa00nss0o370ntf0ntt0o010o0r1l4l0o031kbu1mju0o1t0o7i1mia0o0d0r690o8p0o6g0oc90o650o3i1ocb0o280nhl0o1s0nr01obc0nu90o0g0nss0nss0nss0nvj0oba1ocu0utk0utk0o9o0ntg1mjc0nst0o1d0o380o8s11210o2u0nrq0o1c0o4f0o290o110mdc0mdc0o3i0o4i0o710ntg0o0q0o7j0o0f0o7j0mff0o9g0o1s0ocq0nth0nnc0nvk19et0nvt0o030nog0obb0n6h0od70oa10o7q0nsj1ocu1mia0nr10o3o02u40ff70o5e0ned0utk0utk0ntg0o280no00o0r0o1d0ned0o4i0o0q1o1e1oc90nno1n7v0vpa0nqu0nue0utk0nd70o5e1obc0nrq1obc0uob1mjc0nvk0o391mia1mia02sl0o4i0nno0nrv0ocp0o4i1nki0s0a0ptd0o4f0qtt0o9v0o7k0n700o0q1l4l0nip0o9b0ugc0o8r0o7i0o290o7j0o7j1ocu0nth0nvv0nov0uns1n940nmh0ob30o0q0oan1n941nki1nvv0o3o0o1s0o1c0o0r0o0r0see0rd10oca0uft1n9419et0o9h0ntb1nki0utk0nst0o4i1mia0o4f0o7e06kt0o0r1n940o140o710utk0oc00ntb1mia0o3h1h390utk0nin1mhd1mhd0nub0nr00rrc0oa002t80oa00odd0mfe0o650o7e0m9v0sp11o1e1h730o6h0no90o3q0o7e1nvv0mfe0obv0o3q0o0h0o520nst0mci0nov1n940ntq1obc0o710o9h0o8s0utk0n700s2e0u3k1nvv16fk0o380mci0o9n0o3n0o8s0mff0nnc0oc30o420oco0nm90ob80o520rr20nr10od70ntg0o2c11210ntb0o150me70nnc0o9g0o0i0oc90nt10o1b0me00o7j0nsk0o750utk0ntg1nki0oco0nm10nsi0nm711t10oca0utk0o7i01oq0o110nss0nss0utk0o8s1mjc1n940nsm0o8s1oc90npg0o8p0o6g0o0q0uld0rv30uu30o0r17f30o010nhl1mjc0utk0nlc0oa00o7i0o1t0obb0o140o9g025c0o5k1obc1nvv1noe0uue0o9n0n700nnv0m8l1nki0nnc1muk1nvv0ouu0nc60o7j0o9v0o000nu40nsf0nsl1obc1nki0o9c0o010nuv12931mia0nq20o380me00o0q0o5e0nbk0ob90obu0o0f0nir0jlm0nhl0nhl048e1nvv1nki1nap0o111n941l4l1n940o4f0nsj0utk1mjc0nlr1nvv19et0o0q01of0r820utk046g1h731nki0o3h0ntg0o370o1t0utk0o420ntf0nnv0ntb0me01mia0nu90utk02c61n940uvs12520nrq0o180mmk0n700o520n4s0o500nuo0o2b03dc0rmr0utk0me00nrv0nvd0utk0nm80ned1nvv0ob80n700o520ob91mtn0p9i0o7e1mia0q9k0nvk0l7h0n2g0o650nup0nuu1n940o6g1ofi0o4f1ncm0npg0o011n940o530uob0utk0obb0uma0o7i0o1s0o1s0o3o0o8s1nap0nm90nvv1obc0uu40o2802sj0n701mjc1mi60o650nlc0n700o370nin1n940o0g0nvc0o531n940nhk0nvl0nno0nub1nki0mfc0utk0o8s0o030o5p0o5p0moh0ntq0ned0r7n0njf0ntb0ntb11vb02te0o1t1nvv0o9g0o820o3m0ucp0o0f0nvt0utk0nrd1nvv1nvv0o9h0o751nvv1nvv0o1c0o1c1mia1obc0o9b0n7011dk0nun16uf1mia0ndv1obc0oa00oam120m02fs0o120o1d0nno0o2t0o8s0nrg0nhl0nss0npg0ned0ocb0o0g0o9g0o8s1n940nn60nuu0mff0nnv0nof0o3o0uc81o2o0o7i0nm20nm21muk0o1s0o640obu0n2r0n460uq00utk0utk0o380oco1obc0o390o141nvv0nog0nuc0nuu0o140o0i0ocn0nqf0nrg0ntu0o380nhk0o7o0o5o1o1e0nnv0hfi0utk1nki0o530nvn0ntf0utk0nnv16fk0uls0ntg0o840uc90ntu0o1b0utk1nvv0o2b18ht04in0o021nm10nub0o9o0o840utk0um70nvl1nki0o9o0mfc0n4s0me01nki0n88051o0och0nnv0o7c0m9v0tch0nvo0o291mtn02ll0n7p1nki0o110o0f0o7e123o0o280ocb0utk0ur00ocv0nin0nua0o0q0nqq0nin0utk1oc903db0tch0fs50nua1n940o4i0n700o0i1mia0o9o0nhk0n4s0utk0o9n0obh0o010nth0o3h0n700oan06hh1iko0utk0o710ntu0nqc0oba1nki0od912e10utk0ocb1o1e0ocn0o4f0o1b0nsj112203db0nlc0o2a1iko0nsj0nhl0gic0sha1mia0np30m9v0nov0uu416fk0npb0n700o641nap1mjc0o3q0nu90o010o9h0o1t0nuv0ntp0utk0o0202c60o970utk0nuc0ned0me70nuc0npg0nvk0o9n1obc1mia0o0i0oc30oam1h390obv0o110nof0o0f0uq11mia0nsi0o9h0o7j0nuu0o420nmu0o1e0o0h0nog1mia0nuu0o380nbk0nss0o2c0ocp0o8r0o3h0no00o420o9g1nki0utk0nuu1n9411220rf30o0i1noe0ocv0o4f1nki0o8s0utk0ocv0n700o4i0nog18hn0fs50nr10oc21mtn02ls0nf91n940noo1mia0npb0nu40o0d0ntg0o4i1mtn0moh0nbk0ntu1obc0nua0o7i0nuo0o500ntg0nvc0utk0nfu1obc0o5g0o5g153h1obc0o2b0o650o710od706kt1n940o111noe0ocq0nvc0o390nsm0nvc0o730o7b11b41mia0o7e0nm80nuo0ulb0mss1n940o530n700nvj0o370nqq0o8s0o7b0ur00no11mtn0oca0o0h1kp80o390ntg0o8s0utk0o7e1n941obc0no20ntf0o010o8r0nuo0nvt0utk0utk0nvl0n401mia1n940o4i0o650o0g0ns60o730nt70o281n940o0r0oca0o7i0urg1l4l1l4l0o380nup0ob90utk0utk1n940nvn0o3o0o8r046v0me00o370oaj0o730o290nhl0nvn0o010oaj0o380o7q0o3p0ntu1n941obc0nov0o0f0o0f0o3h0o9g1mia0o281nvv0uu61mjc0mci0o7e1noe0nu91o0u1mtn0o3h1obc0nok16o50rfc0nlr0ntf1oc91obc0nrq0o8r1n940p9i0o9a0kbv0o3i0rfc19et0ock0nse0o0q0o370ocv0o0j0o831obc0obh1n940utk0nvt0qhf0nu40oan0utk1obc0o1t0on60ocq0mfe0nuv0rhs0rpu0o010oa01obc11o20o8q0rp211c81mjc1oc90njf1mtn1obc0oan0oan0o1t0nt70o2t0o5002641mi60o2b0nsk1n940o381mjc0nsj0o9g0oba0nrq13if0fpo1mjc1mjc0o290pq80rcq0o031mia0nu41oci0nub0o0d0obg0o0g0o7e0ocp19et0o7g0ntb1obc1mtn1nvv0o0r1n9403jv0o3n0o0i0o8s0o6h0o3q0q370o8s1n94141q0mci0o4j0o8s0o7q1nvv16b01n941n941n940nuu0nf90nvn0o7o0ntp0uun0nrq19et0utk0o1c0nu90o380o0f1n940ocb0nvl0utk0o010nu91o0u0udc0ned0ob90o010o7c0o7c0nqr0nqs0nnc0nsf0nq20o7i0utk0o0q0utk0utk0ntf0eqa0oco0p9i0o2a0o3o0ntt0pa10nt10n700o0q0o421obc0o1b0utk11vc0nd70v3l1oci0nn01n9402t50utk0oco0o2c0o1s0nrq1n940nnp0utk1g1l1obc10b411ip\",\n      name: \"Abbadia Sopra Adda|Abbadia Alpina|Abbazia|Abbiateguazzone|Abetone|Acereto|Acquacanina|Acqualunga|Acquarica Del Capo|Acquate|Affori|Agaro|Agnellengo|Agnona|Agrano|Agrone|Aiba|Aidussina|Aiello In Calabria|Aizurro|Albanova|Albaretto Valle Di Macra|Albate|Albegno|Alber Di Sesana|Albes|Albese|Albogasio|Albogno|Albona|Alice Superiore|Alliz|Alluvioni Cambio|Alma|Almazzago|Alone|Alzano Maggiore|Alzano Sopra|Alzate Con Linduno|Amblar|Andogno|Andonno|Andorno Cacciorna|Anfurro|Anicova Corada|Anterselva|Antignana|Antronapiana|Anzino|Apparizione|Apriano|Apuania|Ara|Aranco|Arbizzo|Arcellasco|Arcumeggia|Ardena|Bressana|Arienzo San Felice|Arischia|Arixi|Arizzano Inferiore|Arizzano Superiore|Armio|Armo|Arnago|Bondo Breguzzo|Arolo|Arsia|Arto|Arzene|Arzeno Doneglia|Asnago|Atella Di Napoli|Auditore|Auremo Di Sopra|Aurisina|Auzate|Auzza|Avenone|Avesa|Avuglione E Vernone|Bagaggera|Baggio|Bagnaja|Bagnasco Dasti|Porretta Terme|Casciana Terme|Bagno|Baiedo|Baio Dora|Bairo Torre|Ballabio Inferiore|Ballabio Superiore|Ballarate|Balsamo|Banco|Barbana Distria|Barbarano Vicentino|Barberino Val Delsa|Barchi|Barco|Barcone|Bardassano|Bardino Nuovo|Bardino Vecchio|Baresi|Bargano|Barra|Barsizza|Bartesate|Barza|Barzaniga|Barzola|Baselga Di Vezzano|Baselica Bologna|Bastida De Dossi|Battaglia Della Bainsizza|Bauso|Bavari|Bazzano|Beaulard|Bellagio|Bellizzi Irpino|Bellombra|Belluno Veronese|Bel Prato|Berdo San Giovanni|Bergogna|Bernate Rosales|Berra|Bersezio|Bersone|Beseno|Bersezio Del Quarnaro|Bestagno|Beura|Bevilacqua Boschi|Bezzecca|Biacesa|Biegno|Bieno|Biestro|Bigarello|Biglia|Bigliana|Biglio|Binanuova|Bindo|Bisio|Bisterza|Bizzozero|Bleggio|Bleggio Inferiore|Boara Polesine|Bobbiate|Boccolo De Tassi|Bodio|Bogliasco Pieve|Bogliuno|Bognanco Dentro|Bognanco Fuori|Bogno|Bolbeno|Bolentina|Boleto|Bollone|Bolzaneto|Bondione|Bondo|Bondo Petello|Bonzo|Bordogna|Borghetto San Nicolo|Borghetto|Borgio|Borgoforte|Borgofranco Sul Po|Borgonato|Borgo Panigale|Borgo Santagata|Borgounito|Boriano|Bornate|Bornato|Borsano|Borsea|Borzago|Borzoli|Bosco Valtravaglia|Boscomare|Bosentino|Bottarone|Botticino Mattina|Botticino Sera|Bottrighe|Bousson|Bovile|Bozzana|Bracca Di Costa Serina|Branduzzo|Brazzano|Breccia|Breglia|Breguzzo|Breia|Brembate Di Sotto|Brembilla|Brenno Useria|Sombreno|Brentino|Breonio|Brestovizza In Valle|Bretto|Brianzola|Briga Marittima|Brignano Del Curone|Brione|Brioni Maggiore|Brisino|Brissago|Brovello|Brovida|Brozzi|Brozzo|Bruntino|Brusaschetto|Brusasco Cavagnolo|Buccinigo|Bucuie|Budagne|Buggiolo|Bugiallo|Bugnate|Buie Distria|Bulgorello|Burano|Burgusio|Busana|Buso Sarzano|Bussana|Bussolino Gassinese|Buttogno|Campoverde|Caccia|Ca Dandrea|Caddo|Cadegliano|Cadero Con Graglio|Ca De Stefani|Ca De Tedioli|Ca Di David|Cadignano|Cadine|Cadrezzate|Ca Emo|Cagliano|Cagno|Cajello|Cajonvico|Calavino|Cal Di Canale|Calepio|Calino|Calogna|Calolzio|Calvaruso|Calvi San Nazzaro|Camagna Di Torino|Camairago|Camarda|Camasco|Camignone|Caminata|Caminata In Tures|Camnago Volta|Camnago Faloppia|Camo|Campagnano Vedasca|Campello Monti|Campiglia Cervo|Campo Canavese|Campo|Campochiesa|Campolongo Al Torre|Campolongo Sul Brenta|Camporosso In Valcanale|Campospinoso Albaredo|Campovico|Canale Disonzo|Candeasco|Candelara|Canepa|Canevino|Canezza|Canfanaro|Canneto Di Bari|Cannitello|Canova Del Morbasco|Cansero|Cantonale|Capiago|Capiate|Capitello|Capodistria|Capolago|Caporetto|Capriano Azzano|Capriate Dadda|Capriva Nel Carso|Capronno|Caramagna Ligure|Carate Lario|Carbonara Di Bari|Carbonara Di Po|Carcano|Carciato|Carcina|Cardana|Cardezza|Carella Con Mariaga|Careno|Carezzano Superiore|Cargiago|Carida|Carlazzo Valsolda|Camigna|Carobbio|Caronno Corbellaro|Carpaneta Con Dosimo|Carpasio|Carpignago|Carpugnino|Carrara San Giorgio|Carrara Santo Stefano|Cartari E Calderara|Carugo Arosio|Carzago Della Riviera|Casalba|Casale Cremasco|Casaleggio Castellazzo|Casalorzo Geroldi|Casalpoglio|Casanova Lanza|Casasco Dintelvi|Casez|Casirago|Casletto|Caslino Al Piano|Casnate|Casole Bruzio|Casotto|Cassago|Cassano Albese|Cassano Spinola|Cassina Mariaga|Cassine Gandine|Castagne|Castelbello|Castel Cellesi|Castel Colonna|Casteldarne|Castel De Ratti|Castel Dobra|Castelfranco Di Sopra|Castel Iablanizza|Castel Lambro|Castellammare Adriatico|Castellano|Castellar|Castellaro De Giorgi|Castellavazzo|Castellengo|Castelletto Monforte|Castelletto Po|Castelletto Villa|Castelli Cusiani|Castello Valsolda|Castello Sopra Lecco|Castello|Castello Di Serravalle|Castellone Al Volturno|Castellonorato|Castelluccio|Castelnuovo Distria|Castelponzone|Castelruggiero|Castel San Pietro Monferrato|Castelvecchio Di Santa Maria Maggiore|Castelvero Dasti|Castiglione Dasti|Castiglione Dintelvi|Castiglione Dossola|Castione Veronese|Castrezzone|Cataforio|Catona|Cauria|Cavacurta|Cavaglio San Donnino|Cavaglio Spoccia|Cavallasca|Cavandone|Cave Auremiane|Caversaccio|Covelano|Cavona|Ceconico|Ceglie Del Campo|Ceglie|Celentino|Cellina|Cella Di Bobbio|Celledizzo|Cellio|Cembra|Cenate|Cenate Dargon|Cenesi|Cengles|Cenova|Centa San Nicolo|Centrisola|Cepino|Cerchiate|Cernizza Goriziana|Cernusco Montevecchia|Cerreto Castello|Cerro Lago Maggiore|Cervarolo|Lentiai|Cesello Brianza|Cesi|Cesnola|Ceto Cerveno|Ceves|Challant Saint Anselme Et Challant Saint Victor|Champlas Du Col|Cherso|Chiabrano|Chiaiano Ed Uniti|Chianchetelle|Chiapovano|Chiaravalle Milanese|Chiavazza|Chienis|Chignolo Verbano|Chirignago|Chizzola|Ciago|Ciardes|Cignano|Ciliverghe|Cima|Cimamulera|Cimbergo Paspardo|Cimego|Cinisello|Circhina|Cireggio|Ciseriis|Cismon Del Grappa|Issengo|Cittanova Distria|Civello|Civenna|Cividate Malegno|Civiglio|Cizzago|Clana|Clusane Sul Lago|Clusio|Cobbia|Cocquio|Cognola|Cogolo|Coimo|Coiromonte|Colbordolo|Colcavagno|Colciago|Coldrano|Col Di Rodi|Colfosco|Collagna|Segnacco|Colle In Casies|Collescipoli|Collestatte|Colli In Pusteria|Cologna|Cologna Gavazzo|Cologna In Giudicarie|Colognola Del Piano|Colombaro|Col San Giovanni|Colsano|Comairano|Comano|Comasine|Comeno|Comero|Comezzano|Comnago|Concadirame|Concei|Concenedo|Conco|Condino|Conio|Consiglio Di Rumo|Consonno|Contarina|Contra|Corciago|Coredo|Corenno Plinio|Corgnale|Corigliano Calabro|Cornale|Cornigliano Ligure|Corona|Curon|Correzzo|Cortabbio|Corte|Corti In Pusteria|Cortenedolo|Corteolona|Corteranzo|Corticelle Pieve|Cortile San Martino|Corvara In Passiria|Corzes|Cosbana Del Collio|Cossana|Due Cossani|Cossila|Cossirano|Costa Doneglia|Costasavina|Covelo|Crana Gattugno|Cravegna|Creda|Credera|Cremezzano|Cremnago|Crenna|Crenovizza|Crescenzago|Crespano Del Grappa|Crespellano|Crespina|Cressogno|Creto|Crevenna|Crevola Sesia|Croce|Croce Di Mosso|Crocetta|Crosa|Crosara|Crusinallo|Cuccaro Monferrato|Cunevo|Cuquello|Quarazze|Curdomo|Curnasco|Cursolo|Cursolo Orasso|Cutigliano|Cuzzago|Dagnente|Daone|Dardine|Dare|Darzo|Dasio|Degagna|Deggiano|Dercolo|Dermulo|Descla|Desenzano Al Serio|Desertes|Dezzo Di Scalve|Diano Borello|Diano Calderina|Dignano Distria|Dimaro|Dissimo|Divaccia Grotte Del Timavo|Divaccia San Canziano|Doccio|Dole|Dol Grande|Dol Ottelza|Domusnovas Canales|Don|Donada|Donelasco|Donigala Fenughedu|Donigala Siurgus|Dorsino|Dozio|Draguccio|Drano|Dresenza|Drezzo|Drizzona|Drusacco|Duemiglia|Duino|Dusino|Duttogliano|Elena|Elle|Ellera|Elsane|Endenna|Endine|Enguiso|Eores|Erba Incino|Erbanno|Erpelle Cosina|Ersel In Monte|Escovedu|Esino Inferiore|Esino Superiore|Esio|Esmate|Fabiasco|Fabbrica Durini|Fabbriche Di Vallico|Faetto|Fagnano Sul Naviglio|Falesina|Fallascoso|Falmenta|Famie|Farvengo|Farra Dalpago|Favaro Veneto|Faver|Faverzano|Favogna Di Sotto|Favria Oglianico|Feletto Umberto|Felonica|Fenile|Fenils|Fertilia|Fianona|Fiera Di Primiero|Mirabello Comasco|Figline Valdarno|Figu|Finalborgo|Finale Marina|Finale Pia|Finero|Fiordimonte|Fiorenzuola Di Focara|Fisto|Fiumana|Fiume|Fiumenero|Fiumicello|Flavon|Flecchia|Fleres|Foce|Foiana|Folsogno|Fomarco|Fondra|Fontana Del Conte|Foresto Sesia|Foresto Di Susa|Formignana|Fornero|Forni Di Val Dastico|Forno|Forno|Forno Alpi Graje|Forno Di Zoldo|Forotondo|Fossa Guazzona|Fossarmato|Fosseno|Frascata|Frassinello Olivola|Frassinere|Fraveggio|Frerola|Frignano Maggiore|Frontignano|Frontone Serra|Fuipiano Al Brembo|Fundres|Fusine In Valromana|Gabbioneta|Gabria|Gabrovizza|Gadesco|Gaggino|Gaiola Moiola|Galdo|Gallico|Gallina|Galluzzo|Garabiolo|Gardolo Al Piano|Garegnano|Gargaro|Gattico|Gauna|Gavazzana|Gazzada|Gazzelli|Genzone|Germanedo|Germasino|Gerolanuova|Gerosa|Ghevio|Ionia|Gimino|Ginestreto|Goiaci|Gironico|Giuncugnano|Godovici|Goglione Sopra|Goglione Sotto|Goido|Golese|Goriano|Gorlaprecotto|Gornate Superiore|Gorrino|Gorzone|Gottro|Gozza|Gracova Serravalle|Graglia Piana|Granaglione|Grancona|Grandola|Grauno|Gravedona|Greco Milanese|Gressoney|Gries|Grignano|Grignano Di Polesine|Grimaldo|Grisignana|Grisolia Cipollina|Grona|Groppo|Grotte Santo Stefano|Grumello De Zanchi|Grumello Del Piano|Grumes|Grumo|Guardia Piemontese Terme|Gudon|Guidomandri|Gurone|Iatrinoli|Iavre|Idresca Disonzo|Idria|Idria Di Sotto|Imberido|Incino|Incisa In Val Darno|Indovero|Intimiano|Intra|Introzzo|Inverso Porte|Invorio Inferiore|Invorio Superiore|Inzino|Ioannis|Ipplis|Irgoli Di Galtelli|Ischia|Isola Balba|Isola Comacina|Isola Distria|Isola San Giulio|Isolella|Ivano Fracena|Jerago Con Besnate Ed Orago|Lacinigo|Laglesie San Leopoldo|San Giorgio Di Lago|Lagosta|Laino Bruzio|Lambrate|Lanischie|Lanza|Lanzo Dintelvi|Laorca|Lappago|Lardaro|Lari|Lase|Lasino|Laterina|Laudes|Laurana|Laveno|Lavina|Lazfons|Villabella|Ledine|Legos|Lemna|Lenno|Osmate|Lenzima|Lenzumo|Lesa Belgirate|Lessona|Letojanni Gallodoro|Levrange|Lezza|Libussina|Licignano Di Napoli|Licusati|Lieto Colle|Ligonchio|Ligosullo|Limonta|Linate Al Lambro|Lingueglietta|Linzanico|Lisanza|Lisignago|Lissago|Livemmo|Lizzana|Lizzola|Locadi|Locarno|Locate Bergamasco|Locavizza Di Aidussina|Locavizza Di Canale|Locca|Lodrone|Lomaniga|Lomaso|Lon|Lonato|Longarone|Longiaru|Lorentino|Lorenzana|Lose|Loseto|Lottulo|Loveno Grumello|Loveno Sopra Menaggio|Lover|Lozzo|Lu|Lucernate|Lucinico|Lucino|Ludriano|Lugnacco|Vazia|Luico|Lumezzane Pieve|Lumezzane San Sebastiano|Lumezzane Santapollonio|Lundo|Lusciano E Ducenta|Lusiana|Lussingrande|Lussinpiccolo|Lutago|Luzzogno|Maccagno|Maccagno Inferiore|Maccio|Maderno|Madrano|Madruzzo|Maggianico|Magno Sopra Inzino|Magognino|Magras|Magre|Magre Vicentino|Maia Alta|Maia Bassa|Malborghetto|Malchina|Malgolo|Mallas|Malpotremo|Malvino|Maniglia|Mantana|Manzano|Marano|Maranola|Maranza|Marcellise|Marco|Marcorengo|Maresego|Mareta|Margone|Mariano Al Brembo|Marmorito|Maro Castello|Martina Olba|Masciago Milanese|Masi Di Vigo|Masnago|Mason Vicentino|Massa Fiscaglia|Massama|Massa Superiore|Masse Di San Martino|Masse Di Siena|Mastellina|Mattarello|Matteria|Mattuglie|Mazia|Mazzo Milanese|Mazzoleni E Falghera|Mazzunno|Meano|Meano|Mechel|Medana|Megliadino San Fidenzio|Mel|Melezet|Menarola|Mendatica Montegrosso|Mentoulles|Mercurago|Merna|Mestre|Mestriago|Meugliano|Mezzana Superiore|Mezzani|Mezzano Imer|Mezzegra|Mezzolago|Migiandone|Migliarino|Migliaro|Mignette|Millan Sarnes|Millaures|Milzanello|Minoprio|Miola|Mirabello|Mirabello Ed Uniti Di Pavia|Mizzole|Moano|Mocchie|Moerna|Moiana|Molassana|Molina|Molina Di Ledro|Molini Di Colognola|Molini Di Tures|Molino Alzano|Mollaro|Mollieres|Molo Di Borbera|Montegrazie|Moltedo Superiore|Molvena|Mombello Lago Maggiore|Monasterolo Torinese|Monate|Novello Monchiero|Monclassico|Mondonico|Mondonio|Mondrone|Monghezzo Di Fuori|Montagne|Montalcino|Montalto Ligure|Montalero|Montano Comasco|Montassilone|Monte Di Mezzodi|Monte Di Tramontana|Montecatini Di Val Di Nievole|Montecelio|Montechiaro|Montechiaro Denice|Monte Colombo|Monte Di Capodistria|Montefontana|Montegrino|Montemaggiore Al Metauro|Montenero Didria|Monte Ossolano|Monteponente|Monterado|Montes|Monte San Candido|Montesanto Vigi|Monte San Vito|Montescudo|Montesicuro|Montesilvano Marina|Montespino|Montestrutto|Monte Urabice|Monteveglio|Monteviasco|Montiglio|Montona|Montorio Veronese|Montoro Inferiore|Montoro Superiore|Montrigiasco|Montrone|Montu Berchielli|Morca|Moregnano|Morondo|Morosolo|Mortano|Mortaso|Morter|Mortizza|Moschiena|Mossano|Mosso Santa Maria|Mozzio|Mu|Muceno|Mules|Villa Poma|Murano|Muriaglio|Musadino|Muscoli Strassoldo|Musellaro|Musignano|Musocco|Nacla San Maurizio|Nanno|Nava|Nave San Rocco|Navono|Naz|Negarine|Neresine|Nervi|Nese|Nettunia|Nibbiano|Nicastro|Nigoline|Niguarda|Noarna|Nocco|Nogare|Nomesino|Noriglio|Novacella|Novale|Novareglia|Novate Brianza|Novillara|Nozza|Nuchis|Nuraxinieddu|Olba|Olcio|Olgia|Olgiate Calco|Olginasio|Tavernette|Olivastri|Oltrepovo|Oltresarca|Oltresonzia|Oltressenda Bassa|Oltrona Al Lago|Ombriano|Oneglia|Onies|Onno|Ono Degno|Opacchiasella|Orasso|Orciano Di Pesaro|Oreno|Orezzo|Oriano|Oriano Di Brianza|Orino Azzio|Oris|Orsera|Orta Novarese|Orti|Ossanesga|Ossecca Vittuglie|Ossegliano San Michele|Ossero|Ossolaro|Ossuccio|Padergnone|Padernello|Paderno Cremonese|Paderno Del Grappa|Paganica|Paglieres|Paisco|Palanzo|Palazzo Piverone|Pallanza|Palvareto|Paniqua|Pannone|Pantasina|Papigno|Pare|Parenzo|Parona Di Valpolicella|Parone|Parravicino|Rivolto|Passerano|Paterno Dancona|Patone|Patrignone|Pavone Dalessandria|Pecco|Pecorara|Pedace|Pedanea|Pederzano|Pegli|Pellaro|Pellestrina|Pellio Intelvi|Penzano|Perego|Pergine Valdarno|Perno|Perra|Persico|Persone|Perteole|Peschiera Maraglio|Pessina Valsassina|Pezzoro|Piadena|Piagge|Piaggine Soprane|Pianavia|Pianceri|Pian Dartogne|Pian Di Sco|Piane Sesia|Pian Gaiano|Piani|Piano Porlezza|Piano|Pianura|Piavon|Piazza Santo Stefano|Piazzo|Piazzo Alto|Piazzo Basso|Piediluco|Piedimonte Del Calvario|Pietra Gavina|Pieve Di Coriano|Pievebovigliana|Pieve Dalpago|Pieve Delmona|Pieve Di Bono|Pieve Di Ledro|Ramiseto|Pilcante|Pilzone|Pinguente|Pino Sulla Sponda Del Lago Maggiore|Pione|Piovera|Pirano|Pirri|Piscinola|Piscopio|Pisino|Pissarello|Pistolesa|Piteglio|Pizzocorno|Planol|Planina|Plata|Plezzo|Pliscovizza Della Madonna|Pocrai Del Piro|Podargoni|Podraga|Poggi|Poggio Berni|Poggio Fidoni|Pola|Polengo|Polesine Parmense|Pometo|Poncarale Flero|Pontagna|Ponte Lambro|Pontebba Nova|Pontedecimo|Ponte Di Nossa|Ponticelli|Ponzate|Por|Portese|Porto Dadda|Porto Civitanova|Portole|Porto Maurizio|Porzano|Poscante|Postumia Grotte|Poverio|Povo|Pozza Di Fassa|Pozzo Alto|Pra|Prandaglio|Pranzo|Praso|Prati|Prato Alla Drava|Pratovecchio|Pratovecchio Stia|Pre|Precotto|Pregasina|Preghena|Preglia|Premione|Preore|Presegno|Presicce|Presson|Prestine|Preturo|Prevacina|Prezzo|Priacco|Priero Montezemolo|Primano|Primeglio Schierano|Primiero|Prio|Provaglio Sopra|Provaglio Sotto|Provezze|Prun|Puos Dalpago|Puria|Quaglietta|Quaregna|Quarna|Quarti|Quartiano|Quarto Dei Mille|Virgilio|Quero|Quetta|Quinto Di Valpantena|Quinto Al Mare|Quinzanello|Quinzano Veronese|Quittengo|Raccolana|Radicena|Raffa|Ragoli|Ragusa Ibla|Riscone|Ramo Di Palo|Ramponio|Ramponio Verna|Rancio Di Lecco|Ranziano|Ranzi Pietra|Ranzo|Rasun Di Sopra|Rasun Di Sotto|Retacevo In Monte|Ravellino|Ravina|Rebbio|Redona|Remedello Sopra|Remedello Sotto|Renate Veduggio|Rescalda|Resia|Revere|Reviano Folas|Revigliasco Torinese|Rezzonico|Rhemes|Riclaretto|Ridanna|Rifembergo|Rigosa|Rima San Giuseppe|Rimasco|Rina|Rinco|Rio Nellelba|Rio Marina|Riomolino|Ripalta Nuova|Ripe|Riva Valdobbia|Riva Di Tures|Rivarolo Ligure|Riva Santo Stefano|Rivera|Riviera Dadda|Rivignano|Rivoltella|Ro|Rocca Pietra|Roccacaramanico|Rocca Del Colle|Roccaguglielma|Roccalvecce|Roccapiatta|Rochemolles|Rocchetta Cengio|Rodda|Rodengo|Roditti|Roggiano Valtravaglia|Roio Piano|Romagnano|Romano Brianza|Romans|Romarzolo|Roncogno|Roncone|Rongio|Ronzina|Ronzo|Rosali|Rosciate|Rosingo|Rosora Mergo|Rossano|Rossino|Rota Dentro|Rota Fuori|Rovagnate|Rovate|Rovegro|Rovenna|Rover Carbonare|Roversano|Rovetta Con Fino|Rovigno Distria|Rozzo|Rubbiano|Ruginello|Ruino|Rumianca|Runo|Sabbia|Sabbio Bergamasco|Sabbioncello|Sable Grande|Sacconago|Saga|Sagliano Di Crenna|Sagoria San Martino|Saiano|Sala Al Barro|Salabue|Salcano|Sale Castelnuovo|Salecchio|Saletto|Salice Calabro|Salina|Salona Disonzo|Saltara|Salto|Salvaterra|Samaria|Sambasso|Sambatello|Sambiase|Sambuco Pietraporzio|Sambughetto|Samoclevo|Samo Di Calabria|San Bartolomeo Valmara|San Bernardino|San Daniele Del Carso|San Fedele Intelvi|San Felice Di Scovolo|San Felice|San Francesco Dalbaro|San Gallo|San Germano Dei Berici|San Gervasio Dadda|San Giacomo|San Giacomo|San Giacomo In Colle|San Gillio Torinese|San Giorgio|San Giorgio Di Pesaro|San Giovanni|San Giovanni Alla Castagna|San Giovanni A Teduccio|San Giovanni Battista|San Giovanni Dasso|San Giovanni Di Galermo|San Giovanni Reatino|San Giuseppe Di Casto|Villa San Giuseppe|San Lazzaro Reale|San Lazzaro Alberoni|San Lazzaro Parmense|San Leonardo|San Leucio|San Lorenzo In Banale|San Lorenzo Mondinari|San Lugano|San Marcello Pistoiese|San Martino Al Cimino|San Martino Di Perrero|San Martino Al Monte|San Martino De Calvi|San Martino In Beliseto|San Martino In Casies|San Martino Quisca|San Marzano Moasca|San Marzanotto|San Massimo Alladige|San Michele Dasti|San Michele Prazzo|San Michele In Teverina|San Michele Extra|San Michele Di Postumia|San Nazario|San Novo|San Pancrazio Parmense|San Pantaleo|San Paolo Della Valle|San Paolo Cervo|San Pelagio|San Pier Darena|San Pier Fedele|San Piero A Sieve|San Pietro|San Pietro Di Gorizia|San Pietro A Patierno|San Pietro Del Carso|San Pietro Di Barbozza|San Pietro Di Monterosso|San Pietro Dorzio|San Pietro Irpino|San Ponzo Semola|San Quirico In Val Polcevera|San Sigismondo|San Silvestro|Santabbondio|Santa Croce Di Aidussina|Santeufemia Della Fonte|Santagata Sopra Cannobio|Santagata Irpina|Santa Giulia|Santagostino|Santalbano Di Bobbio|Santa Luce Orciano|Santa Lucia Disonzo|Santa Maddalena In Casies|Santa Margherita Dadige|Santa Margherita Di Bobbio|Santa Margherita|Santa Maria Della Croce|Santa Maria Del Monte|Santa Maria Di Rovagnate|Santa Maria In Prato|Santa Maria In Stelle|Santa Maria Maggiore E Crana|Santa Maria Rezzonico|Santambrogio Olona|Santandrea Di Gorizia|Santandrea Di Vallefredda|Santandrea In Monte|Santangelo In Lizzola|Santantonio Dadda|Santantonio A Trebbia|Santapollinare Con Selva|Santa Valeria|Santeufemia Lamezia|Santicolo|Santilario Ligure|Santino|Zoldo Alto|Santomobono Terme|Santo Spirito Della Bainsizza|Santo Stefano Del Monte Degli Angeli|Santo Stefano Di Briga|San Valentino Al Brennero|San Valentino Alla Mutta|San Vero Congius|San Vigilio|Sanvincenti|San Vincenzo Al Volturno|San Vito E Modesto|San Vito In Monte|San Vito Di Vipacco|Saone|Sardagna|Sarola|Sartirana Briantea|Sassa|Sasso Di Bordighera|Sasso|Sassocorvaro|Savigno|Savoulx|Scaleres|Scaletta Uzzone|Scandeluzza|Scannabue|Scano Al Brembo|Scanzo|Scaria|Scarnafigi Ruffia|Scarperia|Scarpizzolo|Sciaves|Scavolino|Scelmo|Scherbina|Schianno|Schieranco|Scodovacca|Scoppo|Torriana|Scrilla|Sebreghe|Secondigliano|Sedula|Seghebbia|Segno|Segno|Seio|Selino|Sella Delle Trincee|Sellere|Selve Marcone|Senosecchia|Seo|Seppiana|Seprio|Serbariu|Serpenizza|Serra Pedace|Serravalle Dasti|Serravalle Alladige|Serrungarina|Serso|Sesana|Sessant|Sestri Ponente|Sevignano|Sforzatica|Siamanna Siapiccia|Sicci San Biagio|Sili|Silun Montaquila|Sillano|Silvella|Senadole|Siror|Sisini|Sissa|Siurgus|Siviano|Slappe Zorzi|Slingia|Slivia|Smarano|Smeria|Soccavo|Solanas|Solbiate|Solbrito|Solomiac|Solto|Solzago|Somana|Somendenna|Sonzia|Sopramonte|Soprana|Sopraponte|Soprazocco|Sorbano|Sorbolo|Sorbolongo|Sorli|Sovazza|Spadafora San Martino|Spadafora San Pietro|Spera|Spezzano Grande|Spezzano Piccolo|Spinga|Spino Al Brembo|Spinone|Spoccia|Stabello|Staghiglione|Stava|Stazzona Germasino|Stia|Stilves|Storie|Strada|Strambino Romano|Stramentizzo|Strigno|Stropino|Struppa|Stumiaga|Sturia Delle Fusine|Suna|Susa|Tabla|Tagliolo Belforte|Tagliuno|Taio|Tanas|Tapigliano|Tapogliano|Tappia|Tarces|Tarcetta|Tarnova Della Selva|Tarres|Tassullo|Tavarnelle Val Di Pesa|Tavernola San Felice|Tavodo|Tavole|Tavon|Tavordo|Telves|Temenizza|Tenda|Teodone|Teodorano|Teor|Terlago|Termenago|Termon|Ternova Disonzo|Torrenova Di Bisterza|Terrasa|Terrati|Terrazzano|Terres|Terzano|Tesido|Thures|Tiarno|Tiarno Di Sopra|Tiarno Di Sotto|Timoline|Tina|Tiso|Tolmino|Tomadio|Tonadico|Torba|Torbiato|Torra|Torradello|Torrazza|Torre Beretti|Torre Del Mangano|Torre Del Monte|Torre De Ratti|Torre Orsina|Torre Uzzone|Torria|Torriano|Toscolano|Toss|Trabuchello|Traffiume|Transacqua|Trausella|Travedona|Traversa|Traverse|Trebbiano Nizza|Trebecco|Trecasali|Tredossi|Tremenico|Tremezzina|Tremezzo|Trenno|Trens|Trenta|Trenta Disonzo|Treppo Carnico|Tres|Tresche Conca|Tresigallo|Tresilico|Tretto|Trevano|Trevisago|Tribussa|Trichiana|Trivero|Trobaso|Tuenetto|Tuenno|Tunes|Turago Bordone|Turro Milanese|Ugovizza Valbruna|Uggiate|Umago|Unchio|Urio|Ussolo|Ustie|Vaglierano|Vagna|Valas|Vico Canavese|Valchiusella|Valda|Valdarsa|Valgiovo|Valdigna Daosta|Vallalta|Vallarga|Valle Distria|Valle Mosso|Vallelunga|Vallenoncello|Valles|Valle San Felice|Valle San Silvestro|Valle Superiore Mosso|Vallonara|Valloria Marittima|Valmaggia|Valmala|Val Marchirolo|Valprato|Valrovina|Valsaviore|Valsecca|Valstagna|Valtesse|Valvasone|Valverde|Vandoies Di Sopra|Vandoies Di Sotto|Vanga|Vararo|Varengo|Vargo|Varoni|Vas|Vasio|Vassena|Vattaro|Veccana|Veddasca|Velate|Vellano|Vellego|Vello|Venegono|Verderio|Verderio Inferiore|Verderio Superiore|Verdesina|Verezzi|Villa Vergano|Vergano Novarese|Vergemoli|Vergobbio|Vermezzo|Verna|Verpogliano|Verrua Siccomario|Versa|Versciaco|Vertemate|Verteneglio|Vertoiba In Campi Santi|Vertovino|Veruno|Vervo|Vestreno|Vezzano|Vezzano|Vezzi|Vezzo|Vho|Viarago|Viceno|Viconago|Vidolasco|Vigalzano|Viganella|Vigatto|Vigentino|Viggiona|Vignola|Vigo Danaunia|Vigo Di Fassa|Vigolo Baselga|Vigolo Vattaro|Vigo Rendena|Villa Agnedo|Villa Banale|Villabassa Di Senosecchia|Villa Dadige|Villa Castelnuovo|Villa Cogozzo|Villa Corsione|Villa Dallegno|Villa Decani|Villa Del Nevoso|Villa Ottone|Villaguardia|Villalbese|Villanovetta|Villa Rendena|Villa Romano|Villa Santa Caterina|Villa Slavina|Villatalla|Villaviani|Villa Vicentina|Villa Volturno|Villazzano|Ville Del Monte|Ville Montevecchio|Ville San Pietro|Ville San Sebastiano|Villongo San Filastro|Villongo Santalessandro|Vilminore|Vimogno|Vintebbio|Vion|Vipacco|Virle Treponti|Visignano Distria|Visinada|Visino|Viticuso Ed Acquafondata|Vittadone|Vizze|Vocogno E Prestinone|Voissizza Di Comeno|Voldomino|Volosca Abbazia|Voltore|Voltri|Volzana|Voschia|Zambana|Zappello|Zara|Zavattarello Valverde|Zelarino|Zelbio Veleso|Zelo Surrigone|Zeppara|Zibello|Zivido|Zolla|Zorlesco|Zornasco|Zorzino|Zoverallo|Zuclo|Zuri|Valsantamarina|Boville|Mosso|Alme Con Villa|Rasun Valdaora\",\n      provinceOrCountry: \"COTOFUVAPTBZMCBSLECOMINONOVCNOTNGOGOCSCOCECNCOBGTSBZCOCONOPLTOBZALCNTNBSBGBGNOTNTNCNVCBSGOBZPLNONOGEFUMSNOVCVACOVAVAPVCEAQCANONOVABSTNTNVAPLNOPNIMCOCEPUTSTSNOGOBSVRTOCOMIVTALBOPIAQCOTOTOCOCOVAMITNPLVIFIPUBSCOTOSVSVBGMINABGCOVACRVATNPVPVGOMEGEBOTOCOAVROVRBSFUGOCOFECNTNTNFUIMNOVRTNTNVANOSVMNGOGOCOCRCOALFUVATNTNROVAPRVAGEPLNONOVATNTNNOBSGEBGTNBGTOBGIMTNSVMNMNBSBOIMBGGOVCBSVAROTNGEVAIMTNPVBSBSROTOTOTNBGPVGOCOCOTNVCBGBGVABGVRVRGOGOCOCNALTNPLNOVANOSVFIBSBGALTOCOTSGOCOCONOPLCOVEBZREROIMTONOBSTSCRNOVAVACRPVVRBSTNVAROCOCOMIBSTNGOBGBSNOBGMEBNTOLOAQVCBSPCBZCOCOCNVANOBITOTNSVUDVIUDPVSOGOIMPSGEPVTNPLBARCCRCRMICOCOSAPLVAGOBSBGTSVAIMCOBAMNCOTNBSVANOCOCOALNORCCOGOBGVACRIMPVNOPDPDIMCOBSCECRNOCRMNCOCOTNCOCOCOCOCSVICOCOALCOCRTNBZVTANBZALGOARFUPVTETNCNPVBLVCCNPVVCNOCOCOTNBOCBLTPZFUCRSAALIMALALCONOVRBSRCRCBZLONOVBCONOTSCOBZVAGOBAFUTNVAPVTNVCTNBGBGSVBZIMTNBGBGMIGOCOBIVAVCBLCOPGTOBSBZAOTOPLTONAAVGOMIVCTNNOVETNTNBZBSBSCONOBSTNMIGONOUDVIBZPLCOCOBSCOBSFUBSBZGOVATNTNNONOPUATCOBZIMBZREUDBZPGPGBZCOTNTNBGBSTOBZPVTNTNGOBSBSNOROTNCOVITNIMCOCOROCONOTNCOTSCSPVGEGOBZVRCOBGBZBSPVALBSPRBZBZGOTSVAVCBSIMTNTNNONOGOCRBSCOMITSMITVBOPICOTNCOVCCOVCROBIVINOALTNALBZBGBGNOVBPTNONOTNTNTNTNCOBSTNTNTNGOBGTOBGIMIMPLTNNOTSTSVCGOGOGOCATNROPVCACATNCOPLCOGOCOCRTOCRTSALTSLTBZSVFUBGBGTNBZCOBSPLGOCACOCONOBGVACOLUTOMITNCHVBTSBSBLVETNBSBZTOUDMNTOTOCEPLTNCOFICAGEGEGENOMCPSTNFOFUBGUDTNVCBZGEBZNONOBGFUVCTOFENOVINOTNTOBLALCRPVNOALALTOTNBGCEBSPSBGBZUDCRGOGOCRCOCNSARCRCFIVATNMIGONOTOALVAIMPVCOCOBSBGNOCTPLPSGOCOLUGOBSBSPVPRGOMIVACNBSCOGOGONOBOVICOTNCOMIAOBZBGROBZPLCSCOALVTBGBGTNTNCSBZMEVARCTNGOGOGOCOCOFICOCONOLCTONONOBSUDUDNUTNMICOPLNOVCTNMIBZUDTVZACSMIPLMECOCOBZTNPITSTNARBZFUVAIMBZALGOTNCOCOVATNTNNOBIMEBSCOGONASACOREUDCOMIIMCOVATNVABSTNBGMEVCBGGOGOTNTNCOTNTNBSBLBZBGPIGOBACNBSCOTNVAALMIUDCOBSTORIGOBSBSBSTNCEVIPLPLBZNOVAVACOBSTNTNCOBSNOTNBZVIBZBZUDTSTNBZCNALTOBZTNTNLTBZVRTNTOPLBZTNBGALIMSVMITNVAVIFECAROSISITNTNFUFUBZMIBGBSTOTNTNGOPDBLTOSOIMTONOGOVETNTOVAPRTNCOTNNOFEFEMIBZTOBSCOTNFEPVVRIMTOTNCOGECOTNBGBZALTNTOALIMIMVIVATOVACNTNCOALTOBZTNSIIMALCOBZBZBZPTRMBZALRNPLBZVAPUGONOBZANTNBZPGGORNANPEGOTOGOBOVAATPLVRAVAVNOBAPVVCAPVCVAFOTNBZPCFUVIBINOBSVABZMNVETOVAUDPEVAMITSTNCOTNBSBZVRPLGEBGRMPCCZBSMITNNOTNTNTNBZVITOCOPSBSSSCASVCONOCOVATOIMBGTNGOBGVACRIMBZCOBSGONOPUMIBGBSCOVABZPLNORCBGGOGOPLCRCOTNBSCRTVAQCNBSCOTONOCRGOTNIMPGCOPLVRVCCOUDALANTNAPALTOPCCSTOTNGERCVECOCOLCARCNTNCRBSUDBSCOBSCRPUSAIMVCBSARVCBGIMCOTNNATVCOTOBGBGPGUDPVMNMCBLCRTNTNRETNBSPLVAPRALPLCANACZPLPVBIPTPVBZGOBZGOGOGORCGOIMRNRIPLCRPRPVBSBSCOUDGEBGNACOTNBSMIMCPLIMBSBGTSTSTNTNPSGEBSTNTNBZBZARARTNMITNTNNOTNTNBSLETNBSAQGOTNTOCNFUALTNTNBSBSBSVRBLCOAVBINOALMIGEMNBLTNVRGEBSVRBIUDRCBSTNSRBZROCOCOCOGOSVTNBZBZFUCOTNCOBGBSBSMIMIBZMNTNTOCOAOTOBZGOBGVCVCBZALLILIBZCRANVCBZGEIMTOBGUDBSFEVCPEBGFRVTTOTOSVUDBSTSVAAQTNCOGOTNTNTNCOGOTNRCBGALANCSBGBGBGLCVANOCOTNFOBGPLPLCRMIPVNOVAVCBGCOGOVAGOPVFUBSCOALGOTONOPDRCMEGOPUTOROGOGORCCZCNNOTNRCNOCRGOCOBSBZGEBGVIBGBZTNTSTOBZPUBZCONAGESICTPGVCRCIMPCPRBZCETNCRBZPTVTTOBZBGCRBZGOATALVRALCNVTVRTSVIMIPRCAALBITSGERCFIBZGONATSTVCNBGAVPVGEBZCHCOGOBSNOAVSVFEPVPIGOBZPDPVTNCRVACOMIVRNOCOVAUDFRBZPUBGPCROCOCZBSGENOBLBGGOBGMEBZBZCABSPLCBCRTRGOTNTNIMCOAQIMTNPUBOTOBZCNATCRBGBGCOCNFIBSBZPSTNGOVANOUDTSRNGOGONAGOCOSVTNTNBGGOBGBITSTNVBCOCAGOCSALTNPUTNTSALGETNBGCACACAPLLUCRTSTNCAPRCABSGOBZTSTNFUNACACOALTOBGCOCOBGGOTNBIBSBSFOPRPSALNOMEMETNCSCSBZBGBGNOBGPVBZCOARBZTSTNTOTNTNNOGETNGONOTNBZALBGTNBZNOUDNOBZUDGOBZTNFIAVTNIMTNCOBZGOCNBZFOUDTNTNTNGOFUPVCSMITNBSBZTOTNTNTNBSTOBZGOTSTNVABSTNPVIMPVPVPVALPGCNIMPVBSTNBGNOTNTOVACOTOPVPCPRCRLCCOCOMIBZCSGOUDTNVIFERCVICOVAGOBLBINOTNTNBZPVMIUDCOPLNOCOCNGOALNOBZTOTOTNPLBZAOBGBZPLBIBZUDBZTNBZVCVIIMVCCNVATOVIBSBGVIBGPNPVBZBZBZVAALALBNBLTNCOTNVAVAVAPTSVBSVACOLCLCTNSVCONOLUVAMICOGOPVGOBZCOPLGOGONOTNLCBZTNGENOCRTNNOVACRTNVBPRMINOTNTNTNTNTNTNTNTNTSROTOBSATBSPLFUBZIMCOCNTNCOBZTSIMIMUDCETNTNGOIMIMBGBGBGCOVCTNGOBSPLPLCOFRMIBZNOGOVAFUVAGEGOGOTNCRZAPVVECOMICAPRMIGOMINOBGNOTNCAFURMBIBGBZ\"\n    }, {\n      belfioreCode: \"00100400500600700800a00d00e00f00g00h00i00j00k00m00n00o00p00q00r00s00t01001101201301601701801901b01c01d01f01g01h01i01j01k01l01m01n01o01p01q01r01s01t01u02002102302402502602702802a02b02c02d02g02h02i02j02k02l02n02o02p02r02s02t02u03003103203403503603703903a03b03c03d03e03f03g03h03j03k03l03m03n03o03p03q03r03s03t03u03v04004104204304404604704904a04b04f04h04i04l04m04p04q04r04t04u04v05005105205305405505605705b05c05d05f05g05h05i05j05k05l05m05n05o05p05q05r05s05t05v06006106206306406506606806906a06b06c06d06e06f06g06i06m06n06o06p06q06s06t06u06v07007107207307407507607707907a07b07c07d07e07f07g07h07i07j07k07l07m07p07r07s07t07u07v08008108208308508608708808908a08b08c08d08e08f08g08h08i08j08m08o08p08q08r08s08t08u08v09009209309409509609709809909b09c09d09e09f09g09h09i09k09l09m09o09p09q09r09t09u09v0a00a10a30a40a50a60a70a80a90aa0ac0ad0ae0af0ah0ai0aj0ak0al0an0ao0ap0aq0ar0as0au0av0b00b20b30b50b60b70b80bb0bd0be0bf0bg0bh0bi0bj0bk0bl0bm0bn0bo0bp0br0bs0bu0bv0c10c20c30c40c50c60c70c80c90ca0cc0cd0ce0cf0cg0ch0ci0cj0cl0cn0cp0cs0ct0cu0cv0d20d30d50d60d80d90db0dd0de0df0dg0dh0di0dj0dk0dl0dm0dn0do0dp0dr0ds0dt0du0dv0e00e10e30e40e50e60e70ea0eb0ec0ed0ee0ef0eg0eh0ei0ej0ek0em0en0eo0ep0eq0er0es0et0eu0ev0f00f10f20f40f50f60f70f80f90fa0fb0fc0fe0ff0fg0fh0fj0fl0fm0fn0fq0fr0fs0ft0fv0g00g20g30g40g50g60g70g80g90ga0gb0gd0ge0gf0gg0gh0gi0gj0gk0gl0gm0gn0go0gp0gq0gr0gs0gt0gu0h00h20h30h60h70h80h90hb0hd0hg0hh0hi0hk0hl0hm0hn0ho0hp0hq0hr0hs0ht0hu0hv0i00i10i20i30i40i50i80ia0ib0ic0id0ie0if0ig0ih0ii0il0in0io0ip0ir0is0it0iu0iv0j10j20j40j50j60j70j80j90ja0jb0jd0jh0ji0jk0jl0jm0jn0jo0jq0jr0jt0ju0k00k30k50k60k70ka0kb0kc0kd0kf0kg0kh0ki0kk0kl0km0kn0ko0kp0kq0kr0ks0kt0ku0kv0l10l20l40l50l60l90lb0lc0le0lf0lh0li0lj0lk0lm0lo0lp0lq0lr0ls0lt0lu0lv0m00m10m20m30m40m50m60m80m90ma0mc0md0me0mf0mg0mh0mi0ml0mo0mp0mq0mr0ms0mt0mu0mv0n00n10n20n30n40n50n60n70n90na0nb0nd0ne0nf0ng0nj0nk0nl0nn0no0np0nq0nr0ns0nt0nu0o00o10o20o30o40o50o60o80o90oa0ob0oc0od0oe0of0og0oh0oi0oj0ok0ol0on0oo0op0oq0or0os0ou0ov0p10p20p40p50p90pa0pb0pc0pd0pf0pg0ph0pi0pj0pk0pl0pn0pp0pq0pr0pv0q00q20q30q40q50q90qa0qb0qc0qd0qe0qf0qg0qh0qi0qj0qk0ql0qm0qn0qo0qp0qr0qt0qv0r00r60r80ra0rc0rd0re0rg0rh0ri0rj0rk0rl0rn0rp0rr0rs0rt0ru0rv0s00s10s20s60s70s80s90sa0sd0se0sf0sg0si0sk0sm0sn0so0sq0st0t10t20t30t40t90tc0td0te0tg0th0ti0tj0tk0tl0tm0to0tp0tq0tr0ts0tt0tu0tv0u00u10u20u30u40u50u80ua0ub0uc0ud0uf0ug0uh0ui0uj0ul0um0un0uo0uq0ur0us0ut0uu0uv0v00v10v30v40v60v70v90va0vb0vd0ve0vf0vg0vh0vi0vk0vm0vn0vo0vp0vq0vr0vs0vt10010110210410510610710910a10b10c10d10e10g10h10i10j10k10m10o10p10r10u10v11011111211511611711811b11c11d11e11f11h11j11k11l11n11o11p11q11r11s11t11u12012312612912a12b12c12d12e12g12h12i12j12l12m12n12o12q12r12s12t12u13013113313413613813913b13c13e13h13i13l13m13n13o13p13t13u14014114214414514614714814914a14d14e14f14h14j14k14l14n14o14q14r14s14t14u14v15015315415715815915a15b15c15d15e15g15h15i15j15k15l15n15p15s15t15u15v16016116216316416516716916b16c16d16e16g16i16j16k16l16m16n16o16q16r16u16v17017117217317717817a17b17d17e17g17h17i17j17k17l17m17o17q17r17s17u17v18018118218418518618718818918c18d18e18f18g18h18k18l18m18n18o18p18q18t18u18v19019119219319519719e19g19k19n1a11a21a51a61a71a81aa1ab1ad1ae1ag1ah1ai1ak1al1am1an1ao1ap1ar1au1av1b01b11b21b31b41b51b61b71b81b91bb1bc1bd1be1bf1bg1bh1bi1bj1bk1bl1bm1bn1bo1bq1br1bs1bt1bu1c01c11c21c51c71c81c91ca1cb1cf1cg1ch1ci1cj1ck1cl1cm1cn1co1cp1cq1cr1cs1ct1cv1d01d11d21d31d41d51d61d71d81da1dc1dd1df1dh1dk1dl1dm1dn1dp1dq1dr1ds1dt1du1dv1e01e11e21e41e51e91ea1eb1ec1ed1ee1ei1ej1ek1el1em1eo1ep1eq1er1es1et1eu1f01f11f21f31f51f61f71f81f91fa1fb1fc1ff1fg1fh1fi1fk1fl1fm1fn1fo1fp1fq1fr1fs1ft1fu1fv1g01g11g21g31g41g51g61g71g81ga1gd1ge1gf1gh1gi1gj1gk1gl1gn1gp1gq1gr1gs1gt1gu1gv1h11h21h41h51h61h81h91ha1hb1hc1hd1he1hg1hi1hj1hk1hl1hm1hn1ho1hp1hq1hr1ht1hu1i21i31i41i51i61i71i81i91ia1ic1id1if1ig1ih1ii1ij1ik1il1io1iq1ir1is1it1iu1iv1j01j11j21j31j41j51j71j81j91ja1jb1jc1jd1je1jf1jg1jh1ji1jj1jl1jn1jo1jq1js1jt1ju1jv1k01k21k31k51k61k71k81ka1kb1kc1kd1ke1kf1kg1kh1ki1kk1kl1km1kn1ko1kp1kq1kr1ks1kt1ku1kv1l01l11l21l51l71l81l91la1lb1lc1ld1le1lf1lg1lj1lk1ll1lm1ln1lo1lq1lr1ls1lt1lu1lv1m11m21m31m41m51m61m71m81ma1mc1md1me1mf1mg1mh1mk1ml1mo1mq1mr1ms1mu1mv1n01n21n31n51n61n71n81n91nb1nc1ne1ng1nh1ni1nj1nk1nl1nm1nn1no1np1nr1ns1nt1nu1nv1o01o21o31o41o61o71o91oa1ob1oc1od1of1og1oh1oi1ok1ol1oo1op1oq1or1os1ou1ov1p01p11p21p31p41p51p61p81pb1pc1pe1pf1pg1ph1pi1pk1pl1pm1pn1po1pq1pr1pt1pu1q01q11q21q31q41q51q61q81q91qa1qb1qc1qd1qe1qf1qg1qh1qj1qk1ql1qm1qn1qo1qp1qq1qr1qt1qu1qv1r01r11r21r31r41r51r61r71r81r91ra1rb1rc1rd1re1rf1rg1rh1ri1rj1rm1rn1ro1rq1rr1rs1rt1ru1rv1s01s11s21s31s41s51s71s81s91sc1sd1se1sf1sg1sh1si1sj1sk1sl1sn1sp1sq1sr1ss1st1su1t01t11t21t31t41t61t71t81t91ta1tb1td1te1tf1tg1th1tj1tm1tp1tq1tr1ts1tu1u01u11u31u41u51u61u71u91ua1uc1ud1ue1uf1ui1uj1uk1um1un1ut1uu1v41v61v81vb1ve1vh1vi1vl1vm1vo1vp1vs1vt1vu1vv20020120220320420520720820920a20b20c20e20f20g20h20i20j20l20m20o20p20q20r20s20u20v21021121221321521621921a21b21d21e21g21h21i21k21l21m21n21o21p21q21r21s21u21v22122222322422522622722822922a22b22d22e22f22g22h22i22l22m22n22o22p22r22t22u22v23123323423523823923a23b23c23d23e23g23h23i23l23m23n23p23s23t23u23v24024124224524724824924a24b24c24d24e24i24j24l24m24n24o24p24q24r24s24t24u24v25025125225325525625725825925a25b25c25e25f25g25h25i25j25k25l25m25n25o25r25s25t26026126226326426526626726826a26b26c26d26e26f26j26l26m26n26p26q26r26s26t26u26v27027127227327427627727827a27b27c27d27e27f27g27h27i27j27k27l27m27o27p27q27s27t27u27v28028228328428528628728828928a28b28c28d28e28f28h28i28j28k28l28n28p28q28r28s28u28v29029129229329429529629729829929a29b29c29d29f29g29h29i29k29l29n29o29p29r29s29t2a12a22a42a72a82a92aa2ac2ad2ae2af2ag2ah2aj2ak2al2am2ao2ap2aq2ar2as2au2b02b42b52b62b72b82b92ba2bc2bd2be2bf2bh2bi2bk2bl2bm2bo2bq2bs2bt2bu2c02c32c42c52c62c72c82c92ca2cb2cc2ce2cf2cg2ch2cl2co2cp2cq2cr2ct2cv2d22d52d62d72d82da2dc2de2df2dg2dh2di2dj2dk2dl2dm2dn2do2dp2ds2dt2du2dv2e02e12e22e42e52e62e72e82e92ea2eb2ec2ed2ee2ef2eg2eh2ei2ej2ek2el2em2eo2ep2er2es2et2ev2f02f12f22f32f42f52f62f82f92fa2fb2fc2fd2fe2ff2fg2fh2fj2fk2fl2fm2fn2fo2fp2fq2fr2fs2ft2fu2fv2g02g12g32g42g52g62g72g82g92gd2ge2gg2gh2gi2gk2gl2gm2gn2go2gp2gr2gs2gt2gv2h12h22h32h42h62h72h82hc2hd2he2hg2hh2hi2hk2hl2hm2hn2ho2hq2hr2hs2ht2hv2i02i12i32i42i52i62i72i82i92ia2ib2id2ie2if2ig2ih2io2ip2iq2ir2is2it2iu2iv2j02j12j22j32j42j52j62j72j92jc2jd2je2jg2jh2ji2jj2jk2jl2jm2jn2jo2jp2js2jt2ju2k12k32k72k82k92ka2kb2kc2kd2ke2kf2kg2kh2kj2kk2kl2km2kn2ko2kp2kq2kr2ks2kt2ku2kv2l22l32l42l52l62l72l82l92la2lc2ld2lf2li2lj2lk2ll2lm2ln2lo2lp2lq2lr2lt2lu2lv2m02m32m42m52m62m72m82mb2mc2md2me2mf2mg2mh2mi2mj2mk2ml2mm2mo2mp2mq2mr2ms2mt2mu2mv2n02n12n32n52n62n72n82n92na2nb2nc2nd2ng2nh2nj2nk2nm2nn2nq2nr2ns2nt2nu2nv2o02o12o22o32o42o52o72o82oa2od2oj2ok2om2on2op2os2ot2ou2ov2p02p22p32p42p52p62p72p82p92pa2pb2pc2pe2pg2ph2pi2pj2pk2pl2pm2pn2po2pr2ps2pt2pu2pv2q02q22q32q42q52q62q82qa2qd2qe2qf2qh2qk2ql2qm2qn2qo2qp2qs2qu2qv2r02r22r52r62r72r82ra2rd2re2rf2rg2rh2ri2rj2rl2rm2rn2ro2rp2rq2rr2rs2rt2rv2s22s42s62s72s82sa2sb2sc2sd2se2sf2sg2si2sj2sk2so2sp2sr2ss2st2su2sv2t02t12t22t32t42t62t72t82ta2tb2tc2te2tf2tg2th2tj2tk2tm2tn2tr2ts2tu2tv2u02u12u22u32u42u52u62u72u82ua2ub2uc2ud2ue2ug2ui2uj2uk2ul2um2up2ut2uu2v02v12v22v32v42v52v62v82v92va2vb2vc2ve2vg2vh2vi2vl2vm2vo2vp2vq2vs30030330430530630730930a30d30e30f30g30h30k30l30m30n30o30r30s30t30u30v31131331431531631731831931a31d31e31f31g31h31i31j31k31m31n31o31r31s31t31u32032132332532632732832932b32d32e32f32i32k32n32p32q32t32u33033233333433733933b33c33d33g33h33i33j33k33l33o33p33r33s33t33u33v34034134234334434534734834934a34b34e34g34h34i34j34l34m34n34q34r34s34t34u34v35035135235435535635735b35c35d35e35f35j35l35n35o35p35q35r35s35t36036136236336436536636736836936d36e36f36g36h36k36m36n36p36q36r36s36t37037137237337437737837937d37e37f37g37i37j37k37l37m37n37p37r37s37t37v38038138238338438538638a38b38d38g38h38i38j38k38m38n38o38r38s38t38u39039139439539639739b39c39d39e39g39h39j39k39n39o39p39q39s39u39v3a03a23a33a63a73a93aa3ab3ae3af3ag3ai3aj3ak3am3an3ao3ar3as3at3au3av3b03b23b43b53b63b73b93ba3bc3bg3bh3bi3bj3bk3bl3bn3bq3br3bs3bt3bu3bv3c03c13c23c33c53c63c73c83c93cb3cc3cd3ce3cf3cg3ch3ci3cj3ck3cl3co3cq3cr3cs3cu3cv3d03d13d23d33d43d53d63d73d83d93db3dd3de3df3dg3dh3dk3dl3dm3dn3do3dp3dq3du3e03e23e33e43e63e73e83ea3eb3ec3eh3ei3ej3ek3el3em3en3eo3ep3eq3er3es3et3eu3ev3f03f13f23f33f53f73f83f93fa3fc3fd3fe3ff3fg3fh3fi3fj3fl3fm3fn3fo3fp3fq3fr3fu3g13g23g33g43g53g63g73g83g93ga3gb3gc3gd3gf3gg3gk3gl3gm3gn3go3gr3gs3gt3gu3gv3h13h33h53h63h73h83hc3hd3he3hi3hj3hk3hl3hm3hn3ho3hp3hr3hs3ht3hu3i13i23i33i43i53i63i73i83ic3id3ie3if3ih3ii3ij3ik3im3in3io3ip3iq3ir3is3it3iu3iv3j03j13j23j33j43j53j63j83j93ja3jb3jd3je3jf3jg3jh3jk3jl3jm3jn3jo3jp3jq3jr3js3jt3ju3jv3k03k23k33k53k63k73k83kd3kf3kg3ki3kj3kk3kl3km3kn3ko3kp3kq3ks3kt3ku3l03l13l23l43l53l63l73l83la3lb3lc3ld3le3lf3lg3lh3li3lj3lk3ll3lm3ln3lo3lp3lq3lr3lt3lu3lv3m03m13m43m53m63m73m83m93ma3mb3mc3md3me3mf3mh3mi3mk3ml3mm3mn3mp3mq3mr3ms3mt3mv3n03n23n33n43n53n63n73n93na3nb3nd3nf3ng3nh3ni3nj3nk3nl3nm3no3nq3nr3ns3nv3o13o23o33o43o53o73o83o93oa3ob3oc3od3oe3of3og3oi3oj3ok3ol3om3on3oo3op3or3os3ot3ou3ov3p03p13p23p33p43p63p73p93pa3pb3pc3pd3pe3pg3ph3pi3pj3pk3pm3pn3po3pp3pq3pr3pt3pu3pv3q13q23q33q53q63q73q83q93qb3qd3qe3qg3qh3qj3qk3ql3qm3qn3qo3qq3qr3qs3qt3qu3qv3r23r43r63r73r83r93ra3rb3rc3rd3rf3rg3rk3rl3rm3rn3ro3rp3rq3rr3rs3rt3ru3rv3s03s13s23s33s43s63s73s83s93sa3sc3sd3se3sf3sg3sj3sk3sm3sp3sq3sr3ss3st3su3sv3t13t33t43t63t73t83t93ta3tb3tc3td3te3tf3tg3th3tj3tk3tl3tm3tn3to3tp3tq3tr3ts3tt3tu3tv3u13u23u43u53u63u73u83u93ub3uc3ud3uf3ug3uh3ui3uk3ul3um3un3uo3up3uq3us3ut3uu3uv3v03v13v23v33v43v53v63v73v83va3ve3vf3vh3vi3vj3vk3vl3vm3vn3vo3vp3vq3vr3vs3vt3vu40040240440540640740840a40b40d40f40h40i40j40k40m40o40q40s40t40u40v41041241341441541641841b41d41e41f41g41h41i41j41k41l41o41p41q41r41s41u41v42042142342442542742842942a42b42c42d42h42i42j42k42m42o42p42r42s42t42v43043143343443743843943a43b43c43d43e43f43g43h43i43k43l43m43n43o43p43r43t43v44044244344444544644844944a44b44c44d44e44f44g44h44i44j44k44l44m44o44p44q44r44s44t44v45045245345545745845945a45d45e45f45g45h45i45o45p45q45r45s45t45v46046146246346446746946b46d46g46h46i46j46l46m46n46p46q46t47047147347547647747847947a47c47d47e47f47g47h47i47j47k47l47m47n47p47q47s47t47u47v48148248448648848b48c48d48e48f48g48h48i48j48k48l48m48n48o48p48r48s48t48u49249349449549649749849949a49b49c49d49e49g49h49i49j49l49m49n49p49q49s49t49u49v4a04a14a34a44a54a64a74a84a94aa4ac4ad4ae4af4ag4ah4ai4aj4ak4al4am4an4ap4ar4at4av4b04b24b34b64b84b94ba4bb4be4bf4bg4bh4bi4bj4bl4bm4bn4bo4bp4bq4br4bs4bv4c04c14c24c34c44c54c64c74c84c94ca4cb4cc4cd4ce4cg4ch4ci4ck4cm4co4cp4cq4cr4ct4cu4d04d24d34d54d64d74d84da4db4dc4de4df4dg4di4dj4dk4dn4do4dp4dq4dr4ds4dt4du4dv4e04e24e34e44e54e64e74e94ea4eb4ed4ee4ef4eg4ei4ej4ek4el4em4ep4eq4er4et4eu4f04f24f54f74f84fb4fc4fd4fe4ff4fg4fh4fi4fk4fl4fn4fo4fq4ft4fu4fv4g04g24g34g54g74g94ga4gc4gd4ge4gf4gg4gh4gi4gj4gl4gm4go4gp4gr4gu4gv4h04h44h54h64h74h84h94hb4hc4he4hf4hg4hj4hk4hl4hm4ho4hp4hq4hs4ht4hv4i14i24i34i54i64i74i84i94ia4ib4ic4id4if4ih4ii4ij4ik4il4im4in4iq4is4j04j14j24j34j44j54j74j94ja4jb4jc4je4jf4ji4jj4jk4jm4jp4jq4jr4ju4jv4k04k14k24k64k74k94ka4kb4kc4kd4ke4kf4kg4kh4ki4kl4km4kn4ko4kp4kr4ks4kv4l14l24l44l54l94la4lb4lc4le4lf4lg4lh4li4lj4lk4ll4lm4ln4lp4lq4lr4lu4lv4m04m14m34m44m54m64m74m84m94ma4mb4mc4md4me4mf4mg4mh4mi4mj4mk4ml4mp4mt4mu4n14n24n34n44n54n64n74n84n94na4nb4nc4nf4ng4ni4nj4nk4nl4nm4nn4no4nq4nr4ns4nu4nv4o04o14o24o44o54o64o84o94oa4ob4oc4od4oe4of4og4oi4oj4ok4ol4on4oo4op4or4os4ot4ou4p04p14p34p44p54p64p74p84p94pa4pb4pc4pe4pf4pg4pi4pj4pl4pn4pp4pq4pr4ps4pt4pv4q04q14q24q34q44q54q64q84qa4qb4qc4qd4qg4qh4qi4qj4ql4qn4qo4qp4qq4qr4qs4qt4qu4qv4r04r14r24r34r54r74r84ra4rb4rc4rd4re4rf4rg4rh4ri4rj4rk4rl4rm4rn4ro4rq4rr4rs4rt4ru4rv4s04s14s24s34s54s64s74s94sa4sb4sc4sd4se4sf4sh4si4sj4sk4sl4sn4so4sp4ss4st4su4sv4t04t14t34t44t54t64t84t94tb4td4th4ti4tj4tk4tl4tm4tn4to4tq4tr4ts4tt4tu4tv4u24u34u54u74u84u94ua4ub4uc4ue4uh4ui4um4uo4up4uq4ur4us4ut4uu4uv4v04v14v44v54v74v84v94va4vc4vd4ve4vg4vh4vi4vj4vk4vl4vm4vn4vo4vp4vq4vr4vs4vt4vu4vv50050250350550650750a50b50c50d50e50f50g50h50i50j50k50l50o50p50q50r50s50t50v51051151251351451551651951a51d51f51g51i51j51k51l51n51o51u51v52052252352452552652752852952a52c52g52h52i52j52l52m52n52o52p52q52t52u53053153253353453553753853953a53d53e53f53g53h53m53n53o53p53q53r53s53u53v54054154254354654854954a54b54c54d54e54f54h54i54j54k54l54m54n54o54q54r54s54t54u54v55055155355455755855a55d55e55f55h55j55l55o55p55r55s55t55u55v56056156356456556656756856a56b56c56d56e56f56g56h56i56k56l56n56o56p56q56s56u56v57257357457757857a57b57c57d57e57f57g57h57j57k57l57n57o57p57q57r57s57t57u57v58058158258358458558658758858958a58b58e58f58g58h58i58j58l58m58n58o58p58r58s58t58v59059159259359659759859959b59c59e59f59g59i59j59k59l59m59o59p59q59t5a05a15a25a35a55a65a85a95aa5ac5ad5ae5af5ag5ah5ai5ak5al5am5an5ao5ap5ar5as5at5av5b15b25b35b55b65b75b85b95ba5bb5bc5be5bf5bg5bh5bj5bk5bl5bm5bn5bo5bp5bq5br5bs5bt5bu5bv5c05c25c35c45c55c65c75c85c95ca5cb5cc5cd5ce5cf5cg5ci5cj5ck5cm5cn5co5cp5cr5cs5ct5cu5cv5d05d15d25d45d55d65d75d85d95da5db5dc5dd5de5df5dg5dh5dk5dl5dm5dn5do5dp5dq5dr5ds5dt5du5dv5e05e15e25e45e55e65e85ea5eb5ec5ed5ee5eh5ei5ej5el5em5en5eo5eq5er5es5et5eu5ev5f05f15f35f45f55f65f75f85f95fa5fb5fc5fe5fg5fi5fj5fk5fl5fm5fn5fp5fq5fr5fs5ft5fv5g05g25g45g55g65g75g85ga5gc5ge5gg5gj5gl5gm5gn5go5gp5gs5gt5gu5h05h15h25h35h45h55h65h75h85ha5hb5hc5hd5hf5hg5hh5hi5hl5hm5hn5ho5hp5hq5hs5i05i15i25i55i75i85i95ia5ib5ic5id5ie5if5ig5ih5ij5ik5il5im5io5ip5iq5ir5is5it5iu5iv5j05j15j25j35j45j55j65j75j85j95ja5jb5jc5jf5jg5jh5ji5jj5jk5jl5jm5jn5jq5js5ju5k05k15k25k45k55k65k75ka5kb5kc5kd5ke5kf5kg5kh5kj5kk5kl5kn5ko5kp5kq5ks5kt5kv5l15l35l55l65l75l95la5le5lg5lh5li5lj5ll5lm5ln5lo5lp5lq5ls5lu5m25m45m55m65m75m85m95mb5mc5me5mf5mg5mh5mi5mj5mk5ml5mm5mn5mo5mp5mr5ms5n05n15n25n35n55n65n75n85n95na5nb5nc5ne5nf5ng5ni5nk5nl5nm5no5np5nq5nr5ns5nu5nv5o15o25o35o45o55o65o75oa5ob5oc5od5oe5og5oi5oj5ok5om5on5oo5op5oq5or5os5ot5ou5p05p15p25p35p45p55p65p75p95pa5pb5pc5pd5pe5pf5ph5pj5pl5pm5pn5po5pr5ps5pt5pu5pv5q05q35q45q55q65q85q95qa5qb5qc5qd5qe5qf5qg5qi5qk5qm5qn5qo5qp5qq5qr5qs5qt5qu5qv5r15r25r35r45r55r65r75r85r95ra5rb5rc5rd5re5rf5rh5ri5rj5rk5rl5rm5rn5ro5rp5rq5rr5rs5rv5s05s25s35s45s55s65s75s95sa5sc5se5sf5sg5si5sk5sl5sn5so5sp5sq5sr5ss5st5su5sv5t05t15t25t65t85ta5td5te5tf5tg5th5ti5tk5tm5tn5tq5tr5ts5tu5tv5u05u15u25u35u45u65u75u85ua5ud5uf5ug5uh5ui5um5un5up5ur5us5ut5uu5uv5v15v25v35v45v55v65v75v85v95va5vb5vc5vd5ve5vg5vh5vi5vj5vl5vm5vn5vo5vp5vr5vs5vt5vu5vv60060160260360460560660760860960a60b60c60d60e60f60g60h60j60k60l60m60n60o60p60q60r60t61261361561761861961a61b61c61d61e61f61g61h61i61j61k61l61m61n61o61p61q61r61s61t61u61v62062162262362462562762962a62c62e62f62g62h62i62j62k62l62m62o62p62q62t62u63063163263363763863963a63b63c63d63e63f63h63i63j63k63l63m63n63o63q63r63s63u63v64064164264364464564664864964a64b64c64d64e64f64g64h64i64j64k64l64m64n64o64p64q64r64s64u64v65065165265365465565765865b65c65d65e65f65g65j65k65l65n65o65q65r65t65u65v66066166266366466666866a66b66c66d66e66g66h66i66m66n66p66q66s66t66v67067267367467667867967a67b67d67e67f67g67h67i67j67k67l67n67o67p67q67r67t67u68268368468668768868a68b68c68f68g68h68i68j68k68l68o68q68s68t68u68v69069169269369469569669769969a69b69c69d69e69f69h69i69k69l69m69n69o69p69q69r69t69u69v6a16a36a56a76aa6ab6ac6ad6ae6af6ag6ah6ai6aj6ak6al6am6an6ao6ap6ar6as6at6au6av6b06b16b26b36b46b66b86b96ba6bb6bc6bd6be6bf6bg6bh6bi6bj6bk6bl6bm6bn6bo6bp6bq6br6bs6bt6bu6c06c16c46c66c76ca6cc6cd6ce6cf6ch6ci6cj6cl6cn6cp6cr6cs6ct6cu6cv6d06d16d46d56d66d86da6db6dc6de6df6dg6dh6dj6dk6dm6dn6dr6ds6dt6du6dv6e06e16e26e46e56e66e86e96ea6eb6ec6ed6ee6ef6eg6eh6ei6ej6ek6el6em6en6eo6eq6er6es6et6eu6ev6f06f16f26f36f46f56f66f76f86fa6fb6fc6ff6fi6fj6fl6fm6fn6fo6fp6fq6fr6ft6g06g16g26g36g46g56g66g76g86g96ga6gd6ge6gf6gg6gh6gi6gk6gm6go6gp6gq6gr6gs6gt6gu6gv6h06h26h36h46h56h66h86h96ha6hb6he6hf6hg6hh6hj6hm6ho6hp6hs6ht6hu6hv6i06i16i26i46i66i76i86i96id6ie6if6ig6ih6ik6il6im6in6iq6ir6it6iv6j06j16j26j46j56j66j86j96ja6jb6jc6jd6je6jf6jg6jh6ji6jj6jk6jl6jm6jn6jo6jp6jr6js6ju6k06k16k26k36k46k56k66k76k86k96ka6kb6kc6kd6ke6kf6kg6kh6ki6kj6kk6kl6km6kn6ko6kp6kr6ks6kt6ku6kv6l06l16l26l46l56l66l76l96la6lb6ld6le6lf6lh6li6lk6ll6lm6ln6lo6lq6lr6ls6lu6lv6m06m16m26m36m46m56m66m76m86ma6mb6mc6md6me6mg6mh6mi6mj6ml6mm6mn6mo6mp6mq6mr6mt6mu6mv6n16n26n66n76n86n96na6nb6ne6nf6nk6nm6nn6no6np6nq6nr6nt6nu6o06o16o26o46o56o76o86o96oa6ob6oc6od6oe6of6oh6oj6ok6ol6om6on6oo6op6or6os6ou6ov6p06p16p36p56p76p96pa6pb6pd6pf6pg6ph6pi6pj6pk6pl6pm6po6pp6pq6ps6pt6pu6pv6q06q16q26q36q46q56q66q96qa6qb6qc6qe6qf6qg6qh6qi6qj6ql6qn6qp6qq6qs6qu6qv6r26r36r56r66r76r96ra6rb6rc6rd6re6ri6rj6rk6rl6rm6rp6rq6rs6rt6ru6s06s26s36s56s66s86sc6sf6sg6sj6sl6sm6sn6ss6st6su6sv6t06t16t26t46t56t66t96tb6td6te6tf6tg6th6ti6tj6tm6tn6to6tp6tq6ts6tt6tu6u06u26u36u46u56u66ua6ud6ue6uf6ug6uh6ui6um6un6uo6up6uq6ur6us6uu6v46v76va6vb6vc6ve6vf6vg6vh6vi6vk6vl6vn6vp6vr6vt6vu70070570670770870970c70e70f70g70h70i70j70k70l70o70q70r70s70u70v71071271371471571671771a71b71c71d71e71g71i71j71k71l71m71n71o71p71r71s71t71u72172372472672872a72b72c72d72e72f72i72l72m72n72o72p72q72r72u72v73073173273373473573673773873973a73b73c73d73g73h73i73k73l73m73n73o73p73t73u74274374474574674774874b74c74f74g74h74i74j74k74n74o74p74r74s74t74u74v75075275375575675775875975a75c75d75e75f75g75i75j75k75m75p75q75r75s75t75v76176276376476576676776976b76c76d76f76g76h76i76j76k76m76n76o76p76q76r76t76u76v77077177277377477677777877977a77b77c77d77e77f77g77h77i77j77k77l77m77o77p77q77s77t77u77v78078178278378478578778878978a78c78d78e78f78g78h78i78j78k78l78m78n78o78p78q78r78s78t78u78v79079279379479579679979a79b79c79e79g79h79i79j79l79m79n79o79p79s79t79u7a07a17a27a37a47a57a67a77a97aa7ac7ad7ae7af7ah7ai7aj7ak7al7an7ao7aq7as7at7au7av7b17b27b37b57b77b87b97bb7bc7bd7be7bf7bg7bh7bi7bj7bk7bl7bm7bo7bq7br7bt7c07c17c27c37c47c67c77c87c97ca7cc7cd7ce7cg7ch7ci7ck7cl7cm7cn7cp7cq7cs7ct7cv7d07d17d47d57d67d77d87d97da7de7df7dh7di7dk7dm7dn7do7dp7dq7ds7du7dv7e27e47e57e67e77e97eb7ec7ed7ee7ef7eg7eh7ei7ej7en7ep7eq7er7es7et7eu7ev7f27f47f67f77f97fa7fb7fd7fe7fh7fi7fl7fm7fn7fo7fp7fq7fr7fs7ft7fu7fv7g17g27g37g47g67g77g87g97ga7gb7gd7ge7gf7gj7gk7gl7gm7gn7go7gq7gr7gs7gu7h07h17h27h37h47h57h77h87hb7hc7hd7he7hf7hh7hi7hj7hk7hl7hm7hn7ho7hq7hr7hv7i07i17i27i57i87i97ia7ib7ic7id7ig7ij7ik7il7im7in7io7ip7iq7ir7is7it7iu7iv7j17j27j37j47j57j67j77j87j97ja7jb7jd7je7jf7jg7jh7ji7jj7jk7jl7jm7jn7jo7jp7jq7jr7js7jt7ju7jv7k07k17k27k37k47k67k77k87ka7kb7kc7kd7ke7kf7kg7kh7ki7kj7kl7kn7kp7kq7kr7ks7ku7kv7l07l17l27l37l47l57l67l77l87la7lb7lc7lf7lg7lh7li7lj7lk7ll7lm7lp7lr7ls7lu7m07m17m37m47m57m67m87m97ma7mb7mc7md7mf7mg7mh7mi7mj7mk7ml7mm7mn7mo7mp7mq7mr7ms7mt7mv7n27n37n67n87n97na7nc7nd7ne7nf7ng7nh7ni7nj7nk7nm7no7np7nq7nr7nt7nv7o07o17o27o37o47o57o67o77o87o97od7of7og7oh7oj7ok7ol7om7on7op7oq7os7ov7p17p27p37p57p67p77p87p97pa7pb7pd7pe7pg7ph7pi7pj7pk7pl7pm7pn7po7pq7ps7pt7pv7q27q37q57q77q87qb7qc7qe7qg7qh7qi7qj7qn7qo7qp7qq7qr7qs7qt7qu7qv7r07r27r37r57r87ra7rd7re7rg7rh7rj7rk7rl7rm7ro7rp7rq7rr7rs7rt7ru7rv7s17s27s77s87s97sc7sf7si7sk7sm7so7sp7sq7ss7st7sv7t07t27t67t77t97tb7tc7td7te7th7ti7tj7tk7tl7tm7tn7to7tp7tq7tr7ts7tt7tu7u07u17u27u37u47u57u77u87u97ua7ub7uc7ue7uf7ug7uh7uj7uk7um7un7uo7up7uq7ur7us7ut7uu7v27v37v47v57v67v87v97va7vb7vc7vd7ve7vf7vg7vh7vi7vj7vl7vm7vn7vo7vp7vr7vs7vt7vu7vv80080180480580680780980a80b80d80e80f80g80i80l80m80n80o80p80r80s80t81081181681881981a81c81d81e81g81i81j81k81n81o81p81r81t81u81v82082282382482582682782882982a82f82h82i82j82k82l82m82n82o82p82q82r82s82u82v83083183283383483583683883a83c83d83e83g83h83i83j83k83l83m83n83o83q83r83s83t83u83v84084184284484684784884984a84c84d84f84g84h84j84l84m84o84q84r84s84u84v85085185285485585785885985a85b85c85d85f85g85i85j85k85l85m85n85o85p85t85u86086486586686786886986a86c86g86h86i86j86k86l86n86o86p86q86r86s86u86v87087187287487587687787887987a87c87d87e87f87g87h87i87j87k87l87m87n87p87q87r87s87t87v88088188388488588688788988c88d88e88f88g88h88i88j88k88l88m88n88o88p88r88s88t88u88v89089289389489589689789989a89c89d89e89g89h89i89j89l89n89o89q89r89u89v8a08a78a88aa8ab8ae8af8ah8ai8aj8ak8al8am8an8ao8ap8aq8ar8as8at8av8b08b18b28b48b58b78b98ba8bb8bc8be8bf8bh8bi8bj8bk8bl8bm8bn8bp8bq8br8bt8c08c18c28c48c58c68c98cc8cd8ce8cf8cg8ch8ci8cj8cl8cm8cn8co8cp8cq8cr8cs8ct8cu8cv8d08d18d28d38d48d58d68d78da8dd8de8dg8dh8di8dj8dk8dl8dm8dn8do8dp8dq8dr8ds8dt8dv8e08e18e28e38e48e58e68e78e88e98eb8ec8ed8ee8ef8eg8eh8ej8ek8el8em8en8eq8er8es8et8ev8f18f48f58f68f78f98fa8fb8fc8fe8ff8fg8fh8fi8fk8fl8fn8fo8fp8fq8fr8fs8ft8fu8fv8g08g18g28g38g58g78g88ga8gb8gc8gd8ge8gg8gh8gj8gk8gl8gm8gn8go8gp8gq8gs8gu8gv8h08h28h38h58h68h78h88h98hb8hc8hd8he8hf8hg8hh8hi8hk8hl8hm8hn8hp8ht8hv8i38i68i78i98ia8ib8ic8id8ie8if8ih8ii8ij8im8in8ip8iq8is8it8iu8iv8j08j18j28j38j48j58j88j98jc8jd8jf8jh8jj8jk8jl8jm8jn8jo8jp8jq8jr8js8jt8ju8jv8k08k68k78k88k98kb8kc8kf8kg8kh8ki8kj8kk8kl8km8kn8ko8kp8kq8ks8kt8ku8kv8l08l18l28l38l48l58l78l88l98la8lb8lc8ld8le8lf8lg8lh8lk8ll8lm8ln8lo8lr8ls8lt8lu8lv8m08m38m58m68m78m88m98ma8mb8mc8md8me8mf8mg8mi8mk8ml8mn8mp8mq8mr8ms8mt8mu8mv8n08n18n28n48n78n88n98na8nb8nd8ne8nf8nh8ni8nj8nk8nl8nm8nn8np8nq8nr8ns8nv8o08o28o38o48o58o88o98oa8od8oe8of8og8oh8oi8ok8ol8om8oo8op8oq8ou8ov8p08p18p28p38p48p58p6anqanransanuanvao0ao1ao2ao3ao5ao6ao7ao8ao9aoaaobaocaoeaofaogaohaoiaojaomaooaoqaoraosaotaouaovap0ap2ap6ap7ap8ap9apaapfapgaphapiapjaplapmapnapoappapqaptapuapvaq1aq2aq3aq6aq9aqaaqbaqcaqdaqeaqfaqgaqhaqiaqlaqmaqoaqpaqsaquaqvar0ar1ar2ar4ar5ar7ar8ar9arbarcardareargarhariarjarkarlarmarnarrarsaruas0as2as3as4as6as7as8as9asaasbasdaseasgashasiasjaskaslasmasoassastasuasvat0at1at4at5at6at7at8at9ataatcatdateatfatgathatiatjatkatlatmatnatoatpatqatrattatvau0au2au3au4au5au6au7auaaubaucaudaueaufaugauhauiaujaukaulaunauoaupaurausautauuauvav1av3av5av6av7av8av9avbavcavdaveavfavgaviavjavkavlavmavoavpavqavravuavvb01b03b05b06b07b08b09b0ab0cb0db0eb0fb0gb0hb0ib0kb0lb0mb0nb0qb0rb0sb0tb0ub0vb10b11b12b13b15b16b17b18b19b1ab1bb1cb1db1eb1gb1ib1jb1kb1lb1nb1pb1qb1rb1sb1tb1ub1vb20b22b23b24b25b26b27b28b29b2bb2cb2eb2hb2ib2jb2kb2lb2pb2rb2sb2tb2vb31b33b34b36b37b39b3cb3hb3ib3jb3kb3mb3nb3ob3qb3sb3tb40b41b44b45b46b47b48b49b4ab4bb4cb4eb4fb4gb4hb4ib4jb4lb4mb4nb4ob4qb4rb4sb4tb4vb50b51b52b53b54b55b56b57b58b59b5ab5bb5db5eb5fb5gb5kb5lb5nb5ob5pb5qb5rb5sb5tb5ub5vb62b63b64b65b66b67b68b6ab6cb6db6eb6fb6gb6hb6ib6jb6lb6mb6ob6qb6rb6sb6tb6vb70b71b72b74b76b78b79b7ab7bb7cb7db7eb7fb7hb7ib7jb7kb7lb7nb7ob7pb7qb7rb7sb7tb7vb81b82b84b85b86b87b88b89b8bb8cb8db8fb8hb8ib8jb8kb8ob8pb8qb8rb8vb90b92b93b94b95b96b99b9ab9bb9cb9db9eb9fb9gb9hb9ib9jb9kb9lb9mb9nb9ob9pb9qb9rb9sb9tb9ub9vba0ba2ba4ba5ba6ba7ba9baababbacbadbaebafbahbajbakbalbanbapbarbasbatbaubb0bb1bb4bb7bb8bb9bbabbbbbcbbdbbfbbhbbibbmbbnbbobbpbbqbbrbbsbbvbc3bc5bc6bc7bc8bcabccbcgbchbcibcjbckbclbcmbcnbcobcpbcrbcsbctbcubd0bd1bd2bd5bd6bd7bd9bdabdbbddbdgbdibdjbdkbdmbdnbdobdqbdrbdtbdubdvbe0be1be3be4be7be8beabebbecbedbeebefbegbehbeibejbelbembenbeobepbeqberbesbetbeubevbf0bf1bf2bf3bf4bf5bf6bf7bf8bf9bfebfibfkbflbfpbfrbfsbftbfubfvbg0bg1bg2bg3bg4bg5bg7bg8bg9bgbbgcbggbgjbglbgnbgpbgqbgsbgtbgubgvbh0bh1bh2bh3bh4bh6bh7bh8bh9bhbbhcbhfbhibhjbhkbhlbhmbhnbhpbhqbhrbhsbhtbhubi0bi1bi2bi3bi4bi5bi6bi7bi8biabibbiebigbihbiibijbikbipbiqbisbitbj0bj1bj2bj4bj6bj7bj8bj9bjabjbbjdbjebjfbjgbjhbjibjkbjmbjpbjqbjrbjsbk0bk1bk2bk3bk4bk5bk8bk9bkbbkcbkdbkfbkgbkibkjbkkbkmbkobkpbkrbktbkubl0bl1bl2bl3bl6bl7bl8bl9blablbblcbldbleblfblgblhblkbllblmblnblpblrblsbltblublvbm0bm1bm2bm3bm4bm5bm6bm7bm9bmabmbbmcbmdbmebmfbmgbmhbmibmjbmkbmlbmmbmnbmobmqbmrbmubmvbn2bn3bn4bn7bn9bnbbndbnebnfbngbnhbnibnjbnlbnmbnnbnpbnqbnrbnsbnubnvbo0bo9boabobbocbodbogboibokbolbonbopboqborbosboubovbp1bp3bp5bp6bp7bp8bp9bpdbpebpfbpgbphbpibpjbplbpmbpobppbpqbprbpsbptbpubpvbq0bq2bq4bq5bq6bq7bq8bq9bqabqcbqdbqebqfbqhbqjbqkbqmbqnbqobqpbqqbqrbqsbqtbqubqvbr2br3br4br5br8brabrbbrcbrdbrfbrgbrhbrjbrmbrobrpbrsbrubs1bs2bs3bs5bs6bs7bs8bs9bsabsbbscbsdbsgbshbsibsjbskbsmbsnbsobspbsrbssbstbsubt2bt4bt5bt7bt8bt9btabtbbtcbtfbtgbthbtibtjbtkbtlbtmbutbuvbv0bv1bv2bv3bv4bv5bv6bv7bv8bv9bvabvbbvcbvdbvebvfbvgbvhbvibvjbvkbvlbvmbvnbvobvpbvqbvrbvsbvtbvubvvc00c01c02c03c04c06c07c09c0ac0cc0dc0ec0fc0kc0lc0nc0oc0pc0qc0rc0sc0tc0uc0vc10c11c12c13c14c15c16c17c18c19c1ac1bc1cc1dc1ec1fc1gc1hc1ic1jc1kc1lc1mc1nc1oc1pc1qc1rc1sc1tc1uc1vc20c21c22c23c24c25c26c27c28c29c2ac2bc2cc2dc2ec2fc2gc2hc2ic2jc2kc2lc2mc2nc2oc2pc2qc2rc2sc2tc2uc2vc30c31c32c33c34c35c36c37c38c39c3ac3bc3cc3dc3ec3fc3gc3hc3ic3jc3kc3lc3mc3nc3oc3pc3qc3rc3sc3tc3uc3vc40c41c42c43c44c45c46c47c48c49c4ac4bc4c\",\n      creationDate: \"0234002b0nun02ap002b002b02u8002b002b002b002b002b002b002b002b0lad002b002b002b002b002b002b002b0eq9002b002b002b02li02fs03ii002b002b01or002b00lk00nc00ks002b002b002b002b03ii0nr0002b002b002b0234002b023403ii002b002b002b002b002b002b0ir8002b002b0234002b002b002b00lk002b023403ii002b02sc00qa002b002b002b0234002b0h9j002b002b002b012m0o110lcu002b002b002b002b0bhp002b002b002b002b012k0lad014d002b01bu002b027k002b03ii002b122r002b002b002b00sr00mn00pt046400pi00sr02bs00kh00md0o38002b00nj0c4t002b0o500234002b00mu0lad002b002b0234002b002b002b002b002b02tf002b002b002b0472002b02fs0lad0lad002b00nc002b00nu002b04f3002b002b002b00o8002b002b0nrc002b002b002b00o800mn002b0hlm002b002b002b002b023409f2002b03ii002b08ic002b08ic002b0234002b002b002b002b002b002b00o800mn00l600mn02c3002b002b002b02340234002b002b002b077o002b002b02r9002b0nm6014d002b002b002b0234002b043e002b002b002b002b05gr002b002b002b0lad0234002b03ii002b002b002b002b0lad002b002b0ocg002b002b0234002b002b0lad002b002b002b002b0234002b002b002b0865046n002b00o800of02b7002b002b002b0lad082403ii046k071k002b002b002b0o1d002b00sr00mn002b03ii017l014d002b002b002b002b002b0lad027r002b06g40mf4002b002b002b0qrj002b00l600qn0lcu00mn002b002b0b81002b02340o0q0p0g002b002b0234002b002b002b002b0123002b0arg002b0lad039n0234031k03450234002b002b002b002b002b002b00tn002b002b002b002b002b002b002b002b002b002b02r902ap03ii002b002b002b002b0nss05jg002b002b002b002b002b03ii002b002b002b002b002b002b002b002b002b02h802lu00nj00lk02340529002b042i02340234002b03ii0234023404av002b002b0lag002b002b02340234002b002b024v00l6002b0234002b0h4h01bu02li0234002b002b002b002b06us002b002b05kq002b002b07lk06tb002b002b002b002b02ut002b0234002b002b002b077o002b002b023400k3002b06060lad002b002b002b002b002b002b0234002b002b07lk0lad002b002b002b002b002b00o800sr00kh02c3002b002b002b002b0kn0002b0lad002b02ap0234002b002b002b002b002b00pi00nj017l02c3002b002b0dbv0fso002b0361002b00lk00pt02bs00j700md00md00lo00kh02ap02340bqo03ii002b002b002b002b002b002b002b002b00md00mu00mu002b031k0np6002b002b002b002b002b002b002b002b002b02r9002b0eel0234002b002b002b04ec1i8n002b01bu002b002b045k002b002b002b002b002b0lad0234002b0234002b002b002b002b0234002b002b002b002b002b002b002b002b002b00nc00js002b002b002b002b0eer002b002b002b002b002b002b002b002b002b002b002b002b002b002b0472002b002b0lad002b002b00l6002b023403ii02en067u03ii011l03ii03ii002b00md002b08l8002b0234002b0ocg0470002b03ii002b002b002b002b002b0lad075l002b002b002b002b002b02bs00nj00mn00l30472002b002b002b002b11u8073q002b00kv00qa002b002b0234002b00nj00nu00nc00mn014d0456002b002b00of00o800ks00pt00pt00md002b002b00mn00md0c70002b002b002b002b08t4002b01520b09002b002b046h002b002b0234002b002b002b002b02sj00lr002b002b0234002b00o800of00tn002b002b02t0002b002b0lad002b0gil002b002b08li002b0o5n002b002b0234002b002b002b002b002b002b002b002b002b002b002b0g4u002b002b0234002b03ii002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b04nr002b002b002b0lad002b002b002b02h8002b002b002b002b002b0lad002b00nj00lr002b0nss002b002b002b002b002b02u4002b0401002b002b07rg002b002b03ii002b0lad002b02c303ii002b0hu0002b024f002b002b002b0ael0234002b0lad002b002b002b002b002b002b002b055509dk002b02340234002b002b0kti002b002b002b002b00qa05mq00nj00qn002b002b002b002b002b0pq80lad0dbv002b002b002b02h800pi0bpl002b01pf002b002b002b002b00mu002b002b0o7300o800pi02vi002b002b00of002b002b002b002b026408a3002b08bp02ut002b002b0472002b002b002b002b002b023401pf002b002b002b002b0234023400o80234002b05on05on002b0v40002b002b002b002b128712nn002b0nve002b002b002b0grv002b002b002b002b002b02340234002b02li002b002b03ii002b0lad002b002b002b002b002b002b002b02h802n3002b0234002b0o3p002b002b002b0234002b0lad002b002b0o5o0lad03fo002b06ub0lad0o5e0lad023408dr0lad002b002b002b002b002b002b0uu9002b00sr0o20002b00nu002b002b002b02sl002b0nss002b002b002b002b0234002b002b002b02s9002b0lad002b002b0o52002b024s0234002b03i4002b002b002b002b0lad002b002b002b002b002b002b002b002b08ic002b002b002b002b002b03dc002b002b002b0234132902s713c507vf00sr002b002b0234002b002b002b002b002b002b002b002b002b00mn002b002b002b002b002b002b002b002b002b002b002b002b0vue002b002b002b0a9b002b0234002b002b031k002b029t023400mu002b036o09f20c4m002b002b002b002b002b002b0o3q01p2002b0lad06pa002b03vi002b002b002b002b002b00l6017l0lad002b002b0lad002b002b002b02tf06ub002b002b0234002b002b002b002b002b002b002b002b002b002b0c4803ii0lad08ej0inh002b002b002b002b002b0lad002b00ks0lad023402340lad002b002b0b0905qt00pi002b002b002b002b002b0lad0nk4002b002b002b002b002b002b002b01uo023402340861002b002b002b002b002b0234002b002b00nu00mn00q0002b002b002b002b002b002b002b002b002b002b002b002b0cpl002b002b002b00of00sr048q002b002b002b002b002b002b0234002b02c3002b002b002b002b02b700lk045k002b00md00kh002b002b002b00q0002b017l017l00kh0o8p02c3002b002b0lad002b017l002b002b002b002b02340lad002b002b002b0o7d002b02bs002b1055002b002b0234002b089v002b002b002b00nu00tn002b02b7002b002b03ks0bvb0234002b002b002b002b00qn00of02340234002b024f002b002b0lad002b002b0234049q0lad02340lad002b002b0234002b002b00pi00mu0675002b002b002b002b002b00q003ii0234002b002b03ii002b002b002b002b02vi002b02li08te002b002b002b0a3600nc01bu002b0ffl002b002b002b00nj014d00q0048q002b0can03ii002b002b002b002b002b023405mg002b002b13ie002b08cc03ii02vi002b0o7j002b002b002b002b002b02ap03ii002b0n0d002b0g4u002b002b002b002b002b002b002b02en002b02fs0fh7002b00q0002b02mu045603ii07lr002b03ii002b002b002b00l6002b0lad00kh00nj0nub00ko002b002b002b002b02bs002b002b0lcu002b002b00sr017l002b00md002b0lad12jh04pa002b002b02t00nse002b002b002b002b03ii00of00js00mn00pi002b002b02340rf2002b0234002b0152002b002b002b002b002b002b002b002b002b002b002b002b0ffl002b002b002b002b002b002b002b002b002b0lad002b0o0q002b0234002b03i4002b002b002b02bs002b0h9j0lad0nu9002b002b002b02tf002b002b002b002b002b002b002b002b002b02ig002b00nu00qa047208br00nu00sr049c002b002b002b02340c4m002b002b002b002b002b0234002b002b002b0234002b002b002b002b0lad002b002b002b03vf002b002b002b002b002b0ceo00mn02c7002b002b002b0b4h02tf02rb02bs0do502h8002b0q3700nj00qa002b023403dc00mn002b002b002b002b002b002b0bi0002b02ut002b00nj02c802li002b00nc00l600nu00pt02li002b02li023409mc00pt002b00l600l6002b002b002b002b002b002b002b00qa00qa002b03ii002b002b002b08ic002b002b067102c3002b04uc05on0ugn002b002b002b002b002b0n0d002b03oo0bkp00q000nu00mu002b01kl002b0234002b002b002b0cl700sr07mb0rc8002b00pi00nc002b00k3002b0eke00pi02tf002b002b002b02340nm600nu00nc00of00nc02tf002b002b002b0c4803dc002b002b002b002b002b00lr00tn0234002b00sr0234002b0ceo002b00o80152002b002b01j2014d002b06e502340234002b0234002b0o9g002b00o8002b002b002b013700nj002b0234002b002b029t02340no1002b002b002b002b002b08bp002b002b0q3700lk00qn002b00sr014d002b05dl002b0lad002b002b00nu00ks00pt00l602en002b013f00md03ii002b04i10234002b05l00234002b002b002b002b002b00nu002b002b002b0urg002b002b02tf002b002b002b002b0jb800o800qa01bu02fs002b002b002b0o7d002b002b002b002b03o2002b002b002b002b002b002b00nu00md069100l600sr0lad002b002b002b0ntu00k30lad09f20lad03th08j2002b002b0bn4002b002b03ii002b002b002b0o3o017l002b00l600l60ag500md02ap0lad02c3002b03ls00of013j00js00q002bs002b002b002b002b002b002b002b002b002b03ii002b0o7n002b0aqf03c5002b002b002b002b002b002b0557002b0lad002b00nc002b002b02in00ks047p0ihg002b03ii0o01002b002b002b002b002b00qa0g8i002b002b002b00mn00nu00pt002b00mn00lo06ku002b002b002b002b002b00q000mn00nu00of00nc00qa00pi00nj00l300mu00tn053r002b036o02li02ap002b03ii002b002b00sr002b01or002b002b00sr00sr02340epj002b002b002b0b21002b002b002b046k03so07n8002b002b002b00l600qn002b002b002b002b002b002b002b002b04ph0cf3002b046h00l3002b002b00qa002b02bs0lad002b002b002b002b0lad002b0b4o0234023402c3002b023403oq0aep0lad0lad02s900q0002b002b0lad002b002b02li002b00of00of00sr02bs03ii002b0b75002b002b002b002b02340151002b013f00l6002b00o802tj002b002b002b002b00o800md00l600qa00mn03ii03ii00lo00sr002b002b002b0234002b0234002b002b002b002b05aj002b002b002b01pf03ii002b0a4q00mn002b002b002b002b002b002b0152002b002b023405so002b002b02340234002b02li002b03mr00mu002b00of00pi002b002b002b02t0002b002b002b002b002b093i002b002b024s00of00nu00q000o8002b00md002b002b013700pt06dd00l302bs002b002b0oaj002b079n0234002b002b002b002b002b002b03ii002b002b002b0lcu002b002b002b002b002b00of03cc002b02t0002b002b002b002b002b002b027k002b0234002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b002b002b07bj002b023401od00pt002b002b002b002b002b002b0lad068m002b002b023414f806q6002b002b017l00pi0234002b02340lcu002b002b0hu0002b0lad00md00nc00mu02c3002b00o800lk002b002b002b002b002b002b04k60eol0234002b002b002b002b03ii002b002b002b002b002b002b002b0234002b002b002b002b002b02340lad002b08ah02lf002b002b0o69002b002b002b002b0lad02bs02b7002b0d9i0v4n002b002b002b002b002b002b10i60lad00sr00qa002b002b03dc02en002b00o8049c002b002b0234002b002b002b002b002b002b002b002b002b0lad002b023400sr09a4002b002b03ii002b03ii002b014d014d002b059303ii00lo00nu00j7002b002b03ii002b0lag002b03ii002b002b002b02340234002b002b0lad00nc002b0lad002b00tn002b002b002b054j0nlr002b0234002b002b032802s90234002b002b0ksm002b002b0234002b002b002b0mem02fs002b0bhp002b002b00nu00k302en002b0ntp0bnq002b002b002b002b0v3f0qiu002b002b002b03ii0gim002b002b002b002b002b002b0lad002b03jv00lk00tn002b12an0123002b002b0234002b002b02bs002b00sr024s02bs03ii002b002b002b002b002b002b002b002b002b0kt8002b02340c410234002b0nrq002b002b002b00pt02li0o5e08hk0bk6002b0nm8002b023400lk00nu0i150234002b002b02r901v4002b002b002b002b0234002b002b002b002b002b0234055r06rq002b002b002b002b002b002b002b002b002b002b02s8002b002b06rg023403ii002b02340234023409l600mu00mn002b03ii002b00lo002b002b002b00nc00nu002b03ls0lcu002b002b002b002b023406hv00md045t002b023402sg0205023403lh002b002b0234002b002b002b002b002b002b0lad002b002b002b002b002b02fs02hs0o38002b002b002b002b002b002b00o80lad02s5002b002b0lad05on002b02340bmi00l600sr002b0152002b002b002b002b002b002b002b00of01bu02ap0234002b00q0002b002b038i03ea002b08e80234002b002b002b002b002b002b002b0ag5002b002b002b002b002b0234002b002b0o38052j002b0bnq002b002b002b002b002b002b023406iv0234002b002b002b00mn002b0l0b002b002b002b002b002b002b0eq5002b002b0aod0lad002b002b023400mn002b002b002b11o2002b002b002b00md002b03o2002b002b002b00lk00fa002b002b002b002b002b0ael0o1s002b023403th002b002b026s00mn002b002b0vc6002b002b126m002b0lad12jp0nog0lad0234002b002b0apg002b002b002b002b002b002b002b002b002b002b063a002b002b002b002b0lad002b02l1002b002b002b00jl002b002b05ha002b00nj00mn002b03ls03ls002b0bgb0234002b002b002b002b002b0lad0lcu002b002b02340234002b002b0lcu0fs40lcu0234002b002b002b0234002b08c9002b002b002b0371002b002b002b002b0ekl01pm002b02li002b002b002b002b02n2002b002b002b0lad0234002b0lad002b002b002b002b002b023412810o4i002b002b002b0nu9002b002b0lad002b12q6002b002b002b002b002b0o3802340234002b002b002b002b0234002b02340234002b002b002b002b0234002b00js002b002b002b002b0nq202fs002b0234002b002b0nnc00of002b002b049q002b02vp0234002b0lad002b002b02340o0q002b00nc00qn0be20lad002b023414v700of00nc002b04mm002b002b002b0o0q03ii0lad002b0234002b002b03oo017l00qa00q0002b002b0234002b002b002b02fs03ii0lcu02en002b002b002b002b00qa04he002b002b002b0345002b002b002b002b002b0234002b002b002b002b03ii002b002b0614002b002b002b0415002b002b0234002b00of00pi014d002b002b002b002b002b0456002b002b0lad002b002b0234002b09f20lad0lad002b01kl002b02ap02b700mn01330uuj03ii02am002b002b01or03ii002b10ek03mr089s002b002b00tn0nhk00sr00of00sr00mn00mu01qv0361002b002b032l002b002b0234002b00mn00m6002b002b0234002b002b02nu002b002b002b002b002b002b002b0lcu002b00lo00nu0lad002b002b0234002b0lag002b0vtt002b0lad002b002b00nu08bp0234002b002b002b023400qa00mn002b002b02340234002b00ko00j7002b002b0234002b002b0c48002b002b002b002b002b00sr0234002b002b00nu002b002b002b03ii00e3002b002b002b002b0lad002b02340234023402340cji00sr0bnq0ili0lad002b002b002b002b002b00nc00nu02b702b7002b013300q00aef0234002b0234002b002b002b002b002b002b002b04c200nj015202am06hh00nc00pt00pt002b002b002b002b002b03ii002b0lad06d500tn002b002b002b03f800nu00q000q000q002ap002b08ul02ut002b0234002b002b002b0ob9002b002b002b0234002b002b002b03ii002b002b002b002b002b002b023403ii0lad002b0ksm002b002b002b002b002b002b002b0nvn002b002b10i10o11002b0ctn002b02tq002b002b00mn017l00lo002b002b03280234002b002b002b0lad00qn002b002b002b002b002b002b02tf03ii00of002b002b002b046k002b002b02bs0v4t0234002b002b10pg002b002b0234002b002b029f002b0k46002b0234002b002b002b0234002b002b002b002b002b002b00qa0152002b0234002b002b002b002b0lad002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b002b03ii002b002b002b06k50nmu002b023402bs09oh02li00ks002b0234002b03ii002b002b002b002b04io002b002b049i002b002b0ft100sr03ii002b002b002b002b002b002b002b00sr002b002b002b002b002b002b002b002b00mn002b002b002b0234002b002b00nu00q0002b002b002b002b002b002b002b13bh01u2002b002b002b002b002b002b002b002b002b159o002b002b002b00nc00ko00qn00pt00l600pt002b002b0lad002b002b002b002b00nu002b00nu046k002b002b002b047203i4002b0lad002b002b002b0lad059i02en002b002b03th002b002b002b0234002b002b002b002b002b05la002b03ii08v6002b002b002b0lcu002b0jng03dc002b002b002b149j002b002b0234002b002b002b002b002b002b0lcu0lcu03ii002b03ii002b002b00lo002b002b0593002b0nq6002b002b002b02340imk002b002b002b002b0ihi002b00nc00mn002b02r9002b002b002b002b002b002b002b002b002b0234002b03th002b0lad0234002b002b02c30v4n07qs002b002b002b002b02lj09mc002b002b002b002b002b002b08ee002b002b002b002b002b03ii002b002b002b0234002b02fs002b00qn00nc01370234002b002b002b002b002b002b002b002b03ii002b002b002b0234002b00nu002b002b002b002b002b002b002b002b002b002b002b002b002b002b02li0rd006t803mr002b002b002b002b002b002b002b002b002b002b06c70234002b002b0lad01or0me00o7k12nn00o8002b00of002b002b002b002b002b002b046h002b03dc0nvj002b0h4h002b002b002b0c77002b002b002b0456002b002b0lad002b002b002b00o800nu031400qa00sr00sr002b002b002b0234002b002b0o3p0234002b043e05r40pbl002b002b002b002b002b002b002b002b002b0234002b002b002b002b002b002b002b03ii0gil002b01od002b0mdv002b06pv002b002b02tq00nc002b0lad002b002b002b0234002b002b002b002b002b0lad002b002b03dc002b002b002b0lad0lad002b002b00nu002b002b002b023400nj056l0d0i002b0lad002b002b0472002b002b002b002b00mu002b002b002b0d0i002b002b0lad002b002b002b002b002b0234002b03ii002b002b002b0pk10234002b002b023400pt00mn0lad002b002b002b057i002b03oo002b023402340lad0lad002b002b0nth002b002b0lad02340frj00qn002b002b002b002b0234002b0234002b002b002b002b02kp0hfh002b002b002b002b02t0002b002b002b002b002b002b00nj00md002b002b002b002b002b002b0cqt002b03np002b0234002b10pg002b002b002b002b002b002b002b0lad0cji002b00j7002b002b02u40do5049q002b002b135m002b0234002b002b02ut0234002b002b00nj00md002b0472002b002b026o002b002b002b002b01bu002b02uj0mfe002b002b0lad002b0lad002b00qa02sg002b036o069g002b002b00of00kv002b002b002b002b002b05nk002b002b002b08g601p2002b002b002b002b002b0lad002b02tq002b002b0234002b02fs002b002b002b00of04ec00q00234002b0234002b02340234002b00sr09f200q000mn002b002b002b002b002b002b002b02h802bs002b03ii00nc08cc002b002b002b002b002b002b03be00q0002b02h80a0s002b0ccs002b0nss002b002b002b002b0uus002b083f002b002b002b002b0ufs0lad063h002b02340234002b0lad002b002b002b002b002b002b002b002b002b002b002b00ko002b002b002b002b0o1d002b002b02lm002b0nuo03ii0c480lad002b002b002b002b002b00lk00md00md00l302rh00q012lr002b002b002b002b023402tt02c3002b002b0o28002b0234002b05ha002b002b002b002b02sl08g6002b002b0c9n0o3h02340lad002b002b002b002b0hfh002b002b002b002b0ntf002b0234002b0lad002b002b002b002b002b002b002b002b002b002b00of00qa002b002b002b002b002b002b023402um002b0234002b002b0234023403ii002b002b002b002b00mn00nu00qa048t0biv02bs02c3002b002b002b002b03dc03th002b0hgn002b002b002b002b089h0bvb002b002b002b02340lad002b02en002b002b002b06e5002b02li00mn0lcu002b002b002b0v7a002b03ii0lad002b002b03th002b01pm002b002b0234002b002b002b002b002b002b002b03ii002b02340lad023400mu002b0152002b00md14fr1288002b002b002b02sg002b00l300pt0472002b002b002b002b002b002b00of0234002b02h802340234002b137a002b002b00lk00qn02on00q0002b002b06id002b002b002b0234036o002b002b002b00l6002b0lad002b002b08d9002b002b002b002b002b002b002b11o200sr002b044v002b00l6002b0lad00sr00js00mu002b002b0lcu04ih002b02rv002b02li002b08dr02340234002b0234002b002b002b002b002b002b002b002b0qu4002b002b0lgt00l600nc017l002b002b002b0234002b0lad002b002b002b002b002b002b0cec0234002b0lad002b002b002b002b0ggd032l002b002b002b0234002b002b002b0234002b002b002b002b002b002b002b002b01pf0234002b002b00qa0lad002b04d00234002b002b0lad002b0lad002b002b0lad002b002b0234002b002b002b002b002b002b002b002b002b04ec06ku002b002b00mn00nu002b11i9002b002b023402s700nc0152002b06ju002b002b02fs00mn00mn00o800nu0472002b002b0234002b00tn036o002b07fu07kv002b002b002b002b002b002b002b002b06id002b002b0lad002b023405la002b02h8002b0o1r002b026o023400sr00l600nc002b002b002b002b002b002b002b0fbd0aqf002b002b002b00nc002b002b002b0lad002b002b002b002b002b00o800mu002b002b002b002b002b002b002b002b00o800md00mu00sr00md00md02h8002b002b002b002b002b002b002b00o8002b002b002b002b002b002b002b0lcu002b00md00pt0234002b002b002b00nj002b002b0371002b0lad002b002b002b002b0c4t002b0lcu0bf500lk01370234002b002b002b002b002b002b002b0lad002b0234002b002b05dl03jv002b078r002b00o800md00pi002b002b002b002b002b025d012m00pi047700mu002b03dc002b01370o1s002b002b002b002b002b00md002b002b00sr02c30234002b002b00l600pi002b077o002b002b002b00q0002b030b00nj06pa0v4n002b02340234002b00o800o8061m002b002b002b03ii002b002b002b002b002b002b002b0234002b0ge902ii002b002b03f700nu00nu002b002b002b03ii00sr00lk00q002ut03ii00nu00mn02bs002b002b002b002b031a02340234002b002b002b002b0dda002b002b002b0ntb00o800mu0kov002b0nu4002b03ii002b0bf500nu00kl00q000q000jl00q0002b03ii002b00sr002b002b00md00q0002b00nu002b01bu00md002b002b002b002b002b002b02in002b00kl002b0ekj002b002b002b0234002b002b002b002b07ii002b002b002b002b002b049c002b002b002b002b02en01p2002b002b002b002b03ii015200k303ii00nu00md00qa00sr03ii13m502nb00nq00mn07jp046k00pi002b013300mn002b002b002b00q0002b00mu002b0265002b002b002b002b002b002b002b002b002b002b03ea002b002b002b002b002b0g5h002b002b002b002b002b067j00pi05mg002b07kv0234002b002b002b002b002b0bkp002b00q006tb002b014d0bqk03ii0234002b002b002b002b024s03th002b00o800sr002b0lcu002b002b002b036101fe002b01or002b002b0hlm002b03be0234002b002b0lad023403ii002b002b002b03ii002b03oq002b00sr00pi03ii002b00nu00of00q0013300nu002b0234002b002b0b6n002b0234002b002b00sr002b0lad0lcu02h802lu002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b0lcu002b00pt00nu02sj002b002b002b09dk0a5m002b002b002b002b00lo00qn002b01pf002b0234002b0234002b002b02c3002b0lad0lad023401og002b002b002b0ekj057i002b002b002b002b0lad002b002b0o9g03ii05k9002b0234002b002b002b03ii002b002b03ii002b03ii023402ut002b002b037103ii002b002b002b002b002b002b02no002b002b002b002b002b002b0234002b002b00pt002b0234002b002b002b00nu00q0002b002b002b002b002b00pt02340lad02bs02c300nc002b002b002b0bpl0lad002b002b002b002b00mu002b03ii002b0o52002b002b002b0lad002b0lad0lad00l6002b00lo00sr0234002b01p2002b02bs02b7023400nj01v400mn03dc002b002b00js002b002b002b036o002b002b002b002b02hc002b002b002b002b002b002b12jt002b002b0234002b002b002b002b0234002b002b002b002b002b002b002b0152002b002b00mn002b00jl002b002b03au002b00pi047h00pi00mn00of002b002b002b00pi002b002b00qn00nc0nsj0afm002b002b002b002b002b002b00o800sr002b002b00of002b002b002b002b0ccs03ii002b002b002b002b00q0002b002b002b002b023400qn00pt0lad002b002b002b002b00kh002b023406hv002b002b0gp2002b002b00nj00sr0152002b046n002b002b0234002b002b002b002b002b002b002b023400q008dr002b002b002b00mn00l6002b0o7i03ii002b002b05930lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02340me700qn00nj02bs0lad0234002b024g0lad002b002b0hcc002b002b02li0234002b002b002b0bf8002b002b002b002b002b002b002b03th002b002b002b002b002b00tn00ks002b002b002b0lgt002b002b002b002b002b00md00of08u00o8r002b0234002b002b002b002b0234002b002b002b0j35002b0234002b002b00lk00nu0o6g002b002b12js0gim002b002b002b002b002b131i002b00pf00nc00mu002b00j700mn00sr02c3002b002b002b002b03ii002b03ii002b002b002b002b00nc00tn0234002b00js00js002b002b002b00nc00l30cec002b002b0lad0234002b0lad0234002b002b04d00lad02me002b002b03ne002b002b002b002b002b002b11i9002b0234002b002b002b0lad002b002b002b06pk002b002b01pm04fq002b002b002b002b002b002b002b0603002b02340234002b0oba002b02bl002b002b0234002b002b0133002b00qn03ii05bf002b002b002b0234002b0123002b002b0b4h002b080e02c300l300mu00q0002b002b002b002b002b002b02340lad002b0234002b002b002b002b002b05la002b0lad002b002b03cc002b0lad0lad002b002b00q0002b002b002b002b002b002b002b002b02340lad0do5002b12q1002b002b002b0lad002b002b002b002b002b002b002b023400mu00nj0c60002b0o7j002b0o710o75002b002b002b002b002b023406hh02fs002b002b002b002b00qn02bs0c83002b002b002b002b002b002b002b002b002b03dc02kv002b0mg6002b00nu002b002b002b00nu00qn002b002b02t8002b002b002b002b073m002b00nu00qn0234002b002b002b0nvn02bs002b0o9c049q00lk06ub002b002b00nj002b14dh002b00nc002b00of00lo002b002b0234002b002b023400ks01mu01p203ii002b002b002b024k002b00sr00ks00pi002b07lu002b002b002b002b002b002b002b00js00mn00mn002b002b002b002b00l600qa002b002b002b002b002b002b002b002b098u0bmi002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b00l600kv02s80fso0alb0234002b0234002b02c0002b03f8025p02lt002b0lad002b0o3803ii002b00js00lk00nc002b002b002b002b002b03mu002b06d5002b00o8002b02c30lad002b00md00mu002b0314002b02bs002b002b002b0234023405pt002b03ii002b02b7002b03rh0bhp002b002b002b061t002b02li002b002b002b002b002b002b002b002b002b002b002b002b0c700234002b002b002b002b0234077o002b03ii002b002b029t1492002b002b002b002b002b002b002b057a002b002b002b002b12bt002b002b002b002b002b002b0234002b002b0234023403ii002b132300nc07ka002b002b002b00pt002b002b05pm002b002b002b002b002b002b0234002b03d9002b002b00o80lad002b0rla002b0o0c002b002b02li002b002b002b002b002b0234002b002b0ihg01520lad023407vf0i140234002b002b002b002b002b002b002b02340o17002b002b02340o3h002b002b002b023406i6002b002b002b002b03th07nb0qip002b00sr002b002b002b00o800lk044702h8002b002b002b002b0inh023403r40234002b002b0234002b002b002b002b00j708bl002b00of00sr0234002b002b002b0234002b02340be5061410ek002b04c2002b002b0o8g002b002b0234002b0234002b12an0lad002b002b002b002b023402340234002b0234002b002b002b00kv02c3002b002b002b002b0234002b02rv02c3002b0234002b002b002b002b0o0q002b002b0c60002b002b0234002b002b002b002b002b00nu0d9i00qn00sr03i40gf2002b00q000qa02c30oc900kl00qn0234002b002b0234002b002b0lad0lad002b002b0234002b002b002b036o002b002b002b002b002b023406c7002b002b068m06i606gi002b0o3p002b002b00mn00mn002b002b002b002b03ii002b002b002b03ii0o1r002b0lad002b002b002b0v6v002b0o8r002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0v35023400js002b002b002b03vf002b002b002b0234002b02h801bu02c300l302340lad002b002b002b002b0lad002b002b002b002b0b81023401or00mn002b002b00of002b002b002b002b002b002b002b002b002b002b002b002b11io002b002b002b0234002b002b0234002b002b002b002b02c3002b002b0be5002b002b023401uo02li002b0a6m002b002b00kh01or002b002b002b02340ntb002b002b0lad023402tf0234002b0234002b002b002b00o802md0lad002b002b002b0kem0o2b002b002b002b002b002b03ii002b002b002b002b002b002b0m2m00qa02vi002b0234002b051o0lad002b00q000l604ae0234002b002b014d0lad03ii002b002b002b03mr08dr014d002b002b002b002b0o1b002b0b75002b002b002b03ii002b002b028o00l60lad002b002b00o80ajn002b002b002b00mu0jbj02li002b002b002b0234002b002b002b002b03oo02bs00tn002b02vc002b002b002b002b002b002b002b03dc00md03dc05on002b002b002b061m00pt002b002b002b002b08aa03ii002b07i1002b002b002b002b002b002b002b0gp2002b0ha5002b00qn03ii002b00nj00md017l002b002b03ii002b03ii002b002b002b06sf002b03ii002b002b002b002b002b002b002b01or002b03ii002b002b002b002b002b002b002b03ii002b002b046k002b05ct002b002b002b002b002b002b002b002b00pt00pt089s00mn00l600pi002b002b002b002b002b0314002b002b002b0lad0nrg002b0mdv002b02li002b002b002b017l002b002b002b002b002b03ii00nu002b002b002b08ee00qa00nu002b0lad002b002b00sr00mu02h80o0g002b0lad002b002b002b06pa05o1002b002b0lad002b0lcu0lad023403ii00sr00qa0h9j00qa00mu02bs0234002b002b002b002b002b0lad002b002b002b0234002b002b002b0g90002b002b002b002b00l600o800kh00pt0234002b002b002b002b02c3002b002b0nm100pt02ut002b002b002b002b002b0234002b002b07fu05s8023402340lad023402c306gi0lad0675002b03ii0234002b023403f80234002b002b0lcu002b002b002b002b0lad0jj80lad002b002b002b002b00nc00nu0pto013302li002b0234023403ii002b002b00qa0lcu0lad002b002b002b002b002b002b002b002b00o800ks00of00qa02tf00nc002b00pt002b002b0234002b002b002b002b00md002b002b00q000mu002b0v4l023401330152002b02bs002b0234002b002b002b0lad002b002b002b002b002b002b0bs206jk02mh002b00kl0b5h023402tq002b002b012m015203ii002b00nc002b002b0lad002b002b002b00of002b002b002b002b002b023400lk00md029t0u810uma002b002b0o63017l01bu00l605o1002b0234002b002b0lad0lcu00mu002b01kl002b00nu00mn002b002b01df00mn00pi00l3036100qa00nj03cl002b0cs8013300nc002b002b00o800md067502fs02c300nc00qn002b002b002b023400mn015200nu03dc0234002b00nc00j700mn048f0o2b00nc002b002b002b0234002b0lcu002b00nj131j002b002b002b002b0123002b0lad03mr002b0aod00nj00lk014d01520m0c002b002b002b002b002b00o800nu00pt00lo029t00l300pi00lo00pt017l00mu03th002b0234002b0234002b07lu002b002b002b00q000pt0234002b002b0m0c03ii06g40234002b002b002b002b0cf3002b002b0234002b00nc002b0bgv0c4801df002b00mu002b027k002b00mn00nu045k00nc023400ks002b02340nvn002b002b0lad00l6030b002b002b002b0lcu002b03ii002b002b002b002b00qn00nu00l3002b002b00m602en002b002b002b0d9s0lad0lad00tn013j00nu00nc02ap00mu02c3049c023402li02fs0234002b02sj002b002b00o8015200l3002b00mu002b00sr00n800pt013700mu002b002b00qn00mn00md02b70lad0o7h002b00tn12nn00sr002b00nc00l600j700sr00sr0gs50i62002b002b02h813dj00lo00of00l600mn0nu9002b0lcu049i002b02h800mn00nj02rv002b00tn002b002b0o0i0234023408ej002b023403th002b002b002b02sj0234002b002b0234002b015200kh02en03ii00mu002b00nu00lk002b002b02ig00k30234002b002b002b002b002b002b00o800nu00pt002b00of05pm00mu00kh00nj002b00tn00pt002b1iko002b002b002b002b002b00ks00pt00pt0ine0lad014d00pi017l00q000sr07so002b002b015201bu11i9002b06r9002b00of00ks00m600l600q0002b002b002b002b002b01uo002b0234023401mu00md00pi017l0v6g0mf4002b01a600pt02en00nc01370ocn02s7002b00j704720blb002b002b0234002b002b0gil02340o29002b002b0hfh0vld00nu00mu02bs076v002b002b0c7l00nu0gib00sr002b00nu014d02bs013701or002b002b002b002b002b002b08n0002b002b002b002b002b002b0o8r002b002b00mu002b0n0d002b002b0137002b002b002b002b00nc002b015200jl0q4600lk00md00nc00sr023400pt00js00pt002b02rh068m002b132b00nc00nu002b00nu00qn002b002b00pt00kh002b067c0234002b002b002b03ii02340lad00nc00nc013j00qn00lr00q000qa046k002b002b002b002b002b03mr0234002b023400nu00nu002b0234002b00nu017l0vj4002b029700pt00nu0133042802c3002b02340lcu023410lp00lk0152002b0lad06jn023403dc00pi02en023400pt0234002b002b03ii0234002b002b002b02340lad002b002b002b0234002b002b002b0lad02tj002b002b002b002b00pi002b002b002b002b002b002b002b00nu002b002b002b002b023407kl002b036o002b02bs002b00kl00lk00mn0bkp002b002b02340lcu002b0v3f002b002b00pt002b002b002b0bhp00pt0v4l002b002b002b002b057a002b00js002b0nof002b13g6002b002b0lad002b06c70c7l00nu0234002b002b02340234002b002b002b002b002b13og002b002b002b002b002b002b002b002b002b0234002b0lad002b002b002b002b002b02340234002b002b002b002b002b002b0lag03ii0lad03140234002b002b02h306ku002b002b12880lad02340lad0bgb0234002b002b002b002b14fg002b18hs0lad002b002b002b002b002b002b00of02tn002b002b002b002b0234002b002b03i4023402m3002b002b002b002b0234002b03ii0234002b002b00nu05ue002b002b002b002b00o80ahk002b002b002b002b002b002b002b002b002b00nj00md00q000kl029t00tn002b002b002b03ii002b07er01bu002b002b002b002b00pt02fs032802c30lad02tj002b02t50qbc002b002b02s9002b002b00js00kv002b002b002b002b002b002b002b02t5002b03ii0lad0lcu03ii002b18hn002b002b002b002b002b05mg002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02nu002b002b002b002b002b0npa002b0lad0ksm02340234002b00lk00lo002b002b0234002b0ksm002b02fs002b0fpn0be2002b002b002b0234002b02li002b002b002b002b002b002b0nuo002b07hj002b00l300nc023403ku03ku002b01pf0234002b002b002b002b002b03ii002b0lad002b002b00mn00nu002b002b02fs0234002b002b002b060l03so002b002b002b002b002b002b002b002b02ln02340234002b002b0lad002b002b03i4002b0234002b002b0234002b0od7002b002b002b04t4002b002b002b002b002b002b0o110o6500q000nu002b03th002b002b002b0234002b002b002b025d02mu0o38002b002b002b002b002b0lad0lad002b0234002b002b002b002b0cdl08ic002b02340lcu002b002b002b002b002b002b0lad0lad002b002b0234002b002b002b002b002b0fs4002b0lad0234002b002b002b03ii02340lad002b002b002b002b002b002b002b002b002b002b002b03ii002b002b002b002b002b0h9j002b02tq002b002b002b002b03ii002b002b002b0a6m0234002b03ii0234002b0234002b002b002b002b0234002b0234002b002b002b002b002b002b02340234002b03jv07bv002b002b0234002b002b0lcu0234002b002b002b0nvc002b0234002b002b002b002b00sr08ic002b002b002b002b002b002b02h80q2h002b14kj0lad0lad002b002b0lad0lad0234002b002b002b002b0lad0lad002b0lad00pt002b002b002b002b0bcr03ii0lad002b02mp014600nj00pt017l002b02b70lgt0234002b002b002b0inh002b0lcu0lad002b0lad0lad03ii002b002b002b002b02340234002b002b002b002b002b002b002b002b002b002b0lad054q0lad002b0lad002b002b03ii00tn08br00nu00nu002b002b05j3002b002b03ii002b002b0234002b02340o7q002b002b002b002b01bu00sr03u30lad002b002b00l600nc002b002b00nu0a6i002b002b002b002b02fs002b002b0bk6002b002b002b002b002b0kt8002b017l00md046k00sr05on0234002b02340o37002b002b002b002b002b002b02fs002b002b002b002b0234047202340mdv002b002b002b002b063h002b002b002b00md002b06hh047205di02bs03ii00nu00pi05j911es02s5002b0234002b002b002b0470002b002b002b002b002b002b0sgn03ii0o380bqk00qa00sr002b002b002b0lad002b02340234002b002b002b002b02n911bq002b002b0234002b002b06e5002b0nov002b002b0234002b0234002b002b002b002b0234002b002b0234002b12eo04q0002b002b0lad002b002b0234002b05so02u402ap002b024k002b0234002b046k002b002b08bl0234002b002b0297023400kv00kv00md02s9002b0234002b002b002b04t4002b0234002b0lcu002b002b002b12q303ea002b002b002b023403np002b03ii0234002b002b0lad002b002b002b002b002b00mn002b047202s90lad002b002b002b002b002b002b002b053r0lad02sl002b002b002b002b0lcu002b03jv002b002b002b0234002b002b0rfc03f7002b0lad002b002b002b0234002b0od7002b002b002b002b002b002b0606002b002b02tf002b002b002b002b002b0ihg002b002b0c830133002b002b0lad002b002b00o800pt002b00md0vk7002b002b00mn0nq40o110bkp002b02340lad0sdl002b002b002b002b002b0arc002b0p9h023401og03th002b03ii002b002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b0lad002b029700l600pi00tn0o9n002b002b03ii002b0oca002b13qg0gib002b01fe03ii03ii002b002b12nn03mr002b002b023403ii002b078d00mn00mu00nj002b002b002b03ii0o0i002b002b002b002b002b0ntf002b002b002b002b10740oam16bk002b054500kv00qa002b002b002b04ih002b002b04gb002b0lad002b00e6002b03i402340lad002b048f002b002b002b002b002b0234002b00of00mn03q0002b01pf0234002b002b044v002b01bu03ii04720bgb02c30lad002b002b002b07i1002b002b002b002b002b002b07s3002b002b0v6j00nc002b002b0234002b0lad0rv2002b002b002b01og002b002b002b002b002b002b03oq0lad002b002b03dc03mr002b002b002b002b002b03ii0234002b002b002b00mu0obg0ocp002b002b002b0234002b002b0234002b002b002b002b0234002b002b03ii002b00pi00md00qa03vf03jv02li002b002b002b002b002b036o002b002b02r9002b002b023400nj00l6046k002b002b002b02sj09pb08ej03ii04720234002b002b00nc00mn00tn002b0ekt0234002b002b002b002b02bs00o800qa002b03ii0314002b11io002b002b002b023406pa002b002b002b02340234002b00nu00mn00sr054q02c302340ale0lad002b002b0ntp0n880ist002b002b002b15p4002b002b002b0234002b02en0oc90234002b002b00nc00o80bqo02bs00nj02bs0ocs002b0234002b0o1d0lad002b002b002b002b002b002b002b0234002b03cq002b0lad066u00l600md00qa067c00qa02bs0cdl002b08oh002b00qn0234002b002b0234002b002b002b002b046h00lo002b08in0ajn002b002b002b002b002b002b002b002b002b002b0257002b0hlm002b002b002b002b002b002b002b002b0234002b002b0lcu02340nqr02340nnc002b002b002b002b002b002b02no002b002b002b0lad0152002b002b002b0lcu002b002b0472002b002b03ii0eq9023403ii002b024f002b002b07ql002b002b04890234002b002b02tj00tn0234002b0eei002b0234002b13c5002b0lad10va03od0234002b002b002b002b002b023403th030b02s500mn00l6002b002b002b0klc002b002b03ii002b002b0234002b002b03mr002b002b02sl002b002b02s0002b002b002b002b002b0234023402340lad03dc002b0234002b08l8002b06t8002b002b002b002b023402340234002b002b02340234073m002b002b002b162q16fk153215kj16rh170l170l16ju002b0a5m18gd18nm18om18p0180j18po180j18ps18pg17de18pg18pg17ls183q18gd195518in1a371a671a671a6719mv1a7b1a9n1ah61al51ak71atf1bi81c0c1c6j1cbi1clj1dem1dgb1dgb1dgb1e191e3f1eq41f6c1fsf1g5i1h3917f31h9u1i6t1kp81kbu1l4l1l4l1lhb1nnt1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mhd1mia1mi61mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mju1mtn1mtn1mtn1mtn1mtn1muk1n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941nap1nap1nki1nki1nki1nki1nki1nki1nki1nki1nm11noe1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1o0u1o0u1o1e1o1e1o2o1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1ocb1oc91oc91oc91oci1ocp1ocu1ocu1ofi\",\n      dataSource: \"0\",\n      name: \"Abano Terme|Abbadia Cerreto|Abbadia Lariana|Abbadia San Salvatore|Abbasanta|Abbateggio|Abbiategrasso|Abriola|Acate|Accadia|Acceglio|Accettura|Acciano|Accumoli|Acerenza|Cermes|Acerno|Acerra|Aci Bonaccorsi|Aci Castello|Aci Catena|Acireale|Aci Santantonio|Acquafondata|Acquaformosa|Acquafredda|Acqualagna|Acquanegra Sul Chiese|Acquanegra Cremonese|Acquapendente|Acquappesa|Acquaro|Acquasanta Terme|Acquasparta|Acquaviva Picena|Acquaviva Delle Fonti|Acquaviva Platani|Acquaviva Collecroce|Acquaviva Disernia|Acqui Terme|Acri|Acuto|Adelfia|Adrano|Adrara San Martino|Adrara San Rocco|Adria|Adro|Affi|Affile|Afragola|Africo|Agazzano|Agerola|Aggius|Agira|Agliana|Agliano Terme|Aglie|Agna|Agnadello|Agnana Calabra|Agnone|Villa Latina|Agnosine|Agordo|Agosta|Agra|Agrate Brianza|Agrate Conturbia|Agrigento|Agropoli|Agugliano|Agugliaro|Ayas|Aicurzio|Aidomaggiore|Aidone|Aielli|Aiello Del Sabato|Aiello Calabro|Aiello Del Friuli|Aieta|Ailano|Ailoche|Aymavilles|Airasca|Airola|Airole|Airuno|Aisone|Ala Dei Sardi|Ala|Ala Di Stura|Alagna|Alagna Valsesia|Alanno|Alano Di Piave|Alassio|Alatri|Alba|Alba Adriatica|Albagiara|Albairate|Albanella|Albano Santalessandro|Albano Vercellese|Albano Di Lucania|Albano Laziale|Albaredo Arnaboldi|Albaredo Per San Marco|Albaredo Dadige|Albareto|Albaretto Della Torre|Albavilla|Albenga|Albera Ligure|Alberobello|Alberona|Albese Con Cassano|Albettone|Albi|Albiano Divrea|Albiano|Albiate|Albidona|Albignasego|Albinea|Albino|Albiolo|Albissola Marina|Albisola Superiore|Albizzate|Albonese|Albosaggia|Albugnano|Albuzzano|Alcamo|Alcara Li Fusi|Aldeno|Aldino|Ales|Alessandria Della Rocca|Alessandria|Alessandria Del Carretto|Alessano|Alezio|Alfano|Alfedena|Alfianello|Alfiano Natta|Alfonsine|Alghero|Algua|Ali|Alia|Aliano|Alice Bel Colle|Alice Castello|Alife|Ali Terme|Alimena|Aliminusa|Allai|Allein|Alleghe|Allerona|Alliste|Allumiere|Alme|Villa Dalme|Almenno San Bartolomeo|Almenno San Salvatore|Almese|Alonte|Alpette|Alpignano|Alseno|Alserio|Altamura|Altare|Altavilla Monferrato|Altavilla Irpina|Altavilla Milicia|Altavilla Silentina|Altavilla Vicentina|Altidona|Altilia|Altino|Altissimo|Altivole|Alto|Altofonte|Altomonte|Altopascio|Alviano|Alvignano|Alvito|Alzano Scrivia|Alzano Lombardo|Alzate Brianza|Amalfi|Amandola|Amantea|Amaro|Amaroni|Amaseno|Amato|Amatrice|Ambivere|Ameglia|Amelia|Amendolara|Ameno|Amorosi|Cortina Dampezzo|Ampezzo|Anacapri|Anagni|Ancarano|Ancona|Andali|Andalo Valtellino|Andalo|Andezeno|Andora|Andorno Micca|Andrano|Andrate|Andreis|Andretta|Andria|Andriano|Anela|Anfo|Angera|Anghiari|Angiari|Angolo Terme|Angri|Angrogna|Anguillara Veneta|Anguillara Sabazia|Annicco|Castello Di Annone|Annone Di Brianza|Annone Veneto|Anoia|Antegnate|Antey Saint Andre|Anterivo|La Magdeleine|Anticoli Corrado|Fiuggi|Antignano|Antillo|Antonimina|Antrodoco|Antrona Schieranco|Anversa Degli Abruzzi|Anzano Del Parco|Anzano Di Puglia|Anzi|Anzio|Anzola Dellemilia|Anzola Dossola|Aosta|Apecchio|Apice|Apiro|Apollosa|Appiano Sulla Strada Del Vino|Appiano Gentile|Appignano|Appignano Del Tronto|Aprica|Apricale|Apricena|Aprigliano|Aprilia|Aquara|Aquila Darroscia|Laquila|Aquileia|Aquilonia|Aquino|Aradeo|Aragona|Aramengo|Arba|Tortoli|Arborea|Arborio|Arbus|Arcade|Arce|Arcene|Arcevia|Archi|San Nicolo Darcidano|Arcidosso|Arcinazzo Romano|Arcisate|Arco|Arcola|Arcole|Arconate|Arcore|Arcugnano|Ardara|Ardauli|Ardenno|Ardesio|Ardore|Arena|Arena Po|Arenzano|Arese|Arezzo|Argegno|Argelato|Argenta|Argentera|Arguello|Argusto|Ari|Ariano Irpino|Ariano Nel Polesine|Ariccia|Arielli|Arienzo|Arignano|Aritzo|Arizzano|Arlena Di Castro|Arluno|Armeno|Armento|Armo|Armungia|Arnara|Arnasco|Arnad|Arnesano|Arola|Arona|Arosio|Arpaia|Arpaise|Arpino|Arqua Petrarca|Arqua Polesine|Arquata Scrivia|Arquata Del Tronto|Arre|Arrone|Arzago Dadda|Arsago Seprio|Arsie|Arsiero|Arsita|Arsoli|Arta Terme|Artegna|Artena|Artogne|Arvier|Arzachena|Arzana|Arzano|Arzergrande|Arzignano|Ascea|Asciano|Ascoli Piceno|Ascoli Satriano|Ascrea|Asiago|Asigliano Vercellese|Asigliano Veneto|Sinalunga|Asola|Asolo|Casperia|Assago|Assemini|Assisi|Asso|Assolo|Assoro|Asti|Asuni|Ateleta|Atella|Atena Lucana|Atessa|Atina|Atrani|Atri|Atripalda|Attigliano|Attimis|Atzara|Augusta|Auletta|Aulla|Aurano|Aurigo|Auronzo Di Cadore|Ausonia|Austis|Avegno|Avelengo|Avella|Avellino|Averara|Aversa|Avetrana|Avezzano|Aviano|Aviatico|Avigliana|Avigliano|Avio|Avise|Avola|Avolasca|Azeglio|Azzanello|Azzano Dasti|Azzano San Paolo|Azzano Mella|Azzano Decimo|Azzate|Azzio|Azzone|Baceno|Bacoli|Badalucco|Badia|Badia Pavese|Badia Polesine|Badia Calavena|Badia Tedalda|Badolato|Bagaladi|Bagheria|Bagnacavallo|Bagnaria|Bagnara Di Romagna|Bagnara Calabra|Bagnaria Arsa|Bagnasco|Bagnatica|Bagni Di Lucca|Montecatini Terme|San Giuliano Terme|Bagno A Ripoli|Bagno Di Romagna|Bagnoli Irpino|Bagnoli Del Trigno|Bagnoli Di Sopra|Bagnolo Mella|Bagnolo Cremasco|Bagnolo Piemonte|Bagnolo Del Salento|Bagnolo In Piano|Bagnolo Di Po|Bagnolo San Vito|Bagnone|Bagnoregio|Bagolino|Baia E Latina|Baiano|Bajardo|Bairo|Baiso|Balangero|Baldichieri Dasti|Baldissero Dalba|Baldissero Canavese|Baldissero Torinese|Balestrate|Balestrino|Ballabio|Ballao|Balme|Balmuccia|Balocco|Balsorano|Balvano|Balzola|Banari|Banchette|Villa Verde|Bannio Anzino|Banzi|Baone|Baradili|Baragiano|Baranello|Barano Dischia|Baranzate|Barasso|Baratili San Pietro|Barbania|Barbara|Barbarano Romano|Barbaresco|Barbariga|Barbata|Barberino Di Mugello|Barbianello|Barbiano|Barbona|Barcellona Pozzo Di Gotto|Barcis|Bard|Bardello|Bardi|Bardineto|Bardolino|Bardonecchia|Bareggio|Barengo|Baressa|Barete|Barga|Bargagli|Barge|Barghe|Bari|Bari Sardo|Bariano|Baricella|Barile|Barisciano|Barlassina|Barletta|Barni|Barolo|Barone Canavese|Baronissi|Barrafranca|Barrali|Barrea|Barumini|Barzago|Barzana|Barzano|Barzio|Basaluzzo|Bascape|Baschi|Basciano|Baselga Di Pine|Baselice|Basiano|Basico|Basiglio|Basiliano|Vasanello|Bassano Bresciano|Bassano Del Grappa|Bassano Romano|Tronzano Lago Maggiore|Bassano In Teverina|Bassiano|Bassignana|Bastia Mondovi|Bastia Umbra|Bastida Pancarana|Bastiglia|Battaglia Terme|Battifollo|Battipaglia|Battuda|Baucina|Boville Ernica|Bauladu|Baunei|Baveno|Bedero Valcuvia|Bedizzole|Bedollo|Bedonia|Bedulita|Bee|Beinasco|Beinette|Belcastro|Belfiore|Belforte Monferrato|Belforte Del Chienti|Belforte Allisauro|Belgioioso|Belgirate|Bella|Bellano|Bellante|Bellaria Igea Marina|Bellegra|Bellino|Bellinzago Lombardo|Bellinzago Novarese|Bellona|Bellosguardo|Belluno|Bellusco|Belmonte Piceno|Belmonte Del Sannio|Belmonte Calabro|Belmonte Castello|Belmonte Mezzagno|Belmonte In Sabina|Belpasso|Belsito|Belvedere Ostrense|Belveglio|Lizzano In Belvedere|Belvedere Di Spinello|Belvedere Marittimo|Belvedere Langhe|Belvi|Bema|Bene Lario|Bene Vagienna|Benestare|Benetutti|Benevello|Benevento|Benna|Bentivoglio|Berbenno|Berbenno Di Valtellina|Berceto|Berchidda|Beregazzo Con Figliaro|Bereguardo|Bergamasco|Bergamo|Bergantino|Bergeggi|Bergolo|Berlingo|Bernalda|Bernareggio|Bernate Ticino|Bernezzo|Bertinoro|Bertiolo|Bertonico|Berzano Di San Pietro|Berzano Di Tortona|Berzo San Fermo|Berzo Demo|Berzo Inferiore|Besana In Brianza|Besano|Besate|Besenello|Besenzone|Besnate|Besozzo|Bessude|Bettola|Bettona|Beura Cardezza|Bevagna|Beverino|Bevilacqua|Biancavilla|Bianchi|Bianco|Biandrate|Biandronno|Bianzano|Bianze|Bianzone|Biassono|Bibbiano|Bibbiena|Bibbona|Bibiana|Biccari|Bicinicco|Bidoni|Blera|Biella|Bienno|Bieno|Bientina|Binago|Binasco|Binetto|Bioglio|Bionaz|Bione|Birori|Bisaccia|Bisacquino|Bisceglie|Bisegna|Bisenti|Bisignano|Bistagno|Bisuschio|Bitetto|Bitonto|Bitritto|Bitti|Bivona|Bivongi|Bizzarone|Bleggio Superiore|Blello|Blessagno|Blevio|Boara Pisani|Bobbio|Bobbio Pellice|Boca|Bocchigliero|Boccioleto|Bocenago|Bodio Lomnago|Boffalora Dadda|Boffalora Sopra Ticino|Bogliasco|Bognanco|Bogogno|Bojano|Boissano|Bolano|Bolgare|Bollate|Bollengo|Nova Siri|Bologna|Bolognano|Bolognetta|Bolognola|Bolotana|Bolsena|Boltiere|Bolzano|Bolzano Novarese|Bolzano Vicentino|Bomarzo|Bomba|Bompensiere|Bompietro|Bomporto|Bonarcado|Bonassola|Bonate Sotto|Bonate Sopra|Bonavigo|Bondeno|Bondone|Bonea|Bonefro|Bonemerse|Bonifati|Bonito|Bonnanaro|Bono|Bonorva|Bonvicino|Borbona|Borca Di Cadore|Bordano|Bordighera|Bordolano|Bore|Boretto|Borgarello|Borgaro Torinese|Borgetto|Borghetto Di Vara|Borghetto Darroscia|Borghetto Lodigiano|Borgo Velino|Borghetto Di Borbera|Borghetto Santo Spirito|Borghi|Borgia|Borgiallo|Borgio Verezzi|Borgo Valsugana|Borgo A Mozzano|Borgorose|Borgo Dale|Borgo Di Terzo|Motteggiana|Suardi|Borgofranco Divrea|Borgolavezzaro|Borgo San Giovanni|Borgomale|Borgomanero|Borgomaro|Borgomasino|Borgone Susa|Borgonovo Val Tidone|Borgo Pace|Borgo Priolo|Borgoratto Alessandrino|Borgoratto Mormorolo|Borgoricco|Borgo San Dalmazzo|Fidenza|Borgo San Giacomo|Borgo San Lorenzo|Borgo San Martino|Borgo San Siro|Borgosatollo|Borgosesia|Borgo Val Di Taro|Borgo Ticino|Borgo Tossignano|Borgo Vercelli|Bormida|Bormio|Bornasco|Borno|Boroneddu|Borore|Borrello|Borriana|Borso Del Grappa|Bortigali|Bortigiadas|Borutta|Borzonasca|Bosa|Bosaro|Boschi Santanna|Bosco Marengo|Bosco Chiesanuova|Bosconero|Boscoreale|Boscotrecase|Bosia|Bosio|Bosisio Parini|Bosnasco|Bossico|Bossolasco|Botricello|Botrugno|Bottanuco|Botticino|Bottidda|Bova|Bovalino|Bova Marina|Bovegno|Boves|Bovezzo|Bovino|Bovisio Masciago|Bovolenta|Bovolone|Bozzole|Bozzolo|Bra|Bracca|Bracciano|Bracigliano|Braies|Brallo Di Pregola|Brancaleone|Brandico|Brandizzo|Branzi|Braone|Brebbia|Breda Di Piave|Castelverde|Bregano|Breganze|Bregnano|Brembate|Brembate Di Sopra|Brembio|Breme|Brendola|Brenna|Brennero|Breno|Brenta|Brentino Belluno|Brentonico|Brenzone Sul Garda|Brescello|Brescia|Bresimo|Bressana Bottarone|Bressanone|Bressanvido|Bresso|Brez|Brezzo Di Bedero|Briaglia|Briatico|Bricherasio|Brienno|Brienza|Briga Alta|Briga Novarese|Brignano Gera Dadda|Brignano Frascata|Brindisi|Brindisi Montagna|Brinzio|Briona|Brione|Briosco|Brisighella|Brissago Valtravaglia|Brissogne|Brittoli|Brivio|Broccostella|Brogliano|Brognaturo|Brolo|Brondello|Broni|Bronte|Bronzolo|Brossasco|Brosso|Brovello Carpugnino|Brozolo|Brugherio|Brugine|Brugnato|Brugnera|Bruino|Brumano|Brunate|Brunello|Brunico|Bruno|Brusaporto|Brusasco|Brusciano|Brusimpiano|Brusnengo|Brusson|Bruzolo|Bruzzano Zeffirio|Bubbiano|Bubbio|Buccheri|Bucchianico|Bucciano|Buccinasco|Buccino|Bucine|Budduso|Budoia|Budoni|Budrio|Buggerru|Buggiano|Buglio In Monte|Bugnara|Buguggiate|Buja|Bulciago|Bulgarograsso|Bultei|Bulzi|Buonabitacolo|Buonalbergo|Montebello Sul Sangro|Buonconvento|Buonvicino|Burago Di Molgora|Burcei|Burgio|Burgos|Buriasco|Burolo|Buronzo|Busachi|Busalla|Busano|Busca|Buscate|Buscemi|Buseto Palizzolo|Busnago|Bussero|Busseto|Bussi Sul Tirino|Busso|Bussolengo|Bussoleno|Busto Arsizio|Busto Garolfo|Butera|Buti|Buttapietra|Buttigliera Alta|Buttigliera Dasti|Buttrio|San Paolo Dargon|Cabella Ligure|Castello Cabiaglio|Cabiate|Cabras|Caccamo|Poggio Sannita|Caccuri|Cadegliano Viconago|Cadelbosco Di Sopra|Cadeo|Caderzone Terme|Cadoneghe|Cadorago|Caerano Di San Marco|Cafasse|Caggiano|Cagli|Cagliari|Caglio|Cagnano Varano|Cagnano Amiterno|Cagno|Caianello|Caiazzo|Caines|Caino|Caiolo|Cairano|Cairate|Cairo Montenotte|Caivano|Calabritto|Calalzo Di Cadore|Calamandrana|Calamonaci|Calangianus|Calanna|Calasca Castiglione|Calascibetta|Calascio|Calasetta|Calatabiano|Calatafimi Segesta|Lungavilla|Calcata|Calceranica Al Lago|Calci|Calciano|Calcinaia|Calcinate|Calcinato|Calcio|Calco|Caldaro Sulla Strada Del Vino|Caldarola|Calderara Di Reno|Caldes|Caldiero|Caldogno|Caldonazzo|Calendasco|Calenzano|Calestano|Calice Ligure|Calice Al Cornoviglio|Calimera|Calitri|Calizzano|Callabiana|Calliano|Calliano|Calolziocorte|Calopezzati|Calosso|Caloveto|Caltabellotta|Caltagirone|Caltanissetta|Caltavuturo|Caltignaga|Calto|Caltrano|Calusco Dadda|Caluso|Calvagese Della Riviera|Calvanico|Calvatone|Calvello|Calvene|Calvenzano|Calvera|Calvi|Calvi Risorta|Calvi Dellumbria|Calvignano|Calvignasco|Calvisano|Calvizzano|Camagna Monferrato|Camaiore|Camandona|Camastra|Cambiago|Cambiano|Cambiasca|Camburzano|Santelena Sannita|Camerana|Camerano|Camerano Casasco|Camerata Picena|Camerata Cornello|Camerata Nuova|Cameri|Camerino|Camerota|Camigliano|Camini|Camino|Camino Al Tagliamento|Camisano|Camisano Vicentino|Cammarata|Camogli|Chamois|Campagna|Campagna Lupia|Castel Campagnano|Campagnano Di Roma|Campagnatico|Campagnola Cremasca|Campagnola Emilia|Campana|Camparada|Campegine|Campello Sul Clitunno|Campertogno|Campi Salentina|Campi Bisenzio|Campiglia Marittima|Valprato Soana|Campiglia Dei Berici|Campiglione Fenile|Campione Ditalia|Campitello Di Fassa|Campli|Campo Calabro|Campobasso|Campobello Di Licata|Campobello Di Mazara|Campochiaro|Campodarsego|Campodenno|Campo Di Giove|Campodimele|Campodipietra|Campo Di Trens|Campodolcino|Campodoro|Campofelice Di Roccella|Campofelice Di Fitalia|Campofilone|Campofiorito|Campoformido|Campofranco|Campo Ligure|Campogalliano|Champorcher|Campolattaro|Campoli Del Monte Taburno|Campoli Appennino|Campolieto|Campolongo Maggiore|Campomaggiore|Campomarino|Campomorone|Campo Nellelba|Camponogara|Campora|Camporeale|Camporgiano|Camporosso|Camporotondo Etneo|Camporotondo Di Fiastrone|Camposampiero|Campo San Martino|Camposano|Camposanto|Campospinoso|Campotosto|Campo Tures|Camugnano|Canale|Canale Dagordo|Canale Monterano|Canal San Bovo|Canaro|Canazei|Cancellara|Cancello Ed Arnone|Canda|Candela|Candelo|Candia Lomellina|Candia Canavese|Candiana|Candida|Candidoni|Candiolo|Canegrate|Canelli|Orvinio|Canepina|Caneva|Canicatti|Canicattini Bagni|Canino|Canischio|Canistro|Canna|Cannalonga|Cannara|Cannero Riviera|Canneto Sulloglio|Canneto Pavese|Cannobio|Cannole|Canolo|Canonica Dadda|Canosa Di Puglia|Canosa Sannita|Canosio|Cansano|Cantagallo|Cantalice|Cantalupa|Cantalupo Ligure|Cantalupo Nel Sannio|Cantalupo In Sabina|Mandela|Cantarana|Cantello|Canterano|Cantiano|Cantoira|Cantu|Canzano|Canzo|Caorle|Caorso|Capaccio Paestum|Capaci|Capalbio|Capannoli|Capannori|Capena|Capergnanica|Capestrano|Capiago Intimiano|Capistrano|Capistrello|Capitignano|Capizzi|Capizzone|Ponte Nelle Alpi|Capodimonte|Capo Di Ponte|Capo Dorlando|Capodrise|Capoliveri|Capolona|Caponago|Caporciano|Caposele|Capoterra|Capovalle|Cappadocia|Cappella Maggiore|Cappella Cantone|Cappella De Picenardi|Cappelle Sul Tavo|Capracotta|Capraia E Limite|Capraia Isola|Capralba|Capranica Prenestina|Capranica|Marzabotto|Caprarica Di Lecce|Caprarola|Caprauna|Caprese Michelangelo|Caprezzo|Capri Leone|Capri|Capriana|Capriano Del Colle|Capriata Dorba|Capriate San Gervasio|Capriati A Volturno|Caprie|Capriglia Irpina|Capriglio|Caprile|Caprino Veronese|Caprino Bergamasco|Capriolo|Capriva Del Friuli|Capua|Capurso|Caraffa Di Catanzaro|Caraffa Del Bianco|Caraglio|Caramagna Piemonte|Caramanico Terme|Carano|Carapelle|Carapelle Calvisio|Carasco|Carassai|Carate Brianza|Carate Urio|Caravaggio|Caravate|Caravino|Caravonica|Carbognano|Carbonara Scrivia|Villasimius|Carbonara Di Nola|Carbonara Al Ticino|Carbonate|Carbone|Carbonera|Carbonia|Carcare|Carceri|Carcoforo|Cardano Al Campo|Carde|Cardeto|Cardinale|Cardito|Careggine|Carema|Carenno|Carentino|Careri|Caresana|Caresanablot|Carezzano|Carfizzi|Cargeghe|Cariati|Carife|Carignano|Carimate|Carinaro|Carini|Carinola|Carisio|Carisolo|Carlantino|Carlazzo|Carlentini|Carlino|Carloforte|Carlopoli|Carmagnola|Carmiano|Carmignano|Carmignano Di Brenta|Carnago|Carnate|Cornedo Allisarco|Carobbio Degli Angeli|Carolei|Carona|Caronia|Caronno Pertusella|Caronno Varesino|Carosino|Carovigno|Carovilli|Carpaneto Piacentino|Carpanzano|Carpegna|Carpenedolo|Carpeneto|Carpi|Carpiano|Carpignano Salentino|Carpignano Sesia|Cura Carpignano|Carpineti|Carpineto Sinello|Carpineto Della Nora|Carpineto Romano|Carpino|Carpinone|Carrara|Carre|Carrega Ligure|Carro|Carrodano|Carrosio|Carru|Carsoli|Cartigliano|Cartignano|Cartoceto|Cartosio|Cartura|Carugate|Carugo|Carunchio|Carvico|Carzano|Casabona|Casacalenda|Casacanditella|Casagiove|Casalanguida|Casalattico|Casalbeltrame|Casalbordino|Casalbore|Casalborgone|Casalbuono|Casalbuttano Ed Uniti|Casal Cermelli|Casalciprano|Casal Di Principe|Casalduni|Casale Litta|Casale Corte Cerro|Casale Di Scodosia|Casale Marittimo|Casale Sul Sile|Casalecchio Di Reno|Casale Cremasco Vidolasco|Casaleggio Boiro|Casaleggio Novara|Casale Monferrato|Casaleone|Casaletto Lodigiano|Casaletto Spartano|Casaletto Ceredano|Casaletto Di Sopra|Casaletto Vaprio|Casalfiumanese|Casalgrande|Casalgrasso|Casal Velino|Casalincontrada|Casalino|Casalmaggiore|Casalmaiocco|Casalmorano|Casalmoro|Casalnoceto|Villapiana|Casalnuovo Monterotaro|Casalnuovo Di Napoli|San Paolo Albanese|Casaloldo|Casalpusterlengo|Casalromano|Casalserugo|Pozzaglio Ed Uniti|Trinitapoli|Casaluce|Casalvecchio Di Puglia|Casalvecchio Siculo|Casalvieri|Casalvolone|Casalzuigno|Casamarciano|Casamassima|Casamicciola Terme|Casandrino|Casanova Lerrone|Casanova Elvo|Casanova Lonati|Casape|Casapinta|Casaprota|Casapulla|Casarano|Casargo|Casarile|Casarza Ligure|Casarsa Della Delizia|Casasco|Casatenovo|Casatisma|Casavatore|Casazza|Cascia|Casciago|Cascina|San Giacomo Vercellese|Cascinette Divrea|Casei Gerola|Caselette|Casella|Caselle Lurani|Caselle In Pittari|Caselle Torinese|Caselle Landi|Scandicci|Caserta|Casier|Casignana|Casina|Castelsilano|Castel Di Casio|Casirate Dadda|Caslino Derba|Casnate Con Bernate|Casnigo|Casola In Lunigiana|Casola Di Napoli|Casola Valsenio|Casole Delsa|Casoli|Casorate Sempione|Casorate Primo|Casorezzo|Casoria|Casorzo|Caspoggio|Cassacco|Cassago Brianza|Cassano Irpino|Cassano Delle Murge|Cassano Valcuvia|Cassano Allionio|Cassano Dadda|Cassano Magnago|Cassaro|Cassiglio|Pero|Cassina De Pecchi|Cassina Rizzardi|Cassinasco|Cassina Valsassina|Cassine|Cassinelle|Cassinetta Di Lugagnano|Cassino|Cassola|Cassolnovo|Castel Castagna|Castagnaro|Castagneto Carducci|Castagneto Po|Castagnito|Castagnole Monferrato|Castagnole Piemonte|Castagnole Delle Lanze|Castana|Castellumberto|Castano Primo|Casteggio|Castegnato|Castegnero|Castelbaldo|Castel Baronia|Castelbelforte|Castelbellino|Castelbello Ciardes|Castelbianco|Castel Boglione|Castel Bolognese|Castelbottaccio|Castelbuono|Castelcivita|Servigliano|Castelcovati|Castelcucco|Casteldaccia|Castel Daiano|Castel Dario|Castel Dazzano|Castelli Calepio|Casteldelci|Casteldelfino|Castel Del Giudice|Castel Del Monte|Castel Del Piano|Castel Del Rio|Casteldidone|Castel Di Ieri|Castel Di Iudica|Castel Di Lama|Castel Di Lucio|Castel Di Sangro|Castel Di Sasso|Castel Di Tora|Castelfidardo|Castelfiorentino|Castel Focognano|Castelfondo|Castelforte|Castelfranci|Castelfranco In Miscano|Castelfranco Emilia|Castrolibero|Castel Vittorio|Castelfranco Veneto|Castelfranco Di Sotto|Castel Frentano|Castel Gabbiano|Castel Gandolfo|Castel Giorgio|Castel Goffredo|Castelgomberto|Castelgrande|Castel Guelfo Di Bologna|Castelguglielmo|Castelguidone|Castellabate|Castellafiume|Castellalfero|Castellalto|Castellammare Di Stabia|Castellammare Del Golfo|Castellamonte|Castellana Grotte|Castellana Sicula|Castellaneta|Castellania Coppi|Castellanza|Castellarano|Castellar Guidobono|Castellaro|Castellarquato|Castellazzara|Castellazzo Bormida|Castellazzo Novarese|Castelleone Di Suasa|Castelleone|Castellero|Castelletto Cervo|Castelletto Derro|Castelletto Di Branduzzo|Castelletto Dorba|Castelletto Merli|Castelletto Molina|Castelletto Monferrato|Castelletto Stura|Castelletto Sopra Ticino|Castelletto Uzzone|Castelli|Castellina In Chianti|Castellinaldo Dalba|Castellina Marittima|Castellino Del Biferno|Castellino Tanaro|Castelliri|Castello Del Matese|Castelveccana|Castel Condino|Castello Dagogna|Castello Dargile|Castello Dellacqua|Castello Di Brianza|Castello Di Cisterna|Castello Molina Di Fiemme|Castello Di Godego|Castello Tesino|Castellucchio|Castelmauro|Castelluccio Dei Sauri|Castelluccio Inferiore|Castelverrino|Castelluccio Superiore|Castelluccio Valmaggiore|Castel Madama|Castel Maggiore|Castelmagno|Castelmarte|Castelmassa|Castel Mella|Castelmezzano|Castelmola|Castel Morrone|Castelnovetto|Castelnuovo Di Ceva|Castelnovo Bariano|Castelnuovo|Castelnovo Del Friuli|Castelnovo Di Sotto|Castelnovo Ne Monti|Castelnuovo Bozzente|Castelnuovo Della Daunia|Castelnuovo Parano|Castelnuovo Di Farfa|Castelnuovo Del Garda|Castelnuovo Belbo|Castelnuovo Berardenga|Castelnuovo Bocca Dadda|Castelnuovo Bormida|Castelnuovo Calcea|Castelnuovo Cilento|Castelnuovo Don Bosco|Castelnuovo Di Conza|Castelnuovo Di Garfagnana|Castelnuovo Di Porto|Castelnuovo Magra|Castelnuovo Nigra|Castelnuovo Rangone|Castelnuovo Scrivia|Castelnuovo Di Val Di Cecina|Castelpagano|Castelpetroso|Castelpizzuto|Castelplanio|Castelpoto|Castelraimondo|Castel Ritaldi|Castel Rocchero|Castelrotto|Castel Rozzone|Castel San Giorgio|Castel San Giovanni|Castel San Lorenzo|Castel San Niccolo|Castel San Pietro Terme|Castel San Pietro Romano|Castelsantangelo Sul Nera|Castel Santangelo|Castel Santelia|Castel San Vincenzo|Castelsaraceno|Castelsardo|Castelseprio|Castelspina|Casteltermini|Castelvecchio Di Rocca Barbena|Castelvecchio Calvisio|Castelvecchio Subequo|Castelvenere|Verres|Castelvetere Sul Calore|Castelvetere In Val Fortore|Caulonia|Castelvetrano|Castelvetro Di Modena|Castelvetro Piacentino|Castel Viscardo|Castelvisconti|Castel Volturno|Castenaso|Castenedolo|Chatillon|Castiglione Dei Pepoli|Castiglione Di Sicilia|Castiglione Messer Marino|Castiglione Olona|Castiglione Cosentino|Castiglione Chiavarese|Castiglione Di Garfagnana|Castiglione Dadda|Castiglione Del Genovesi|Castiglione Torinese|Castiglione A Casauria|Castiglione Del Lago|Castiglione Della Pescaia|Colledara|Castiglione Delle Stiviere|Castiglione Dorcia|Castiglione Falletto|Castiglione In Teverina|Castiglione Messer Raimondo|Castiglione Tinella|Castiglion Fibocchi|Castiglion Fiorentino|Castignano|Castilenti|Castino|Castione Della Presolana|Castione Andevenno|Castions Di Strada|Castiraga Vidardo|Casto|Castorano|Castrezzato|Castri Di Lecce|Castrignano De Greci|Castrignano Del Capo|Castro|Castro Dei Volsci|Castrocaro Terme E Terra Del Sole|Castrocielo|Castrofilippo|Enna|Castronno|Castronovo Di Sicilia|Castronuovo Di Santandrea|Castropignano|Castroreale|Castroregio|Castrovillari|Catania|Catanzaro|Catenanuova|Catignano|Cattolica Eraclea|Cattolica|Cautano|Cava Manara|Cava De Tirreni|Cavaglia|Cavaglietto|Cavaglio Dagogna|Cavagnolo|Cavaion Veronese|Cavalese|Cavallerleone|Cavallermaggiore|Cavallino|Cavallirio|Cavareno|Cavargna|Cavaria Con Premezzo|Cavarzere|Cavaso Del Tomba|Cavasso Nuovo|Cavatore|Jesolo|Cavazzo Carnico|Cave|Cavedago|Cavedine|Cavenago Dadda|Cavenago Di Brianza|Cavernago|Cavezzo|Cavizzana|Cavour|Cavriago|Cavriana|Cavriglia|Cazzago San Martino|Cazzago Brabbia|Cazzano Santandrea|Cazzano Di Tramigna|Ceccano|Cecima|Cecina|Cedegolo|Cedrasco|Cefala Diana|Cefalu|Ceggia|Ceglie Messapica|Celano|Celenza Sul Trigno|Celenza Valfortore|Celico|Cella Monte|Cella Dati|Cellamare|Cellara|Cellarengo|Cellatica|Celle Enomondo|Celle Di Macra|Celle Di San Vito|Celle Ligure|Celle Di Bulgheria|Celleno|Cellere|Cellino San Marco|Cellino Attanasio|Cenadi|Cenate Sopra|Cenate Sotto|Cencenighe Agordino|Cene|Ceneselli|Cengio|Centallo|Cento|Centola|Centuripe|Centrache|Cepagatti|Ceppaloni|Ceppo Morelli|Ceprano|Cerami|Ceranesi|Cerano Dintelvi|Cerano|Ceranova|Ceraso|Cercemaggiore|Cercenasco|Cercepiccola|Cerchiara Di Calabria|Cerchio|Cercino|Cercivento|Cercola|Cerda|Ceres|Cerea|Ceregnano|Cerenzia|Ceresara|Cereseto|Ceresole Alba|Ceresole Reale|Cerete|Cerreto Grue|Ceretto Lomellina|Cergnago|Ceriale|Ceriana|Ceriano Laghetto|Cerignale|Cerignola|Cerisano|Cermenate|Cermignano|Cerreto Laziale|Cernobbio|Cernusco Lombardone|Cernusco Sul Naviglio|Cerreto Desi|Cerreto Sannita|Cerreto Di Spoleto|Cerreto Dasti|Cerreto Guidi|Cerretto Langhe|Cerrina Monferrato|Cerrione|Cerro Tanaro|Cerro Al Volturno|Cerro Al Lambro|Cerro Maggiore|Cerro Veronese|Cersosimo|Certaldo|Certosa Di Pavia|Cerva|Cervara Di Roma|Cervarese Santa Croce|Cervaro|Cervasca|Cervatto|Cerveno|Cervere|Cervesina|Cerveteri|Cervia|Cervicati|Cervignano Dadda|Cervignano Del Friuli|Cervinara|Cervino|Cervo|Cerzeto|Cesa|Cesana Brianza|Cesana Torinese|Cesano Boscone|Cesano Maderno|Cesara|Cesaro|Cesate|Cesena|Cesenatico|Cesinali|Cesiomaggiore|Cesio|Cessalto|Cessaniti|Cessapalombo|Cessole|Cetara|Ceto|Cetona|Cetraro|Ceva|Cevo|Challand Saint Anselme|Challand Saint Victor|Chambave|Champdepraz|Charvensod|Cherasco|Cheremule|Chialamberto|Chiampo|Chianche|Chianciano Terme|Chianni|Chianocco|Chiaramonte Gulfi|Chiaramonti|Chiarano|Chiaravalle|Chiaravalle Centrale|Chiari|Chiaromonte|Chiauci|Chiavari|Chiavenna|Chiaverano|Chienes|Chieri|Chiesa In Valmalenco|Chiesanuova|Chies Dalpago|Chiesina Uzzanese|Chieti|Chieuti|Chieve|Chignolo Disola|Chignolo Po|Chioggia|Chiomonte|Chions|Chiopris Viscone|Chitignano|Chiuduno|Chiuppano|Chiuro|Chiusa|Chiusa Di Pesio|Chiusa Sclafani|Chiusa Di San Michele|Chiusaforte|Chiusanico|Chiusano Dasti|Chiusano Di San Domenico|Chiusavecchia|Chiusdino|Chiusi|Chiusi Della Verna|Chivasso|Cianciana|Canossa|Crocetta Del Montello|Cibiana Di Cadore|Cicagna|Cicala|Cicciano|Cicerale|Ciciliano|Cicognolo|Ciconio|Cigliano|Ciglie|Cigognola|Cigole|Cilavegna|Cimadolmo|Cimbergo|Cimina|Ciminna|Cimitile|Tavernole Sul Mella|Cimolais|Cimone|Cinaglio|Cineto Romano|Cingia De Botti|Cingoli|Cinigiano|Cinisello Balsamo|Cinisi|Cino|Cinquefrondi|Cintano|Cinte Tesino|Cinto Euganeo|Cinto Caomaggiore|Cinzano|Ciorlano|Santa Maria Del Cedro|Cipressa|Circello|Cirie|Cirigliano|Cirimido|Ciro|Ciro Marina|Cis|Cisano Bergamasco|Cisano Sul Neva|Ciserano|Cislago|Cisliano|Cison Di Valmarino|Cissone|Cisterna Dasti|Cisterna Di Latina|Cisternino|Citerna|Cittadella|Citta Della Pieve|Citta Di Castello|Cittaducale|Cittanova|Cittareale|Citta Santangelo|Cittiglio|Civate|Civezza|Civezzano|Civiasco|Cividale Del Friuli|Cividate Al Piano|Cividate Camuno|Civita|Civitacampomarano|Civita Castellana|Civita Dantino|Lanuvio|Civitaluparella|Civitanova Del Sannio|Civitanova Marche|Civitaquana|Duronia|Civitavecchia|Civitella In Val Di Chiana|Civitella Messer Raimondo|Civitella Di Romagna|Civitella Alfedena|Civitella Casanova|Civitella Dagliano|Civitella Del Tronto|Civitella Paganico|Civitella Roveto|Civitella San Paolo|Civo|Claino Con Osteno|Ubiale Clanezzo|Claut|Clauzetto|Clavesana|Claviere|Cles|Cleto|Clivio|Cloz|Clusone|Coassolo Torinese|Coazze|Coazzolo|Coccaglio|Cocconato|Cocquio Trevisago|Cocullo|Codevigo|Codevilla|Codigoro|Codogne|Codogno|Codroipo|Codrongianos|Coggiola|Cogliate|Cogne|Cogoleto|Cogollo Del Cengio|Cogorno|Colazza|Colere|Colfelice|Coli|Colico|Collalto Sabino|Collarmele|Collazzone|Colle Sannita|Colle Di Val Delsa|Colle Umberto|Collebeato|Colle Brianza|Collecchio|Collecorvino|Colle Danchise|Colledimacine|Colledimezzo|Colle Di Tora|Colleferro|Collegiove|Collegno|Collelongo|Collepardo|Collepasso|Collepietro|Colleretto Castelnuovo|Colleretto Giacosa|Collesalvetti|Colle San Magno|Collesano|Colle Santa Lucia|Colletorto|Collevecchio|Colli Del Tronto|Colli A Volturno|Colliano|Colli Sul Velino|Collinas|Collio|Collobiano|Colloredo Di Monte Albano|Colmurano|Colobraro|Cologna Veneta|Cologne|Cologno Al Serio|Cologno Monzese|Colognola Ai Colli|Colonna|Colonnella|Colonno|Colorina|Colorno|Colosimi|Colturano|Colzate|Comabbio|Comacchio|Comano|Comazzo|Comeglians|Santo Stefano Di Cadore|Comelico Superiore|Comerio|Comezzano Cizzago|Comignago|Comiso|Comitini|Comiziano|Commessaggio|Commezzadura|Como|Compiano|Comunanza|Valsolda|Comun Nuovo|Cona|Conca Della Campania|Conca Dei Marini|Conca Casale|Concamarise|Concerviano|Concesio|Concordia Sagittaria|Concordia Sulla Secchia|Concorezzo|Condofuri|Condove|Condro|Conegliano|Confienza|Configni|Conflenti|Coniolo|Conselice|Conselve|Contessa Entellina|Contigliano|Contrada|Controguerra|Controne|Contursi Terme|Conversano|Conza Della Campania|Conzano|Copertino|Copiano|Copparo|Corana|Corato|Corbara|Corbetta|Corbola|Corchiano|Corciano|Cordenons|Cordignano|Cordovado|Coreglia Ligure|Coreglia Antelminelli|Coreno Ausonio|Corfinio|Cori|Coriano|Corigliano Dotranto|Corinaldo|Corio|Corleone|Corleto Perticara|Corleto Monforte|Courmayeur|Cormano|Cormons|Corna Imagna|Cornalba|Cornaredo|Cornate Dadda|Cornedo Vicentino|Cornegliano Laudense|Corneliano Dalba|Tarquinia|Corniglio|Corno Di Rosazzo|Corno Giovine|Cornovecchio|Cornuda|Morimondo|Correggio|Correzzana|Correzzola|Corrido|Corridonia|Corropoli|Corsano|Corsico|Corsione|Cortaccia Sulla Strada Del Vino|Cortale|Cortandone|Cortanze|Cortazzone|Corte Brugnatella|Corte De Cortesi Con Cignone|Corte De Frati|Corte Franca|Cortemaggiore|Cortemilia|Corteno Golgi|Cortenova|Cortenuova|Corte Palasio|Cortiglione|Cortina Sulla Strada Del Vino|Cortino|Cortona|Corvara|Corvara In Badia|Corvino San Quirico|Corzano|Coseano|Cosenza|Cosio Darroscia|Cosio Valtellino|Cosoleto|Cossano Canavese|Cossano Belbo|Cossato|Cosseria|Cossignano|Cossogno|Cossoine|Cossombrato|Costa Vescovato|Costa Valle Imagna|Costa Di Rovigo|Costabissara|Costacciaro|Costa De Nobili|Costa Di Mezzate|Costa Serina|Costa Masnaga|Costanzana|Costarainera|Costa Volpino|Costermano Sul Garda|Costigliole Dasti|Costigliole Saluzzo|Cotignola|Crotone|Cotronei|Cottanello|Covo|Cozzo|Craco|Crandola Valsassina|Cravagliana|Cravanzana|Craveggia|Creazzo|Crecchio|Credaro|Credera Rubbiano|Crema|Cremella|Cremenaga|Cremeno|Cremia|Cremolino|Cremona|Cremosano|Crescentino|Crespadoro|Crespiatica|Crespino|Cressa|Crevacuore|Crevalcore|Crevoladossola|Crispano|Crispiano|Crissolo|Crocefieschi|Crodo|Crognaleto|Cropalati|Cropani|Crosia|Crosio Della Valle|Crotta Dadda|Crova|Croviana|Crucoli|Cuasso Al Monte|Veronella|Cuccaro Vetere|Cucciago|Cuceglio|Cuggiono|Cugliate Fabiasco|Cuglieri|Cugnoli|Cumiana|Cumignano Sul Naviglio|Cunardo|Cuneo|Cunico|Cuorgne|Cupello|Cupra Marittima|Cupramontana|Curcuris|Cureggio|Curiglia Con Monteviasco|Curinga|Curino|Curno|Curon Venosta|Cursi|Curtarolo|Curtatone|Curti|Cusago|Cusano Mutri|Cusano Milanino|Cusino|Cusio|Custonaci|Cutro|Cutrofiano|Cuveglio|Cuvio|Daiano|Dairago|Dalmine|Dambel|Danta Di Cadore|Darfo Boario Terme|Dasa|Davagna|Daverio|Davoli|Dazio|Decimomannu|Decimoputzu|Decollatura|Dego|Deiva Marina|Delebio|Delia|Delianuova|Deliceto|Dello|Demonte|Denice|Denno|Dernice|Derovere|Deruta|Dervio|Desana|Desenzano Del Garda|Desio|Desulo|Diamante|Scigliano|Diano Dalba|Teggiano|Diano Arentino|Diano Castello|Diano Marina|Diano San Pietro|Dicomano|Dignano|Dinami|Dipignano|Diso|Divignano|Dizzasco|Dobbiaco|Doberdo Del Lago|Dogliani|Dogliola|Dogna|Dolce|Dolceacqua|Dolcedo|Dolegna Del Collio|Dolianova|San Dorligo Della Valle Dolina|Dolo|Dolzago|Domanico|Domaso|Domegge Di Cadore|Domicella|Domodossola|Domus De Maria|Domusnovas|Donnas|Donato|Dongo|Donori|Dorgali|Dorio|Dormelletto|Dorno|Dorzano|Dosolo|Dossena|Dosso Del Liro|Doues|Dovadola|Dovera|Dozza|Dragoni|Drapia|Drena|Drenchia|Dresano|Dro|Dronero|Druento|Druogno|Dualchi|Dubino|Dueville|Dugenta|Duino Aurisina|Dumenza|Duno|Durazzano|Dusino San Michele|Eboli|Edolo|Egna|Elice|Elini|Ello|Elmas|Elva|Emarese|Empoli|Endine Gaiano|Enego|Enemonzo|Entracque|Entratico|Envie|Episcopia|Eraclea|Erba|Erbe|Erbezzo|Erbusco|Erchie|Erice|Erli|Erto E Casso|Erve|Esanatoglia|Escalaplano|Escolca|Exilles|Esine|Esino Lario|Esperia|Esporlatu|Este|Esterzili|Etroubles|Eupilio|Fabbrica Curone|Fabbrico|Fabriano|Fabrica Di Roma|Fabrizia|Fabro|Faedis|Faedo Valtellino|Faedo|Faenza|Faeto|Fagagna|Faggeto Lario|Faggiano|Fagnano Castello|Fagnano Alto|Fagnano Olona|Fai Della Paganella|Faicchio|Falcade|Falciano Del Massico|Falconara Marittima|Falconara Albanese|Falcone|Faleria|Falerna|Falerone|Fallo|Faloppio|Falvaterra|Falzes|Fanano|Fanna|Fano|Fano Adriano|Fara Gera Dadda|Fara Olivana Con Sola|Fara Novarese|Fara In Sabina|Fara Filiorum Petri|Fara San Martino|Fara Vicentino|Fardella|Farigliano|Farindola|Farini|Farnese|Farra Disonzo|Farra Di Soligo|Fasano|Fascia|Fauglia|Faule|Favale Di Malvaro|Valsinni|Favara|Favignana|Favria|Orco Feglino|Feisoglio|Feletto|Felino|Felitto|Felizzano|Feltre|Fenegro|Fenestrelle|Fenis|Ferentillo|Ferentino|Ferla|Fermignano|Fermo|Ferno|Feroleto Antico|Feroleto Della Chiesa|Pianopoli|Ferrandina|Ferrara|Ferrara Di Monte Baldo|Ferrazzano|Ferrera Di Varese|Ferrera Erbognone|Moncenisio|Ferrere|Ferriere|Ferruzzano|Fraconalto|Fiamignano|Fiano Romano|Fiano|Fiastra|Fiave|Poggio San Vicino|Ficarazzi|Ficarolo|Ficarra|Ficulle|Fie Allo Sciliar|Fierozzo|Fiesco|Fiesole|Fiesse|Fiesso Umbertiano|Fiesso Dartico|Figino Serenza|Figline Vegliaturo|Gonnosno|Filacciano|Filadelfia|Filago|Filandari|Filattiera|Filettino|Filetto|Filiano|Filighera|Filignano|Filogaso|Filottrano|Finale Emilia|Finale Ligure|Fino Del Monte|Fino Mornasco|Fiorano Al Serio|Fiorano Modenese|Fiorano Canavese|Fiorenzuola Darda|Firenze|Firenzuola|Firmo|Fisciano|Fiumalbo|Fiumara|Fiume Veneto|Fiumedinisi|Fiumefreddo Di Sicilia|Fiumefreddo Bruzio|Fiuminata|Fivizzano|Flaibano|Flero|Floresta|Floridia|Florinas|Flumeri|Fluminimaggiore|Flussio|Fobello|Foggia|Foglianise|Fogliano Redipuglia|Foglizzo|Foiano Della Chiana|Foiano Di Val Fortore|Folgaria|Folignano|Foligno|Follina|Follo|Follonica|Fombio|Fondachelli Fantina|Fondi|Fondo|Fonni|Fontainemore|Fontana Liri|Fontanelice|Fontanafredda|Fontanarosa|Fontanella|Fontanellato|Fontanelle|Fontaneto Dagogna|Fontanetto Po|Fontanigorda|Fontanile|Fontaniva|Fonte|Fontecchio|Fontechiari|Fontegreca|Fonteno|Fontevivo|Fonzaso|Foppolo|Forano|San Giovanni Teatino|Force|Forchia|Forcola|Fordongianus|Forenza|Foresto Sparso|Forgaria Nel Friuli|Forino|Forio|Forli Del Sannio|Forli|Forlimpopoli|Formazza|Formello|Formia|Formicola|Formigara|Formigine|Formigliana|Fornace|Fornelli|Tonezza Del Cimone|Forni Avoltri|Forni Di Sopra|Forni Di Sotto|Forno Canavese|Fornovo San Giovanni|Fornovo Di Taro|Forte Dei Marmi|Fortezza|Fortunago|Forza Dagro|Fosciandora|Fosdinovo|Fossa|Fossalto|Fossacesia|Fossalta Di Piave|Fossalta Di Portogruaro|Fossano|Fossato Serralta|Fossato Di Vico|Montebello Jonico|Fosso|Fossombrone|Foza|Frabosa Soprana|Frabosa Sottana|Fragagnano|Fragneto Labate|Fragneto Monforte|Fraine|Framura|Francavilla Bisio|Francavilla Dete|Francavilla Fontana|Francavilla Angitola|Francavilla Al Mare|Francavilla Marittima|Francavilla Di Sicilia|Francavilla In Sinni|Francica|Francofonte|Francolise|Frascaro|Frascarolo|Frascati|Frascineto|Frassilongo|Frassinelle Polesine|Frassinello Monferrato|Frassineto Po|Frassinetto|Frassino|Frassinoro|Frasso Telesino|Frasso Sabino|Umbertide|Fratta Todina|Fratta Polesine|Frattamaggiore|Frattaminore|Fratte Rosa|Frazzano|Fregona|Fresagrandinaria|Fresonara|Frigento|Frignano|Villa Di Briano|Frinco|Frisa|Frisanco|Front|Frontino|Frontone|Frosinone|Frosolone|Frossasco|Frugarolo|Fubine Monferrato|Fucecchio|Fuipiano Valle Imagna|Fumane|Fumone|Funes|Furci|Furci Siculo|Furnari|Furore|Furtei|Fuscaldo|Fusignano|Fusine|Futani|Gabbioneta Binanuova|Gabiano|Gabicce Mare|Gaby|Gadesco Pieve Delmona|Gadoni|Gaeta|Gaggi|Gaggiano|Gaggio Montano|Gaglianico|Gagliano Castelferrato|Gagliano Aterno|Gagliano Del Capo|Gagliato|Gagliole|Gaiarine|Gaiba|Gaiola|Gaiole In Chianti|Gairo|Gais|Galati Mamertino|Galatina|Galatone|Galatro|Galbiate|Galeata|Galgagnano|Gallarate|Gallese|Galliate Lombardo|Galliate|Galliavola|Gallicano|Gallicano Nel Lazio|Gallicchio|Galliera|Galliera Veneta|Gallinaro|Gallio|Gallipoli|Gallo Matese|Gallodoro|Galluccio|Galtelli|Galzignano Terme|Gamalero|Gambara|Gambarana|Gambasca|Gambassi Terme|Gambatesa|Gambellara|Gamberale|Gambettola|Gambolo|Gambugliano|Gandellino|Gandino|Gandosso|Gangi|Garaguso|Garbagna|Garbagna Novarese|Garbagnate Milanese|Garbagnate Monastero|Garda|Gardone Riviera|Gardone Val Trompia|Garessio|Gargallo|Gargazzone|Gargnano|Garlasco|Garlate|Garlenda|Garniga Terme|Garzeno|Garzigliana|Gasperina|Gassino Torinese|Gattatico|Gatteo|Gattinara|Gavardo|Gavello|Gaverina Terme|Gavi|Gavignano|Gavirate|Gavoi|Gavorrano|Gazoldo Degli Ippoliti|Gazzada Schianno|Gazzaniga|Gazzo|Gazzo Veronese|Gazzola|Gazzuolo|Gela|Gemmano|Gemona Del Friuli|Gemonio|Genazzano|Genga|Genivolta|Genola|Genoni|Genova|Genuri|Genzano Di Lucania|Genzano Di Roma|Gera Lario|Gerace|Locri|Geraci Siculo|Gerano|Gerenzago|Gerenzano|Gergei|Germagnano|Germagno|Germignaga|Gerocarne|Gerola Alta|Gerre De Caprioli|Gesico|Gessate|Gessopalena|Gesturi|Gesualdo|Ghedi|Ghemme|Ghiffa|Ghilarza|Ghisalba|Ghislarengo|Giacciano Con Baruchella|Giaglione|Gianico|Giano Vetusto|Giano Dellumbria|Giardinello|Giardini Naxos|Giarole|Giarratana|Giarre|Giave|Giaveno|Giavera Del Montello|Giba|Gibellina|Gifflenga|Giffone|Giffoni Sei Casali|Giffoni Valle Piana|Gignese|Gignod|Gildone|Gimigliano|Ginestra|Ginestra Degli Schiavoni|Ginosa|Gioi|Gioia Del Colle|Gioia Sannitica|Gioia Dei Marsi|Gioia Tauro|Gioiosa Marea|Gioiosa Ionica|Giove|Giovinazzo|Giovo|Girasole|Girifalco|Gissi|Giuggianello|Giugliano In Campania|Giuliana|Giuliano Teatino|Giuliano Di Roma|Giulianova|Giungano|Giurdignano|Giussago|Giussano|Giustenice|Giustino|Giusvalla|Givoletto|Gizzeria|Glorenza|Sesta Godano|Godega Di Santurbano|Godiasco Salice Terme|Godrano|Goito|Golasecca|Golferenzo|Gombito|Gonars|Goni|Gonnosfanadiga|Gonnesa|Gonnoscodina|Gonnostramatza|Gonzaga|Gordona|Gorga|Gorgo Al Monticano|Gorgoglione|Gorgonzola|Goriano Sicoli|Gorizia|Gorlago|Gorla Maggiore|Gorla Minore|Gorle|Gornate Olona|Gorno|Goro|Gorreto|Gorzegno|Gosaldo|Gossolengo|Gottasecca|Gottolengo|Govone|Gozzano|Gradara|Gradisca Disonzo|Grado|Gradoli|Graffignana|Graffignano|Graglia|Gragnano|Gragnano Trebbiense|Grammichele|Grana|Granarolo Dellemilia|Grandate|Grandola Ed Uniti|Graniti|Granozzo Con Monticello|Grantola|Grantorto|Granze|Grassano|Grassobbio|Gratteri|Gravellona Lomellina|Gravellona Toce|Gravere|Gravina In Puglia|Gravina Di Catania|Grazzanise|Grazzano Badoglio|Greccio|Greci|Greggio|Gremiasco|Gressan|Gressoney La Trinite|Gressoney Saint Jean|Greve In Chianti|Grezzago|Grezzana|Griante|Gricignano Di Aversa|Grignasco|Grigno|Grimacco|Grimaldi|Grinzane Cavour|Grisignano Di Zocco|Grisolia|Grizzana Morandi|Grognardo|Gromo|Grondona|Grone|Grontardo|Gropello Cairoli|Gropparello|Groscavallo|Grosio|Grosotto|Grosseto|Grosso|Grottaferrata|Grottaglie|Grottaminarda|Grottammare|Grottazzolina|Grotte|Grotte Di Castro|Grotteria|Grottole|Grottolella|Gruaro|Grugliasco|Grumello Cremonese Ed Uniti|Grumello Del Monte|Grumento Nova|Grumo Appula|Grumo Nevano|Grumolo Delle Abbadesse|Guagnano|Gualdo|Gualdo Cattaneo|Gualdo Tadino|Gualtieri|Gualtieri Sicamino|Guamaggiore|Guanzate|Guarcino|Guardabosone|Guardamiglio|Guardavalle|Guarda Veneta|Guardea|Guardia Piemontese|Guardiagrele|Guardialfiera|Guardia Lombardi|Guardia Perticara|Guardiaregia|Guardia Sanframondi|Guardistallo|Guarene|Guasila|Guastalla|Guazzora|Gubbio|Gudo Visconti|Guglionesi|Guidizzolo|Guidonia Montecelio|Guiglia|Siziano|Guilmi|Gurro|Guspini|Gussago|Gussola|Hone|Jacurso|Idro|Iglesias|Igliano|Ilbono|Illasi|Illorai|Imbersago|Imer|Imola|Imperia|Impruneta|Inarzo|Incisa Scapaccino|Incudine|Induno Olona|Ingria|Intragna|Introbio|Introd|Introdacqua|Inverigo|Inverno E Monteleone|Inverso Pinasca|Inveruno|Invorio|Inzago|Jolanda Di Savoia|Ionadi|Irgoli|Irma|Irsina|Isasca|Isca Sullo Ionio|Ischia|Ischia Di Castro|Ischitella|Iseo|Isera|Isernia|Isili|Isnello|Isola Dasti|Isola Di Capo Rizzuto|Isola Del Liri|Isola Del Cantone|Madesimo|Isola Del Gran Sasso Ditalia|Isolabella|Isolabona|Isola Del Giglio|Isola Della Scala|Isola Delle Femmine|Isola Del Piano|Isola Di Fondra|Isola Vicentina|Isola Dovarese|Isola Rizza|Isola Santantonio|Isole Tremiti|Isorella|Ispani|Ispica|Ispra|Issiglio|Issime|Isso|Issogne|Vasto|Istrana|Itala|Itri|Ittireddu|Ittiri|Ivrea|Izano|Jelsi|Jenne|Jerago Con Orago|Jerzu|Jesi|Joppolo|Joppolo Giancaxio|Jovencan|Labico|Labro|La Cassa|Lacchiarella|Lacco Ameno|Lacedonia|Laces|Laconi|Laerru|Laganadi|Laghi|Laglio|Lagnasco|Lago|Lagonegro|Lagosanto|Lagundo|Lajatico|Laigueglia|Lainate|Laino|Laino Borgo|Laino Castello|Laion|Laives|Lallio|La Loggia|Lama Dei Peligni|La Maddalena|Lama Mocogno|Lambrugo|Lamon|La Morra|Lampedusa E Linosa|Lamporecchio|Lamporo|Lana|Lanciano|Landiona|Landriano|Langhirano|Langosco|Lanusei|Lanzada|Lanzo Torinese|Lapedona|Lapio|Lappano|Larciano|Lardirago|Larino|Lasa|La Salle|Lascari|Lasnigo|La Spezia|Las Plassas|Lastebasse|Lastra A Signa|Latera|Laterza|La Thuile|Latiano|Latina|Latisana|Latronico|Lattarico|Lauco|Laureana Di Borrello|Laureana Cilento|Lauregno|Laurenzana|Lauria|Lauriano|Laurino|Laurito|Lauro|Lavagna|Lavagno|La Valle Agordina|La Valle|Lavarone|Lavello|Lavena Ponte Tresa|Laveno Mombello|Lavenone|Laviano|Lavis|Lazise|Lazzate|Lecce Nei Marsi|Lecce|Lecco|Leffe|Leggiuno|Legnago|Legnano|Legnaro|Lei|Leini|Leivi|Lemie|Lendinara|Leni|Lenna|Leno|Lenola|Lenta|Lentate Sul Seveso|Lentella|Lentini|Leonessa|Leonforte|Leporano|Lequile|Lequio Tanaro|Lequio Berria|Lercara Friddi|Lerici|Lerma|Lesa|Lesegno|Lesignano De Bagni|Terenzo|Lesina|Lesmo|Lessolo|Lestizza|Letino|Letojanni|Lettere|Lettomanoppello|Lettopalena|Levanto|Levate|Leverano|Levice|Levico Terme|Levone|Lezzeno|Liberi|Librizzi|Licata|Licciana Nardi|Licenza|Licodia Eubea|Lierna|Lignana|Lignano Sabbiadoro|Lillianes|Limana|Limatola|Limbadi|Limbiate|Limena|Limido Comasco|Limina|Limone Sul Garda|Limone Piemonte|Limosano|Linarolo|Linguaglossa|Lioni|Lipari|Lipomo|Lirio|Liscate|Liscia|Lisciano Niccone|Lisio|Lissone|Milena|Liveri|Livigno|Livinallongo Del Col Di Lana|Livo|Livo|Livorno|Livorno Ferraris|Livraga|Lizzanello|Lizzano|Loano|Loazzolo|Locana|Locate Varesino|Locate Di Triulzi|Locatello|Loceri|Locorotondo|Loculi|Lode|Lodi|Lodine|Lodi Vecchio|Lodrino|Lograto|Loiano|Lomagna|Lomazzo|Lombardore|Lombriasco|Lomello|Lona Lases|Lonate Ceppino|Lonate Pozzolo|Londa|Longano|Longare|Longhena|Longi|Longiano|Longobardi|Longobucco|Longone Al Segrino|Porto Azzurro|Longone Sabino|Lonigo|Loranze|Loreggia|Loreglia|Lorenzago Di Cadore|Loreo|Loreto|Loreto Aprutino|Loria|Loro Ciuffenna|Loro Piceno|Lorsica|Losine|Lotzorai|Lovere|Lovero|Lozio|Lozza|Lozzo Di Cadore|Lozzo Atestino|Lozzolo|Lubriano|Lucca Sicula|Lucca|Lucera|Lucignano|Lucinasco|Lucito|Luco Dei Marsi|Lucoli|Lugagnano Val Darda|Lugnano In Teverina|Lugo|Lugo Di Vicenza|Luino|Luisago|Lula|Lumarzo|Lumezzane|Lunamatrona|Lunano|Lungro|Luogosano|Luogosanto|Lupara|Lurago Derba|Lurago Marinone|Lurano|Luras|Lurate Caccivio|Lusciano|Luserna|Luserna San Giovanni|Lusernetta|Lusevera|Lusia|Lusiglie|Luson|Lustra|Luvinate|Luzzana|Luzzara|Luzzi|Maccastorna|Macchia Disernia|Macchiagodena|Macchia Valfortore|Macello|Macerata|Macerata Campania|Macerata Feltria|Macherio|Maclodio|Macomer|Macra|Macugnaga|Maddaloni|Madignano|Madone|Madonna Del Sasso|Maenza|Mafalda|Magasa|Magenta|Maggiora|Magherno|Magione|Magisano|Magliano Di Tenna|Magliano Alpi|Magliano Alfieri|Magliano In Toscana|Magliano De Marsi|Magliano Sabina|Magliano Romano|Magliano Vetere|Maglie|Magliolo|Maglione|Magnacavallo|Magnago|Magnano In Riviera|Magnano|Magomadas|Magre Sulla Strada Del Vino|Magreglio|Majano|Maida|Maiera|Maierato|Maiolati Spontini|Maiolo|Maiori|Mairago|Mairano|Maissana|Malagnino|Malalbergo|Malborghetto Valbruna|Malcesine|Male|Malegno|Maleo|Malesco|Maletto|Malfa|Malgesso|Malgrate|Malito|Mallare|Malles Venosta|Malnate|Malo|Malonno|Malosco|Maltignano|Malvagna|Malvicino|Malvito|Mammola|Mamoiada|Manciano|Mandanici|Mandas|Mandatoriccio|Mandello Del Lario|Mandello Vitta|Manduria|Manerba Del Garda|Manerbio|Manfredonia|Mango|Mangone|Maniago|Manocalzati|Manoppello|Mansue|Manta|Mantello|Mantova|Manzano|Manziana|Mapello|Mara|Maracalagonis|Maranello|Marano Sul Panaro|Marano Di Napoli|Marano Ticino|Marano Equo|Marano Lagunare|Marano Di Valpolicella|Marano Vicentino|Marano Marchesato|Marano Principato|Maranzana|Maratea|Marcallo Con Casone|Marcaria|Marcedusa|Marcellina|Marcellinara|Marcetelli|Marcheno|Marchirolo|Marciana|Marciana Marina|Marcianise|Marciano Della Chiana|Marcignago|Marcon|Marebbe|Marene|Mareno Di Piave|Marentino|Maretto|Margarita|Margherita Di Savoia|Margno|Mariana Mantovana|Mariano Comense|Mariano Del Friuli|Marianopoli|Mariglianella|Marigliano|Marina Di Gioiosa Ionica|Marineo|Marino|Marlengo|Marliana|Marmentino|Marmirolo|Marmora|Marnate|Marone|Maropati|Marostica|Marradi|Marrubiu|Marsaglia|Marsala|Marsciano|Marsico Nuovo|Marsicovetere|Marta|Martano|Martellago|Martello|Martignacco|Martignana Di Po|Martignano|Martina Franca|Martinengo|Martiniana Po|Martinsicuro|Martirano|Martirano Lombardo|Martis|Martone|Marudo|Maruggio|Marzano Di Nola|Marzano Appio|Marzano|Marzi|Marzio|Masate|Mascali|Mascalucia|Maschito|Masciago Primo|Maser|Masera|Masera Di Padova|Maserada Sul Piave|Masi|Masio|Masi Torello|Maslianico|Masone|Massa Fermana|Massa Dalbe|Massa|Massa Martana|Massa E Cozzile|Massafra|Massalengo|Massa Lombarda|Massa Lubrense|Massa Marittima|Massanzago|Massarosa|Massazza|Massello|Masserano|San Marco Evangelista|Massignano|Massimeno|Massimino|Massino Visconti|Massiola|Masullas|Matelica|Matera|Mathi|Matino|Matrice|Mattie|Mattinata|Mazara Del Vallo|Mazzano|Mazzano Romano|Mazzarino|Mazzarra Santandrea|Mazze|Mazzin|Mazzo Di Valtellina|Meana Sardo|Meana Di Susa|Meda|Mede|Medea|Medesano|Medicina|Mediglia|Medolago|Medole|Medolla|Meduna Di Livenza|Meduno|Megliadino San Vitale|Meina|Melara|Melazzo|Meldola|Mele|Melegnano|Melendugno|Meleti|Melfi|Melicucca|Melicucco|Melilli|Melissa|Melissano|Melito Irpino|Melito Di Napoli|Melito Di Porto Salvo|Melizzano|Melle|Mello|Silea|Melpignano|Meltina|Melzo|Menaggio|Menconico|Mendatica|Mendicino|Menfi|Mentana|Meolo|Merana|Merano|Merate|Mercallo|Mercatello Sul Metauro|Mercatino Conca|Novafeltria|Mercato San Severino|Mercato Saraceno|Mercenasco|Mercogliano|Mereto Di Tomba|Mergo|Mergozzo|Meri|Merlara|Merlino|Merone|Mesagne|Mese|Mesenzana|Mesero|Mesola|Mesoraca|Messina|Mestrino|Meta|Mezzago|Mezzana Mortigliengo|Mezzana|Mezzana Bigli|Mezzana Rabattone|Mezzane Di Sotto|Mezzanego|Mezzanino|Mezzano|Mezzenile|Mezzocorona|Mezzojuso|Mezzoldo|Mezzolombardo|Mezzomerico|Miagliano|Miane|Miasino|Miazzina|Micigliano|Miggiano|Miglianico|Miglierina|Miglionico|Mignanego|Mignano Monte Lungo|Milano|Milazzo|Mileto|Milis|Militello In Val Di Catania|Militello Rosmarino|Millesimo|Milo|Milzano|Mineo|Minerbe|Minerbio|Minervino Murge|Minervino Di Lecce|Minori|Minturno|Minucciano|Mioglia|Mira|Mirabella Eclano|Mirabella Imbaccari|Mirabello Monferrato|Mirabello Sannitico|Miradolo Terme|Miranda|Mirandola|Mirano|Mirto|Misano Di Gera Dadda|Misano Adriatico|Misilmeri|Misinto|Missaglia|Missanello|Misterbianco|Mistretta|Moasca|Moconesi|Modena|Modica|Modigliana|Tavazzano Con Villavesco|Modolo|Modugno|Moena|Moggio|Moggio Udinese|Moglia|Mogliano|Mogliano Veneto|Mogorella|Ruinas|Mogoro|Moiano|Moimacco|Moio De Calvi|Moio Alcantara|Moio Della Civitella|Moiola|Mola Di Bari|Molare|Molazzana|Molfetta|Molinara|Molinella|Molini Di Triora|Molino Dei Torti|Molise|Moliterno|Mollia|Porto Empedocle|Molochio|Molteno|Moltrasio|Molveno|Mombaldone|Mombarcaro|Mombaroccio|Mombaruzzo|Mombasiglio|Mombello Monferrato|Mombello Di Torino|Mombercelli|Momo|Mompantero|Mompeo|Momperone|Monacilioni|Monale|Monasterace|Monastero Bormida|Monastero Di Vasco|Monastero Di Lanzo|Monasterolo Del Castello|Monasterolo Casotto|Monasterolo Di Savigliano|Monastier Di Treviso|Monastir|Moncalieri|Moncalvo|Moncestino|Monchiero|Monchio Delle Corti|Moncrivello|Moncucco Torinese|Mondaino|Mondavio|Mondolfo|Mondovi|Mondragone|Moneglia|Monesiglio|Monfalcone|Serramazzoni|Monforte Dalba|Monforte San Giorgio|Monfumo|Mongardino|Monghidoro|Mongiana|Mongiardino Ligure|Montjovet|Mongiuffi Melia|Mongrando|Mongrassano|Monguelfo Tesido|Monguzzo|Moniga Del Garda|Monleale|Monno|Monopoli|Monreale|Monrupino|Monsampietro Morico|Monsampolo Del Tronto|Monsano|Monselice|Monserrato|Monsummano Terme|Monta|Montabone|Montacuto|Montafia|Montagano|Montagna|Montagna In Valtellina|Montagnana|Montagnareale|Montaguto|Montaione|Montalbano Jonico|Montalbano Elicona|Ostra|Montaldeo|Montaldo Bormida|Montaldo Di Mondovi|Montaldo Torinese|Montaldo Roero|Montaldo Scarampi|Montale|Montalenghe|Montallegro|Montalto Delle Marche|Montalto Uffugo|Montalto Pavese|Montalto Di Castro|Montalto Dora|Montanaro|Montanaso Lombardo|Montanera|Montano Antilia|Montano Lucino|Montappone|Montaquila|Montasola|Montauro|Montazzoli|Monte Cremasco|Monte Argentario|Montebello Della Battaglia|Montebello Di Bertona|Montebello Vicentino|Montebelluna|Montebruno|Montebuono|Montecalvo Irpino|Montecalvo Versiggia|Montecalvo In Foglia|Montecarlo|Montecarotto|Montecassiano|Montecastello|Monte Castello Di Vibio|Montecastrilli|Montecatini Val Di Cecina|Monte Cavallo|Montecchia Di Crosara|Montecchio|Montecchio Emilia|Montecchio Maggiore|Montecchio Precalcino|Monte Cerignone|Montechiaro Dasti|Montechiaro Dacqui|Montichiari|Montechiarugolo|Monteciccardo|Montecilfone|Monte Compatri|Montecopiolo|Montecorice|Montecorvino Pugliano|Montecorvino Rovella|Montecosaro|Montecrestese|Montecreto|Monte Di Malo|Montedinove|Monte Di Procida|Montedoro|Montefalcione|Montefalco|Montefalcone Appennino|Montefalcone Di Val Fortore|Montefalcone Nel Sannio|Montefano|Montefelcino|Monteferrante|Montefiascone|Montefino|Montefiore Dellaso|Montefiore Conca|Montefiorino|Monteflavio|Monteforte Irpino|Monteforte Cilento|Monteforte Dalpone|Montefortino|Montefranco|Montefredane|Montefusco|Montegabbione|Montegalda|Montegaldella|Montegallo|Monte Giberto|Montegioco|Montegiordano|Montegiorgio|Montegranaro|Montegridolfo|Monte Grimano Terme|Montegrino Valtravaglia|Montegrosso Dasti|Montegrosso Pian Latte|Montegrotto Terme|Monteiasi|Monte Isola|Montelabbate|Montelanico|Montelapiano|Monteleone Di Fermo|Vibo Valentia|Monteleone Di Puglia|Monteleone Di Spoleto|Monteleone Sabino|Monteleone Rocca Doria|Monteleone Dorvieto|Montelepre|Montelibretti|Montella|Montello|Montelongo|Montelparo|Montelupo Albese|Montelupo Fiorentino|Montelupone|Montemaggiore Belsito|Montemagno|Santarcangelo Trimonte|Montemale Di Cuneo|Montemarano|Montemarciano|Monte Marenzo|Montemarzino|Montemesola|Montemezzo|Montemignaio|Montemiletto|Pollenza|Montemilone|Montemitro|Montemonaco|Montemurlo|Montemurro|Montenars|Montenero Di Bisaccia|Montenerodomo|Montenero Sabino|Montenero Val Cocchiara|Ostra Vetere|Monteodorisio|Roseto Degli Abruzzi|Montepaone|Monteparano|Monte Porzio|Monte Porzio Catone|Monteprandone|Montepulciano|Monterchi|Montereale|Montereale Valcellina|Monterenzio|Monteriggioni|Monte Rinaldo|Monte Roberto|Monteroduni|Monte Romano|Monteroni Di Lecce|Monteroni Darbia|Monterosi|Monterosso Calabro|Monterosso Grana|Monterosso Al Mare|Monterosso Almo|Monterotondo|Monterotondo Marittimo|Monterubbiano|Monte San Biagio|Monte San Giacomo|Monte San Giovanni In Sabina|Monte San Giovanni Campano|Monte San Giusto|Monte San Martino|Montesano Salentino|Montesano Sulla Marcellana|Monte San Pietrangeli|Monte San Pietro|Monte San Savino|Monte Santa Maria Tiberina|Monte Santangelo|Potenza Picena|Monte San Vito|Montesarchio|Montescaglioso|Montescano|Montescheno|Montescudaio|Montese|Montesegale|Montesilvano|Montespertoli|Monteu Da Po|Monte Urano|Monteu Roero|Montevago|Montevarchi|Montevecchia|Monteverde|Monteverdi Marittimo|Monteviale|Monte Vidon Combatte|Monte Vidon Corrado|Montezemolo|Monti|Montiano|Monticello Dalba|Monticelli Pavese|Monticelli Dongina|Monticelli Brusati|Monticello Brianza|Monticello Conte Otto|Monticiano|Montieri|Montignoso|Montirone|Montodine|Montoggio|Montone|Montopoli In Val Darno|Montopoli Di Sabina|Montorfano|Montorio Nei Frentani|Montorio Al Vomano|Montorio Romano|Montorso Vicentino|Montottone|Montresta|Montu Beccaria|Monvalle|Monza|Monzambano|Monzuno|Morano Sul Po|Morano Calabro|Moransengo|Moraro|Morazzone|Morbegno|Morbello|Morciano Di Romagna|Morciano Di Leuca|Morcone|Mordano|Morengo|Mores|Moresco|Moretta|Morfasso|Morgano|Morgex|Morgongiori|Mori|Moriago Della Battaglia|Moricone|Morigerati|Morino|Moriondo Torinese|Morlupo|Mormanno|Mornago|Mornese|Mornico Al Serio|Mornico Losana|Morolo|Morozzo|Morra De Sanctis|Morro Dalba|Morro Reatino|Morro Doro|Morrone Del Sannio|Morrovalle|Morsano Al Tagliamento|Morsasco|Mortara|Mortegliano|Morterone|Moruzzo|Moscazzano|Moschiano|Mosciano Santangelo|Moscufo|Moso In Passiria|Mossa|Motta Di Livenza|Motta Baluffi|Motta Camastra|Motta Daffermo|Motta De Conti|Mottafollone|Mottalciata|Motta Montecorvino|Motta San Giovanni|Motta Santa Lucia|Motta Santanastasia|Motta Visconti|Mottola|Mozzagrogna|Mozzanica|Mozzate|Mozzecane|Mozzo|Muccia|Muggia|Muggio|Mugnano Del Cardinale|Mugnano Di Napoli|Mulazzano|Mulazzo|Mura|Muravera|Murazzano|Salcedo|Murello|Murialdo|Murisengo|Murlo|Muro Leccese|Muro Lucano|Muros|Muscoline|Musei|Musile Di Piave|Musso|Mussolente|Mussomeli|Pineto|Muzzana Del Turgnano|Muzzano|Nago Torbole|Nalles|Nanto|Napoli|Narbolia|Narcao|Nardo|Nardodipace|Narni|Naro|Narzole|Nasino|Naso|Naturno|Nave|Navelli|Naz Sciaves|Nazzano|Ne|Nebbiuno|Negrar Di Valpolicella|Neirone|Neive|Nembro|Nemi|Nemoli|Neoneli|Nepi|Nereto|Nerola|Nervesa Della Battaglia|Nerviano|Nespolo|Nesso|Netro|Nettuno|Neviano|Neviano Degli Arduini|Neviglie|Niardo|Nibbiola|Nibionno|Nichelino|Nicolosi|Nicorvo|Nicosia|Nicotera|Niella Belbo|Niella Tanaro|Nimis|Niscemi|Nissoria|Nizza Di Sicilia|Nizza Monferrato|Noale|Noasca|Nocara|Nocciano|Nocera Terinese|Nocera Umbra|Nocera Inferiore|Nocera Superiore|Noceto|Noci|Nociglia|Noepoli|Nogara|Nogaredo|Nogarole Rocca|Nogarole Vicentino|Noicattaro|Nola|Nole|Noli|Nomaglio|Nomi|Nonantola|None|Nonio|Noragugume|Norbello|Norcia|Norma|Nosate|Ponte Nossa|Notaresco|Noto|Nova Milanese|Novaledo|Novalesa|Nova Levante|Nova Ponente|Novara Di Sicilia|Novara|Novate Milanese|Novate Mezzola|Nove|Novedrate|Novellara|Novello|Noventa Padovana|Noventa Di Piave|Noventa Vicentina|Novi Ligure|Novi Di Modena|Novi Velia|Noviglio|Novoli|Nucetto|Nughedu Santa Vittoria|Nughedu San Nicolo|Nule|Nulvi|Numana|Nuoro|Nurachi|Nuragus|Nurallao|Nuraminis|Nureci|Nurri|Nus|Nusco|Nuvolento|Nuvolera|Nuxis|Occhieppo Inferiore|Occhieppo Superiore|Occhiobello|Occimiano|Ocre|Odalengo Grande|Odalengo Piccolo|Oderzo|Odolo|Ofena|Offagna|Offanengo|Offida|Offlaga|Oggebbio|Oggiona Con Santo Stefano|Oggiono|Oglianico|Ogliastro Cilento|Oyace|Olbia|Olcenengo|Oldenico|Oleggio|Oleggio Castello|Olevano Di Lomellina|Olevano Romano|Olevano Sul Tusciano|Olgiate Comasco|Olgiate Molgora|Olgiate Olona|Olginate|Oliena|Oliva Gessi|Olivadi|Oliveri|Oliveto Lucano|Oliveto Citra|Oliveto Lario|Olivetta San Michele|Olivola|Ollastra|Ollolai|Ollomont|Olmedo|Olmeneta|Olmo Gentile|Olmo Al Brembo|Oltre Il Colle|Oltressenda Alta|Oltrona Di San Mamette|Olzai|Ome|Omegna|Omignano|Onani|Onano|Oncino|Oneta|Onifai|Oniferi|Ono San Pietro|Onore|Onzo|Opera|Opi|Oppeano|Oppido Lucano|Oppido Mamertina|Ora|Orani|Oratino|Orbassano|Orbetello|Orciano Pisano|Orero|Orgiano|Pieve Fissiraga|Orgosolo|Oria|Oricola|Origgio|Orino|Orio Litta|Orio Al Serio|Orio Canavese|Oriolo|Oriolo Romano|Oristano|Ormea|Ormelle|Ornago|Ornavasso|Ornica|Orosei|Orotelli|Orria|Orroli|Orsago|Orsara Bormida|Orsara Di Puglia|Orsenigo|Orsogna|Orsomarso|Orta Di Atella|Orta Nova|Ortacesus|Orta San Giulio|Orte|Ortelle|Ortezzano|Ortignano Raggiolo|Ortisei|Ortona|Ortona Dei Marsi|Luni|Ortovero|Ortucchio|Ortueri|Orune|Orvieto|Orzinuovi|Orzivecchi|Osasco|Osasio|Oschiri|Osidda|Osiglia|Osilo|Osimo|Osini|Osio Sopra|Osio Sotto|Osnago|Osoppo|Ospedaletti|Ospedaletto Dalpinolo|Ospedaletto Lodigiano|Ospedaletto Euganeo|Ospedaletto|Ospitale Di Cadore|Ospitaletto|Ossago Lodigiano|Ossana|Ossi|Ossimo|Ossona|Ostana|Ostellato|Ostiano|Ostiglia|Ostuni|Otranto|Otricoli|Ottaviano|Ottana|Ottati|Ottiglio|Ottobiano|Ottone|Oulx|Ovada|Ovaro|Oviglio|Ovindoli|Ovodda|Ozegna|Ozieri|Ozzano Monferrato|Ozzano Dellemilia|Ozzero|Pabillonis|Paceco|Pace Del Mela|Pacentro|Pachino|Paciano|Padenghe Sul Garda|Paderna|Paderno Franciacorta|Paderno Dadda|Paderno Dugnano|Paderno Ponchielli|Robbiate|Padova|Padria|Padula|Paduli|Paesana|Paese|Pagani|Paganico Sabino|Pagazzano|Pagliara|Paglieta|Pagnacco|Pagno|Pagnona|Pago Del Vallo Di Lauro|Pago Veiano|Paisco Loveno|Paitone|Paladina|Palagano|Palagianello|Palagiano|Palagonia|Palaia|Palanzano|Palata|Palau|Palazzago|Palazzo Pignano|Palazzo San Gervasio|Palazzo Canavese|Palazzo Adriano|Palazzolo Sulloglio|Palazzolo Vercellese|Palazzolo Acreide|Palazzolo Dello Stella|Palazzuolo Sul Senio|Palena|Palermiti|Palermo|Palestrina|Palestro|Paliano|Palizzi|Pallagorio|Pallanzeno|Pallare|Palma Di Montechiaro|Palma Campania|Palmanova|Palmariggi|Palmas Arborea|San Giovanni Suergiu|Palmi|Palmiano|Palmoli|Palo Del Colle|Palomonte|Palombara Sabina|Palombaro|Palosco|Palu Del Fersina|Palu|Paludi|Plaus|Paluzza|Pamparato|Pancalieri|Pancarana|Panchia|Pandino|Panettieri|Panicale|Villaricca|Pannarano|Panni|Pantelleria|Pantigliate|Paola|Paolisi|Valderice|Papasidero|Papozze|Parabiago|Parabita|Paratico|Parcines|Parella|Parenti|Parete|Pareto|Parghelia|Parlasco|Parma|Parodi Ligure|Paroldo|Parolise|Parona|Parrano|Parre|Partanna|Partinico|Paruzzaro|Parzanica|Pasian Di Prato|Pasiano Di Pordenone|Paspardo|Passerano Marmorito|Passignano Sul Trasimeno|Passirano|Pastena|Pastorano|Pastrengo|Pasturana|Pasturo|Paternopoli|Paterno|Paterno Calabro|Patrica|Pattada|Patti|Patu|Pau|Paularo|Pauli Arbarei|San Nicolo Gerrei|Paulilatino|Paullo|Paupisi|Pavarolo|Pavia|Pavia Di Udine|Pavone Del Mella|Pavone Canavese|Pavullo Nel Frignano|Pazzano|Peccioli|Pecetto Di Valenza|Pecetto Torinese|Pedara|Pedaso|Pedavena|Pedemonte|San Paolo|Pederobba|Pedesina|Pedivigliano|Pedrengo|Peglio|Peglio|Pegognaga|Peia|Peio|Pelago|Pella|Pellegrino Parmense|Pellezzano|Pellizzano|Pelugo|Penango|Poggiridenti|Penna In Teverina|Pennabilli|Pennadomo|Pennapiedimonte|Penna San Giovanni|Penna Santandrea|Penne|Pentone|Perano|Perarolo Di Cadore|Perca|Percile|Perdasdefogu|Perdaxius|Perdifumo|Pereto|Perfugas|Pergine Valsugana|Pergola|Perinaldo|Perito|Perledo|Perletto|Perlo|Perloz|Pernumia|Perosa Canavese|Perosa Argentina|Perrero|San Giovanni In Persiceto|Persico Dosimo|Pertengo|Pertica Alta|Pertica Bassa|Pertosa|Pertusio|Perugia|Pesaro|Pescaglia|Pescantina|Pescara|Pescarolo Ed Uniti|Pescasseroli|Pescate|Pesche|Peschici|Peschiera Borromeo|Peschiera Del Garda|Pescia|Pescina|Pescocostanzo|Pesco Sannita|Pescolanciano|Pescopagano|Pescopennataro|Pescorocchiano|Pescosansonesco|Pescosolido|Pessano Con Bornago|Pessina Cremonese|Pessinetto|Petacciato|Turania|Petilia Policastro|Petina|Petralia Soprana|Petralia Sottana|Petrella Tifernina|Petrella Salto|Petriano|Petriolo|Petritoli|Petrizzi|Petrona|Petruro Irpino|Pettenasco|Pettinengo|Pettineo|Pettoranello Del Molise|Pettorano Sul Gizio|Pettorazza Grimani|Peveragno|Pezzana|Pezzaze|Pezzolo Valle Uzzone|Piacenza Dadige|Piacenza|Piaggine|Valle Dellangelo|Piana Di Monte Verna|Piana Crixia|Piana Degli Albanesi|Pontboset|Pian Camuno|Piancastagnaio|Piancogno|Piandimeleto|Piane Crati|Pianella|Pianello Del Lario|Pianello Val Tidone|Pianengo|Pianezza|Pianezze|Pianfei|Pianico|Pianiga|San Benedetto Val Di Sambro|Piano Di Sorrento|Pianoro|Piansano|Piantedo|Piario|Piasco|Piateda|Piatto|Piazza Brembana|Piazza Armerina|Piazza Al Serchio|Piazzatorre|Piazzola Sul Brenta|Piazzolo|Picciano|Picerno|Picinisco|Pico|Piea|Piedicavallo|Piedimonte Matese|Piedimonte Etneo|Piedimonte San Germano|Piedimulera|Piegaro|Pienza|Pieranica|Pietramontecorvino|Pietra Ligure|Pietrabbondante|Pietrabruna|Pietracamela|Pietracatella|Pietracupa|Pietradefusi|Pietra De Giorgi|Pietraferrazzana|Satriano Di Lucania|Pietrafitta|Pietragalla|Pietralunga|Pietra Marazzi|Pietramelara|Pietranico|Pietrapaola|Pietrapertosa|Pietraperzia|Pietraporzio|Pietraroja|Pietrarubbia|Pietrasanta|Pietrastornina|Pietravairano|Pietrelcina|Pieve Di Teco|Pieve Emanuele|Pieve Albignola|Pieve A Nievole|Pieve Del Cairo|Pieve Di Cadore|Pieve Di Cento|Pieve Di Soligo|Pieve Ligure|Pieve Dolmi|Pieve Fosciana|Pievepelago|Pieve Porto Morone|Pieve San Giacomo|Pieve Santo Stefano|Pieve Tesino|Pieve Torina|Pieve Vergonte|Piglio|Pigna|Pignataro Maggiore|Pignataro Interamna|Pignola|Pignone|Pigra|Pila|Pimentel|Pimonte|Pinarolo Po|Pinasca|Pincara|Pinerolo|Pino Dasti|Pino Torinese|Pinzano Al Tagliamento|Pinzolo|Piobbico|Piobesi Dalba|Piobesi Torinese|Piode|Pioltello|Piombino|Piombino Dese|Pioraco|Piossasco|Piova Massaia|Piove Di Sacco|Piovene Rocchette|Piozzano|Piozzo|Priverno|Piraino|Pisa|Pisano|Pisoniano|Piscina|Pisciotta|Pisogne|Pisticci|Pistoia|Pitigliano|Piubega|Piuro|Piverone|Pizzale|Pizzighettone|Pizzo|Pizzoferrato|Pizzoli|Pizzone|Pizzoni|Placanica|Plataci|Platania|Plati|Taipana|Plesio|Ploaghe|Plodio|Pocapaglia|Pocenia|Podenzana|Podenzano|Pofi|Poggiardo|Poggibonsi|Poggio Rusco|Poggio A Caiano|Poggio Bustone|Poggio Catino|Poggiodomo|Poggiofiorito|Poggio Imperiale|Poggiomarino|Poggio Mirteto|Poggio Moiano|Poggio Nativo|Poggio Picenze|Poggioreale|Poggio Renatico|Poggiorsini|Poggio San Lorenzo|Poggio San Marcello|Pogliano Milanese|Pognana Lario|Pognano|Pogno|Pojana Maggiore|Poirino|Polaveno|Polcenigo|Polesella|Poli|Polia|Policoro|Polignano A Mare|San Pietro In Cerro|Polinago|Polino|Polistena|Polizzi Generosa|Polla|Pollein|Pollena Trocchia|Pollica|Pollina|Pollone|Pollutri|Polonghera|Polpenazze Del Garda|Polverara|Polverigi|Pomarance|Pomaretto|Pomarico|Pomaro Monferrato|Pomarolo|Pombia|Pomezia|Pomigliano Darco|Pompei|Pompeiana|Pompiano|Pomponesco|Pompu|Poncarale|Ponderano|Ponna|Ponsacco|Ponso|Pontassieve|Pont Canavese|Ponte|Ponte In Valtellina|Ponte Gardena|Pontebba|Ponte Buggianese|Pontecagnano Faiano|Pontecchio Polesine|Pontechianale|Pontecorvo|Pontecurone|Pontedassio|Ponte Dellolio|Pontedera|Ponte Di Legno|Ponte Di Piave|Ponte Lambro|Pontelandolfo|Pontelatone|Pontelongo|Ponte Nizza|Pontenure|Ponteranica|Pont Saint Martin|Ponte San Nicolo|Ponte San Pietro|Pontestura|Pontevico|Pontey|Ponti|Ponti Sul Mincio|Pontida|Pontinia|Pontinvrea|Pontirolo Nuovo|Pontoglio|Pontremoli|Ponza|Ponzano Monferrato|Ponzano Di Fermo|Ponzano Romano|Ponzano Veneto|Ponzone|Popoli|Poppi|Porano|Porcari|Porcia|Stella Cilento|Pordenone|Porlezza|Pornassio|Porpetto|Portacomaro|Portalbera|Porte|Portici|Portico Di Caserta|Portico E San Benedetto|Portigliola|Porto Ceresio|Porto Valtravaglia|Portobuffole|Portocannone|Portoferraio|Portofino|Portogruaro|Portomaggiore|Porto Mantovano|Porto Recanati|Porto San Giorgio|Porto Santelpidio|Portoscuso|Porto Tolle|Porto Torres|Portovenere|Porto Viro|Portula|Posada|Posina|Positano|Possagno|Posta|Posta Fibreno|Postal|Postalesio|Postiglione|Postua|Potenza|Pove Del Grappa|Povegliano|Povegliano Veronese|Poviglio|Povoletto|Pozzaglia Sabina|Pozzallo|Pozzilli|Pozzo Dadda|Pozzoleone|Pozzolengo|Pozzol Groppo|Pozzolo Formigaro|Pozzomaggiore|Pozzonovo|Pozzuoli|Pozzuolo Martesana|Pozzuolo Del Friuli|Pradalunga|Pradamano|Pradleves|Sasso Marconi|Pragelato|Pray|Praia A Mare|Praiano|Pralboino|Prali|Pralormo|Pralungo|Pramaggiore|Pramollo|Prarolo|Prarostino|Prasco|Prascorsano|Prata Di Principato Ultra|Prata Sannita|Prata Dansidonia|Prata Camportaccio|Prata Di Pordenone|Pratella|Pratiglione|Prato|Prato Sesia|Prato Carnico|Prato Allo Stelvio|Pratola Serra|Pratola Peligna|Pravisdomini|Prazzo|Samo|Precenicco|Preci|Predappio|Predazzo|Predoi|Predore|Predosa|Preganziol|Pregnana Milanese|Prela|Premana|Premariacco|Premeno|Premia|Premilcuore|Premolo|Premosello Chiovenda|Preone|Prepotto|Pre Saint Didier|Preseglie|Presenzano|Presezzo|Pressana|Pretoro|Prevalle|Prezza|Priero|Prignano Sulla Secchia|Prignano Cilento|Primaluna|Priocca|Priola|Prizzi|Proceno|Procida|Propata|Proserpio|Prossedi|Provaglio Val Sabbia|Provaglio Diseo|Proves|Provvidenti|Prunetto|Puegnago Sul Garda|Puglianello|Pula|Pulfero|Pulsano|Pumenengo|Pusiano|Putifigari|Putignano|Quadrelle|Quadri|Quagliuzzo|Qualiano|Quaranti|Quargnento|Quarna Sopra|Quarna Sotto|Quarona|Quarrata|Quart|Quarto|Quarto Daltino|Quartu Santelena|Quartucciu|Quassolo|Quattordio|Quattro Castella|Quiliano|Quincinetto|Quindici|Quingentole|Quintano|Quinto Di Treviso|Quinto Vercellese|Quinto Vicentino|Quinzano Doglio|Quistello|Rabbi|Racale|Racalmuto|Racconigi|Raccuja|Racines|Radda In Chianti|Raddusa|Radicofani|Radicondoli|Raffadali|Ragogna|Ragusa|Ruviano|Raiano|Ramacca|Rancio Valcuvia|Ranco|Randazzo|Ranica|Ranzanico|Ranzo|Rapagnano|Rapallo|Rapino|Rapolano Terme|Rapolla|Rapone|Rassa|Rasun Anterselva|Rasura|Ravanusa|Ravarino|Ravascletto|Ravello|Ravenna|Raveo|Raviscanina|Re|Rea|Realmonte|Reana Del Rojale|Reano|Recale|Recanati|Recco|Recetto|Recoaro Terme|Redavalle|Redondesco|Refrancore|Refrontolo|Regalbuto|Reggello|Reggio Nellemilia|Reggio Di Calabria|Reggiolo|Reino|Reitano|Remanzacco|Remedello|Renate|Rende|Renon|Resana|Rescaldina|Resia|Ercolano|Resiutta|Resuttano|Retorbido|Revello|Revigliasco Dasti|Revine Lago|Revo|Rezzago|Rezzato|Rezzo|Rezzoaglio|Val Rezzo|Rhemes Notre Dame|Rhemes Saint Georges|Rho|Riace|Rialto|Riano|Riardo|Ribera|Ribordone|Ricadi|Ricaldone|Riccia|Riccione|Ricco Del Golfo Di Spezia|Ricengo|Ricigliano|Riese Pio X|Riesi|Rieti|Rifiano|Rifreddo|Rignano Sullarno|Rignano Garganico|Rignano Flaminio|Rigolato|Rimella|Rimini|Rio Saliceto|Rio Di Pusteria|Riofreddo|Riola Sardo|Riolo Terme|Riolunato|Riomaggiore|Rionero In Vulture|Rionero Sannitico|Ripabottoni|Ripacandida|Ripalimosani|Ripalta Arpina|Ripalta Cremasca|Ripalta Guerina|Riparbella|Ripa Teatina|Ripatransone|Ripe San Ginesio|Ripi|Riposto|Rittana|Rivamonte Agordino|Riva Ligure|Riva Del Garda|Riva Di Solto|Rivalba|Rivalta Bormida|Rivalta Di Torino|Rivanazzano Terme|Riva Presso Chieri|Rivara|Rivarolo Canavese|Rivarolo Del Re Ed Uniti|Rivarolo Mantovano|Rivarone|Rivarossa|Rive|Rive Darcano|Rivello|Rivergaro|Rivisondoli|Rivodutri|Rivoli|Rivoli Veronese|Rivolta Dadda|Rizziconi|Roana|Roaschia|Roascio|Rovasenda|Roasio|Roatto|Robassomero|Robbio|Robecchetto Con Induno|Robecco Doglio|Robecco Sul Naviglio|Robecco Pavese|Robella|Robilante|Roburent|Rocca Pietore|Roccavaldina|Roccabascerana|Roccabernarda|Roccabianca|Roccabruna|Rocca Canavese|Rocca Canterano|Roccacasale|Roccafluvione|Rocca Ciglie|Rocca Darazzo|Rocca Darce|Roccadaspide|Rocca De Baldi|Rocca De Giorgi|Rocca Devandro|Rocca Di Botte|Rocca Di Cambio|Rocca Di Cave|Rocca Di Mezzo|Rocca Di Neto|Rocca Di Papa|Roccafiorita|Roccaforte Ligure|Roccaforte Mondovi|Roccaforte Del Greco|Roccaforzata|Roccafranca|Roccagiovine|Roccagloriosa|Roccagorga|Rocca Grimalda|Rocca Imperiale|Roccalbegna|Roccalumera|Roccamandolfi|Rocca Massima|Roccamena|Roccamonfina|Roccamontepiano|Roccamorice|Roccanova|Roccantica|Roccapalumba|Rocca Pia|Roccapiemonte|Rocca Priora|Roccarainola|Roccaraso|Roccaromana|Rocca San Casciano|Rocca San Felice|Rocca San Giovanni|Rocca Santa Maria|Rocca Santo Stefano|Roccascalegna|Roccasecca|Roccasecca Dei Volsci|Roccasicura|Rocca Sinibalda|Roccasparvera|Roccaspinalveti|Roccastrada|Rocca Susella|Roccaverano|Roccavignale|Roccavione|Roccavivara|Roccella Valdemone|Roccella Ionica|Rocchetta A Volturno|Rocchetta E Croce|Rocchetta Nervina|Rocchetta Di Vara|Rocchetta Belbo|Rocchetta Ligure|Rocchetta Palafea|Rocchetta Santantonio|Rocchetta Tanaro|Rodano|Roddi|Roddino|Rodello|Rodengo|Rodengo Saiano|Rodero|Rodi Milici|Rodi Garganico|Rodigo|Roe Volciano|Rofrano|Rogeno|Roggiano Gravina|Roghudi|Rogliano|Rognano|Rogno|Rogolo|Roiate|Roio Del Sangro|Roisan|Roletto|Rolo|Roma|Romagnano Sesia|Romagnano Al Monte|Romagnese|Romallo|Romana|Romanengo|Romano Di Lombardia|Romano Canavese|Romano Dezzelino|Romans Disonzo|Rombiolo|Romeno|Romentino|Rometta|Ronago|Ronca|Roncade|Roncadelle|Roncaro|Roncegno Terme|Roncello|Ronchi Dei Legionari|Ronchi Valsugana|Ronchis|Ronciglione|Roncobello|Ronco Scrivia|Ronco Briantino|Ronco Biellese|Ronco Canavese|Ronco Alladige|Roncoferraro|Roncofreddo|Roncola|Rondanina|Rondissone|Ronsecco|Ronzone|Roppolo|Rora|Roure|Rosa|Rosarno|Rosasco|Rosate|Rosazza|Rosciano|Roscigno|Rose|Rosello|Roseto Valfortore|Rosignano Monferrato|Rosignano Marittimo|Roseto Capo Spulico|Rosolina|Rosolini|Rosora|Rossa|Rossana|Rossano Veneto|Rossiglione|Rosta|Rota Dimagna|Rota Greca|Rotella|Rotello|Rotonda|Rotondella|Rotondi|Rottofreno|Rotzo|Rovato|Rovegno|Rovellasca|Rovello Porro|Roverbella|Roverchiara|Rovere Della Luna|Rovere Veronese|Roveredo In Piano|Roveredo Di Gua|Rovereto|Rovescala|Rovetta|Roviano|Rovigo|Rovito|Rovolon|Rozzano|Rubano|Rubiana|Rubiera|Ruda|Rudiano|Rueglio|Ruffano|Ruffia|Ruffre Mendola|Rufina|Rumo|Ruoti|Russi|Rutigliano|Rutino|Ruvo Di Puglia|Ruvo Del Monte|Sabaudia|Sabbio Chiese|Sabbioneta|Sacco|Saccolongo|Sacile|Sacrofano|Sadali|Sagama|Sagliano Micca|Sagrado|Sagron Mis|Saint Christophe|Saint Denis|Saint Marcel|Saint Nicolas|Saint Oyen|Saint Pierre|Saint Rhemy En Bosses|Saint Vincent|Sala Monferrato|Sala Bolognese|Sala Comacina|Sala Biellese|Sala Baganza|Sala Consilina|Salbertrand|Salento|Salandra|Salaparuta|Salara|Salasco|Salassa|Salcito|Sale|Sale Delle Langhe|Sale Marasino|Salemi|Salerano Sul Lambro|Salerano Canavese|Salerno|Sale San Giovanni|Salgareda|Sali Vercellese|Salice Salentino|Saliceto|San Mauro Di Saline|Salisano|Salizzole|Salle|Salmour|Salo|Salorno|Salsomaggiore Terme|Saltrio|Saludecio|Saluggia|Salussola|Saluzzo|Salve|Savoia Di Lucania|Salvirola|Salvitelle|Salza Irpina|Salza Di Pinerolo|Salzano|Samarate|Samassi|Samatzai|Sambuca Di Sicilia|Sambuca Pistoiese|Sambuci|Sambuco|Sammichele Di Bari|Samolaco|Samone|Samone|Sampeyre|Samugheo|Sanarica|San Bartolomeo Val Cavargna|San Bartolomeo Al Mare|San Bartolomeo In Galdo|San Basile|San Basilio|San Bassano|San Bellino|San Benedetto Del Tronto|San Benedetto Belbo|San Benedetto Po|San Benedetto Dei Marsi|San Benedetto In Perillis|San Benedetto Ullano|San Benigno Canavese|San Bernardino Verbano|San Biagio Platani|San Biagio Saracinisco|San Biagio Della Cima|San Biagio Di Callalta|San Biase|San Bonifacio|San Buono|San Calogero|San Candido|San Canzian Disonzo|San Carlo Canavese|San Casciano Dei Bagni|San Casciano In Val Di Pesa|San Cataldo|San Cesario Di Lecce|San Cesario Sul Panaro|San Chirico Nuovo|San Chirico Raparo|San Cipirello|San Cipriano Daversa|San Cipriano Po|San Cipriano Picentino|San Clemente|San Colombano Certenoli|San Colombano Al Lambro|San Colombano Belmonte|San Cono|San Cosmo Albanese|San Costantino Calabro|San Costantino Albanese|San Costanzo|San Cristoforo|San Damiano Dasti|San Damiano Macra|San Damiano Al Colle|San Daniele Po|San Daniele Del Friuli|San Demetrio Corone|San Demetrio Ne Vestini|San Didero|Sandigliano|San Donaci|San Dona Di Piave|San Donato Val Di Comino|San Donato Di Ninea|San Donato Di Lecce|San Donato Milanese|Sandrigo|San Fele|San Felice Del Molise|San Felice A Cancello|San Felice Sul Panaro|San Felice Circeo|San Felice Del Benaco|San Ferdinando Di Puglia|San Fermo Della Battaglia|San Fili|San Filippo Del Mela|San Fior|San Fiorano|San Floriano Del Collio|San Floro|San Francesco Al Campo|Aglientu|San Fratello|Sanfre|Sanfront|Sangano|San Gavino Monreale|San Gemini|San Genesio Atesino|San Genesio Ed Uniti|San Gennaro Vesuviano|San Germano Vercellese|San Germano Chisone|San Gervasio Bresciano|San Giacomo Degli Schiavoni|San Giacomo Filippo|San Giacomo Delle Segnate|Sangiano|San Gillio|San Gimignano|San Ginesio|Sangineto|San Giorgio Monferrato|San Giorgio A Liri|San Giorgio Albanese|San Giorgio Ionico|San Giorgio Bigarello|San Giorgio Su Legnano|San Giorgio Di Lomellina|San Giorgio Piacentino|San Giorgio Lucano|San Giorgio Morgeto|San Giorgio Canavese|San Giorgio Della Richinvelda|San Giorgio A Cremano|San Giorgio Delle Pertiche|San Giorgio Del Sannio|San Giorgio Di Nogaro|San Giorgio Di Piano|San Giorgio In Bosco|San Giorgio La Molara|San Giorgio Scarampi|San Giorio Di Susa|San Giovanni Valdarno|San Giovanni Di Gerace|San Giovanni Al Natisone|San Giovanni A Piro|San Giovanni Bianco|San Giovanni Del Dosso|Villa San Giovanni In Tuscia|San Giovanni Gemini|San Giovanni Ilarione|San Giovanni Incarico|San Giovanni In Croce|San Giovanni In Fiore|San Giovanni In Galdo|San Giovanni In Marignano|San Giovanni La Punta|San Giovanni Lipioni|San Giovanni Lupatoto|San Giovanni Rotondo|San Giuliano Del Sannio|San Giuliano Di Puglia|San Giuliano Milanese|San Giuseppe Vesuviano|San Giuseppe Jato|San Giustino|San Giusto Canavese|San Godenzo|San Gregorio Nelle Alpi|San Gregorio Matese|San Gregorio Di Catania|San Gregorio Dippona|San Gregorio Da Sassola|San Gregorio Magno|Sanguinetto|San Lazzaro Di Savena|San Leo|San Leonardo|San Leonardo In Passiria|San Leucio Del Sannio|San Lorenzello|San Lorenzo Di Sebato|San Lorenzo Al Mare|San Lorenzo In Campo|San Lorenzo|San Lorenzo Bellizzi|San Lorenzo Del Vallo|San Lorenzo Isontino|San Lorenzo Maggiore|San Lorenzo Nuovo|San Luca|San Lucido|San Lupo|Sanluri|San Mango Sul Calore|San Mango Daquino|San Mango Piemonte|San Marcellino|San Marcello|San Marco Argentano|San Marco Dalunzio|San Marco Dei Cavoti|San Marco In Lamis|San Marco La Catola|San Martino Alfieri|San Martino In Badia|San Martino In Passiria|San Martino In Pensilis|San Martino Sulla Marrucina|San Martino Di Finita|San Martino Dagri|San Martino Di Venezze|San Martino Canavese|San Martino Al Tagliamento|San Martino Sannita|San Martino Buon Albergo|San Martino Dallargine|San Martino Del Lago|San Martino Di Lupari|San Martino In Rio|San Martino In Strada|San Martino Siccomario|San Martino Valle Caudina|San Marzano Oliveto|San Marzano Di San Giuseppe|San Marzano Sul Sarno|San Massimo|San Maurizio Canavese|San Maurizio Dopaglio|San Mauro Marchesato|San Mauro Pascoli|San Mauro Castelverde|San Mauro Forte|San Mauro Torinese|San Mauro Cilento|San Mauro La Bruca|San Michele Di Serino|San Michele Di Ganzaria|San Michele Mondovi|San Michele Al Tagliamento|San Michele Alladige|San Michele Salentino|San Miniato|Sannazzaro De Burgondi|San Nazzaro|San Nazzaro Val Cavargna|San Nazzaro Sesia|Sannicandro Di Bari|San Nicandro Garganico|San Nicola La Strada|San Nicola Dellalto|San Nicola Da Crissa|Sannicola|San Nicola Arcella|San Nicola Baronia|San Nicola Manfredi|San Nicolo Di Comelico|San Pancrazio|San Pancrazio Salentino|San Paolo Di Jesi|San Paolo Di Civitate|San Paolo Bel Sito|San Paolo Solbrito|San Pellegrino Terme|San Pier Disonzo|San Pier Niceto|San Piero Patti|San Pietro Di Cadore|San Pietro Al Tanagro|San Pietro Val Lemina|San Pietro Al Natisone|San Pietro A Maida|San Pietro Apostolo|San Pietro Avellana|San Pietro Clarenza|San Pietro Di Carida|San Pietro Di Feletto|San Pietro Di Morubio|San Pietro In Gu|San Pietro In Amantea|San Pietro In Cariano|San Pietro In Casale|San Pietro Infine|San Pietro In Guarano|San Pietro In Lama|San Pietro Mosezzo|San Pietro Mussolino|Villa San Pietro|San Pietro Vernotico|San Pietro Viminario|San Pio Delle Camere|San Polo Matese|San Polo Denza|San Polo Di Piave|San Polo Dei Cavalieri|San Ponso|San Possidonio|San Potito Ultra|San Potito Sannitico|San Prisco|San Procopio|San Prospero|San Quirico Dorcia|San Quirino|San Raffaele Cimena|Sanremo|San Roberto|San Rocco Al Porto|San Romano In Garfagnana|San Rufo|San Salvatore Monferrato|San Salvatore Telesino|San Salvatore Di Fitalia|San Salvo|San Sebastiano Curone|San Sebastiano Al Vesuvio|San Sebastiano Da Po|San Secondo Parmense|San Secondo Di Pinerolo|Sansepolcro|San Severino Marche|San Severino Lucano|San Severo|San Siro|San Sossio Baronia|San Sostene|San Sosti|San Sperate|Santa Brigida|Santa Caterina Villarmosa|Santa Caterina Dello Ionio|Santa Caterina Albanese|Santa Cesarea Terme|Santa Cristina Valgardena|Santa Cristina Gela|Santa Cristina E Bissone|Santa Cristina Daspromonte|Santa Croce Sullarno|Santa Croce Camerina|Santa Croce Del Sannio|Santa Croce Di Magliano|Santadi|Santa Domenica Talao|Santa Domenica Vittoria|Santa Elisabetta|Santa Fiora|Santa Flavia|Santagapito|Santagata Fossili|Santagata Bolognese|Santagata Di Esaro|Santagata Di Puglia|Santagata Sul Santerno|Santagata De Goti|Santagata Del Bianco|Santagata Di Militello|Santagata Feltria|Santagata Li Battiati|Santa Giuletta|Santa Giusta|Santa Giustina|Santa Giustina In Colle|Santagnello|Santalbano Stura|Santalessio Con Vialone|Santalessio In Aspromonte|Santalessio Siculo|Santalfio|Santa Luce|Santa Lucia Di Serino|Santa Lucia Del Mela|Santa Lucia Di Piave|Santa Margherita Di Belice|Santa Margherita Ligure|Santa Margherita Di Staffora|Santa Maria A Monte|Santa Maria A Vico|Santa Maria Capua Vetere|Travaco Siccomario|Santa Maria Della Versa|Santa Maria Del Molise|Santa Maria Di Licodia|Santa Maria Di Sala|Santa Maria Hoe|Santa Maria Imbaro|Santa Maria La Fossa|Santa Maria La Longa|Santa Maria Maggiore|Santa Maria Nuova|Santa Marina|Santa Marina Salina|Santa Marinella|Santambrogio Sul Garigliano|Santambrogio Di Torino|Santambrogio Di Valpolicella|Santomenna|San Tammaro|Santanastasia|Santanatolia Di Narco|Santandrea Di Conza|Santandrea Del Garigliano|Santandrea Apostolo Dello Ionio|Santandrea Frius|Santangelo Dalife|Santangelo Lodigiano|Santangelo Di Piove Di Sacco|Santangelo Lomellina|Santangelo A Cupolo|Santangelo A Fasanella|Santangelo Allesca|Santangelo A Scala|Santangelo Dei Lombardi|Santangelo Del Pesco|Santangelo Di Brolo|Santangelo Romano|Santangelo In Pontano|Santangelo In Vado|Santangelo Le Fratte|Santangelo Limosano|Santangelo Muxaro|Santa Ninfa|Santanna Dalfaedo|Santantimo|Santantioco|Santantonino Di Susa|Villa Santantonio|Santantonio Abate|Santa Paolina|Santapollinare|Santarcangelo Di Romagna|Santarcangelo|Santarpino|Santarsenio|Santa Severina|Santa Sofia Depiro|Santa Sofia|Santa Teresa Di Riva|Santa Teresa Gallura|Santa Venerina|Santa Vittoria In Matenano|Santa Vittoria Dalba|Santegidio Del Monte Albino|Santegidio Alla Vibrata|Santelena|Santelia A Pianisi|Santelia Fiumerapido|Vallefiorita|Santelpidio A Mare|Sante Marie|Santena|San Teodoro|San Teodoro|Santeramo In Colle|Santeufemia A Maiella|Santeufemia Daspromonte|Santeusanio Del Sangro|Santeusanio Forconese|Santhia|Santi Cosma E Damiano|Santilario Dello Ionio|Santilario Denza|Santippolito|Santolcese|San Tomaso Agordino|Santomero|Santonofrio|Santopadre|Santoreste|Santorso|Santorsola Terme|Santo Stefano Quisquina|Santo Stefano Del Sole|Santo Stefano Di Rogliano|Santo Stefano Di Sessanio|Santo Stefano Ticino|Santo Stefano Lodigiano|Santo Stefano Di Magra|Villa Santo Stefano|Santo Stefano Al Mare|Santo Stefano Belbo|Santo Stefano Daveto|Santo Stefano Di Camastra|Santo Stefano In Aspromonte|Santo Stefano Roero|San Stino Di Livenza|Santu Lussurgiu|Santurbano|San Valentino In Abruzzo Citeriore|San Valentino Torio|San Venanzo|San Vendemiano|San Vero Milis|San Vincenzo La Costa|San Vincenzo Valle Roveto|San Vincenzo|San Vitaliano|San Vito Di Cadore|San Vito Sullo Ionio|San Vito Chietino|San Vito Dei Normanni|San Vito Romano|San Vito Di Leguzzano|San Vito|San Vito Al Tagliamento|San Vito Al Torre|San Vito Di Fagagna|San Vito Lo Capo|San Vittore Del Lazio|San Vittore Olona|Sanza|Sanzeno|San Zeno Naviglio|San Zeno Di Montagna|San Zenone Al Lambro|San Zenone Al Po|San Zenone Degli Ezzelini|Saonara|Saponara|Sappada|Sapri|Saracena|Saracinesco|Sarcedo|Sarconi|Sardara|Sardigliano|Sarego|Sarentino|Sarezzano|Sarezzo|Sarmato|Sarmede|Sarnano|Sarnico|Sarno|Sarnonico|Saronno|Sarre|Sarroch|Sarsina|Sarteano|Sartirana Lomellina|Sarule|Sarzana|Sassano|Sassari|Sassello|Sassetta|Sassinoro|Sasso Di Castalda|Sassofeltrio|Sassoferrato|Sassuolo|Satriano|Sauris|Sauze Di Cesana|Sauze Doulx|Sava|Savelli|Saviano|Savigliano|Savignano Irpino|Savignano Sul Rubicone|Savignano Sul Panaro|Savignone|Saviore Delladamello|Savoca|Savogna|Savogna Disonzo|Savona|Scafa|Scafati|Scagnello|Scala Coeli|Scala|Scaldasole|Scalea|Scalenghe|Scaletta Zanclea|Scampitella|Scandale|Scandiano|Scandolara Ravara|Scandolara Ripa Doglio|Scandriglia|Scanno|Scano Di Montiferro|Scansano|Scanzorosciate|Scapoli|Scarlino|Scarmagno|Scarnafigi|Scena|Scerni|Scheggia E Pascelupo|Scheggino|Schiavi Di Abruzzo|Schiavon|Schignano|Schilpario|Schio|Schivenoglia|Sciacca|Sciara|Scicli|Scido|Scilla|Scillato|Sciolze|Scisciano|Sclafani Bagni|Scontrone|Scopa|Scopello|Scoppito|Scordia|Scorrano|Scorze|Scurcola Marsicana|Scurelle|Scurzolengo|Seborga|Secinaro|Secli|Secugnago|Sedegliano|Sedico|Sedilo|Sedini|Sedriano|Sedrina|Sefro|Segariu|Seggiano|Segni|Segonzano|Segrate|Segusino|Selargius|Selci|Selegas|Sellano|Sellero|Sellia|Sellia Marina|Selva Di Val Gardena|Selva Di Cadore|Selva Dei Molini|Selva Di Progno|Selvazzano Dentro|Selvino|Semestene|Semiana|Seminara|Semproniano|Senago|Senale San Felice|Senales|Seneghe|Senerchia|Seniga|Senigallia|Senis|Senise|Senna Comasco|Senna Lodigiana|Sennariolo|Sennori|Senorbi|Sepino|Sequals|Seravezza|Serdiana|Seregno|Seren Del Grappa|Sergnano|Seriate|Serina|Serino|Serle|Sermide E Felonica|Sirmione|Sermoneta|Sernaglia Della Battaglia|Sernio|Serole|Serra San Bruno|Serra Ricco|Serracapriola|Serra Daiello|Serra De Conti|Serradifalco|Serralunga Di Crea|Serralunga Dalba|Serramanna|Serramezzana|Serramonacesca|Serrapetrona|Serrara Fontana|Serra San Quirico|Serra Santabbondio|Serrastretta|Serrata|Serravalle Scrivia|Serravalle Langhe|Serravalle Pistoiese|Serravalle Di Chienti|Serravalle A Po|Serravalle Sesia|Serre|Serrenti|Serri|Serrone|Sersale|Sovramonte|Sessa Aurunca|Sessa Cilento|Sessame|Sessano Del Molise|Sestino|Sesto Campano|Sesto Ed Uniti|Sesto Fiorentino|Sesto Al Reghena|Sesto|Sesto Calende|Sestola|Sesto San Giovanni|Sestriere|Sestri Levante|Sestu|Settala|Settefrati|Settime|Settimo San Pietro|Settimo Milanese|Settimo Rottaro|Settimo Vittone|Settimo Torinese|Settingiano|Setzu|Seui|Seulo|Seveso|Sezzadio|Sezze|Sfruz|Sgonico Zgonik|Sgurgola|Siamaggiore|Siamanna|Siano|Siapiccia|Siculiana|Siddi|Siderno|Siena|Sigillo|Signa|Silandro|Silanus|Siligo|Siliqua|Silius|Sillavengo|Silvano Dorba|Silvano Pietra|Silvi|Simala|Simaxis|Simbario|Simeri Crichi|Sinagra|Sindia|Sini|Sinio|Siniscola|Sinnai|Sinopoli|Siracusa|Sirignano|Siris|Sirolo|Sirone|Sirtori|Siurgus Donigala|Sizzano|Sluderno|Smerillo|Soave|Socchieve|Soddi|Sogliano Al Rubicone|Sogliano Cavour|Soglio|Soiano Del Lago|Solagna|Solarino|Solaro|Solarolo|Solarolo Rainerio|Solarussa|Solbiate Arno|Solbiate Olona|Soldano|Soleminis|Solero|Solesino|Soleto|Solferino|Soliera|Solignano|Sulmona|Solofra|Solonghello|Solopaca|Solto Collina|Solza|Somaglia|Somano|Somma Lombardo|Somma Vesuviana|Sommacampagna|Sommariva Del Bosco|Sommariva Perno|Sommatino|Sommo|Sona|Soncino|Sondalo|Sondrio|Songavazzo|Sonico|Sonnino|Sora|Soraga Di Fassa|Soragna|Sorano|Sorbo Serpico|Sorbo San Basile|Sordevolo|Sordio|Soresina|Sorga|Sorgono|Sori|Sorianello|Soriano Calabro|Soriano Nel Cimino|Sorico|Soriso|Sorisole|Sormano|Sorradile|Sorrento|Sorso|Sortino|Sospiro|Sospirolo|Sossano|Sostegno|Sotto Il Monte Giovanni Xxiii|Sover|Soverato|Sovere|Soveria Mannelli|Soveria Simeri|Soverzene|Sovicille|Sovico|Sovizzo|Sozzago|Spadafora|Spadola|Sparanise|Sparone|Specchia|Spello|Sperlinga|Sperlonga|Sperone|Spessa|Spezzano Albanese|Spezzano Della Sila|Spiazzo|Spigno Monferrato|Spigno Saturnia|Spilamberto|Spilimbergo|Spilinga|Spinadesco|Spinazzola|Spinea|Spineda|Spinete|Spineto Scrivia|Spinetoli|Spino Dadda|Spinone Al Lago|Spinoso|Spirano|Spoleto|Spoltore|Spongano|Spormaggiore|Sporminore|Spotorno|Spresiano|Spriana|Squillace|Squinzano|Staffolo|Stagno Lombardo|Staiti|Staletti|Stanghella|Staranzano|Stazzano|Stazzema|Stazzona|Stefanaconi|Stella|Stellanello|Stelvio|Stenico|Sternatia|Stezzano|Stienta|Stigliano|Stignano|Stilo|Stimigliano|Stio|Stornara|Stornarella|Storo|Stra|Stradella|Strambinello|Strambino|Strangolagalli|Stregna|Strembo|Stresa|Strevi|Striano|Strona|Stroncone|Strongoli|Stroppiana|Stroppo|Strozza|Sturno|Subbiano|Subiaco|Succivo|Sueglio|Suelli|Suello|Suisio|Sulbiate|Sulzano|Sumirago|Summonte|Suni|Suno|Supersano|Supino|Surano|Surbo|Susa|Susegana|Sustinente|Sutera|Sutri|Sutrio|Suvereto|Suzzara|Taceno|Tadasuni|Taggia|Tagliacozzo|Taglio Di Po|Tagliolo Monferrato|Taibon Agordino|Taino|Talamello|Talamona|Talana|Taleggio|Talla|Talmassons|Tambre|Taormina|Tarano|Taranta Peligna|Tarantasca|Taranto|Tarcento|Tarsia|Tartano|Tarvisio|Tarzo|Tassarolo|Taurano|Taurasi|Taurianova|Taurisano|Tavagnacco|Tavagnasco|Tavenna|Taverna|Tavernerio|Tavernola Bergamasca|Taviano|Tavigliano|Tavoleto|Tavullia|Teana|Teano|Teglio|Teglio Veneto|Telese Terme|Telgate|Telti|Telve|Telve Di Sopra|Tempio Pausania|Temu|Tenna|Tenno|Teolo|Teora|Teramo|Terdobbiate|Terelle|Terento|Terlano|Terlizzi|Termeno Sulla Strada Del Vino|Termini Imerese|Termoli|Ternate|Ternengo|Terni|Terno Disola|Terracina|Terragnolo|Terralba|Terranuova Bracciolini|Terranova Da Sibari|Terranova Dei Passerini|Terranova Di Pollino|Terranova Sappo Minulio|Terrasini|Terrassa Padovana|Terravecchia|Terrazzo|Terricciola|Terruggia|Tertenia|Terzigno|Terzo|Terzo Daquileia|Terzolas|Terzorio|Tesero|Tesimo|Tessennano|Testico|Teti|Teulada|Teverola|Tezze Sul Brenta|Thiene|Thiesi|Tiana|Ticengo|Ticineto|Tiggiano|Tiglieto|Tigliole|Tignale|Tinnura|Tione Degli Abruzzi|Tione Di Trento|Tirano|Tires|Tiriolo|Tirolo|Tissi|Tito|Tivoli|Tizzano Val Parma|Toano|Tocco Caudio|Tocco Da Casauria|Toceno|Todi|Toffia|Toirano|Tolentino|Tolfa|Tollegno|Tollo|Tolmezzo|Tolve|Tombolo|Ton|Tonara|Tonco|Tonengo|Tora E Piccilli|Torano Castello|Torano Nuovo|Torbole Casaglia|Torcegno|Torchiara|Torchiarolo|Torella Dei Lombardi|Torella Del Sannio|Torgiano|Torgnon|Torino Di Sangro|Torino|Toritto|Torlino Vimercati|Tornaco|Tornareccio|Tornata|Tornimparte|Torno|Tornolo|Toro|Torpe|Torraca|Torralba|Torrazza Coste|Torrazza Piemonte|Torrazzo|Torre Di Ruggiero|Torre Mondovi|Torre Cajetani|Torre Di Santa Maria|Torre Annunziata|Torreano|Torre Canavese|Torrebelvicino|Torre Beretti E Castellaro|Torre Boldone|Torre Bormida|Torrebruna|Torrecuso|Torre Darese|Torre De Busi|Torre De Picenardi|Torre Del Greco|Torre De Negri|Torre De Passeri|Torre De Roveri|Torre Di Mosto|Torre Disola|Torreglia|Torregrotta|Torre Le Nocelle|Torremaggiore|Torre Orsaia|Torre Pallavicina|Torre Pellice|Torre San Giorgio|Torre San Patrizio|Torre Santa Susanna|Torresina|Torretta|Torrevecchia Teatina|Torrevecchia Pia|Torri In Sabina|Torri Del Benaco|Torrice|Torricella Peligna|Torricella Verzate|Torricella In Sabina|Torricella|Torricella Sicura|Torricella Del Pizzo|Torri Di Quartesolo|Torriglia|Torrile|Torrioni|Torrita Tiberina|Torrita Di Siena|Tortona|Tortora|Tortorella|Tortoreto|Tortorici|Torviscosa|Tuscania|Toscolano Maderno|Tossicia|Tovo San Giacomo|Tovo Di Santagata|Trabia|Tradate|Tramatza|Trambileno|Tramonti|Tramonti Di Sopra|Tramonti Di Sotto|Tramutola|Trana|Trani|Traona|Trapani|Trappeto|Trarego Viggiona|Trasacco|Trasaghis|Trasquera|Tratalias|Travagliato|Traves|Travedona Monate|Traversella|Traversetolo|Travesio|Travo|Trebaseleghe|Trebisacce|Trecastagni|Trecate|Trecchina|Trecenta|Tredozio|Treglio|Tregnago|Treia|Treiso|Tremestieri Etneo|Tremosine Sul Garda|Trentinara|Trento|Trentola Ducenta|Trenzano|Treppo Grande|Trepuzzi|Trequanda|Tresana|Trescore Balneario|Trescore Cremasco|Tresivio|Tresnuraghes|Trevenzuolo|Trevi|Trevi Nel Lazio|Trevico|Treviglio|Trevignano Romano|Trevignano|Treville|Treviolo|Treviso Bresciano|Treviso|Trezzano Rosa|Trezzano Sul Naviglio|Trezzo Tinella|Trezzo Sulladda|Trezzone|Tribano|Tribiano|Tribogna|Tricarico|Tricase|Tricerro|Tricesimo|Triei|Trieste|Triggiano|Trigolo|Trinita|Trinita Dagultu E Vignola|Trino|Triora|Tripi|Trisobbio|Trissino|Triuggio|Trivento|Trivigliano|Trivignano Udinese|Trivigno|Trivolzio|Trodena Nel Parco Naturale|Trofarello|Troia|Troina|Tromello|Trontano|Tronzano Vercellese|Tropea|Trovo|Truccazzano|Tubre|Tufara|Tufillo|Tufino|Tufo|Tuglie|Tuili|Tula|Tuoro Sul Trasimeno|Valvestino|Turano Lodigiano|Turate|Turbigo|Turi|Turri|Turriaco|Turrivalignani|Tursi|Tusa|Uboldo|Ucria|Udine|Ugento|Uggiano La Chiesa|Uggiate Trevano|Ula Tirso|Ulassai|Ultimo|Umbriatico|Urago Doglio|Uras|Urbana|Urbania|Urbe|Urbino|Urbisaglia|Urgnano|Uri|Ururi|Urzulei|Uscio|Usellus|Usini|Usmate Velate|Ussana|Ussaramanna|Ussassai|Usseaux|Usseglio|Ussita|Ustica|Uta|Uzzano|Vaccarizzo Albanese|Vacone|Vacri|Vadena|Vado Ligure|Vaglia|Vaglio Serra|Vaglio Basilicata|Vagli Sotto|Vaiano Cremasco|Vaiano|Vaie|Vailate|Vairano Patenora|Valbondione|Valbrembo|Valbrevenna|Valbrona|Valdagno|Valdaora|Valdastico|Val Della Torre|Valdengo|Valdidentro|Valdieri|Valdina|Val Di Nizza|Valdisotto|Val Di Vizze|Valdobbiadene|Valduggia|Valeggio Sul Mincio|Valeggio|Valentano|Valenza|Valenzano|Valera Fratta|Valfabbrica|Valfenera|Valfloriana|Valfurva|Valganna|Valgioie|Valgoglio|Valgrana|Valgreghentino|Valgrisenche|Valguarnera Caropepe|Vallada Agordina|Vallanzengo|Vallarsa|Vallata|Valle Di Cadore|Valle Di Maddaloni|Valle Lomellina|Valle Agricola|Valle Aurina|Vallebona|Valle Castellana|Vallecorsa|Vallecrosia|Valle Di Casies|Valledolmo|Valledoria|Vallemaio|Vallelonga|Vallelunga Pratameno|Vallepietra|Vallerano|Vallermosa|Vallerotonda|Vallesaccarda|Valle Salimbene|Valle San Nicolao|Valleve|Valli Del Pasubio|Vallinfreda|Vallio Terme|Vallo Di Nera|Vallo Della Lucania|Vallo Torinese|Valloriate|Valmacca|Valmadrera|Val Masino|Valmontone|Valmorea|Valmozzola|Valnegra|Valpelline|Valperga|Valsavarenche|Valstrona|Valtopina|Valtournenche|Valtorta|Valva|Valverde|Vandoies|Vanzaghello|Vanzago|Vanzone Con San Carlo|Vaprio Dadda|Vaprio Dagogna|Varallo|Varallo Pombia|Varano Borghi|Varano De Melegari|Varapodio|Varazze|Varco Sabino|Varedo|Varena|Varenna|Varese Ligure|Varese|Varisella|Varmo|Varna|Varsi|Varzi|Varzo|Vasia|Vastogirardi|Vauda Canavese|Vazzano|Vazzola|Vecchiano|Vedano Olona|Vedano Al Lambro|Vedelago|Vedeseta|Veduggio Con Colzano|Veggiano|Veglie|Veglio|Vejano|Veleso|Velezzo Lomellina|Velletri|Vellezzo Bellini|Velo Veronese|Velo Dastico|Velturno|Venafro|Venaus|Venaria Reale|Venarotta|Venasca|Vendone|Vendrogno|Venegono Inferiore|Venegono Superiore|Venetico|Venezia|Veniano|Venosa|Venticano|Ventimiglia Di Sicilia|Ventimiglia|Ventotene|Venzone|Verano Brianza|Verano|Verbania|Verbicaro|Vercana|Verceia|Vercelli|Vercurago|Verdellino|Verdello|Verduno|Vergato|Verghereto|Vergiate|Vermiglio|Vernante|Vernasca|Vernate|Vernazza|Vernio|Vernole|Verolanuova|Verolavecchia|Verolengo|Veroli|Verona|Verrayes|Verretto|Verrone|Verrua Savoia|Verrua Po|Vertemate Con Minoprio|Vertova|Verucchio|Vervio|Verzegnis|Verzino|Verzuolo|Vescovana|Vescovato|Vesime|Vespolate|Vessalico|Vestenanova|Vestigne|Vestone|Vetralla|Vetto|Vezza Doglio|Vezza Dalba|Vezzano Ligure|Vezzano Sul Crostolo|Vezzi Portio|Viadana|Viadanica|Viagrande|Viale|Vialfre|Viano|Viareggio|Viarigi|Vibonati|Vicalvi|Vicari|Vicchio|Vicenza|Vicoforte|Vico Del Gargano|Vico Nel Lazio|Villa Literno|Vico Equense|Vicoli|Vicolungo|Ziano Piacentino|Vicopisano|Vicovaro|Vidigulfo|Vidor|Vidracco|Vieste|Vietri Di Potenza|Vietri Sul Mare|Vigano San Martino|Vigano|Vigarano Mainarda|Vigasio|Vigevano|Viggianello|Viggiano|Viggiu|Vighizzolo Deste|Vigliano Dasti|Vigliano Biellese|Vignale Monferrato|Vignanello|Vignate|Vignola|Vignola Falesina|Vignole Borbera|Vignolo|Vignone|Vigo Di Cadore|Vigodarzere|Vigolo|Vigolzone|Vigone|Vigonovo|Vigonza|Viguzzolo|Villa Santa Lucia|Villadossola|Villa Di Chiavenna|Villa Di Tirano|Villa Santina|Villa Bartolomea|Villa Basilica|Villabassa|Villabate|Villa Biscossi|Villa Carcina|Villa Castelli|Villa Celiera|Villachiara|Villacidro|Villa Collemandina|Villa Cortese|Villa Dadda|Villadeati|Villa Del Bosco|Villa Del Conte|Villa Di Serio|Villa Estense|Villa Dogna|Villadose|Villafalletto|Villa Faraldi|Villafranca Sicula|Villafranca Dasti|Villafranca In Lunigiana|Villafranca Padovana|Villafranca Piemonte|Villafranca Di Verona|Villafranca Tirrena|Villafrati|Villaga|Villagrande Strisaili|Villa Guardia|Villa Lagarina|Villalago|Villalba|Villalfonsina|Villalvernia|Villamagna|Villamaina|Villamar|Villamarzana|Villamassargia|Villa Minozzo|Villamiroglio|Villandro|Villanova Monferrato|Villanova Del Battista|Villanova Mondovi|Villanova Dalbenga|Villanova Del Sillaro|Villanova Biellese|Villanova Di Camposampiero|Villanova Sullarda|Villeneuve|Villanova Canavese|Villanova Dardenghi|Villanova Dasti|Villanova Del Ghebbo|Villanovaforru|Villanovafranca|Villanova Marchesana|Villanova Monteleone|Villanova Solaro|Villanova Truschedu|Villanova Tulo|Villanterio|Villanuova Sul Clisi|Villaputzu|Villar Dora|Villarbasse|Villarboit|Villareggia|Villar Focchiardo|Villaromagnano|Villarosa|Villar Pellice|Villar Perosa|Villar San Costanzo|Villasalto|Villasanta|Villa San Giovanni|Villa San Secondo|Villa Santa Lucia Degli Abruzzi|Villa Santa Maria|Villa Santangelo|Villasor|Villaspeciosa|Villastellone|Villata|Villaurbana|Villavallelonga|Villaverla|Villetta Barrea|Villette|Villesse|Villimpenta|Villongo|Villorba|Vilminore Di Scalve|Vimercate|Vimodrone|Vinadio|Vinchiaturo|Vinchio|Vinci|Vinovo|Vinzaglio|Viola|Vione|Vipiteno|Virle Piemonte|Visano|Vische|Visciano|Visco|Visone|Visso|Vistarino|Vistrorio|Vita|Viterbo|Viticuso|Vito Dasio|Vitorchiano|Vittoria|Vittorio Veneto|Vittorito|Vittuone|Vitulazio|Vitulano|Viu|Vivaro Romano|Vivaro|Viverone|Vizzini|Vizzola Ticino|Vizzolo Predabissi|Vo|Vobarno|Vobbia|Vocca|Vodo Cadore|Voghera|Voghiera|Vogogna|Volano|Volla|Volongo|Volpago Del Montello|Volpara|Volpedo|Volpeglino|Volpiano|Voltaggio|Voltago Agordino|Volta Mantovana|Volterra|Voltido|Volturara Irpina|Volturara Appula|Volturino|Volvera|Vottignasco|Zaccanopoli|Zafferana Etnea|Zagarise|Zagarolo|Zambrone|Zandobbio|Zane|Zanica|Zavattarello|Zeccone|Zeddiani|Zelbio|Zelo Buon Persico|Zeme|Zenevredo|Zenson Di Piave|Zerba|Zerbo|Zerbolo|Zerfaliu|Zeri|Zermeghedo|Zero Branco|Zevio|Ziano Di Fiemme|Zibido San Giacomo|Zignago|Zimella|Zimone|Zinasco|Zoagli|Zocca|Zogno|Zola Predosa|Zollino|Zone|Zoppe Di Cadore|Zoppola|Zovencedo|Zubiena|Zuccarello|Zugliano|Zuglio|Zumaglia|Zumpano|Zungoli|Zungri|Lariano|Lamezia Terme|Santanna Arresi|Terme Vigliatore|Acquedolci|Ladispoli|Ardea|Badesi|Sicignano Degli Alburni|Molina Aterno|Scanzano Jonico|Portopalo Di Capo Passero|Avigliano Umbro|Viddalba|Casapesenna|Castro|Cellole|Porto Cesareo|San Cassiano|Vajont|Ordona|Zapponeta|Blufi|Paterno|Masainas|Mazzarrone|Ciampino|Santa Maria La Carita|Golfo Aranci|Loiri Porto San Paolo|Santantonio Di Gallura|San Ferdinando|Villaperuccio|Priolo Gargallo|Trecase|Petrosino|Tergu|Maniace|Santa Maria Coghinas|Cardedu|Torrenova|Ragalna|Castiadas|Massa Di Somma|Stintino|Piscinas|Erula|Bellizzi|San Cesareo|Fiumicino|Statte|Due Carrare|Padru|Montiglio Monferrato|Ronzo Chienis|Cavallino Treporti|Fonte Nuova|Campolongo Tapogliano|Lonato Del Garda|Ledro|Comano Terme|Gravedona Ed Uniti|Mappano|Rivignano Teor|Trecastelli|Fabbriche Di Vergemoli|Valsamoggia|Figline E Incisa Valdarno|Castelfranco Piandisco|Fiscaglia|Poggio Torriana|Sissa Trecasali|Scarperia E San Piero|Casciana Terme Lari|Crespina Lorenzana|Pratovecchio Stia|Montoro|Vallefoglia|Quero Vas|Santomobono Terme|Val Brembilla|Bellagio|Colverde|Verderio|Cornale E Bastida|Maccagno Con Pino E Veddasca|Borgo Virgilio|Tremezzina|Longarone|Valdaone|Predaia|San Lorenzo Dorsino|Valvasone Arzene|Sillano Giuncugnano|La Valletta Brianza|Altavalle|Altopiano Della Vigolana|Amblar Don|Borgo Chiese|Borgo Lares|Castel Ivano|Cembra Lisignago|Conta|Madruzzo|Porte Di Rendena|Primiero San Martino Di Castrozza|Sella Giudicarie|Tre Ville|Vallelaghi|Ville Danaunia|Ventasso|Pieve Di Bono Prezzo|Dimaro Folgarida|Polesine Zibello|Montescudo Monte Colombo|Alto Reno Terme|Borgomezzavalle|Lessona|Corteolona E Genzone|Campiglia Cervo|Val Di Zoldo|Alpago|Abetone Cutigliano|San Marcello Piteglio|Montalcino|Terre Roveresche|Colli Al Metauro|Terre Del Reno|Valfornace|Alta Valle Intelvi|Val Liona|Casali Del Manco|Alta Val Tidone|Montalto Carpasio|Cassano Spinola|Alto Sermenza|San Giovanni Di Fassa Sen Jan|Rio|Laterina Pergine Valdarno|Castelgerundo|Centro Valle Intelvi|Valvarrone|Borgo Mantovano|Alluvioni Piovera|Cellio Con Breia|Treppo Ligosullo|Fiumicello Villa Vicentina|Barbarano Mossano|Borgo Veneto|Corigliano Rossano|Valle Cannobina|Val Di Chy|Borgocarbonara|Terre Dadige|Barberino Tavarnelle|Tresignana|Riva Del Po|Sorbolo Mezzani|Solbiate Con Cagno|Sassocorvaro Auditore|Quaregna Cerreto|Valchiusa|Gattico Veruno|Valdilana|Piadena Drizzona|Colli Verdi|Lu E Cuccaro Monferrato|Borgo Valbelluna|Pieve Del Grappa|Valbrenta|Vermezzo Con Zelo|Cadrezzate Con Osmate|Colceresa|Lusiana Conco|Presicce Acquarica\",\n      provinceOrCountry: \"PDLOLCSIORPEMIPZRGFGCNMTAQRIPZBZSANACTCTCTCTCTFRCSBSPUMNCRVTCSVVAPTRAPBACLCBISALCSFRBACTBGBGROBSVRRMNARCPCNASSENPTATTOPDCRRCISFRBSBLRMVAMBNOAGSAANVIAOMBORENAQAVCSUDCSCEBIAOTOBNIMLCCNSSTNTOPVVCPEBLSVFRCNTEORMISABGVCPZRMPVSOVRPRCNCOSVALBAFGCOVICZTOTNMBCSPDREBGCOSVSVVAPVSOATPVTPMETNBZORAGALCSLELESAAQBSALRASSBGMEPAMTALVCCEMEPAPAORAOBLTRLERMBGBGBGBGTOVITOTOPCCOBASVALAVPASAVIFMCSCHVITVCNPACSLUTRCEFRALBGCOSAFMCSUDCZFRCZRIBGSPTRCSNOBNBLUDNAFRTEANCZSOTNTOSVBILETOPNAVBTBZSSBSVAARVRBSSATOPDRMCRATLCVERCBGAOBZAORMFRATMERCRIVBAQCOFGPZRMBOVBAOPUBNMCBNBZCOMCAPSOIMFGCSLTSAIMAQUDAVFRLEAGATPNNUORVCSUTVFRBGANCHORGRRMVATNSPVRMIMBVISSORSOBGRCVVPVGEMIARCOBOFECNCNCZCHAVRORMCHCETONUVBVTMINOPZIMSUFRSVAOLEVBNOCOBNBNFRPDROALAPPDTRBGVABLVITERMUDUDRMBSAOSSNUNAPDVISASIAPFGRIVIVCVISIMNTVRIMICAPGCOORENATORAQPZSACHFRSATEAVTRUDNUSRSAMSVBIMBLFRNUGEBZAVAVBGCETAAQPNBGTOPZTNAOSRALTOCRATBGBSPNVAVABGVBNAIMBZPVROVRARCZRCPARAPVRARCUDCNBGLUPTPIFIFCAVISPDBSCRCNLEREROMNMSVTBSCEAVIMTORETOATCNTOTOPASVLCSUTOVCVCAQPZALSSTOORVBPZPDORPZCBNAMIVAORTOANVTCNBSBGFIPVBZPDMEPNAOVAPRSVVRTOMINOORAQLUGECNBSBANUBGBOPZAQMBBTCOCNTOSAENSUAQSULCBGLCLCALPVTRTETNBNMIMEMIUDVTBSVIVTVAVTLTALCNPGPVMOPDCNSAPVPAFRORNUVBVABSTNPRBGVBTOCNCZVRALMCPUPVVBPZLCTERNRMCNMINOCESABLMBFMISCSFRPARICTCSANATBOKRCSCNNUSOCOCNRCSSCNBNBIBOBGSOPRSSCOPVALBGROSVCNBSMTMBMICNFCUDLOATALBGBSBSMBVAMITNPCVAVASSPCPGVBPGSPVRCTCSRCNOVABGVCSOMBREARLITOFGUDORVTBIBSTNPICOMIBABIAOBSNUAVPABTAQTECSALVABABABANUAGRCCOTNBGCOCOPDPCTONOCSVCTNVALOMIGEVBNOCBSVSPBGMITOMTBOPEPAMCNUVTBGBZNOVIVTCHCLPAMOORSPBGBGVRFETNBNCBCRCSAVSSSSSSCNRIBLUDIMCRPRREPVTOPASPIMLORIALSVFCCZTOSVTNLURIVCBGMNPVTONOLOCNNOIMTOTOPCPUPVALPVPDCNPRBSFIALPVBSVCPRNOBOVCSVSOPVBSORNUCHBITVNUSSSSGEORROVRALVRTONANACNALLCPVBGCNCZLEBGBSSSRCRCRCBSCNBSFGMBPDVRALMNCNBGRMSABZPVRCBSTOBGBSVATVCRVAVICOBGBGLOPVVICOBZBSVAVRTNVRREBSTNPVBZVIMITNVACNVVTOCOPZCNNOBGALBRPZVANOBSMBRAVAAOPELCFRVIVVMECNPVCTBZCNTOVBTOMBPDSPPNTOBGCOVABZATBGTONAVABIAOTORCMIATSRCHBNMISAARSSPNSSBOSUPTSOAQVAUDLCCOSSSSSABNCHSICSMBSUAGSSTOTOVCORGETOCNMISRTPMBMIPRPECBVRTOVAMICLPIVRTOATUDBGALVACOORPAISKRVAREPCTNPDCOTVTOSAPUCACOFGAQTNCECEBZBSSOAVVASVNAAVBLATAGSSRCVBENAQSUCTTPPVVTTNPIMTPIBGBSBGLCBZMCBOTNVRVITNPCFIPRSVSPLEAVSVBIATTNLCCSATCSAGCTCLPANOROVIBGTOBSSACRPZVIBGPZBNCETRPVMIBSNAALLUBIAGMITOVBBIISCNANATANBGRMNOMCSACERCALUDCRVIAGGEAOSAVECERMGRCRRECSMBREPGVCLEFILITOVITOCOTNTERCCBAGTPCBPDTNAQLTCBBZSOPDPAPAFMPAUDCLGEMOAOBNBNFRCBVEPZCBGELIVESAPALUIMCTMCPDPDNAMOPVAQBZBOCNBLRMTNROTNPZCEROFGBIPVTOPDAVRCTOMIATRIVTPNAGSRVTTOAQCSSAPGVBMNPVVBLERCBGBTCHCNAQPORITOALISRIRMATVARMPUTOCOTECOVEPCSAPAGRPILURMCRAQCOVVAQAQMEBGBLVTBSMECELIARMBAQAVCABSAQTVCRCRPEISFILICRRMVTBOLEVTCNARVBMENATNBSALBGCETOAVATBIVRBGBSGOCEBACZRCCNCNPETNFGAQGEAPMBCOBGVATOIMVTALSUNAPVCOPZTVSUSVPDVCVACNRCCZNALUTOLCALRCVCVCALKRSSCSAVTOCOCEPACEVCTNFGCOSRUDSUCZTOLEPOPDVAMBBZBGCSBGMEVAVATABRISPCCSPUBSALMOMILENOPVRECHPERMFGISMSVIALSPSPALCNAQVICNPUALPDMICOCHBGTNKRCBCHCECHFRNOCHAVTOSACRALCBCEBNVAVBPDPITVBOCRALNOALVRLOSACRCRCRBORECNSACHNOCRLOCRMNALCSFGNAPZMNLOMNPDCRBTCEFGMEFRNOVANABANANASVVCPVRMBIRICELELCMIGEPNALLCPVNABGPGVAPIVCTOPVTOGELOSATOLOFICETVRCREKRBOBGCOCOBGMSNARASICHVAPVMINAATSOUDLCAVBAVACSMIVASRBGMIMICOATLCALALMIFRVIPVTEVRLITOCNATTOATPVMEMIPVBSVIPDAVMNANBZSVATRACBPASAFMBSTVPABOMNVRBGRNCNISAQGRBOCRAQCTAPMEAQCERIANFIARTNLTAVBNMOCSIMTVPICHCRRMTRMNVIPZBOROCHSAAQATTENATPTOBAPATAALVAREALIMPCGRALNOANCRATBIALPVALALATALCNNOCNTESICNPICBCNFRCEVATNPVBOSOLCNATNTVTNMNCBFGPZISPZFGRMBOCNCOROBSPZMECEPVCNROTNPNRERECOFGFRRIVRATSILOALATSAATSALURMSPTOMOALPIBNISISANBNMCPGATBZBGSAPCSAARBORMMCRIVTISPZSSVAALAGSVAQAQBNAOAVBNRCTPMOPCTRCRCEBOBSAOBOCTCHVACSGELULOSATOPEPGGRTEMNSICNVTTECNARARAPTECNBGSOUDLOBSAPBSLELELEBGFRFCFRAGENVAPAPZCBMECSCSCTCZENPEAGRNBNPVSABINONOTOVRTNCNCNLENOTNCOVAVETVPNALVEUDRMTNTNLOMBBGMOTNTOREMNARBSVABGVRFRPVLIBSSOPAPAVEBRAQCHFGCSALCRBACSATBSATCNFGSVSAVTVTBRTECZBGBGBLBGROSVCNFESAENCZPEBNVBFRENGECONOPVSACBTOCBCSAQSOUDNAPATOVRROKRMNALCNTOBGALPVPVSVIMMBPCFGCSCOTERMCOLCMIANBNPGATFICNALBIATISMIMIVRPZFIPVCZRMPDFRCNVCBSCNPVRMRACSLOUDAVCEIMCSCELCTOMIMBVBMEMIFCFCAVBLIMTVVVMCATSABSSICSCNBSAOAOAOAOAOCNSSTOVIAVSIPITORGSSTVANCZBSPZISGESOTOBZTOSOTOBLPTCHFGCRBGPVVETOPNUDARBGVISOBZCNPATOUDIMATAVIMSISIARTOAGRETVBLGECZNASARMCRTOVCCNPVBSPVTVBSRCPANABSPNTNATRMCRMCGRMIPASORCTOTNPDVETOCECSIMBNTOMTCOKRKRTNBGSVBGVAMITVCNATLTBRPGPDPGPGRIRCRIPEVALCIMTNVCUDBGBSCSCBVTAQRMCHISMCPECBRMARCHFCAQPEVTTEGRAQRMSOCOBGPNPNCNTOTNCSVATNBGTOTOATBSATVAAQPDPVFETVLOUDSSBIMBAOGEVIGENOBGFRPCLCRIAQPGBNSITVBSLCPRPECBCHCHRIRMRITOAQFRLEAQTOTOLIFRPABLCBRIAPISSARISUBSVCUDMCMTVRBSBGMIVRRMTECOSOPRCSMIBGVAFEMSLOUDBLBLVABSNORGAGNAMNTNCOPRAPCOBGVECESAISVRRIBSVEMOMBRCTOMETVPVRICZALRAPDPARIAVTESASABAAVALLEPVFEPVBASAMIROVTPGPNTVPNGELUFRAQLTRNLEANTOPAPZSAAOMIGOBGBGMIMBVILOCNVTPRUDLOLOTVMIREMBPDCOMCTELEMIATBZCZATATATPCCRCRBSPCCNBSLCBGLOATBZTEARPEBZPVBSUDCSIMSORCTOCNBISVAPVBSSATALBGROVIPGPVBGBGLCVCIMBGVRATCNRAKRKRRIBGPVMTLCVCCNVBVICHBGCRCRLCVALCCOALCRCRVCVILORONOBIBOVBNATACNGEVBTECSCZCSVACRVCTNKRVAVRSACOTOMIVAORPETOCRVACNATTOCHAPANORNOVACZBIBGBZLEPDMNCEMIBNMICOBGTPKRLEVAVATNMIBGTNBLBSVVGEVACZSOCASUCZSVSPSOCLRCFGBSCNALTNALCRPGLCVCBSMBNUCSCSCNSAIMIMIMIMFIUDVVCSLENOCOBZGOCNCHUDVRIMIMGOSUTSVELCCSCOBLAVVBSUSUAOBICOSUNULCNOPVBIMNBGCOAOFCCRBOCEVVTNUDMITNCNTOVBNUSOVIBNTSVAVABNATSABSBZPENULCCACNAOFIBGVIUDCNBGCNPZVECOVRVRBSBRTPSVPNLCMCSUSUTOBSLCFRSSPDSUAOCOALREANVTVVTRUDSOTNRAFGUDCOTACSAQVATNBNBLCEANCSMEVTCZFMCHCOFRBZMOPNPUTEBGBGNORICHCHVIPZCNPEPCVTGOTVBRGEPICNGEMTAGTPTOSVCNTOPRSAALBLCOTOAOTRFRSRPUFMVACZRCCZMTFEVRCBVAPVTOATPCRCALRIRMTOMCTNMCPAROMETRBZTNCRFIBSROVECOCSORRMVVBGVVMSFRCHPZPVISVVANMOSVBGCOBGMOTOPCFIFICSSAMORCPNMECTCSMCMSUDBSMESRSSAVSUORVCFGBNGOTOARBNTNAPPGTVSPGRLOMELTTNNUAOFRBOPNAVBGPRTVNOVCGEATPDTVAQFRCEBGPRBLBGRICHAPBNSOORPZBGUDAVNAISFCFCVBRMLTCECRMOVCTNISVIUDUDUDTOBGPRLUBZPVMELUMSAQCBCHVEVECNCZPGRCVEPUVICNCNTABNBNCHSPALFMBRVVCHCSMEPZVVSRCEALPVRMCSTNROALALTOCNMOBNRIPGPGRONANAPUMETVCHALAVCECEATCHPNTOPUPUFRISTOALALFIBGVRFRBZCHMEMESASUCSRASOSACRALPUAOCRNULTMEMIBOBIENAQLECZMCTVROCNSINUBZMELELERCLCFCLOVAVTVANOPVLURMPZBOPDFRVILECEMECENUPDALBSPVCNFICBVICHFCPVVIBGBGBGPAMTALNOMILCVRBSBSCNNOBZBSPVLCSVTNCOTOCZTOREFCVCBSROBGALRMVANUGRMNVABGPDVRPCMNCLRNUDVARMANCRCNSUGESUPZRMCORCRCPARMPVVASUTOVBVAVVSOCRSUMICHSUAVBSNOVBORBGVCROTOBSCEPGPAMEALRGCTSSTOTVSUTPBIRCSASAVBAOCBCZPZBNTASABACEAQRCMERCTRBATNNUCZCHLENAPACHFRTESALEPVMBSVTNSVTOCZBZSPTVPVPAMNVAPVCRUDSUSUSUORORMNSORMTVMTMIAQGOBGVAVABGVABGFEGECNBLPCCNBSCNNOPUGOGOVTLOVTBINAPCCTATBOCOCOMENOVAPDPDMTBGPAPVVBTOBACTCEATRIAVVCALAOAOAOFIMIVRCOCENOTNUDCSCNVICSBOALBGALBGCRPVPCTOSOSOGRTORMTAAVAPFMAGVTRCMTAVVETOCRBGPZBANAVILEMCPGPGREMESUCOFRVCLOCZROTRCSCHCBAVPZCBBNPICNSUREALPGMICBMNRMMOPVCHVBSUBSCRAOCZBSSUCNNUVRSSLCTNBOIMFIVAATBSVATOVBLCAOAQCOPVTOMINOMIFEVVNUBSMTCNCZNAVTFGBSTNISSUPAATKRFRGESOTETOIMGRVRPAPUBGVICRVRALFGBSSARGVATOAOBGAOCHTVMELTSSSSTOCRCBRMVANUANVVAGAORMRITOMINAAVBZORSSRCVICOCNCSPZFEBZPISVMICOCSCSBZBZBGTOCHSSMOCOBLCNAGPTVCBZCHNOPVPRPVNUSOTOFMAVCSPTPVCBBZAOPACOSPSUVIFIVTTAAOBRLTUDPZCSUDRCSABZPZPZTOSASAAVGEVRBLBZTNPZVAVABSSATNVRMBAQLELCBGVAVRMIPDNUTOGETOROMEBGBSLTVCMBCHSRRIENTALECNCNPASPALNOCNPRPRFGMBTOUDCEMENAPECHSPBGLECNTNTOCOCEMEAGMSRMCTLCVCUDAOBLBNVVMBPDCOMEBSCNCBPVCTAVMECOPVMICHPGCNMBCLNASOBLCOTNLIVCLOLETASVATTOCOMIBGNUBANUNULONULOBSBSBOLCCOTOTOPVTNVAVAFIISVIBSMEFCCSCSCOLIRIVITOPDVBBLROANPETVARMCGEBSNUBGSOBSVABLPDVCVTAGLUFGARIMCBAQAQPCTRRAVIVACONUGEBSSUPUCSAVSSCBCOCOBGSSCOCETNTOTOUDROTOBZSAVABGRECSLOISISCBTOMCCEPUMBBSNUCNVBCECRBGVBLTCBBSMINOPVPGCZFMCNCNGRAQRIRMSALESVTOMNMIUDBIORBZCOUDCZCSVVANRNSALOBSSPCRBOUDVRTNBSLOVBCTMEVALCCSSVBZVAVIBSTNAPMEALCSRCNUGRMESUCSLCNOTABSBSFGCNCSPNAVPETVCNSOMNUDRMBGSSCAMOMONANORMUDVRVICSCSATPZMIMNCZRMCZRIBSVALILICEARPVVEBZCNTVTOATCNBTLCMNCOGOCLNANARCPARMBZPTBSMNCNVABSRCVIFIORCNTPPGPZPZVTLEVEBZUDCRLETABGCNTECZCZSSRCLOTAAVCEPVCSVAMICTCTPZVATVVBPDTVPDALFECOGEFMAQMSPGPTTALORANAGRPDLUBITOBICEAPTNSVNOVBORMCMTTOLECBTOFGTPBSRMCLMETOTNSONUTOMBPVGOPRBOMIBGMNMOTVPNPDNOROALFCGEMILELOPZRCRCSRKRLEAVNARCBNCNSOTVLEBZMICOPVIMCSAGRMVEALBZLCVAPUPURNSAFCTOAVUDANVBMEPDLOCOBRSOVAMIFEKRMEPDNAMBBITNPVPVVRGEPVTNTOTNPABGTNNOBITVNOVBRILECHCZMTGECEMIMEVVORCTMESVCTBSCTVRBOBTLESALTLUSVVEAVCTALCBPVISMOVEMEBGRNPAMBLCPZCTMEATGEMORGFCLOORBATNLCUDMNMCTVORORORBNUDBGMESACNBAALLUBABNBOIMALCBPZVCAGRCLCCOTNATCNPUATCNALTOATNOTORIALCBATRCATCNTOBGCNCNTVSUTOATALCNPRVCATRNPUPUCNCEGECNGOMOCNMETVATBOVVALAOMEBICSBZCOBSALBSBAPATSFMAPANPDCAPTCNATALATCBBZSOPDMEAVFIMTMEANALALCNTOCNATPTTOAGAPCSPVVTTOTOLOCNSACOFMISRICZCHCRGRPVPEVITVGERIAVPVPULUANMCALPGTRPIMCVRTRREVIVIPUATALBSPRPUCBRMPUSASASAMCVBMOVIAPNACLAVPGFMBNCBMCPUCHVTTEAPRNMORMAVSAVRFMTRAVAVTRVIVIAPFMALCSFMFMRNPUVAATIMPDTABSPURMCHFMVVFGPGRISSTRPARMAVBGCBFMCNFIMCPAATBNCNAVANLCALTACOARAVMCPZCBAPPOPZUDCBCHRIISANCHTECZTAPURMAPSIARAQPNBOSIFMANISVTLESIVTVVCNSPRGRMGRFMLTSARIFRMCMCLESAFMBOARPGFGMCANBNMTPVVBPIMOPVPEFITOFMCNAGARLCAVPIVIFMFMCNSSFCCNPVPCBSLCVISIGRMSBSCRGEPGPIRICOCBTERMVIFMORPVVAMBMNBOALCSATGOVASOALRNLEBNBOBGSSFMCNPCTVAOORTNTVRMSAAQTORMCSVAALBGPVFRCNAVANRITECBMCPNALPVUDLCUDCRAVTEPEBZGOTVCRMEMEVCCSBIFGRCCZCTMITACHBGCOVRBGMCTSMBAVNALOMSBSSUCNVICNSVALSILEPZSSBSSUVECOVICLTEUDBITNBZVINAORSULEVVTRAGCNSVMEBZBSAQBZRMGENOVRGECNBGRMPZORVTTERMTVMIRICOBIRMLEPRCNBSNOLCTOCTPVENVVCNCNUDCLENMEATVETOCSPECZPGSASAPRBALEPZVRTNVRVIBANATOSVTOTNMOTOVBNUORPGLTMIBGTESRMBTNTOBZBZMENOMISOVICORECNPDVEVIALMOSAMILECNORSSSSSSANNUORSUSUSUORSUAOAVBSBSSUBIBIROALAQALALTVBSAQANCRAPBSVBVALCTOSAAOSSVCVCNONOPVRMSACOLCVALCNUPVCZMEMTSALCIMALORNUAOSSCRATBGBGBGCONUBSVBSANUVTCNBGNUNUBSBGSVMIAQVRPZRCBZNUCBTOGRPIGEVILONUBRAQVAVALOBGTOCSVTORCNTVMBVBBGNUNUSASUTVALFGCOCHCSCEFGSUNOVTLEFMARBZCHAQSPSVAQNUNUTRBSBSTOTOSSNUSVSSANNUBGBGLCUDIMAVLOPDTNBLBSLOTNSSBSMICNFECRMNBRLETRNANUSAALPVPCTOALUDALAQNUTOSSALBOMISUTPMEAQSRPGBSALBSLCMICRLCPDSSSABNCNTVSARIBGMECHUDCNLCAVBNBSBSBGMOTATACTPIPRCBSSBGCRPZTOPABSVCSRUDFICHCZPARMPVFRRCKRVBSVAGNAUDLEORSURCAPCHBASARMCHBGTNVRCSBZUDCNTOPVTNCRCSPGNABNFGTPMICSBNTPCSROMILEBSBZTOCSCEALVVLCPRALCNAVPVTRBGTPPANOBGUDPNBSATPGBSFRCEVRALLCAVCTCSFRSSMELEORUDSUSUORMIBNTOPVUDBSTOMORCPIALTOCTFMBLVIBSTVSOCSBGCOPUMNBGTNFINOPRSATNTNATSOTRRNCHCHMCTEPECZCHBLBZRMNUSUSAAQSSTNPUIMSALCCNCNAOPDTOTOTOBOCRVCBSBSSATOPGPULUVRPECRAQLCISFGMIVRPTAQAQBNISPZISRIPEFRMICRTOCBRIKRSAPAPACBRIPUMCFMCZCZAVNOBIMEISAQROCNVCBSCNPDPCSASACESVPAAOBSSIBSPUCSPECOPCCRTOVICNBGVEBONABOVTSOBGCNSOBIBGENLUBGPDBGPEPZFRFRATBICECTFRVBPGSICRFGSVISIMTECBCBAVPVCHPZCSPZPGALCEPECSPZENCNBNPULUAVCEBNIMMIPVPTPVBLBOTVGECRLUMOPVCRARTNMCVBFRIMCEFRPZSPCOVCSUNAPVTOROTOATTOPNTNPUCNTOVCMILIPDMCTOATPDVIPCCNLTMEPINORMTOSABSMTPTGRMNSOTOPVCRVVCHAQISVVRCCSCZRCUDCOSSSVCNUDMSPCFRLESIMNPORIRIPGCHFGNARIRIRIAQTPFEBARIANMICOBGNOVITOBSPNRORMVVMTBAPCMOTRRCPASAAONASAPABICHCNBSPDANPITOMTALTNNORMNANAIMBSMNORBSBICOPIPDFITOBNSOBZUDPTSAROCNFRALIMPCPIBSTVCOBNCEPDPVPCBGAOPDBGALBSAOALMNBGLTSVBGBSMSLTALFMRMTVALPEARTRLUPNSAPNCOIMUDATPVTONACEFCRCVAVATVCBLIGEVEFEMNMCFMFMSUROSSSPROBINUVISATVRIFRBZSOSAVCPZVITVVRREUDRIRGISMIVIBSALALSSPDNAMIUDBGUDCNBOTOBICSSABSTOTOBIVETOVCTOALTOAVCEAQSOPNCETOPONOUDBZAVAQPNCNRCUDPGFCTNBZBGALTVMIIMLCUDVBVBFCBGVBUDUDAOBSCEBGVRCHBSAQCNMOSALCCNCNPAVTNAGECOLTBSBSBZCBCNBSBNCAUDTABGCOSSBAAVCHTONAATALVBVBVCPTAONAVECACATOALRESVTOAVMNCRTVVCVIBSMNTNLEAGCNMEBZSICTSISIAGUDRGCEAQCTVAVACTBGBGIMFMGECHSIPZPZVCBZSOAGMOUDSARAUDCEVBPVAGUDTOCEMCGENOVIPVMNATTVENFIRERCREBNMEUDBSMBCSBZTVMIUDNAUDCLPVCNATTVTNCOBSIMGECOAOAOMIRCSVRMCEAGTOVVALCBRNSPCRSATVCLRIBZCNFIFGRMUDVCRNREBZRMORRAMOSPPZISCBPZCBCRCRCRPICHAPMCFRCTCNBLIMTNBGTOALTOPVTOTOTOCRMNALTOVCUDPZPCAQRITOVRCRRCVICNCNVCVCATTOPVMICRMIPVATCNCNBLMEAVKRPRCNTORMAQAPCNATFRSACNPVCEAQAQRMAQKRRMMEALCNRCTABSRMSALTALCSGRMEISLTPACECHPEPZRIPAAQSARMNAAQCEFCAVCHTERMCHFRLTISRICNCHGRPVATSVCNCBMERCISCEIMSPCNALATFGATMICNCNCNBZBSCOMEFGMNBSSALCCSRCCSPVBGSORMCHAOTORERMNOSAPVTNSSCRBGTOVIGOVVTNNOMECOVRTVBSPVTNMBGOTNUDVTBGGEMBBITOVRMNFCBGGETOVCTNBITOTOVIRCPVMIBIPESACSCHFGALLICSROSRANVCCNVIGETOBGCSAPCBPZMTAVPCVIBSGECOCOMNVRTNVRPNVRTNPVBGRMROCSPDMIPDTOREUDBSTOLECNTNFITNPZRABASABAPZLTBSMNSAPDPNRMSUORBIGOTNAOAOAOAOAOAOAOAOALBOCOBIPRSATOSAMTTPROVCTOCBALCNBSTPLOTOSACNTVVCLECNVRRIVRPECNBSBZPRVARNVCBICNLEPZCRSAAVTOVEVASUSUAGPTRMCNBASOTOTNCNORLECOIMBNCSSUCRROAPCNMNAQAQCSTOVBAGFRIMTVCBVRCHVVBZGOTOSIFICLLEMOPZPZPACEPVSARNGEMITOCTCSVVPZPUALATCNPVCRUDCSAQTOBIBRVEFRCSLEMIVIPZCBCEMOLTBSBTCOCSMETVLOGOCZTOSSMECNCNTOSUTRBZPVNAVCTOBSCBSOMNVATOSIMCCSALFRCSTAMNMIPVPCMTRCTOPNNAPDBNUDBOPDBNATTOARRCUDSABGMNVTAGVRFRCRCSCBRNCTCHVRFGCBCBMINAPAPGTOFIBLCECTVVRMSAVRBORNUDBZBNBNBZIMPURCCSCSGOBNVTRCCSBNSUAVCZSACEANCSMEBNFGFGATBZBZCBCHCSPZROTOPNBNVRMNCRPDRELOPVAVATTASACBTONOKRFCPAMTTOSASAAVCTCNVETNBRPIPVBNCONOBAFGCEKRVVLECSAVBNBLBZBRANFGNAATBGGOMEMEBLSATOUDCZCZISCTRCTVVRPDCSVRBOCECSLENOVICABRPDAQCBRETVRMTOMOAVCECERCMOSIPNTOIMRCLOLUSAALBNMECHALNATOPRTOARMCPZFGCOAVCZCSSUBGCLCZCSLEBZPAPVRCPIRGBNCBSUCSMEAGGRPAISALBOCSFGRABNRCMERNCTPVORBLPDNACNPVRCMECTPIAVMETVAGGEPVPICECEPVPVISCTVELCCHCEUDVBANSAMERMFRTOVRSACENAPGAVFRCZSUCELOPDPVBNSAAVAVAVISMERMMCPUPZCBAGTPVRNASUTOORNAAVFRRNPZCESAKRCSFCMESSCTFMCNSATEPDCBFRCZFMAQTOMESSBAPERCCHAQVCLTRCREPUGEBLTEVVFRRMVITNAGAVCSAQMILOSPFRIMCNGEMERCCNVEORPDPESATRTVORCSAQLINABLCZCHBRRMVISUPNUDUDTPFRMISATNBSVRMIPVTVPDMEUDSACSRMVIPZSUALVIBZALBSPCTVMCBGSATNVAAOCAFCSIPVNUSPSASSSVLIBNPZPUANMOCZUDTOTOTAKRNACNAVFCMOGEBSMEUDGOSVPESACNCSSAPVCSTOMEAVKRRECRCRRIAQORGRBGISGRTOCNBZCHPGPGCHVICOBGVIMNAGPARGRCRCPATONAPAAQVCVCAQCTLEVEAQTNATIMAQLELOUDBLORSSMIBGMCSUGRRMTNMITVCARISUPGBSCZCZBZBLBZVRPDBGSSPVRCGRMIBZBZORAVBSANORPZCOLOORSSSUCBPNLUSUMBBLCRBGBGAVBSMNBSLTTVSOATVVGEFGCSANCLALCNSUSAPEMCNAANPUCZRCALCNPTMCMNVCSASUSUFRCZBLCESAATISARISCRFIPNBZVAMOMITOGECAMIFRATCAMITOTOTOCZSUSUSUMBALLTTNTSFRORORSAORAGSURCSIPGFIBZNUSSSUSUNOALPVTEORORVVCZMENUORCNNUCARCSRAVORANLCLCSUNOBZFMVRUDORFCLEATBSVISRMIRACRORVAVAIMSUALPDLEMNMOPRAQAVALBNBGBGLOCNVANAVRCNCNCLPVVRCRSOSOBGBSLTFRTNPRGRAVCZBILOCRVRNUGEVVVVVTCONOBGCOORNASSSRCRBLVIBIBGTNCZBGCZCZBLSIMBVINOMEVVCETOLEPGENLTAVPVCSCSTNALLTMOPNVVCRBTVECRCBALAPCRBGPZBGPGPELETNTNSVTVSOCZLEANCRRCCZPDGOALLUCOVVSVSVBZTNLEBGROMTRCRCRISAFGFGTNVEPVTOTOFRUDTNVBALNABITRKRVCCNBGAVARRMCELCSULCBGMBBSVAAVORNOLEFRLELETOTVMNCLVTUDLIMNLCORIMAQROALBLVARNSONUBGARUDBLMERICHCNTAUDCSSOUDTVALAVAVRCLEUDTOCBCZCOBGLEBIPUPUPZCESOVEBNBGSSTNTNSSBSTNTNPDAVTENOFRBZBZBABZPACBVABITRBGLTTNORARCSLOPZRCPAPDCSVRPIALNUNAALUDTNIMTNBZVTSVNUSUCEVIVISSNUCRALLEGEATBSORAQTNSOBZCZBZSSPZRMPRREBNPEVBPGRISVMCRMBICHUDPZPDTNNUATATCECSTEBSTNSABRAVCBPGAOCHTOBACRNOCHCRAQCOPRCBNUSASSPVTOBICZCNFRSONAUDTOVIPVBGCNCHBNPVBGCRNAPVPEBGVEPVPDMEAVFGSABGTOCNFMBRCNPACHPVRIVRFRCHPVRITATECRVIGEPRAVRMSIALCSSATEMEUDVTBSTESVSOPAVAORTNSAPNPNPZTOBTSOTPPAVBAQUDVBSUBSTOVATOPRPNPCPDCSCTNOPZROFCCHVRMCCNCTBSSATNCEBSUDLESIMSBGCRSOORVRPGFRAVBGRMTVALBGBSTVMIMICNMICOPDMIGEMTLEVCUDNUTSBACRCNSSVCIMMEALVIMBCBFRUDPZPVBZTOFGENPVVBVCVVPVMIBZCBCHNAAVLESUSSPGBSLOCOMIBASUGOPEMTMEVAMEUDLELECOORNUBZKRBSORPDPUSVPUMCBGSSCBNUGEORSSMBSUSUNUTOTOMCPACAPTCSRICHBZSVFIATPZLUCRPOTOCRCEBGBGGECOVIBZVITOBISOCNMEPVSOBZTVVCVRPVVTALBALOPGATTNSOVATOBGCNLCAOENBLBITNAVBLCEPVCEBZIMTEFRIMBZPASSFRVVCLRMVTSUFRAVPVBIBGVIRMBSPGSATOCNALLCSORMCOPRBGAOTOAOVBPGAOBGSACTBZMIMIVBMINOVCNOVAPRRCSVRIMBTNLCSPVATOUDBZPRPVVBIMISTOVVTVPIVAMBTVBGMBPDLEBIVTCOPVRMPVVRVIBZISTOTOAPCNSVLCVAVAMEVECOPZAVPAIMLTUDMBBZVBCSCOSOVCLCBGBGCNBOFCVATNCNPCMISPPOLEBSBSTOFRVRAOPVBITOPVCOBGRNSOUDKRCNPDCRATNOIMVRTOBSVTREBSCNSPRESVMNBGCTATTORELUATSAFRPAFIVICNFGFRCENAPENOPCPIRMPVTVTOFGPZSABGLCFEVRPVPZPZVAPDATBIALVTMIMOTNALCNVBBLPDBGPCTOVEPDALFRVBSOSOUDVRLUBZPAPVBSBRPEBSSULUMIBGALBIPDBGPDBGROCNIMAGATMSPDTOVRMEPAVINUCOTNAQCLCHALCHAVSUROSUREALBZALAVCNSVLOBIPDPCAOTOPVATROSUSUROSSCNORSUPVBSSUTOTOVCTOTOALENTOTOCNSUMBRCATAQCHAQSUSUTOVCORAQVIAQVBGOMNBGTVBGMBMICNCBATFITONOCNBSBZTOBSTONAUDALMCPVTOTPVTFRPNVTRGTVAQMICEBNTORMPNBICTVAMIPDBSGEVCBLPVFEVBTNNACRTVPVALALTOALBLMNPICRAVFGFGTOCNVVCTCZRMVVBGVIBGPVPVORCOLOPVPVTVPCPVPVORMSVITVVRTNMISPVRBIPVGEMOBGBOLEBSBLPNVIBISVVIUDBICSAVVVRMCZSUMEMERMRMSSSAAQMTSRTRSSCELECELELEPNFGFGPAPZSUCTRMNASSSSSSRCSUSRNATPSSCTSSNUMECTSUNASSSUSSSARMRMTAPDSSATTNVERMUDBSTNTNCOTOUDANLUBOFIARFERNPRFIPIPIARAVPUBLBGBGCOCOLCPVVAMNCOBLTNTNTNPNLULCTNTNTNTNTNTNTNTNTNTNTNTNTNTNTNRETNTNPRRNBOVBBIPVBIBLBLPTPTSIPUPUFEMCCOVICSPCIMALVCTNLIARLOCOLCMNALVCUDUDVIPDCSVBTOMNTNFIFEFEPRCOPUBITONOBICRPVALBLTVVIMIVAVIVILE\"\n    }],\n    licenses: [{\n      name: \"Ministero dell'Interno\",\n      url: \"https://developers.italia.it/en/anpr\",\n      license: \"cc-by-4.0\",\n      licenseUrl: \"https://creativecommons.org/licenses/by/4.0/legalcode.it\",\n      termsAndConditions: \"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\",\n      authors: \"https://github.com/italia/anpr/blob/master/AUTHORS\"\n    }, {\n      name: \"Istituto nazionale di statistica\",\n      url: \"https://www.istat.it\",\n      license: \"cc-by-3.0\",\n      licenseUrl: \"https://creativecommons.org/licenses/by/3.0/it/\",\n      termsAndConditions: \"https://www.istat.it/it/note-legali\"\n    }, {\n      name: \"Agenzia delle Entrate\",\n      url: \"https://www.agenziaentrate.gov.it\",\n      license: \"cc-by-4.0\",\n      licenseUrl: \"https://creativecommons.org/licenses/by/4.0/legalcode.it\",\n      termsAndConditions: \"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\"\n    }],\n    sources: [\"https://www.istat.it/it/files/2011/01/Elenco-codici-e-denominazioni-unita-territoriali-estere.zip\", \"https://www.istat.it/it/files/2011/01/Elenco-Paesi-esteri-cessati.zip\", \"https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv\", \"https://raw.githubusercontent.com/italia/anpr/master/src/archivi/ANPR_archivio_comuni.csv\"]\n  }),\n  l = \"[12][0-9]{3}\",\n  r = \"0[1-9]|1[0-2]\",\n  b = \"(?:\".concat(r, \")-(?:0[1-9]|[12]\\\\d)|(?:0[469]|11)-30|(?:0[13578]|1[02])-3[01]\"),\n  t = \"[01]\\\\d|2[0-3]\",\n  s = \"Z|[-+](?:\".concat(t, \")(?::?[0-5]\\\\d)?\"),\n  c = \"(?:\".concat(t, \")(?::[0-5]\\\\d(?::[0-5]\\\\d(\\\\.\\\\d{3})?)?(?:\").concat(s, \")?)?\"),\n  C = \"\".concat(l, \"-(?:\").concat(b, \")(?:T\").concat(c, \")?\"),\n  g = \"\".concat(l, \"(?:-(?:(?:\").concat(r, \")|(?:\").concat(b, \")(?:T\").concat(c, \")?))?\");\nvar S = Object.freeze({\n  __proto__: null,\n  DAY: \"0[1-9]|[12][0-9]|3[01]\",\n  DAYS_30_MONTHS: \"0[469]|11\",\n  DAYS_31_MONTHS: \"0[13578]|1[02]\",\n  HOURS: t,\n  ISO8601_DATE_TIME: g,\n  ISO8601_SHORT_DATE: C,\n  LEAP_MONTH: \"02\",\n  MILLISECONDS: \"\\\\d{3}\",\n  MINUTES: \"[0-5]\\\\d\",\n  MONTH: r,\n  MONTH_DAY: b,\n  SECONDS: \"[0-5]\\\\d\",\n  TIME: c,\n  TIMEZONE: s,\n  YEAR: l\n});\nclass u {\n  static parseDate(o) {\n    if (!(o instanceof Date || o instanceof moment__WEBPACK_IMPORTED_MODULE_0__ || \"string\" == typeof o && new RegExp(\"^(?:\".concat(g, \")$\")).test(o) || Array.isArray(o) && o.length && !o.some(a => \"number\" != typeof a || isNaN(a)))) return null;\n    try {\n      let n;\n      if (Array.isArray(o)) {\n        const [i, e = 0, l = 1] = o;\n        if (!(e >= 0 && e <= 11 && l > 0 && l <= 31)) return null;\n        n = moment__WEBPACK_IMPORTED_MODULE_0__(Date.UTC(i, e || 0, l || 1));\n      } else n = moment__WEBPACK_IMPORTED_MODULE_0__(o);\n      return n.isValid() ? n.toDate() : null;\n    } catch (a) {\n      return null;\n    }\n  }\n  static ymdToDate(a, o, n) {\n    return this.parseDate([a, o, n]);\n  }\n}\nconst d = \"B-DF-HJ-NP-TV-Z\",\n  m = \"AEIOU\",\n  M = \"[A-Z][\".concat(m, \"][\").concat(m, \"X]|[\").concat(m, \"]X{2}|[\").concat(d, \"]{2}[A-Z]\"),\n  B = M,\n  A = \"(?:\".concat(M, \"){2}\"),\n  P = \"[02468LNQSU][048LQU]|[13579MPRTV][26NS]\",\n  V = \"[0L4Q][1-9MNP-V]|[1256MNRS][\\\\dLMNP-V]\",\n  v = \"(?:\".concat(V, \"|[37PT][0L1M])\"),\n  T = \"[A-EHLMPR-T](?:\".concat(V, \")|[DHPS][[37PT]][0L]|[ACELMRT][[37PT]][0L1M]\"),\n  p = \"[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[0L4Q][1-9MNP-V]|[15MR][\\\\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][0L1M]|[DHPSACELMRT][26NS][9V])|(?:\".concat(P, \")B[26NS][9V]\"),\n  R = \"[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[0L][1-9MNP-V]|[1M][\\\\dLMNP-V]|[2N][0-8LMNP-U])|[DHPS][3P][0L]|[ACELMRT][3P][0L1M]|[DHPSACELMRT][2N][9V])|(?:\".concat(P, \")B[2N][9V]\"),\n  O = \"[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[4Q][1-9MNP-V]|[5R][\\\\dLMNP-V]|[6S][0-8LMNP-U])|[DHPS][7T][0L]|[ACELMRT][7T][0L1M]|[DHPSACELMRT][6S][9V])|(?:\".concat(P, \")B[6S][9V]\"),\n  N = \"(?:[A-MZ][1-9MNP-V][\\\\dLMNP-V]{2})|(?:[A-M][0L](?:[1-9MNP-V][\\\\dLMNP-V]|[0L][1-9MNP-V]))\",\n  h = \"\".concat(A, \"(?:\").concat(p, \")(?:\").concat(N, \")[A-Z]\"),\n  D = \"[A-Z][\".concat(m, \"]?|[\").concat(d, \"]{1,2}\"),\n  f = \"(?:\".concat(D, \")|(?:(?:\").concat(M, \")(?:\").concat(D, \")?)\"),\n  L = \"[\\\\dLMNP-V]|(?:[\\\\dLMNP-V]{2}(?:[A-EHLMPR-T][0L12456MNQRS]?|[DHPSACELMRT][37PT])?)\",\n  z = \"\".concat(f, \"|(?:\").concat(A, \"(?:(?:\").concat(L, \")|(?:\").concat(p, \")(?:(?:[A-MZ](?:[1-9MNP-V][\\\\dLMNP-V]?)?|[Z](?:[0L][\\\\dLMNP-V]?)?)|(?:\").concat(N, \")[A-Z]?)?)?)?\");\nvar G,\n  I = Object.freeze({\n    __proto__: null,\n    CONSONANT_LIST: d,\n    VOWEL_LIST: m,\n    OMOCODE_NUMBER_LIST: \"\\\\dLMNP-V\",\n    OMOCODE_NON_ZERO_NUMBER_LIST: \"1-9MNP-V\",\n    OMOCODE_ZERO_LIST: \"0L\",\n    MONTH_LIST: \"A-EHLMPR-T\",\n    MONTH_30DAYS_LIST: \"DHPS\",\n    MONTH_31DAYS_LIST: \"ACELMRT\",\n    CITY_CODE_LIST: \"A-M\",\n    COUNTRY_CODE_LIST: \"Z\",\n    CF_NAME_MATCHER: M,\n    CF_SURNAME_MATCHER: B,\n    CF_FULL_NAME_MATCHER: A,\n    YEAR_MATCHER: \"[\\\\dLMNP-V]{2}\",\n    LEAP_YEAR_MATCHER: P,\n    MONTH_MATCHER: \"[A-EHLMPR-T]\",\n    DAY_2X_MATCHER: \"[26NS]\",\n    DAY_3X_MATCHER: \"[37PT]\",\n    DAY_29_MATCHER: V,\n    DAY_30_MATCHER: \"[[37PT]][0L]\",\n    DAY_31_MATCHER: \"[[37PT]][0L1M]\",\n    DAY_MATCHER: v,\n    MALE_DAY_MATCHER: \"(?:[0L][1-9MNP-V]|[12MN][\\\\dLMNP-V]|[3P][0L1M])\",\n    FEMALE_DAY_MATCHER: \"(?:[4Q][1-9MNP-V]|[56RS][\\\\dLMNP-V]|[7T][0L1M])\",\n    MONTH_DAY_MATCHER: T,\n    FULL_DATE_MATCHER: p,\n    MALE_FULL_DATE_MATCHER: R,\n    FEMALE_FULL_DATE_MATCHER: O,\n    CITY_CODE_MATCHER: \"[A-M](?:[1-9MNP-V][\\\\dLMNP-V]{2}|[0L](?:[1-9MNP-V][\\\\dLMNP-V]|[0L][1-9MNP-V]))\",\n    COUNTRY_CODE_MATCHER: \"Z[1-9MNP-V][\\\\dLMNP-V]{2}\",\n    BELFIORE_CODE_MATCHER: N,\n    CHECK_DIGIT: \"[A-Z]\",\n    CODICE_FISCALE: h,\n    PARTIAL_CF_NAME_MATCHER: D,\n    PARTIAL_CF_FULL_NAME: f,\n    PARTIAL_YEAR: \"[\\\\dLMNP-V]\",\n    PARTIAL_MONTH_DAY: \"[A-EHLMPR-T][0L12456MNQRS]?|[DHPSACELMRT][37PT]\",\n    PARTIAL_FULL_DATE: L,\n    PARTIAL_BELFIORE_CODE_MATCHER: \"[A-MZ](?:[1-9MNP-V][\\\\dLMNP-V]?)?|[Z](?:[0L][\\\\dLMNP-V]?)?\",\n    PARTIAL_CF: z\n  });\n!function (a) {\n  a[a.B = 0] = \"B\", a[a.A = 1] = \"A\", a[a.K = 2] = \"K\", a[a.P = 3] = \"P\", a[a.L = 4] = \"L\", a[a.C = 5] = \"C\", a[a.Q = 6] = \"Q\", a[a.D = 7] = \"D\", a[a.R = 8] = \"R\", a[a.E = 9] = \"E\", a[a.V = 10] = \"V\", a[a.O = 11] = \"O\", a[a.S = 12] = \"S\", a[a.F = 13] = \"F\", a[a.T = 14] = \"T\", a[a.G = 15] = \"G\", a[a.U = 16] = \"U\", a[a.H = 17] = \"H\", a[a.M = 18] = \"M\", a[a.I = 19] = \"I\", a[a.N = 20] = \"N\", a[a.J = 21] = \"J\", a[a.W = 22] = \"W\", a[a.Z = 23] = \"Z\", a[a.Y = 24] = \"Y\", a[a.X = 25] = \"X\";\n}(G || (G = {}));\nvar k,\n  q = G;\nclass E {\n  static checkDigit(a) {\n    if (\"string\" == typeof a && new RegExp(z).test(a)) {\n      const o = a.substr(0, 15);\n      let n = 0;\n      for (const a of this.evaluateChar(o)) n += a;\n      return String.fromCharCode(n % this.CRC_MOD + this.CHAR_OFFSET);\n    }\n    return null;\n  }\n  static evaluateChar() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return n(this.evaluateCharGenerator(a));\n  }\n  static evaluateCharGenerator() {\n    var _this = this;\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return function* () {\n      if (\"string\" == typeof a && a.length) for (let o = 0; o < a.length; o++) {\n        let n = a[o].toUpperCase();\n        /^\\d$/u.test(n) && (n = String.fromCharCode(parseInt(n, 10) + _this.CHAR_OFFSET));\n        !(o % 2) ? yield parseInt(q[n], 10) : yield n.charCodeAt(0) - _this.CHAR_OFFSET;\n      }\n      return 0;\n    }();\n  }\n}\nE.CHAR_OFFSET = 65, E.CRC_MOD = 26, function (a) {\n  a[a.A = 0] = \"A\", a[a.B = 1] = \"B\", a[a.C = 2] = \"C\", a[a.D = 3] = \"D\", a[a.E = 4] = \"E\", a[a.H = 5] = \"H\", a[a.L = 6] = \"L\", a[a.M = 7] = \"M\", a[a.P = 8] = \"P\", a[a.R = 9] = \"R\", a[a.S = 10] = \"S\", a[a.T = 11] = \"T\";\n}(k || (k = {}));\nvar F,\n  j = k;\n!function (a) {\n  a[a.M = 0] = \"M\", a[a.F = 40] = \"F\";\n}(F || (F = {}));\nvar U,\n  Z = F;\n!function (a) {\n  a[a.L = 0] = \"L\", a[a.M = 1] = \"M\", a[a.N = 2] = \"N\", a[a.P = 3] = \"P\", a[a.Q = 4] = \"Q\", a[a.R = 5] = \"R\", a[a.S = 6] = \"S\", a[a.T = 7] = \"T\", a[a.U = 8] = \"U\", a[a.V = 9] = \"V\";\n}(U || (U = {}));\nvar H = U;\nclass Q {\n  static getDay(a) {\n    const o = a % Z.F;\n    return o > 0 && o <= this.MAX_MONTH_DAY ? o : null;\n  }\n  static getGender(a) {\n    return this.toArray().find(o => a >= Z[o] && a <= Z[o] + this.MAX_MONTH_DAY) || null;\n  }\n  static genderizeDay(a, o) {\n    return a + Z[o];\n  }\n  static toArray() {\n    return [\"M\", \"F\"];\n  }\n}\nQ.MAX_MONTH_DAY = 31;\nconst _ = new _marketto_diacritic_remover__WEBPACK_IMPORTED_MODULE_1__();\nclass y {\n  static cfDeomocode(a) {\n    if (a && a.length <= 6) return a;\n    const o = this.partialCfDeomocode(a);\n    if (o.length < 15) return o;\n    return o.substr(0, 15) + this.appyCaseToChar(E.checkDigit(o) || \"\", o.substr(15, 1));\n  }\n  static cfOmocode(a, o) {\n    if (!o) return this.cfDeomocode(a);\n    const n = a.split(\"\");\n    for (let i = a.length - 1, e = 0; i >= 0; i--) if (2 ** i & this.OMOCODE_BITMAP) {\n      if (!!(o & 2 ** e) !== isNaN(parseInt(n[i], 10))) {\n        const a = n[i].toUpperCase();\n        n[i] = H[a];\n      }\n      e++;\n    }\n    const i = n[15];\n    if (i) {\n      const a = n.slice(0, 15).join(\"\");\n      n[15] = this.appyCaseToChar(E.checkDigit(a) || \"\", i);\n    }\n    return n.join(\"\");\n  }\n  static cfOmocodeId(a) {\n    const o = a.split(\"\").filter((a, o) => 2 ** o & this.OMOCODE_BITMAP).map(a => /^[a-z]$/i.test(_[a]) ? 1 : 0).join(\"\");\n    return parseInt(o, 2);\n  }\n  static cfToLastName(a) {\n    if (\"string\" != typeof a || a.length < 3 || !new RegExp(\"^(?:\".concat(B, \")\"), \"iu\").test(a)) return null;\n    const o = a.substr(0, 3),\n      [n = \"\"] = o.match(new RegExp(\"^[\".concat(d, \"]{1,3}\"), \"ig\")) || [],\n      [i = \"\"] = o.match(new RegExp(\"[\".concat(m, \"]{1,3}\"), \"ig\")) || [],\n      e = n.length + i.length;\n    if (e < 2 || e < 3 && \"X\" !== o[2].toUpperCase()) return null;\n    switch (n.length) {\n      case 3:\n        return (n + i).split(\"\").join(this.JOLLY_CHAR) + this.JOLLY_CHAR;\n      case 2:\n        return \"\".concat(n[0]).concat(i[0], \"*\").concat(n[1]).concat(this.JOLLY_CHAR);\n      case 1:\n        return \"\".concat(n[0]).concat(i).concat(this.JOLLY_CHAR);\n      default:\n        return \"\".concat(i).concat(3 === i.length ? this.JOLLY_CHAR : \"\");\n    }\n  }\n  static cfToFirstName(a) {\n    return \"string\" != typeof a || a.length < 6 || !new RegExp(\"^(\".concat(A, \")\"), \"iu\").test(a) ? null : this.cfToLastName(a.substr(3, 3));\n  }\n  static cfToGender(a) {\n    if (\"string\" != typeof a || a.length < 10) return null;\n    const o = a.substr(9, 1),\n      n = 10 * parseInt(this.partialCfDeomocode(o, 9), 10);\n    return Q.getGender(n);\n  }\n  static cfToBirthYear(o) {\n    if (\"string\" != typeof o || o.length < 8) return null;\n    const n = o.substr(6, 2),\n      i = parseInt(this.partialCfDeomocode(n, 6), 10);\n    if (isNaN(i)) return null;\n    const e = parseInt(moment__WEBPACK_IMPORTED_MODULE_0__().format(\"YY\"), 10),\n      l = 100 * (i > e ? 1 : 0);\n    return moment__WEBPACK_IMPORTED_MODULE_0__().subtract(e - i + l, \"years\").year();\n  }\n  static cfToBirthMonth(a) {\n    if (\"string\" != typeof a || a.length < 9) return null;\n    const o = a.substr(8, 1).toUpperCase(),\n      n = j[o];\n    return \"number\" != typeof n || n < 0 || n > 11 ? null : n;\n  }\n  static cfToBirthDay(a) {\n    if (\"string\" != typeof a || a.length < 11) return null;\n    const o = a.substr(9, 2),\n      n = parseInt(this.partialCfDeomocode(o, 9), 10);\n    return isNaN(n) ? null : Q.getDay(n);\n  }\n  static cfToBirthDate(a) {\n    const o = this.cfToBirthDay(a);\n    if (!o) return null;\n    const n = this.cfToBirthMonth(a);\n    if (\"number\" != typeof n) return null;\n    const i = this.cfToBirthYear(a);\n    return u.ymdToDate(i, n, o);\n  }\n  static cfToBirthPlace(o) {\n    if (\"string\" != typeof o || o.length < 15) return null;\n    const n = o.substr(11, 4),\n      i = this.partialCfDeomocode(n, 11),\n      l = e[i];\n    if (!l) return null;\n    const {\n      creationDate: r,\n      expirationDate: b\n    } = l;\n    if (r || b) {\n      const n = this.cfToBirthDate(o);\n      if (n) {\n        let o = !0;\n        if (b && (o = moment__WEBPACK_IMPORTED_MODULE_0__(b).isSameOrAfter(n)), !o) return null;\n      }\n    }\n    return l;\n  }\n  static cfDecode(a) {\n    const o = this.cfToBirthYear(a) || void 0,\n      n = this.cfToBirthMonth(a) || void 0,\n      i = this.cfToBirthDay(a) || void 0,\n      e = u.ymdToDate(o, n, i) || void 0,\n      l = this.cfToBirthPlace(a),\n      r = {\n        firstName: this.cfToFirstName(a) || void 0,\n        lastName: this.cfToLastName(a) || void 0,\n        day: i,\n        month: n,\n        year: o,\n        date: e,\n        gender: this.cfToGender(a) || void 0,\n        place: l ? l.name : void 0,\n        omocodeId: this.cfOmocodeId(a)\n      };\n    return o && n && i && (r.date = new Date(Date.UTC(o, n, i))), r;\n  }\n  static lastNameToCf(a) {\n    if (!a || (a || \"\").trim().length < 2) return null;\n    if (!/^[A-Z ']+$/iu.test(_.replace(a))) return null;\n    const o = (this.charExtractor(a, d) + this.charExtractor(a, m)).padEnd(3, \"X\").substr(0, 3);\n    return o.length < 3 ? null : o.toUpperCase();\n  }\n  static firstNameToCf(a) {\n    if (!a || (a || \"\").trim().length < 2) return null;\n    const o = this.charExtractor(a, d);\n    return o.length >= 4 ? (o[0] + o.substr(2, 2)).toUpperCase() : this.lastNameToCf(a);\n  }\n  static yearToCf(a) {\n    let o;\n    return o = \"string\" == typeof a ? parseInt(a, 10) : a, \"number\" != typeof o || isNaN(o) || !(o >= 1900 || o < 100) ? null : (\"0\" + o).substr(-2);\n  }\n  static monthToCf(a) {\n    return a < 0 || a > 11 ? null : j[a] || null;\n  }\n  static dayGenderToCf(a, o) {\n    if (a < 1 || a > 31) return null;\n    const n = Z[o];\n    return \"number\" != typeof n ? null : (\"0\" + (a + n)).substr(-2);\n  }\n  static yearMonthDayToDate(o) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    if (!o || o < 1861 || [n, i].some(a => \"number\" != typeof a)) return null;\n    const e = moment__WEBPACK_IMPORTED_MODULE_0__(Date.UTC(o, n || 0, i || 1));\n    return e.isValid() && e.year() === o && e.month() === n && e.date() === i ? e.toDate() : null;\n  }\n  static parsePlace(a) {\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e;\n    let n;\n    return a ? (\"object\" == typeof a && a.belfioreCode ? n = o[a.belfioreCode] : \"string\" == typeof a && (n = o[a] || o.findByName(a)), n || null) : null;\n  }\n  static dateGenderToCf(a, o) {\n    const n = u.parseDate(a);\n    if (!n) return null;\n    return \"\".concat(this.yearToCf(n.getFullYear())).concat(this.monthToCf(n.getMonth())).concat(this.dayGenderToCf(n.getDate(), o));\n  }\n  static placeToCf(a, o, n) {\n    const i = u.parseDate(a);\n    let l, r;\n    if (i || \"string\" != typeof a) {\n      if (!o) return null;\n      l = o, r = n;\n    } else l = a, r = o;\n    let b = e;\n    if (r && (b = b.byProvince(r)), i && b && (b = b.from(i)), b) {\n      const a = this.parsePlace(l, b);\n      if (a) return a.belfioreCode;\n    }\n    return null;\n  }\n  static encodeCf(_ref2) {\n    let {\n      lastName: a,\n      firstName: o,\n      year: n,\n      month: i,\n      day: e,\n      date: l,\n      gender: r,\n      place: b,\n      omocodeId: t = 0\n    } = _ref2;\n    const s = u.parseDate(l) || this.yearMonthDayToDate(n, i, e);\n    if (!(s && a && o && r && b)) return null;\n    const c = [() => this.lastNameToCf(a), () => this.firstNameToCf(o), () => this.dateGenderToCf(s, r), () => this.placeToCf(s, b)];\n    let C = \"\";\n    for (const a of c) {\n      const o = a();\n      if (!o) return null;\n      C += o;\n    }\n    return this.cfOmocode(C, t);\n  }\n  static checkBitmap(a) {\n    return !!(2 ** a & this.OMOCODE_BITMAP);\n  }\n  static charOmocode(a, o) {\n    return /^[A-Z]$/giu.test(a) && this.checkBitmap(o) ? H[a.toUpperCase()] : a;\n  }\n  static charExtractor(a, o) {\n    const n = new RegExp(\"[\".concat(o, \"]+\"), \"ig\");\n    return (_.replace(a).trim().match(n) || []).join(\"\");\n  }\n  static partialCfDeomocode(a) {\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return a.replace(/[\\dA-Z]/giu, (a, n) => this.charOmocode(a, n + o));\n  }\n  static appyCaseToChar(a, o) {\n    if (a && o) {\n      const n = o[0] === o[0].toUpperCase(),\n        i = o[0] === o[0].toLowerCase();\n      if (n && !i) return a[0].toUpperCase();\n      if (!n && i) return a[0].toLowerCase();\n    }\n    return a[0];\n  }\n}\ny.OMOCODE_BITMAP = 30400, y.JOLLY_CHAR = \"*\";\nconst $ = \"Provided lastName is not valid, only letters, diacritics and apostrophe allowed\",\n  w = \"Provided name is not valid, only letters, diacritics and apostrophe allowed\",\n  x = \"Provided gender is not valid\",\n  Y = \"Provided year is not valid, only 2 or 4 digit numbers are allowed\",\n  K = \"Provided date is not valid\";\nvar J = Object.freeze({\n  __proto__: null,\n  INVALID_DATE: K,\n  INVALID_DAY: \"Provided day is not valid\",\n  INVALID_DAY_OR_GENDER: \"Provided day and/or gender are not valid\",\n  INVALID_GENDER: x,\n  INVALID_NAME: w,\n  INVALID_PLACE_NAME: \"Proviced City/Country name is not valid\",\n  INVALID_SURNAME: $,\n  INVALID_YEAR: Y\n});\nclass W extends Error {\n  constructor(a) {\n    super((Object.entries(J).find(_ref3 => {\n      let [o] = _ref3;\n      return o === a;\n    }) || [])[1] || a);\n  }\n}\nconst X = new _marketto_diacritic_remover__WEBPACK_IMPORTED_MODULE_1__();\nclass aa {\n  static cfLastName(a) {\n    let o = B;\n    if (a) {\n      if (!this.lastName().test(a)) throw new W($);\n      o = y.lastNameToCf(a) || o;\n    }\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static cfFirstName(a) {\n    let o = M;\n    if (a) {\n      if (!this.lastName().test(a)) throw new W(w);\n      o = y.firstNameToCf(a) || o;\n    }\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static cfYear(a) {\n    let o = \"[\\\\dLMNP-V]{2}\";\n    if (a) {\n      const n = y.yearToCf(a);\n      if (!n) throw new W(Y);\n      o = this.deomocode(n);\n    }\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static cfMonth(a) {\n    let o = \"[A-EHLMPR-T]\";\n    return a && (o = y.monthToCf(a) || o), this.isolatedInsensitiveTailor(o);\n  }\n  static cfDay(a) {\n    let o = v;\n    if (a) {\n      const n = y.dayGenderToCf(a, \"M\"),\n        i = y.dayGenderToCf(a, \"F\");\n      if (!n || !i) throw new W(\"Provided day is not valid\");\n      o = \"(?:\".concat(this.deomocode(n), \")|(?:\").concat(this.deomocode(i), \")\");\n    }\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static cfDayGender(a, o) {\n    if (!o) return this.cfDay(a);\n    let n;\n    if (a) {\n      const i = y.dayGenderToCf(a, o);\n      if (!i) throw new W(\"Provided day and/or gender are not valid\");\n      n = this.deomocode(i);\n    } else switch (o) {\n      case \"M\":\n        n = \"(?:[0L][1-9MNP-V]|[12MN][\\\\dLMNP-V]|[3P][0L1M])\";\n        break;\n      case \"F\":\n        n = \"(?:[4Q][1-9MNP-V]|[56RS][\\\\dLMNP-V]|[7T][0L1M])\";\n        break;\n      default:\n        throw new W(x);\n    }\n    return this.isolatedInsensitiveTailor(n);\n  }\n  static cfDateGender(a, o) {\n    if (a && !u.parseDate(a)) throw new W(K);\n    if (o && !Q.toArray().includes(o)) throw new W(x);\n    let n = p;\n    if (a) {\n      const i = o && y.dateGenderToCf(a, o);\n      if (i) n = this.deomocode(i);else {\n        const o = o => {\n          const n = y.dateGenderToCf(a, o);\n          if (!n) throw new W(K);\n          return n && this.deomocode(n);\n        };\n        n = \"(?:\".concat(Q.toArray().map(o).join(\"|\"), \")\");\n      }\n    } else \"M\" === o ? n = R : \"F\" === o && (n = O);\n    return this.isolatedInsensitiveTailor(n);\n  }\n  static cfPlace(a, o) {\n    let n = N;\n    if (a) {\n      const i = u.parseDate(a);\n      if (i && o) {\n        const a = o,\n          e = y.placeToCf(i, a);\n        n = this.deomocode(e || \"\");\n      } else if (!i && \"string\" == typeof a) {\n        const o = a,\n          i = y.placeToCf(o);\n        n = this.deomocode(i || \"\");\n      }\n    }\n    return this.isolatedInsensitiveTailor(n);\n  }\n  static codiceFiscale(a) {\n    let o = h;\n    if (a) {\n      const n = y.encodeCf(a);\n      if (n) o = this.deomocode(n);else {\n        const {\n          lastName: n,\n          firstName: i,\n          year: e,\n          month: l,\n          day: r,\n          date: b,\n          gender: t,\n          place: s\n        } = a;\n        if (n || i || e || l || r || b || t || s) {\n          let a = null;\n          b ? a = u.parseDate(b) : e && (a = y.yearMonthDayToDate(e, l, r));\n          const c = [() => this.cfLastName(n), () => this.cfFirstName(i), () => this.cfDateGender(a, t), () => this.cfPlace(a, s)];\n          o = \"\";\n          for (const a of c) {\n            const n = a().toString(),\n              i = n.match(/\\^(.+)\\$/),\n              e = i && i[1];\n            if (!e) throw new Error(\"Unable to handle [\".concat(n, \"]\"));\n            o += \"(?:\".concat(e, \")\");\n          }\n          o += \"[A-Z]\";\n        }\n      }\n    }\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static lastName(a) {\n    const o = \"[A-Z\".concat(X.matcherBy(/^[A-Z]$/iu), \"]\");\n    let n = \"(?:\".concat(o, \"+[' ]?)\") + \"+\";\n    if (a && /^[A-Z]{1,3}/iu.test(a)) {\n      const i = a.substr(0, 3),\n        e = a => a.split(\"\").map(a => \"[\".concat(X.insensitiveMatcher[a], \"]\")),\n        [l, r] = [\"^[\".concat(d, \"]{1,3}\"), \"[\".concat(m, \"]{1,3}\")].map(a => e((i.match(new RegExp(a, \"ig\")) || [])[0] || \"\")),\n        b = \"[\".concat(m + X.matcherBy(new RegExp(\"^[\".concat(m, \"]$\"), \"ui\")), \"]\"),\n        t = \"(?:\".concat(b, \"[' ]?)*\"),\n        s = \"(?:[' ]?\".concat(t).concat(b, \")?\");\n      switch (l.length) {\n        case 3:\n          {\n            const a = t;\n            n = a + l.join(\"[' ]?\" + a) + \"(?:[' ]?\".concat(o, \"*\").concat(o, \")?\");\n            break;\n          }\n        case 2:\n          n = \"(?:\".concat([\"\".concat(r[0]).concat(t, \"[' ]?\").concat(l[0]).concat(t).concat(l[1]), l[0] + \"[' ]?\" + r.join(\"[' ]?\") + \"[' ]?\".concat(t).concat(l[1]), l.join(\"[' ]?\") + \"[' ]?\" + r[0]].join(\"|\"), \")\").concat(s);\n          break;\n        case 1:\n          n = \"(?:\".concat([r.slice(0, 2).join(\"[' ]?\") + t + l.join(\"[' ]?\"), r[0] + \"[' ]?\" + l.join(\"[' ]?\") + r[1], [l[0], ...r.slice(0, 2)].join(\"[' ]?\")].join(\"|\"), \")\").concat(s);\n          break;\n        default:\n          n = \"\".concat(r.join(\"[' ]?\")).concat(s);\n      }\n    }\n    return this.isolatedInsensitiveTailor(\" *(\".concat(n, \") *\"));\n  }\n  static firstName(a) {\n    if (a && new RegExp(\"^[A-Z]{3}[\".concat(d, \"]{3}\"), \"iu\").test(a)) {\n      const o = \"[A-Z\".concat(X.matcherBy(/^[A-Z]$/iu), \"]\"),\n        n = \"(?:'? ?)\",\n        i = ((a.substr(3, 3).match(new RegExp(\"^[\".concat(d, \"]{1,3}\"), \"ig\")) || [])[0] || \"\").split(\"\").map(a => \"[\".concat(X.insensitiveMatcher[a], \"]\")),\n        [e, l] = [m, d].map(a => a + X.matcherBy(new RegExp(\"^[\".concat(a, \"]$\"), \"ui\"))),\n        r = \"(?:[\".concat(e, \"]+\").concat(n, \")*\").concat(i[0]).concat(n, \"(?:[\").concat(e, \"]+\").concat(n, \")*(?:[\").concat(l, \"]\").concat(n, \"(?:[\").concat(e, \"]+\").concat(n, \")*)?\") + i.slice(1, 3).join(\"(?:[\".concat(e, \"]+\").concat(n, \")*\")) + o + \"*\";\n      return this.isolatedInsensitiveTailor(r);\n    }\n    return this.lastName((a || \"\").substr(3, 3));\n  }\n  static date(o) {\n    let n = g;\n    if (o) {\n      const i = y.cfToBirthDate(o);\n      if (i) {\n        const o = i.toJSON();\n        if (moment__WEBPACK_IMPORTED_MODULE_0__().diff(moment__WEBPACK_IMPORTED_MODULE_0__(i), \"y\") < 50) {\n          const a = parseInt(o.substr(0, 2), 10);\n          n = \"(?:\".concat([a - 1, a].map(a => a.toString().padStart(2, \"0\")).join(\"|\"), \")\") + o.substr(2, 8);\n        } else n = o.substr(0, 10);\n      }\n    }\n    return this.isolatedInsensitiveTailor(\"\".concat(n, \"(?:T\").concat(c, \"(?:\").concat(s, \")?)?\"));\n  }\n  static gender(a) {\n    const o = a && y.cfToGender(a) || \"[\".concat(Q.toArray().join(\"\"), \"]\");\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static place(a) {\n    let o = \".+\";\n    const n = a && y.cfToBirthPlace(a);\n    if (n) {\n      o = \"(?:(?:\".concat(n.name.replace(/./gu, a => X[a] === a ? a : \"[\".concat(a).concat(X[a], \"]\")), \")|\").concat(n.belfioreCode, \")\");\n    }\n    return this.isolatedInsensitiveTailor(o);\n  }\n  static deomocode(a) {\n    return a.replace(/\\d/gu, a => \"[\".concat(a).concat(H[a], \"]\"));\n  }\n  static isolatedInsensitiveTailor(a) {\n    return new RegExp(\"^(?:\".concat(a, \")$\"), \"iu\");\n  }\n}\nclass oa {\n  constructor(a) {\n    this.codiceFiscale = a;\n  }\n  get hasLastName() {\n    return this.codiceFiscale.length >= 3;\n  }\n  get hasFirstName() {\n    return this.codiceFiscale.length >= 6;\n  }\n  get hasBirthYear() {\n    return this.codiceFiscale.length >= 8;\n  }\n  get hasBirthDate() {\n    return this.codiceFiscale.length >= 11;\n  }\n  get hasGender() {\n    return this.codiceFiscale.length >= 10;\n  }\n  get hasBirthPlace() {\n    return this.codiceFiscale.length >= 15;\n  }\n  get hasCRC() {\n    return this.codiceFiscale.length >= 16;\n  }\n  matchPersonalInfo(a) {\n    return aa.codiceFiscale(a).test(this.codiceFiscale);\n  }\n  mismatchPersonalInfo(a) {\n    return !(!(this.codiceFiscale && a && a.lastName && a.firstName && (a.date || a.day && a.month && a.year) && a.gender && a.place) || this.matchPersonalInfo(a));\n  }\n  matchLastName(a) {\n    return this.hasLastName && aa.lastName(this.codiceFiscale).test(a || \"\");\n  }\n  mismatchLastName(a) {\n    return this.hasLastName && !!a && !this.matchLastName(a);\n  }\n  matchFirstName(a) {\n    return this.hasFirstName && aa.firstName(this.codiceFiscale).test(a || \"\");\n  }\n  mismatchFirstName(a) {\n    return this.hasFirstName && !!a && !this.matchFirstName(a);\n  }\n  matchBirthDate(o) {\n    if (this.hasBirthDate) {\n      const n = y.cfToBirthDate(this.codiceFiscale),\n        i = u.parseDate(o);\n      if (n && i) return moment__WEBPACK_IMPORTED_MODULE_0__(n).isSame(i, \"d\");\n    }\n    return !1;\n  }\n  mismatchBirthDate(a) {\n    return this.hasBirthYear && !!u.parseDate(a) && !this.matchBirthDate(a);\n  }\n  matchGender(a) {\n    return this.hasGender && aa.gender(this.codiceFiscale).test(a || \"\");\n  }\n  mismatchGender(a) {\n    return this.hasGender && !!a && !this.matchGender(a);\n  }\n  matchBirthPlace(a) {\n    if (this.hasBirthPlace && a) {\n      const o = aa.place(this.codiceFiscale),\n        n = y.parsePlace(a);\n      return !!n && o.test(n.belfioreCode);\n    }\n    return !1;\n  }\n  mismatchBirthPlace(a) {\n    return this.hasBirthPlace && !!a && !this.matchBirthPlace(a);\n  }\n  get valid() {\n    return !!(this.hasCRC && aa.codiceFiscale().test(this.codiceFiscale) && this.codiceFiscale.substr(15, 1).toUpperCase() === E.checkDigit(this.codiceFiscale) && y.cfToBirthPlace(this.codiceFiscale));\n  }\n  get invalid() {\n    return !!this.codiceFiscale && !this.valid;\n  }\n}\nclass na {\n  static codiceFiscale(a) {\n    return new oa(a);\n  }\n  static isLastNameValid(a) {\n    return aa.lastName().test(a);\n  }\n  static isLastNameInvalid(a) {\n    return !!a && !this.isLastNameValid(a);\n  }\n  static isFirstNameValid(a) {\n    return aa.firstName().test(a);\n  }\n  static isFirstNameInvalid(a) {\n    return !!a && !this.isFirstNameValid(a);\n  }\n  static isBirthDateValid(a) {\n    return !!u.parseDate(a);\n  }\n  static isBirthDateInvalid(a) {\n    return !!a && !this.isBirthDateValid(a);\n  }\n  static isGenderValid(a) {\n    return aa.gender().test(a);\n  }\n  static isGenderInvalid(a) {\n    return !!a && !this.isGenderValid(a);\n  }\n  static isBirthPlaceValid(a) {\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e;\n    const n = y.parsePlace(a);\n    return !!n && !!o[n.belfioreCode];\n  }\n  static isBirthPlaceInvalid(a) {\n    let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e;\n    return !!a && !this.isBirthPlaceValid(a, o);\n  }\n  static birthDatePlaceMatch(a, o) {\n    const n = y.parsePlace(o);\n    return this.isBirthDateValid(a) && !!n && !!e.from(a)[n.belfioreCode];\n  }\n  static birthDatePlaceMismatch(a, o) {\n    const n = y.parsePlace(o);\n    return this.isBirthDateValid(a) && !!n && !this.birthDatePlaceMatch(a, o);\n  }\n  static birthPlaceDateMatch(a, o) {\n    return this.birthDatePlaceMatch(o, a);\n  }\n  static birthPlaceDateMismatch(a, o) {\n    return this.birthDatePlaceMismatch(o, a);\n  }\n}\n\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  }\n\n  // This is done to register the method called with moment()\n  // without creating circular dependencies.\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n      for (k in obj) {\n        if (hasOwnProp(obj, k)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  function isUndefined(input) {\n    return input === void 0;\n  }\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n  function map(arr, fn) {\n    var res = [],\n      i,\n      arrLen = arr.length;\n    for (i = 0; i < arrLen; ++i) {\n      res.push(fn(arr[i], i));\n    }\n    return res;\n  }\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n    return a;\n  }\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidEra: null,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      era: null,\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n  }\n  var some;\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function (fun) {\n      var t = Object(this),\n        len = t.length >>> 0,\n        i;\n      for (i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m),\n        parsedParts = some.call(flags.parsedDateParts, function (i) {\n          return i != null;\n        }),\n        isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n    return m._isValid;\n  }\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n    return m;\n  }\n\n  // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n  var momentProperties = hooks.momentProperties = [],\n    updateInProgress = false;\n  function copyConfig(to, from) {\n    var i,\n      prop,\n      val,\n      momentPropertiesLen = momentProperties.length;\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n    if (momentPropertiesLen > 0) {\n      for (i = 0; i < momentPropertiesLen; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n    return to;\n  }\n\n  // Moment prototype object\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n      if (firstTime) {\n        var args = [],\n          arg,\n          i,\n          key,\n          argLen = arguments.length;\n        for (i = 0; i < argLen; i++) {\n          arg = '';\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n            for (key in arguments[0]) {\n              if (hasOwnProp(arguments[0], key)) {\n                arg += key + ': ' + arguments[0][key] + ', ';\n              }\n            }\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n          args.push(arg);\n        }\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n  var deprecations = {};\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n  function isFunction(input) {\n    return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n  function set(config) {\n    var prop, i;\n    for (i in config) {\n      if (hasOwnProp(config, i)) {\n        prop = config[i];\n        if (isFunction(prop)) {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n      prop;\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n    return res;\n  }\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n  var keys;\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function (obj) {\n      var i,\n        res = [];\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n      return res;\n    };\n  }\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n      zerosToFill = targetLength - absNumber.length,\n      sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n    localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n    formatFunctions = {},\n    formatTokenFunctions = {};\n\n  // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n      func = function () {\n        return this[callback]();\n      };\n    }\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n  }\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n      i,\n      length;\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n    return function (mom) {\n      var output = '',\n        i;\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n      return output;\n    };\n  }\n\n  // format date using native date object\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n  function expandFormat(format, locale) {\n    var i = 5;\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n    return format;\n  }\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {\n      if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {\n        return tok.slice(1);\n      }\n      return tok;\n    }).join('');\n    return this._longDateFormat[key];\n  }\n  var defaultInvalidDate = 'Invalid date';\n  function invalidDate() {\n    return this._invalidDate;\n  }\n  var defaultOrdinal = '%d',\n    defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    w: 'a week',\n    ww: '%d weeks',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  var aliases = {};\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n      normalizedProp,\n      prop;\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n    return normalizedInput;\n  }\n  var priorities = {};\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n  function getPrioritizedUnits(unitsObj) {\n    var units = [],\n      u;\n    for (u in unitsObj) {\n      if (hasOwnProp(unitsObj, u)) {\n        units.push({\n          unit: u,\n          priority: priorities[u]\n        });\n      }\n    }\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n      value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n    return value;\n  }\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        value = toInt(value);\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n    return this;\n  }\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units),\n        i,\n        prioritizedLen = prioritized.length;\n      for (i = 0; i < prioritizedLen; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n    return this;\n  }\n  var match1 = /\\d/,\n    //       0 - 9\n    match2 = /\\d\\d/,\n    //      00 - 99\n    match3 = /\\d{3}/,\n    //     000 - 999\n    match4 = /\\d{4}/,\n    //    0000 - 9999\n    match6 = /[+-]?\\d{6}/,\n    // -999999 - 999999\n    match1to2 = /\\d\\d?/,\n    //       0 - 99\n    match3to4 = /\\d\\d\\d\\d?/,\n    //     999 - 9999\n    match5to6 = /\\d\\d\\d\\d\\d\\d?/,\n    //   99999 - 999999\n    match1to3 = /\\d{1,3}/,\n    //       0 - 999\n    match1to4 = /\\d{1,4}/,\n    //       0 - 9999\n    match1to6 = /[+-]?\\d{1,6}/,\n    // -999999 - 999999\n    matchUnsigned = /\\d+/,\n    //       0 - inf\n    matchSigned = /[+-]?\\d+/,\n    //    -inf - inf\n    matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi,\n    // +00:00 -00:00 +0000 -0000 or Z\n    matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n    // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n    matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/,\n    // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n    regexes;\n  regexes = {};\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](config._strict, config._locale);\n  }\n\n  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n  var tokens = {};\n  function addParseToken(token, callback) {\n    var i,\n      func = callback,\n      tokenLen;\n    if (typeof token === 'string') {\n      token = [token];\n    }\n    if (isNumber(callback)) {\n      func = function (input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n    tokenLen = token.length;\n    for (i = 0; i < tokenLen; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n  var YEAR = 0,\n    MONTH = 1,\n    DATE = 2,\n    HOUR = 3,\n    MINUTE = 4,\n    SECOND = 5,\n    MILLISECOND = 6,\n    WEEK = 7,\n    WEEKDAY = 8;\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n  var indexOf;\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function (o) {\n      // I know\n      var i;\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n      return -1;\n    };\n  }\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  }\n\n  // FORMATTING\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  });\n\n  // ALIASES\n\n  addUnitAlias('month', 'M');\n\n  // PRIORITY\n\n  addUnitPriority('month', 8);\n\n  // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  });\n\n  // LOCALES\n\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n    defaultMonthsShortRegex = matchWord,\n    defaultMonthsRegex = matchWord;\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value);\n        // TODO: Another silent failure?\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n  }\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n    var shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n  // ALIASES\n\n  addUnitAlias('year', 'y');\n\n  // PRIORITIES\n\n  addUnitPriority('year', 1);\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  });\n\n  // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  // HOOKS\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  };\n\n  // MOMENTS\n\n  var getSetYear = makeGetSet('FullYear', true);\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date;\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n    return date;\n  }\n  function createUTCDate(y) {\n    var date, args;\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      args = Array.prototype.slice.call(arguments);\n      // preserve leap years using a full 400 year cycle, then reset\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n    return date;\n  }\n\n  // start-of-first-week - start-of-year\n  function firstWeekOffset(year, dow, doy) {\n    var\n      // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy,\n      // first-week day local weekday -- which local weekday is fwd\n      fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  }\n\n  // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear,\n      resDayOfYear;\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek,\n      resYear;\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  }\n\n  // FORMATTING\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n  // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W');\n\n  // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5);\n\n  // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  });\n\n  // HELPERS\n\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n  };\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  }\n\n  // MOMENTS\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  // FORMATTING\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday');\n\n  // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n\n  // PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n\n  // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  });\n\n  // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n      return input;\n    }\n    return null;\n  }\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n  }\n\n  // LOCALES\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    defaultWeekdaysRegex = matchWord,\n    defaultWeekdaysShortRegex = matchWord,\n    defaultWeekdaysMinRegex = matchWord;\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n    var minPieces = [],\n      shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom,\n      minp,\n      shortp,\n      longp;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = regexEscape(this.weekdaysMin(mom, ''));\n      shortp = regexEscape(this.weekdaysShort(mom, ''));\n      longp = regexEscape(this.weekdays(mom, ''));\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n  function kFormat() {\n    return this.hours() || 24;\n  }\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n  meridiem('a', true);\n  meridiem('A', false);\n\n  // ALIASES\n\n  addUnitAlias('hour', 'h');\n\n  // PRIORITY\n  addUnitPriority('hour', 13);\n\n  // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  });\n\n  // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    getSetHour = makeGetSet('Hours', true);\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  };\n\n  // internal storage for locale config files\n  var locales = {},\n    localeFamilies = {},\n    globalLocale;\n  function commonPrefix(arr1, arr2) {\n    var i,\n      minl = Math.min(arr1.length, arr2.length);\n    for (i = 0; i < minl; i += 1) {\n      if (arr1[i] !== arr2[i]) {\n        return i;\n      }\n    }\n    return minl;\n  }\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  }\n\n  // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n  function chooseLocale(names) {\n    var i = 0,\n      j,\n      next,\n      locale,\n      split;\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n        if (locale) {\n          return locale;\n        }\n        if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n        j--;\n      }\n      i++;\n    }\n    return globalLocale;\n  }\n  function isLocaleNameSane(name) {\n    // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n    return name.match('^[^/\\\\\\\\]*$') != null;\n  }\n  function loadLocale(name) {\n    var oldLocale = null,\n      aliasedRequire;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (locales[name] === undefined && typeof module !== 'undefined' && module && module.exports && isLocaleNameSane(name)) {\n      try {\n        oldLocale = globalLocale._abbr;\n        aliasedRequire = require;\n        !(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {\n        // mark as not found to avoid repeating expensive file require call causing high CPU\n        // when trying to find en-US, en_US, en-us for every format call\n        locales[name] = null; // null means not found\n      }\n    }\n    return locales[name];\n  }\n\n  // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n  function getSetGlobalLocale(key, values) {\n    var data;\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n    return globalLocale._abbr;\n  }\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n        parentConfig = baseConfig;\n      config.abbr = name;\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      }\n\n      // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n        tmpLocale,\n        parentConfig = baseConfig;\n      if (locales[name] != null && locales[name].parentLocale != null) {\n        // Update existing child locale in-place to avoid memory-leaks\n        locales[name].set(mergeConfigs(locales[name]._config, config));\n      } else {\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n          parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        if (tmpLocale == null) {\n          // updateLocale is called for creating a new locale\n          // Set abbr so it will have a name (getters return\n          // undefined otherwise).\n          config.abbr = name;\n        }\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n      }\n\n      // backwards compat for now: also set the locale\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n          if (name === getSetGlobalLocale()) {\n            getSetGlobalLocale(name);\n          }\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n    return locales[name];\n  }\n\n  // returns locale data\n  function getLocale(key) {\n    var locale;\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n    if (!key) {\n      return globalLocale;\n    }\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n      if (locale) {\n        return locale;\n      }\n      key = [key];\n    }\n    return chooseLocale(key);\n  }\n  function listLocales() {\n    return keys(locales);\n  }\n  function checkOverflow(m) {\n    var overflow,\n      a = m._a;\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n      getParsingFlags(m).overflow = overflow;\n    }\n    return m;\n  }\n\n  // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n    basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n    tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n    isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/], ['YYYYMM', /\\d{6}/, false], ['YYYY', /\\d{4}/, false]],\n    // iso time formats and regexes\n    isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]],\n    aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n    obsOffsets = {\n      UT: 0,\n      GMT: 0,\n      EDT: -4 * 60,\n      EST: -5 * 60,\n      CDT: -5 * 60,\n      CST: -6 * 60,\n      MDT: -6 * 60,\n      MST: -7 * 60,\n      PDT: -7 * 60,\n      PST: -8 * 60\n    };\n\n  // date from iso format\n  function configFromISO(config) {\n    var i,\n      l,\n      string = config._i,\n      match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n      allowTime,\n      dateFormat,\n      timeFormat,\n      tzFormat,\n      isoDatesLen = isoDates.length,\n      isoTimesLen = isoTimes.length;\n    if (match) {\n      getParsingFlags(config).iso = true;\n      for (i = 0, l = isoDatesLen; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[3]) {\n        for (i = 0, l = isoTimesLen; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n    return result;\n  }\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n    return year;\n  }\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^()]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n        weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n    return true;\n  }\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10),\n        m = hm % 100,\n        h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  }\n\n  // date and time from ref 2822 format\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i)),\n      parsedArray;\n    if (match) {\n      parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  }\n\n  // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n    configFromISO(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n    if (config._strict) {\n      config._isValid = false;\n    } else {\n      // Final attempt, use Input Fallback\n      hooks.createFromInputFallback(config);\n    }\n  }\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  });\n\n  // Pick the first defined of two or three arguments.\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n    if (b != null) {\n      return b;\n    }\n    return c;\n  }\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  }\n\n  // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n  function configFromArray(config) {\n    var i,\n      date,\n      input = [],\n      currentDate,\n      expectedWeekday,\n      yearToUse;\n    if (config._d) {\n      return;\n    }\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4;\n\n      // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n      // Default to current week.\n      week = defaults(w.w, curWeek.week);\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  }\n\n  // constant that refers to the ISO standard\n  hooks.ISO_8601 = function () {};\n\n  // constant that refers to the RFC 2822 form\n  hooks.RFC_2822 = function () {};\n\n  // date from string and format string\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n      i,\n      parsedInput,\n      tokens,\n      token,\n      skipped,\n      stringLength = string.length,\n      totalParsedInputLength = 0,\n      era,\n      tokenLen;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    tokenLen = tokens.length;\n    for (i = 0; i < tokenLen; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      }\n      // don't parse if it's not a known token\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    // handle era\n    era = getParsingFlags(config).era;\n    if (era !== null) {\n      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n    }\n    configFromArray(config);\n    checkOverflow(config);\n  }\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  }\n\n  // date from string and array of format strings\n  function configFromStringAndArray(config) {\n    var tempConfig,\n      bestMoment,\n      scoreToBeat,\n      i,\n      currentScore,\n      validFormatFound,\n      bestFormatIsValid = false,\n      configfLen = config._f.length;\n    if (configfLen === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n    for (i = 0; i < configfLen; i++) {\n      currentScore = 0;\n      validFormatFound = false;\n      tempConfig = copyConfig({}, config);\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n      if (isValid(tempConfig)) {\n        validFormatFound = true;\n      }\n\n      // if there is any input that was not parsed add a penalty for that format\n      currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n      //or tokens\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n      if (!bestFormatIsValid) {\n        if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n          if (validFormatFound) {\n            bestFormatIsValid = true;\n          }\n        }\n      } else {\n        if (currentScore < scoreToBeat) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n        }\n      }\n    }\n    extend(config, bestMoment || tempConfig);\n  }\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n    var i = normalizeObjectUnits(config._i),\n      dayOrDate = i.day === undefined ? i.date : i.day;\n    config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n    return res;\n  }\n  function prepareConfig(config) {\n    var input = config._i,\n      format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n    if (!isValid(config)) {\n      config._d = null;\n    }\n    return config;\n  }\n  function configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n    if (format === true || format === false) {\n      strict = format;\n      format = undefined;\n    }\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n      if (this.isValid() && other.isValid()) {\n        return other < this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    }),\n    prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n      if (this.isValid() && other.isValid()) {\n        return other > this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    });\n\n  // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n  function pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n    if (!moments.length) {\n      return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n    return res;\n  }\n\n  // TODO: Use [].sort instead?\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n  var now = function () {\n    return Date.now ? Date.now() : +new Date();\n  };\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n  function isDurationValid(m) {\n    var key,\n      unitHasDecimal = false,\n      i,\n      orderLen = ordering.length;\n    for (key in m) {\n      if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n    for (i = 0; i < orderLen; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n    return true;\n  }\n  function isValid$1() {\n    return this._isValid;\n  }\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n      years = normalizedInput.year || 0,\n      quarters = normalizedInput.quarter || 0,\n      months = normalizedInput.month || 0,\n      weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n      days = normalizedInput.day || 0,\n      hours = normalizedInput.hour || 0,\n      minutes = normalizedInput.minute || 0,\n      seconds = normalizedInput.second || 0,\n      milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds + seconds * 1e3 +\n    // 1000\n    minutes * 6e4 +\n    // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n    this._bubble();\n  }\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  }\n\n  // compare two arrays, return the number of differences\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n      lengthDiff = Math.abs(array1.length - array2.length),\n      diffs = 0,\n      i;\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n    return diffs + lengthDiff;\n  }\n\n  // FORMATTING\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset(),\n        sign = '+';\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n  offset('Z', ':');\n  offset('ZZ', '');\n\n  // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  });\n\n  // HELPERS\n\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher),\n      chunk,\n      parts,\n      minutes;\n    if (matches === null) {\n      return null;\n    }\n    chunk = matches[matches.length - 1] || [];\n    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  }\n\n  // Return a moment from input, that is local/utc/zone equivalent to model.\n  function cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n      // Use low-level api, because this fn is low-level api.\n      res._d.setTime(res._d.valueOf() + diff);\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset());\n  }\n\n  // HOOKS\n\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n  hooks.updateOffset = function () {};\n\n  // MOMENTS\n\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n      localAdjust;\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n      this._offset = input;\n      this._isUTC = true;\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n    return this;\n  }\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n    return this;\n  }\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n    var c = {},\n      other;\n    copyConfig(c, this);\n    c = prepareConfig(c);\n    if (c._a) {\n      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n    return this._isDSTShifted;\n  }\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  }\n\n  // ASP.NET json date format regex\n  var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n  function createDuration(input, key) {\n    var duration = input,\n      // matching against regexp is expensive, do it on demand\n      match = null,\n      sign,\n      ret,\n      diffRes;\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input) || !isNaN(+input)) {\n      duration = {};\n      if (key) {\n        duration[key] = +input;\n      } else {\n        duration.milliseconds = +input;\n      }\n    } else if (match = aspNetRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n      };\n    } else if (match = isoRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n    ret = new Duration(duration);\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n    if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n      ret._isValid = input._isValid;\n    }\n    return ret;\n  }\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n  function momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n    return res;\n  }\n\n  // TODO: remove 'name' arg after deprecation is removed\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp;\n      //invert the arguments, but complain about it\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n      days = absRound(duration._days),\n      months = absRound(duration._months);\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n    updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n  var add = createAdder(1, 'add'),\n    subtract = createAdder(-1, 'subtract');\n  function isString(input) {\n    return typeof input === 'string' || input instanceof String;\n  }\n\n  // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n  function isMomentInput(input) {\n    return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;\n  }\n  function isMomentInputObject(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n      propertyTest = false,\n      properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],\n      i,\n      property,\n      propertyLen = properties.length;\n    for (i = 0; i < propertyLen; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n    return objectTest && propertyTest;\n  }\n  function isNumberOrStringArray(input) {\n    var arrayTest = isArray(input),\n      dataTypeTest = false;\n    if (arrayTest) {\n      dataTypeTest = input.filter(function (item) {\n        return !isNumber(item) && isString(input);\n      }).length === 0;\n    }\n    return arrayTest && dataTypeTest;\n  }\n  function isCalendarSpec(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n      propertyTest = false,\n      properties = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse'],\n      i,\n      property;\n    for (i = 0; i < properties.length; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n    return objectTest && propertyTest;\n  }\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n  function calendar$1(time, formats) {\n    // Support for single parameter, formats only overload to the calendar function\n    if (arguments.length === 1) {\n      if (!arguments[0]) {\n        time = undefined;\n        formats = undefined;\n      } else if (isMomentInput(arguments[0])) {\n        time = arguments[0];\n        formats = undefined;\n      } else if (isCalendarSpec(arguments[0])) {\n        formats = arguments[0];\n        time = undefined;\n      }\n    }\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n      sod = cloneWithOffset(now, this).startOf('day'),\n      format = hooks.calendarFormat(this, sod) || 'sameElse',\n      output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n  function clone() {\n    return new Moment(this);\n  }\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n      localTo = isMoment(to) ? to : createLocal(to);\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n      inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n    if (!this.isValid()) {\n      return NaN;\n    }\n    that = cloneWithOffset(input, this);\n    if (!that.isValid()) {\n      return NaN;\n    }\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n      default:\n        output = this - that;\n    }\n    return asFloat ? output : absFloor(output);\n  }\n  function monthDiff(a, b) {\n    if (a.date() < b.date()) {\n      // end-of-month calculations work correct when the start month has more\n      // days than the end month.\n      return -monthDiff(b, a);\n    }\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n      // b is in (anchor - 1 month, anchor + 1 month)\n      anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2,\n      adjust;\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n    var utc = keepOffset !== true,\n      m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment',\n      zone = '',\n      prefix,\n      year,\n      datetime,\n      suffix;\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n    prefix = '[' + func + '(\"]';\n    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  }\n\n  // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n  function locale(key) {\n    var newLocaleData;\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n      return this;\n    }\n  }\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n  function localeData() {\n    return this._locale;\n  }\n  var MS_PER_SECOND = 1000,\n    MS_PER_MINUTE = 60 * MS_PER_SECOND,\n    MS_PER_HOUR = 60 * MS_PER_MINUTE,\n    MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n  // actual modulo - handles negative numbers (for dates before 1970):\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n  function startOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }\n  function endOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n  function isValid$2() {\n    return isValid(this);\n  }\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  }\n  addFormatToken('N', 0, 0, 'eraAbbr');\n  addFormatToken('NN', 0, 0, 'eraAbbr');\n  addFormatToken('NNN', 0, 0, 'eraAbbr');\n  addFormatToken('NNNN', 0, 0, 'eraName');\n  addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n  addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n  addFormatToken('y', ['yy', 2], 0, 'eraYear');\n  addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n  addRegexToken('N', matchEraAbbr);\n  addRegexToken('NN', matchEraAbbr);\n  addRegexToken('NNN', matchEraAbbr);\n  addRegexToken('NNNN', matchEraName);\n  addRegexToken('NNNNN', matchEraNarrow);\n  addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {\n    var era = config._locale.erasParse(input, token, config._strict);\n    if (era) {\n      getParsingFlags(config).era = era;\n    } else {\n      getParsingFlags(config).invalidEra = input;\n    }\n  });\n  addRegexToken('y', matchUnsigned);\n  addRegexToken('yy', matchUnsigned);\n  addRegexToken('yyy', matchUnsigned);\n  addRegexToken('yyyy', matchUnsigned);\n  addRegexToken('yo', matchEraYearOrdinal);\n  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n  addParseToken(['yo'], function (input, array, config, token) {\n    var match;\n    if (config._locale._eraYearOrdinalRegex) {\n      match = input.match(config._locale._eraYearOrdinalRegex);\n    }\n    if (config._locale.eraYearOrdinalParse) {\n      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n    } else {\n      array[YEAR] = parseInt(input, 10);\n    }\n  });\n  function localeEras(m, format) {\n    var i,\n      l,\n      date,\n      eras = this._eras || getLocale('en')._eras;\n    for (i = 0, l = eras.length; i < l; ++i) {\n      switch (typeof eras[i].since) {\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].since).startOf('day');\n          eras[i].since = date.valueOf();\n          break;\n      }\n      switch (typeof eras[i].until) {\n        case 'undefined':\n          eras[i].until = +Infinity;\n          break;\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].until).startOf('day').valueOf();\n          eras[i].until = date.valueOf();\n          break;\n      }\n    }\n    return eras;\n  }\n  function localeErasParse(eraName, format, strict) {\n    var i,\n      l,\n      eras = this.eras(),\n      name,\n      abbr,\n      narrow;\n    eraName = eraName.toUpperCase();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      name = eras[i].name.toUpperCase();\n      abbr = eras[i].abbr.toUpperCase();\n      narrow = eras[i].narrow.toUpperCase();\n      if (strict) {\n        switch (format) {\n          case 'N':\n          case 'NN':\n          case 'NNN':\n            if (abbr === eraName) {\n              return eras[i];\n            }\n            break;\n          case 'NNNN':\n            if (name === eraName) {\n              return eras[i];\n            }\n            break;\n          case 'NNNNN':\n            if (narrow === eraName) {\n              return eras[i];\n            }\n            break;\n        }\n      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n        return eras[i];\n      }\n    }\n  }\n  function localeErasConvertYear(era, year) {\n    var dir = era.since <= era.until ? +1 : -1;\n    if (year === undefined) {\n      return hooks(era.since).year();\n    } else {\n      return hooks(era.since).year() + (year - era.offset) * dir;\n    }\n  }\n  function getEraName() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].name;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].name;\n      }\n    }\n    return '';\n  }\n  function getEraNarrow() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].narrow;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].narrow;\n      }\n    }\n    return '';\n  }\n  function getEraAbbr() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].abbr;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].abbr;\n      }\n    }\n    return '';\n  }\n  function getEraYear() {\n    var i,\n      l,\n      dir,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {\n        return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;\n      }\n    }\n    return this.year();\n  }\n  function erasNameRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNameRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasNameRegex : this._erasRegex;\n  }\n  function erasAbbrRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasAbbrRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasAbbrRegex : this._erasRegex;\n  }\n  function erasNarrowRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNarrowRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasNarrowRegex : this._erasRegex;\n  }\n  function matchEraAbbr(isStrict, locale) {\n    return locale.erasAbbrRegex(isStrict);\n  }\n  function matchEraName(isStrict, locale) {\n    return locale.erasNameRegex(isStrict);\n  }\n  function matchEraNarrow(isStrict, locale) {\n    return locale.erasNarrowRegex(isStrict);\n  }\n  function matchEraYearOrdinal(isStrict, locale) {\n    return locale._eraYearOrdinalRegex || matchUnsigned;\n  }\n  function computeErasParse() {\n    var abbrPieces = [],\n      namePieces = [],\n      narrowPieces = [],\n      mixedPieces = [],\n      i,\n      l,\n      eras = this.eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      namePieces.push(regexEscape(eras[i].name));\n      abbrPieces.push(regexEscape(eras[i].abbr));\n      narrowPieces.push(regexEscape(eras[i].narrow));\n      mixedPieces.push(regexEscape(eras[i].name));\n      mixedPieces.push(regexEscape(eras[i].abbr));\n      mixedPieces.push(regexEscape(eras[i].narrow));\n    }\n    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n    this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n  // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG');\n\n  // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1);\n\n  // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  });\n\n  // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n  function getISOWeeksInISOWeekYear() {\n    return weeksInYear(this.isoWeekYear(), 1, 4);\n  }\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n  function getWeeksInWeekYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n  }\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n      date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  }\n\n  // FORMATTING\n\n  addFormatToken('Q', 0, 'Qo', 'quarter');\n\n  // ALIASES\n\n  addUnitAlias('quarter', 'Q');\n\n  // PRIORITY\n\n  addUnitPriority('quarter', 7);\n\n  // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  });\n\n  // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  }\n\n  // FORMATTING\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n  // ALIASES\n\n  addUnitAlias('date', 'D');\n\n  // PRIORITY\n  addUnitPriority('date', 9);\n\n  // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  });\n\n  // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true);\n\n  // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n  // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD');\n\n  // PRIORITY\n  addUnitPriority('dayOfYear', 4);\n\n  // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  });\n\n  // HELPERS\n\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  }\n\n  // FORMATTING\n\n  addFormatToken('m', ['mm', 2], 0, 'minute');\n\n  // ALIASES\n\n  addUnitAlias('minute', 'm');\n\n  // PRIORITY\n\n  addUnitPriority('minute', 14);\n\n  // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n\n  // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false);\n\n  // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second');\n\n  // ALIASES\n\n  addUnitAlias('second', 's');\n\n  // PRIORITY\n\n  addUnitPriority('second', 15);\n\n  // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n\n  // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false);\n\n  // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  });\n\n  // ALIASES\n\n  addUnitAlias('millisecond', 'ms');\n\n  // PRIORITY\n\n  addUnitPriority('millisecond', 16);\n\n  // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token, getSetMillisecond;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n  getSetMillisecond = makeGetSet('Milliseconds', false);\n\n  // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName');\n\n  // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n      return 'Moment<' + this.format() + '>';\n    };\n  }\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.eraName = getEraName;\n  proto.eraNarrow = getEraNarrow;\n  proto.eraAbbr = getEraAbbr;\n  proto.eraYear = getEraYear;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.weeksInWeekYear = getWeeksInWeekYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n  function preParsePostFormat(string) {\n    return string;\n  }\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.eras = localeEras;\n  proto$1.erasParse = localeErasParse;\n  proto$1.erasConvertYear = localeErasConvertYear;\n  proto$1.erasAbbrRegex = erasAbbrRegex;\n  proto$1.erasNameRegex = erasNameRegex;\n  proto$1.erasNarrowRegex = erasNarrowRegex;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n  function get$1(format, index, field, setter) {\n    var locale = getLocale(),\n      utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n    format = format || '';\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n    var i,\n      out = [];\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n  }\n\n  // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n      format = format || '';\n    }\n    var locale = getLocale(),\n      shift = localeSorted ? locale._week.dow : 0,\n      i,\n      out = [];\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n  }\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n  getSetGlobalLocale('en', {\n    eras: [{\n      since: '0001-01-01',\n      until: +Infinity,\n      offset: 1,\n      name: 'Anno Domini',\n      narrow: 'AD',\n      abbr: 'AD'\n    }, {\n      since: '0000-12-31',\n      until: -Infinity,\n      offset: 1,\n      name: 'Before Christ',\n      narrow: 'BC',\n      abbr: 'BC'\n    }],\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n      var b = number % 10,\n        output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  });\n\n  // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  }\n\n  // supports only 2.0-style add(1, 's') or add(duration)\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  }\n\n  // supports only 2.0-style subtract(1, 's') or subtract(duration)\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n  function bubble() {\n    var milliseconds = this._milliseconds,\n      days = this._days,\n      months = this._months,\n      data = this._data,\n      seconds,\n      minutes,\n      hours,\n      years,\n      monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    var days,\n      months,\n      milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      switch (units) {\n        case 'month':\n          return months;\n        case 'quarter':\n          return months / 3;\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n        case 'day':\n          return days + milliseconds / 864e5;\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  }\n\n  // TODO: Use this.as('ms')?\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n  var asMilliseconds = makeAs('ms'),\n    asSeconds = makeAs('s'),\n    asMinutes = makeAs('m'),\n    asHours = makeAs('h'),\n    asDays = makeAs('d'),\n    asWeeks = makeAs('w'),\n    asMonths = makeAs('M'),\n    asQuarters = makeAs('Q'),\n    asYears = makeAs('y');\n  function clone$1() {\n    return createDuration(this);\n  }\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n  var milliseconds = makeGetter('milliseconds'),\n    seconds = makeGetter('seconds'),\n    minutes = makeGetter('minutes'),\n    hours = makeGetter('hours'),\n    days = makeGetter('days'),\n    months = makeGetter('months'),\n    years = makeGetter('years');\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n  var round = Math.round,\n    thresholds = {\n      ss: 44,\n      // a few seconds to seconds\n      s: 45,\n      // seconds to minute\n      m: 45,\n      // minutes to hour\n      h: 22,\n      // hours to day\n      d: 26,\n      // days to month/week\n      w: null,\n      // weeks to month\n      M: 11 // months to year\n    };\n\n  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n    var duration = createDuration(posNegDuration).abs(),\n      seconds = round(duration.as('s')),\n      minutes = round(duration.as('m')),\n      hours = round(duration.as('h')),\n      days = round(duration.as('d')),\n      months = round(duration.as('M')),\n      weeks = round(duration.as('w')),\n      years = round(duration.as('y')),\n      a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days];\n    if (thresholds.w != null) {\n      a = a || weeks <= 1 && ['w'] || weeks < thresholds.w && ['ww', weeks];\n    }\n    a = a || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  }\n\n  // This function allows you to set the rounding function for relative time strings\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n    return false;\n  }\n\n  // This function allows you to set a threshold for relative time strings\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n    return true;\n  }\n  function humanize(argWithSuffix, argThresholds) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n    var withSuffix = false,\n      th = thresholds,\n      locale,\n      output;\n    if (typeof argWithSuffix === 'object') {\n      argThresholds = argWithSuffix;\n      argWithSuffix = false;\n    }\n    if (typeof argWithSuffix === 'boolean') {\n      withSuffix = argWithSuffix;\n    }\n    if (typeof argThresholds === 'object') {\n      th = Object.assign({}, thresholds, argThresholds);\n      if (argThresholds.s != null && argThresholds.ss == null) {\n        th.ss = argThresholds.s - 1;\n      }\n    }\n    locale = this.localeData();\n    output = relativeTime$1(this, !withSuffix, th, locale);\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n    return locale.postformat(output);\n  }\n  var abs$1 = Math.abs;\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n    var seconds = abs$1(this._milliseconds) / 1000,\n      days = abs$1(this._days),\n      months = abs$1(this._months),\n      minutes,\n      hours,\n      years,\n      s,\n      total = this.asSeconds(),\n      totalSign,\n      ymSign,\n      daysSign,\n      hmsSign;\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    totalSign = total < 0 ? '-' : '';\n    ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (years ? ymSign + years + 'Y' : '') + (months ? ymSign + months + 'M' : '') + (days ? daysSign + days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hmsSign + hours + 'H' : '') + (minutes ? hmsSign + minutes + 'M' : '') + (seconds ? hmsSign + s + 'S' : '');\n  }\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang;\n\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf');\n\n  // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  });\n\n  //! moment.js\n\n  hooks.version = '2.29.4';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto;\n\n  // currently HTML5 input type only supports 24-hour formats\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n  };\n  return hooks;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(51)(module)))\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @marketto/diacritic-remover 1.0.8\n * Copyright (c) 2019, Marco Ricupero <marco.ricupero@gmail.com>\n * License: MIT\n * ===========================================\n * Latin diacritic json file use material from Wikitionary article \"Latin script\"\n * Source: https://en.wiktionary.org/wiki/Appendix:Latin_script\n * License: CC-BY-SA 3.0\n * ===========================================\n * These diacritic i18n json files use material from Wikipedia article \"Diacritic\"\n * Source: https://en.wikipedia.org/wiki/Diacritic\n * License: CC-BY-SA 3.0\n */\n\n\nclass DiacriticAbstractHandler {\n  constructor() {\n    this.USE_VALIDATOR = false;\n    this.FALLBACK_MARKER_MATCHER = \"̸̵̶̡̢̨̛͓̳̜̪̟̠̻̖̹̣̤̙͚̱͇̬͕̰͍̮͎̝͈̫͐̂̍̅̔͋͂͗̃̈̏̎̄̿͌̑̓̈́̇̆̕͘͜͝ͅ\";\n    this.LOWERCASE_MARKER_MATCHER = \"\\\\p{M}\";\n    this.UPPERCASE_MARKER_MATCHER = \"\\\\P{M}\";\n    this.IS_MARKER_REPLACING_AVAILABLE = false;\n    try {\n      this.IS_MARKER_REPLACING_AVAILABLE = !!new RegExp(\"(\".concat(this.LOWERCASE_MARKER_MATCHER, \")\"), \"gui\");\n    } catch (err) {\n      return;\n    }\n  }\n  get(target, prop, receiver) {\n    if (prop.length <= 1) {\n      return this.USE_VALIDATOR ? this.diacriticValidatorTrap(target, prop) : this.diacriticTrap(target, prop);\n    }\n    return Reflect.get(target, prop, receiver);\n  }\n  diacriticTrap(target, char) {\n    return char.replace(this.diacriticValidatorTrap(target, char), \"\");\n  }\n  diacriticValidatorTrap(target, char) {\n    return this.INSENSITIVE_MARKER_REGEXP;\n  }\n  get INSENSITIVE_MARKER_REGEXP() {\n    return new RegExp(this.IS_MARKER_REPLACING_AVAILABLE ? \"(\".concat(this.LOWERCASE_MARKER_MATCHER, \")\") : \"([\".concat(this.FALLBACK_MARKER_MATCHER, \"]*)\"), \"gui\");\n  }\n  get INSENSITIVE_MARKER_MATCHER() {\n    return this.IS_MARKER_REPLACING_AVAILABLE ? \"[\".concat(this.LOWERCASE_MARKER_MATCHER).concat(this.UPPERCASE_MARKER_MATCHER, \"]*\") : \"[\".concat(this.FALLBACK_MARKER_MATCHER).concat(this.FALLBACK_MARKER_MATCHER.toUpperCase(), \"]*\");\n  }\n}\nclass DiacriticInsensitiveMatcherHandler extends DiacriticAbstractHandler {\n  diacriticTrap(target, char) {\n    const lowerCaseChar = super.diacriticTrap(target, char).toLowerCase();\n    const lowerCaseDiacritics = target.dictionary[lowerCaseChar] || \"\";\n    const insensitiveMatcher = new Set([lowerCaseChar, lowerCaseChar.toUpperCase(), ...lowerCaseDiacritics, ...lowerCaseDiacritics.toUpperCase()]);\n    return [...insensitiveMatcher].sort().join(\"\");\n  }\n}\nclass DiacriticValidatorHandler extends DiacriticAbstractHandler {\n  constructor() {\n    super(...arguments);\n    this.USE_VALIDATOR = true;\n  }\n  diacriticValidatorTrap(target, char) {\n    const cleanChar = char.replace(super.diacriticValidatorTrap(target, char), \"\");\n    const diacritics = target.dictionary[char.toLowerCase()] || \"\";\n    let charMatcher = \"\";\n    let markerMatcher = \"\";\n    if (cleanChar || diacritics) {\n      charMatcher = \"[\".concat(cleanChar).concat(diacritics, \"]\");\n      markerMatcher = this.INSENSITIVE_MARKER_MATCHER;\n      if (target.isUpperCase(cleanChar)) {\n        charMatcher = charMatcher.toUpperCase();\n      }\n    }\n    return new RegExp(\"^\".concat(charMatcher).concat(markerMatcher, \"$\"), \"u\");\n  }\n}\nclass DiacriticInsensitiveValidatorHandler extends DiacriticValidatorHandler {\n  diacriticValidatorTrap(target, char) {\n    const {\n      source\n    } = super.diacriticValidatorTrap(target, char);\n    return new RegExp(source, \"ui\");\n  }\n}\nclass DiacriticMatcherHandler extends DiacriticAbstractHandler {\n  diacriticTrap(target, char) {\n    let matcher = super.diacriticTrap(target, char);\n    const diacritics = target.dictionary[char.toLowerCase()];\n    if (diacritics) {\n      matcher += target.isUpperCase(matcher) ? diacritics.toUpperCase() : diacritics;\n    }\n    return matcher;\n  }\n}\nclass DiacriticMapperCore {\n  constructor() {\n    let dictionary = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.dictionary = dictionary;\n    this.matcher = new Proxy(this, new DiacriticMatcherHandler());\n    this.insensitiveMatcher = new Proxy(this, new DiacriticInsensitiveMatcherHandler());\n    this.validator = new Proxy(this, new DiacriticValidatorHandler());\n    this.insensitiveValidator = new Proxy(this, new DiacriticInsensitiveValidatorHandler());\n  }\n  matcherBy(regexp) {\n    const lowerCase = Object.entries(this.dictionary).filter(_ref => {\n      let [key, value] = _ref;\n      return value && regexp.test(key);\n    }).map(_ref2 => {\n      let [char, value] = _ref2;\n      return char + value;\n    });\n    const upperCase = Object.entries(this.dictionary).filter(_ref3 => {\n      let [key, value] = _ref3;\n      return value && regexp.test(key.toUpperCase());\n    }).map(_ref4 => {\n      let [char, value] = _ref4;\n      return (char + value).toUpperCase();\n    });\n    return [...lowerCase, ...upperCase].join(\"\");\n  }\n  replace(text) {\n    return text.replace(/./g, char => this[char]);\n  }\n  /**\n   * Check if the given string is uppercase\n   *\n   * @param {string} [text=''] string to check\n   * @returns {boolean} true if text is uppercase\n   * @memberof DiacriticMapperCore\n   */\n  isUpperCase() {\n    let text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return text.toLowerCase() !== text;\n  }\n  /**\n   * Check if the given string is lowercase\n   *\n   * @param {string} [text=''] string to check\n   * @returns {boolean} true if text is lowercase\n   * @memberof DiacriticMapperCore\n   */\n  isLowerCase() {\n    let text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return text.toUpperCase() !== text;\n  }\n}\n\n// Copyright Joyent, Inc. and other Node contributors.\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nclass DiacriticRemoverHandler extends DiacriticAbstractHandler {\n  diacriticTrap(target, char) {\n    const cleanChar = super.diacriticTrap(target, char);\n    if (!cleanChar.trim() || cleanChar.length !== 1) {\n      return cleanChar;\n    }\n    const lowerCaseChar = cleanChar.toLowerCase();\n    const [plainChar] = Object.entries(target.dictionary).find(_ref5 => {\n      let [letter, diacritics] = _ref5;\n      return isString(diacritics) && [letter, ...diacritics].includes(lowerCaseChar);\n    }) || [cleanChar];\n    return target.isUpperCase(cleanChar) ? plainChar.toUpperCase() : plainChar;\n  }\n}\nvar i18nGlobal = {\n  \"\": \"ʰ'ʼ·׳\"\n};\nvar LATIN_DICT = {\n  a: \"àáâãäåāăąǎǟǡǻȁȃȧɐɑɒᴀᶏḁạảấầẩẫậắằẳẵặⱥａ\",\n  ae: \"æǣǽᴁᴂᴭᵆ\",\n  b: \"ƀƃɓʙᵬᶀḃḅḇｂ\",\n  c: \"cçćĉċčƈȼɕ̄ᴄḉｃ\",\n  d: \"dðþďđƌȡɖɗ̦ᴅᵭᶁᶑḋḍḏḑḓｄ\",\n  db: \"ȸ\",\n  dz: \"ǆǳ\",\n  e: \"èéêëēĕėęěǝȅȇȩɇəɛᴇᶒḕḗḙḛḝẹẻẽếềểễệⱸｅ\",\n  eo: \"ᴔ\",\n  f: \"fƒᵮᶂḟꜰﬀｆ\",\n  g: \"ĝğġģǥǧǵȝɠɢᶃḡｇ\",\n  h: \"hĥħȟɦʜʰ̱ḣḥḧḩḫẖⱨｈ\",\n  i: \"iìíîïĩīĭįıǐȉȋɨɩɪ̇ᵻᶖḭḯỉịｉ\",\n  ij: \"ĳ\",\n  j: \"jĵǰȷɉɟʄʝ̌ᴊｊ\",\n  k: \"ķƙǩᴋᶄḱḳḵⱪꝁｋ\",\n  l: \"lĺļľŀłƚȴɫɬɭʟᶅḷḹḻḽⱡｌ\",\n  lj: \"ǉ\",\n  m: \"ɱᴍᵯᶆḿṁṃｍ\",\n  n: \"nñńņňƞǹȵɲɳɴᵰᶇṅṇṉṋｎ\",\n  nj: \"ŋǌ̈\",\n  o: \"òóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵᴏṍṏṑṓọỏốồổỗộớờởỡợⱺｏ\",\n  oe: \"œ\",\n  p: \"pƥƿ̃ᴘᵱᵽᶈṕṗｐ\",\n  q: \"ƣɋʠｑ\",\n  qp: \"ȹ\",\n  r: \"ŕŗřȑȓɍɼɽɾʀᵲᵳᶉṙṛṝṟꝛｒ\",\n  s: \"sśŝşšſșȿʂʃ̩ᵴᶊṡṣṥṧṩẛꜱｓ\",\n  ss: \"ß\",\n  t: \"tţťŧƫƭțȶʈᴛᵵṫṭṯṱẗⱦｔ\",\n  u: \"ùúûüũūŭůűųưǔǖǘǚǜȕȗʉʊᴜᵾṳṵṷṹṻụủứừửữựｕ\",\n  ue: \"ᵫ\",\n  uo: \"ȣ\",\n  ut: \"ᶙ\",\n  v: \"ʋʌᴠᶌṽṿⱱⱴｖ\",\n  w: \"ŵᴡẁẃẅẇẉẘⱳｗ\",\n  x: \"ᶍẋẍｘ\",\n  y: \"ýÿŷƴȳɏʏẏẙỳỵỷỹｙ\",\n  z: \"zźżžƶƹȥɀʐʑʒᴢᵶᶎẑẓẕⱬｚ\"\n};\nclass DiacriticRemover extends DiacriticMapperCore {\n  constructor() {\n    super();\n    for (var _len = arguments.length, dictionaries = new Array(_len), _key = 0; _key < _len; _key++) {\n      dictionaries[_key] = arguments[_key];\n    }\n    const mergedDictionaries = Object.freeze((dictionaries.length ? dictionaries : [LATIN_DICT, i18nGlobal]).reduce((dictMerge, currentDict) => [...dictMerge, ...Object.entries(currentDict)], []).reduce((accumulator, _ref6) => {\n      let [letter, diacritics] = _ref6;\n      let targetSet = accumulator.find(_ref7 => {\n        let [targetLetter] = _ref7;\n        return targetLetter === letter;\n      });\n      if (!targetSet) {\n        targetSet = [letter, []];\n        accumulator.push(targetSet);\n      }\n      targetSet[1] = [...targetSet[1], ...diacritics];\n      return accumulator;\n    }, []).reduce((accumulator, _ref8) => {\n      let [letter, diacritics] = _ref8;\n      return Object.assign(Object.assign({}, accumulator), {\n        [letter]: [...new Set(diacritics)].sort().join(\"\")\n      });\n    }, {}));\n    Object.defineProperty(this, \"dictionary\", {\n      configurable: false,\n      enumerable: false,\n      value: mergedDictionaries\n    });\n    return new Proxy(this, new DiacriticRemoverHandler());\n  }\n}\nmodule.exports = DiacriticRemover;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/dom-helpers/esm/scrollbarSize.js","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/react-bootstrap/esm/ModalBody.js","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/react-bootstrap/esm/ModalDialog.js","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/react-bootstrap/esm/ModalFooter.js","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/react-bootstrap/esm/ModalHeader.js","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/react-bootstrap/esm/ModalTitle.js","/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/node_modules/react-bootstrap/esm/Modal.js","../src/functions/generator-wrapper.function.ts","../src/belfiore-connector/classes/belfiore-connector.class.ts","../src/belfiore-connector/index.ts","../asset/cities-countries.ts","../src/date-utils/date-matcher.const.ts","../src/date-utils/date-utils.class.ts","../src/const/matcher.const.ts","../src/enums/crc.enum.ts","../src/enums/birth-month.enum.ts","../src/classes/check-digitizer.class.ts","../src/const/cf-offsets.const.ts","../src/enums/gender-weight.enum.ts","../src/enums/omocodes.enum.ts","../src/classes/gender.class.ts","../src/classes/parser.class.ts","../src/const/error-messages.const.ts","../src/classes/cfu-error.class.ts","../src/classes/pattern.class.ts","../src/classes/cf-mismatch-validator.class.ts","../src/classes/validator.class.ts","/Users/angelamariaselvaggi/node_modules/moment/moment.js","/Users/angelamariaselvaggi/node_modules/@marketto/diacritic-remover/dist/diacritic-remover.js"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","ModalBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","ModalDialog","contentClassName","centered","fullscreen","children","scrollable","dialogClass","concat","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","useCallbackRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","currentTarget","handleClick","handleEscapeKeyDown","preventDefault","handleEnter","isAppearing","handleExit","handleEntering","addEventListener","handleExited","display","renderBackdrop","useCallback","backdropProps","baseModalStyle","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","ModalContext","Provider","value","BaseModal","transition","backdropTransition","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","n","a","Symbol","iterator","i","constructor","fromDate","toDate","o","codeMatcher","data","licenses","province","l","sources","r","Error","Proxy","get","BELFIORE_CODE_MATCHER","test","belfioreToInt","toString","padStart","binaryfindIndex","belfioreCode","locationByIndex","includes","RegExp","Reflect","arguments","length","Math","max","min","b","floor","t","substr","ceil","toUpperCase","charCodeAt","parseInt","belfioreFromInt","String","fromCharCode","decodeDate","ITALY_KINGDOM_BIRTHDATE","add","nameByIndex","indexOf","substring","toArray","scanData","provinces","COUNTRY_CODE_MATCHER","parseProvinces","searchByName","findByName","next","active","config","from","byProvince","cities","CITY_CODE_MATCHER","countries","scanDataSourceIndex","name","scanDataGenerator","done","provinceOrCountry","creationDate","startOf","s","expirationDate","endOf","isAfter","isBefore","c","C","dataSource","g","S","iso3166","Set","has","trim","Array","url","license","licenseUrl","termsAndConditions","authors","freeze","__proto__","DAY","DAYS_30_MONTHS","DAYS_31_MONTHS","HOURS","ISO8601_DATE_TIME","ISO8601_SHORT_DATE","LEAP_MONTH","MILLISECONDS","MINUTES","MONTH","MONTH_DAY","SECONDS","TIME","TIMEZONE","YEAR","u","parseDate","Date","isArray","some","isNaN","UTC","isValid","ymdToDate","d","m","M","B","A","P","V","v","T","p","R","O","N","h","D","f","L","z","G","I","CONSONANT_LIST","VOWEL_LIST","OMOCODE_NUMBER_LIST","OMOCODE_NON_ZERO_NUMBER_LIST","OMOCODE_ZERO_LIST","MONTH_LIST","MONTH_30DAYS_LIST","MONTH_31DAYS_LIST","CITY_CODE_LIST","COUNTRY_CODE_LIST","CF_NAME_MATCHER","CF_SURNAME_MATCHER","CF_FULL_NAME_MATCHER","YEAR_MATCHER","LEAP_YEAR_MATCHER","MONTH_MATCHER","DAY_2X_MATCHER","DAY_3X_MATCHER","DAY_29_MATCHER","DAY_30_MATCHER","DAY_31_MATCHER","DAY_MATCHER","MALE_DAY_MATCHER","FEMALE_DAY_MATCHER","MONTH_DAY_MATCHER","FULL_DATE_MATCHER","MALE_FULL_DATE_MATCHER","FEMALE_FULL_DATE_MATCHER","CHECK_DIGIT","CODICE_FISCALE","PARTIAL_CF_NAME_MATCHER","PARTIAL_CF_FULL_NAME","PARTIAL_YEAR","PARTIAL_MONTH_DAY","PARTIAL_FULL_DATE","PARTIAL_BELFIORE_CODE_MATCHER","PARTIAL_CF","K","Q","E","F","U","H","J","W","Z","Y","X","k","q","checkDigit","evaluateChar","CRC_MOD","CHAR_OFFSET","evaluateCharGenerator","_this","j","getDay","MAX_MONTH_DAY","getGender","find","genderizeDay","_","y","cfDeomocode","partialCfDeomocode","appyCaseToChar","cfOmocode","split","OMOCODE_BITMAP","slice","join","cfOmocodeId","filter","map","cfToLastName","match","JOLLY_CHAR","cfToFirstName","cfToGender","cfToBirthYear","format","subtract","year","cfToBirthMonth","cfToBirthDay","cfToBirthDate","cfToBirthPlace","isSameOrAfter","cfDecode","firstName","lastName","day","month","date","gender","place","omocodeId","lastNameToCf","replace","charExtractor","padEnd","firstNameToCf","yearToCf","monthToCf","dayGenderToCf","yearMonthDayToDate","parsePlace","dateGenderToCf","getFullYear","getMonth","getDate","placeToCf","encodeCf","_ref2","checkBitmap","charOmocode","toLowerCase","$","w","x","INVALID_DATE","INVALID_DAY","INVALID_DAY_OR_GENDER","INVALID_GENDER","INVALID_NAME","INVALID_PLACE_NAME","INVALID_SURNAME","INVALID_YEAR","entries","_ref3","aa","cfLastName","isolatedInsensitiveTailor","cfFirstName","cfYear","deomocode","cfMonth","cfDay","cfDayGender","cfDateGender","cfPlace","codiceFiscale","matcherBy","insensitiveMatcher","toJSON","diff","oa","hasLastName","hasFirstName","hasBirthYear","hasBirthDate","hasGender","hasBirthPlace","hasCRC","matchPersonalInfo","mismatchPersonalInfo","matchLastName","mismatchLastName","matchFirstName","mismatchFirstName","matchBirthDate","isSame","mismatchBirthDate","matchGender","mismatchGender","matchBirthPlace","mismatchBirthPlace","valid","invalid","na","isLastNameValid","isLastNameInvalid","isFirstNameValid","isFirstNameInvalid","isBirthDateValid","isBirthDateInvalid","isGenderValid","isGenderInvalid","isBirthPlaceValid","isBirthPlaceInvalid","birthDatePlaceMatch","birthDatePlaceMismatch","birthPlaceDateMatch","birthPlaceDateMismatch","global","factory","module","exports","hookCallback","hooks","apply","setHookCallback","callback","input","prototype","call","isObject","hasOwnProp","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","isUndefined","isNumber","isDate","arr","fn","res","arrLen","push","extend","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","fun","len","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","momentProperties","updateInProgress","copyConfig","to","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","args","arg","key","argLen","stack","deprecations","deprecateSimple","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","mom","now","output","_calendar","zeroFill","number","targetLength","forceSign","absNumber","abs","zerosToFill","sign","pow","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","localeData","removeFormattingTokens","makeFormatFunction","array","formatMoment","invalidDate","expandFormat","replaceLongDateFormatTokens","longDateFormat","lastIndex","defaultLongDateFormat","LTS","LT","LL","LLL","LLLL","_longDateFormat","formatUpper","tok","defaultInvalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","future","past","ss","mm","hh","dd","ww","MM","yy","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","aliases","addUnitAlias","unit","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","sort","isLeapYear","absFloor","toInt","argumentForCoercion","coercedNumber","isFinite","makeGetSet","keepTime","set$1","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","_a","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","_months","isFormat","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","parseTwoDigitYear","daysInYear","getSetYear","getIsLeapYear","createDate","ms","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","dayOfYear","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","parseWeekday","parseIsoWeekday","shiftWeekdays","ws","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getSetLocaleDayOfWeek","getSetISODayOfWeek","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minPieces","minp","shortp","longp","hFormat","hours","kFormat","minutes","seconds","lowercase","matchMeridiem","_meridiemParse","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","localeIsPM","charAt","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower","baseConfig","dayOfMonthOrdinalParse","meridiemParse","locales","localeFamilies","globalLocale","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","loadLocale","isLocaleNameSane","oldLocale","aliasedRequire","_abbr","require","getSetGlobalLocale","values","getLocale","defineLocale","abbr","parentLocale","forEach","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","exec","allowTime","dateFormat","timeFormat","tzFormat","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","createFromInputFallback","_useUTC","defaults","currentDateArray","nowValue","getUTCMonth","getUTCDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","weekdayOverflow","curWeek","GG","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","orderLen","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","createAdder","direction","period","dur","tmp","isAdding","isString","isMomentInput","isNumberOrStringArray","isMomentInputObject","objectTest","propertyTest","properties","property","propertyLen","arrayTest","dataTypeTest","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","calendarFormat","localInput","isBetween","inclusivity","localFrom","localTo","inputMs","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","anchor2","adjust","defaultFormat","defaultFormatUtc","toISOString","keepOffset","inspect","zone","prefix","datetime","suffix","inputString","postformat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOfDate","isoWeekday","unix","toObject","isValid$2","parsingFlags","invalidAt","creationData","matchEraAbbr","matchEraName","matchEraNarrow","erasParse","matchEraYearOrdinal","_eraYearOrdinalRegex","eraYearOrdinalParse","localeEras","eras","_eras","since","until","Infinity","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","abbrPieces","namePieces","narrowPieces","isoWeekYear","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetSecond","getSetMillisecond","parseMs","getZoneAbbr","getZoneName","proto","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","parseZone","isDST","zoneAbbr","zoneName","dates","isDSTShifted","createUnix","createInZone","preParsePostFormat","proto$1","firstDayOfYear","firstDayOfWeek","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","total","totalSign","ymSign","daysSign","hmsSign","toFixed","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME_SECONDS","TIME_MS","DiacriticAbstractHandler","USE_VALIDATOR","FALLBACK_MARKER_MATCHER","LOWERCASE_MARKER_MATCHER","UPPERCASE_MARKER_MATCHER","IS_MARKER_REPLACING_AVAILABLE","err","receiver","diacriticValidatorTrap","diacriticTrap","char","INSENSITIVE_MARKER_REGEXP","INSENSITIVE_MARKER_MATCHER","DiacriticInsensitiveMatcherHandler","lowerCaseChar","lowerCaseDiacritics","dictionary","DiacriticValidatorHandler","cleanChar","diacritics","charMatcher","markerMatcher","isUpperCase","DiacriticInsensitiveValidatorHandler","DiacriticMatcherHandler","DiacriticMapperCore","validator","insensitiveValidator","regexp","upperCase","_ref4","text","isLowerCase","DiacriticRemoverHandler","plainChar","_ref5","letter","i18nGlobal","LATIN_DICT","ae","db","dz","eo","ij","lj","nj","oe","qp","ue","uo","ut","DiacriticRemover","_len","dictionaries","_key","mergedDictionaries","reduce","dictMerge","currentDict","accumulator","_ref6","targetSet","_ref7","targetLetter","_ref8","defineProperty","configurable","enumerable"],"mappings":"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","file":"x","sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import IGeneratorWrapper from \"../interfaces/generator-wrapper.interface\";\nexport default function generatorWrapper<T = unknown, TReturn = any, TNext = unknown>(\n    generator: Generator): IGeneratorWrapper<T, TReturn, TNext> {\n    generator[Symbol.iterator] = () => generator;\n    return generator as IGeneratorWrapper<T, TReturn, TNext>;\n}\n","import moment, { Moment } from \"moment\";\nimport { MultiFormatDate } from \"../../date-utils\";\nimport generatorWrapper from \"../../functions/generator-wrapper.function\";\nimport IGeneratorWrapper from \"../../interfaces/generator-wrapper.interface\";\nimport IBelfioreCity from \"../interfaces/belfiore-city.interface\";\nimport IBelfioreCommonPlace from \"../interfaces/belfiore-common-place.interface\";\nimport IBelfioreCountry from \"../interfaces/belfiore-country.interface\";\nimport IBelfioreDbData from \"../interfaces/belfiore-db-data.interface\";\nimport IBelfioreDbLicense from \"../interfaces/belfiore-db-license.interface\";\nimport BelfioreConnectorConfig from \"../types/belfiore-connector-config.type\";\nimport BelfiorePlace from \"../types/belfiore-place.type\";\n\n/**\n * Handler for cities and countries Dataset\n */\nexport default class BelfioreConnector {\n    [belfioreCode: string]: BelfiorePlace | any;\n\n    /**\n     * Get Proxy\n     * @param resource target resource\n     * @param paramName property name to proxy\n     * @returns Proxied property\n     */\n    public static get(resource: BelfioreConnector, paramName: string, receiver: any): BelfiorePlace | any {\n        if (this.BELFIORE_CODE_MATCHER.test(paramName)) {\n            const base32name: string = this.belfioreToInt(paramName)\n                .toString(32)\n                .padStart(3, \"0\");\n\n            for (const sourceData of resource.data || []) {\n                const index: number = this.binaryfindIndex(sourceData.belfioreCode, base32name);\n                if (index >= 0) {\n                    return resource.locationByIndex(sourceData, index);\n                }\n            }\n        }\n\n        if (\n            (resource.codeMatcher || resource.province) && [\"cities\", \"countries\"].includes(paramName) ||\n            paramName === \"byProvince\" && (\n                resource.codeMatcher instanceof RegExp && resource.codeMatcher.test(\"Z000\")\n                || resource.province\n            )\n        ) {\n            return;\n        }\n        return Reflect.get(resource, paramName, receiver);\n    }\n\n    /**\n     * Binary find Index (works ONLY in sorted arrays)\n     * @param text Unique string of values of the same length (step)\n     * @param value Exact text to find\n     * @param start text start index for seeking the value\n     * @param end text end index for seeking the value\n     * @param step length of a single value to seek properly the text string\n     * @returns Found value Index or -1 if not found\n     * @private\n     */\n    public static binaryfindIndex(\n        sourceString: string,\n        targetText: string,\n        start: number = 0,\n        end: number = sourceString.length - 1,\n    ): number {\n        if (!sourceString.length) {\n            return -1;\n        }\n        const rangedStart: number = Math.max(start, 0);\n        const rangedEnd: number = Math.min(end, sourceString.length - 1);\n        const currentLength: number = rangedEnd - rangedStart + 1;\n        if (rangedStart > rangedEnd || currentLength % targetText.length) {\n            return -1;\n        }\n        const targetIndex: number =\n            rangedStart + Math.floor(currentLength / (2 * targetText.length)) * targetText.length;\n        const targetValue: string = sourceString.substr(targetIndex, targetText.length);\n        if (targetValue === targetText) {\n            return Math.ceil((targetIndex + 1) / targetText.length) - 1;\n        }\n        if (targetText > targetValue) {\n            return this.binaryfindIndex(sourceString, targetText, targetIndex + targetText.length, rangedEnd);\n        }\n        return this.binaryfindIndex(sourceString, targetText, rangedStart, targetIndex - 1);\n    }\n\n    /**\n     * Converts belfiore code into an int\n     */\n    public static belfioreToInt(code: string): number {\n        const upperCaseCode: string = code.toUpperCase();\n        return (upperCaseCode.charCodeAt(0) - 65) * 10 ** 3 + parseInt(upperCaseCode.substr(1), 10);\n    }\n\n    private static ITALY_KINGDOM_BIRTHDATE = \"1861-01-01\";\n    private static BELFIORE_CODE_MATCHER: RegExp = /^[A-Z]\\d{3}$/iu;\n\n    private static CITY_CODE_MATCHER: RegExp = /^[A-Y]\\d{3}$/iu;\n    private static COUNTRY_CODE_MATCHER: RegExp = /^Z\\d{3}$/iu;\n\n    /**\n     * Converts int to belfiore code\n     * @param code Belfiore int code\n     * @returns Standard belfiore code\n     */\n    private static belfioreFromInt(code: number): string {\n        const charIndex: number = Math.floor(code / 10 ** 3);\n        const char: string = String.fromCharCode(charIndex + 65);\n        const numValue: string = code.toString().substr(-3);\n        return `${char}${numValue.padStart(3, \"0\")}`;\n    }\n\n    /**\n     * Converst Base 32 number of days since 01/01/1861 to Moment instance\n     * @param base32daysFrom1861 Base 32 number of days from 1861-01-01\n     * @returns Moment instance date\n     */\n    private static decodeDate(base32daysFrom1861: string): Moment {\n        const italyBirthDatePastDays = parseInt(base32daysFrom1861, 32);\n        return moment(this.ITALY_KINGDOM_BIRTHDATE).add(italyBirthDatePastDays, \"days\");\n    }\n\n    /**\n     * Retrieve string at index posizion\n     * @param list concatenation of names\n     * @param index target name index\n     * @returns index-th string\n     */\n    private static nameByIndex(list: string, index: number): string {\n        if (typeof list !== \"string\") {\n            throw new Error(\"[BelfioreConnector.nameByIndex] Provided list is not a string\");\n        }\n        if (!list.length) {\n            throw new Error(\"[BelfioreConnector.nameByIndex] Provided list empty\");\n        }\n        let startIndex: number = 0;\n        let endIndex: number = list.indexOf(\"|\", startIndex + 1);\n        let counter: number = index;\n\n        while (counter > 0 && endIndex > startIndex) {\n            counter--;\n            startIndex = endIndex + 1;\n            endIndex = list.indexOf(\"|\", startIndex + 1);\n        }\n\n        if (index < 0 || counter > 0) {\n            throw new Error(`[BelfioreConnector.nameByIndex] Provided index ${index} is out range`);\n        }\n\n        if (!counter && endIndex < 0) {\n            return list.substring(startIndex);\n        }\n\n        return list.substring(startIndex, endIndex);\n    }\n\n    private data: IBelfioreDbData[];\n    private licenses: IBelfioreDbLicense[];\n    private sources: string[];\n    private toDate: Moment | undefined;\n    private fromDate: Moment | undefined;\n    private codeMatcher: RegExp | undefined;\n    private province: string | undefined;\n\n    constructor({\n        fromDate,\n        toDate,\n        codeMatcher,\n        data,\n        licenses,\n        province,\n        sources,\n    }: BelfioreConnectorConfig) {\n        if (codeMatcher && province) {\n            throw new Error(\"Both codeMatcher and province were provided to Bolfiore, only one is allowed\");\n        }\n\n        if (toDate && !fromDate) {\n            throw new Error(\"Parameter fromDate is mandatory passing toDate\");\n        }\n\n        this.fromDate = fromDate;\n        this.toDate = toDate;\n        this.codeMatcher = codeMatcher;\n        this.data = data;\n        this.licenses = licenses;\n        this.province = province;\n        this.sources = sources;\n\n        return new Proxy<BelfioreConnector>(this, this.constructor as typeof BelfioreConnector);\n    }\n\n    /**\n     * Return belfiore places list\n     */\n    public toArray(): BelfiorePlace[] {\n        return [...this.scanData()] as BelfiorePlace[];\n    }\n\n    public get provinces(): string[] {\n        if (this.province) {\n            return [this.province];\n        } else if (this.codeMatcher !== BelfioreConnector.COUNTRY_CODE_MATCHER) {\n            return this.parseProvinces();\n        }\n        return [];\n    }\n\n    /**\n     * Search places matching given name\n     */\n    public searchByName(name: string): BelfiorePlace[] | null {\n        return name ? [...this.scanData(name)] as BelfiorePlace[] : null;\n    }\n\n    /**\n     * Find place matching given name, retuns place object if provided name match only 1 result\n     */\n    public findByName(name: string): BelfiorePlace | null {\n        if (!name) {\n            return null;\n        }\n        const startingNameMatcher = new RegExp(`^${name}$`, \"i\");\n        return this.scanData(startingNameMatcher).next().value;\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by given date\n     * @param date Target date to filter places active only for the given date\n     * @returns Belfiore instance filtered by active date\n     * @public\n     */\n    public active(date: MultiFormatDate = moment()): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            fromDate: moment(date),\n            toDate: moment(date),\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by given date ahead\n     * @param date Target date to filter places active only for the given date\n     * @returns Belfiore instance filtered by active date\n     * @public\n     */\n     public from(date: MultiFormatDate = moment()): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            fromDate: moment(date),\n        });\n    }\n\n    /**\n     * Returns a Belfiore instance filtered by the given province\n     * @param code Province Code (2 A-Z char)\n     * @returns Belfiore instance filtered by province code\n     * @public\n     */\n    public byProvince(code: string): BelfioreConnector | undefined {\n        if (typeof code !== \"string\" || !(/^[A-Z]{2}$/u).test(code)) {\n            return;\n        }\n        return new BelfioreConnector({\n            ...this.config,\n            codeMatcher: undefined,\n            province: code,\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     */\n    public get cities(): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            codeMatcher: BelfioreConnector.CITY_CODE_MATCHER,\n            province: undefined,\n        });\n    }\n\n    /**\n     * Returns a Proxied version of Belfiore which filters results by place type\n     */\n    public get countries(): BelfioreConnector {\n        return new BelfioreConnector({\n            ...this.config,\n            codeMatcher: BelfioreConnector.COUNTRY_CODE_MATCHER,\n            province: undefined,\n        });\n    }\n\n    private get config(): BelfioreConnectorConfig {\n        const {\n            codeMatcher,\n            data,\n            fromDate,\n            licenses,\n            sources,\n            toDate,\n        } = this;\n        return {\n            codeMatcher,\n            data,\n            fromDate,\n            licenses,\n            sources,\n            toDate,\n        } as BelfioreConnectorConfig;\n    }\n\n    private* scanDataSourceIndex(dataSource: IBelfioreDbData, matcher?: RegExp): Generator {\n        if (matcher) {\n            for (let startIndex = 0, entryIndex = 0; startIndex < dataSource.name.length; entryIndex++) {\n                const endIndex = dataSource.name.indexOf(\"|\", startIndex + 1) + 1 || dataSource.name.length;\n                const targetName = dataSource.name.substring(startIndex, endIndex - 1);\n                if (matcher.test(targetName)) {\n                    yield entryIndex;\n                }\n                // Moving to next entry to check\n                startIndex = endIndex;\n            }\n        } else {\n            const dsLength = dataSource.belfioreCode.length / 3;\n            for (let index = 0; index < dsLength; index++) {\n                yield index;\n            }\n        }\n        return -1;\n    }\n\n    private scanData(name?: string | RegExp): IGeneratorWrapper<BelfiorePlace, null, void> {\n      return generatorWrapper(this.scanDataGenerator(name));\n    }\n    private* scanDataGenerator(name?: string | RegExp): Generator {\n        const nameMatcher = typeof name === \"string\" ? new RegExp(name, \"i\") : name;\n\n        for (const sourceData of this.data) {\n            const dataSourceScan = this.scanDataSourceIndex(sourceData, nameMatcher);\n            for (let dss = dataSourceScan.next(); !dss.done; dss = dataSourceScan.next()) {\n                const index = dss.value as number;\n                const parsedPlace: BelfiorePlace | null = this.locationByIndex(sourceData, index);\n                if (parsedPlace) {\n                    yield parsedPlace;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Retrieve location for the given index in the given subset\n     * @param resourceData concatenation of names\n     * @param index target name index\n     * @returns location\n     */\n    private locationByIndex(\n        resourceData: IBelfioreDbData,\n        index: number,\n    ): BelfiorePlace | null {\n        const belfioreIndex = index * 3;\n        if (resourceData.belfioreCode.length - belfioreIndex < 3) {\n            return null;\n        }\n        const belFioreInt = parseInt(resourceData.belfioreCode.substr(belfioreIndex, 3), 32);\n        const belfioreCode = BelfioreConnector.belfioreFromInt(belFioreInt);\n        const code = resourceData.provinceOrCountry.substr(index * 2, 2);\n        if (\n            this.province && this.province !== code ||\n            this.codeMatcher && !this.codeMatcher.test(belfioreCode)\n        ) {\n            return null;\n        }\n\n        const dateIndex = index * 4;\n        const creationDate = BelfioreConnector.decodeDate((resourceData.creationDate || \"\")\n            .substr(dateIndex, 4) || \"0\").startOf(\"day\");\n        const expirationDate = BelfioreConnector.decodeDate((resourceData.expirationDate || \"\")\n            .substr(dateIndex, 4) || \"2qn13\").endOf(\"day\");\n        if (\n            (this.fromDate && resourceData.expirationDate && this.fromDate.isAfter(expirationDate, \"day\")) ||\n            (this.toDate && resourceData.creationDate && this.toDate.isBefore(creationDate, \"day\"))\n        ) {\n            return null;\n        }\n        const name = BelfioreConnector.nameByIndex(resourceData.name, index);\n        const licenseIndex = parseInt(resourceData.dataSource, 32)\n            .toString(2).padStart(resourceData.belfioreCode.length * 2 / 3, \"0\")\n            .substr(index * 2, 2);\n        const dataSource = this.licenses[parseInt(licenseIndex, 2)];\n\n        const location: IBelfioreCommonPlace = {\n            belfioreCode,\n            creationDate: creationDate.toDate(),\n            dataSource,\n            expirationDate: expirationDate.toDate(),\n            name,\n        };\n        const isCountry = belfioreCode[0] === \"Z\";\n        if (isCountry) {\n            return {\n                ...location,\n                iso3166: code,\n            } as IBelfioreCountry;\n        }\n        return {\n            ...location,\n            province: code,\n        } as IBelfioreCity;\n    }\n\n    private parseProvinces(): string[] {\n        const provinceList = new Set<string>();\n        for (const sourceData of this.data) {\n            const dataSourceScan = this.scanDataSourceIndex(sourceData);\n            for (let dss = dataSourceScan.next(); !dss.done; dss = dataSourceScan.next()) {\n                const index = dss.value as number;\n                const province = sourceData.provinceOrCountry.substr(index * 2, 2);\n                if (!provinceList.has(province)) {\n                    const belFioreInt = parseInt(sourceData.belfioreCode.substr(index * 3, 3), 32);\n                    const belfioreCode = BelfioreConnector.belfioreFromInt(belFioreInt);\n                    if (BelfioreConnector.CITY_CODE_MATCHER.test(belfioreCode)) {\n                        if (province.trim()) {\n                            provinceList.add(province);\n                        }\n                    }\n                }\n            }\n        }\n        return Array.from(provinceList);\n    }\n}\n","import CITIES_COUNTRIES from \"../../asset/cities-countries\";\nimport BelfioreConnector from \"./classes/belfiore-connector.class\";\nimport BelfioreConnectorConfig from \"./types/belfiore-connector-config.type\";\nimport BelfiorePlace from \"./types/belfiore-place.type\";\n\nexport const Belfiore = new BelfioreConnector(CITIES_COUNTRIES as BelfioreConnectorConfig);\nexport {\n    BelfioreConnector,\n};\nexport type {\n    BelfiorePlace,\n};\n","const CITIES_COUNTRIES = {\n    \"data\": [\n        {\n            \"belfioreCode\": \"oghognoguohfoi5ol2\",\n            \"dataSource\": \"1al\",\n            \"expirationDate\": \"1f2k1ebp1j051en61k2d1ebp\",\n            \"name\": \"Cecoslovacchia|Repubblica Democratica Tedesca|Repubblica Socialista Federale di Jugoslavia|Unione Sovietica|Serbia e Montenegro|Yemen del Sud\",\n            \"provinceOrCountry\": \"  DDYUSU  YD\"\n        },\n        {\n            \"belfioreCode\": \"ogcogdogeogfoggogiogjogkoglogmogoogpogqogrogsogtogvoh0oh1oh2oh3oh5oh6oh7oh8oh9ohaohbohcohdoheohiohjohkohoohpohqohsohtohuoi1oi2oi3oi4oi6oi7oi8oi9ojgojjojkojlojmojnojoojpojqojrojtojuojvok0ok1ok3ok4ok6ok7ok8ok9okaokbokcokdokgokhokiokjokkoklokookpokqokrokuokvol0ol1ol3ol4ol5ol6ol7ol8ol9olaolbomkomlommompomqomromsomtomuomvon0on1on2on3on4on5on6on7on8on9onaondoneonfongonhonionjonkonlonmonnonoonponqonronsontonuonvoo0oo1oo3oo4oo5oo7oo8oo9ooaooboodooeoofoohoooopooppopqopropsostosuosvot0ot1ot2ot3ot5ot6ot7ot8otaotbotcotfotiotkotlotmotnotootpotqotrotsottp00p01p02p03p04p05p06p08p09p0ap0bp0cp0dp0ep34p37p38p3fp3hp3kp3np3qp3rp3sp3up40p41p42p43p44p45p46p47p9j\",\n            \"dataSource\": \"1alalal\",\n            \"name\": \"Albania|Andorra|Austria|Belgio|Bulgaria|Stato della Città del Vaticano|Danimarca|Isole Fær Øer|Finlandia|Francia|Germania|Gibilterra|Regno Unito|Grecia|Irlanda|Islanda|Liechtenstein|Lussemburgo|Malta|Isola di Man|Monaco|Norvegia|Paesi Bassi|Polonia|Portogallo|Romania|San Marino|Spagna|Svezia|Svizzera|Ungheria|Ucraina|Bielorussia|Moldova|Estonia|Lettonia|Lituania|Macedonia del Nord|Croazia|Slovenia|Bosnia-Erzegovina|Federazione russa|Slovacchia|Repubblica ceca|Serbia|Montenegro|Kosovo|Palestina|Afghanistan|Arabia Saudita|Bahrein|Bhutan|Myanmar/Birmania|Brunei Darussalam|Cambogia|Sri Lanka|Cina|Cipro|Corea del Sud|Corea del Nord|Emirati Arabi Uniti|Filippine|Taiwan|Giappone|Giordania|India|Indonesia|Iran|Iraq|Israele|Kuwait|Laos|Libano|Maldive|Mongolia|Nepal|Oman|Pakistan|Qatar|Siria|Thailandia|Timor Leste|Turchia|Yemen|Malaysia|Singapore|Bangladesh|Vietnam|Armenia|Azerbaigian|Georgia|Kazakhstan|Kirghizistan|Tagikistan|Turkmenistan|Uzbekistan|Namibia|Algeria|Angola|Burundi|Camerun|Capo Verde|Repubblica Centrafricana|Ciad|Comore|Congo|Repubblica Democratica del Congo|Costa d'Avorio|Benin|Etiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Guinea equatoriale|Kenya|Liberia|Libia|Madagascar|Malawi|Mali|Marocco|Mauritania|Maurizio|Mozambico|Niger|Nigeria|Egitto|Zimbabwe|Ruanda|Sahara occidentale|Sant'Elena|Sao Tomé e Principe|Seychelles|Senegal|Sierra Leone|Somalia|Sudafrica|Sudan|Eswatini|Togo|Tunisia|Uganda|Burkina Faso|Zambia|Tanzania|Botswana|Lesotho|Gibuti|Eritrea|Bermuda|Canada|Groenlandia|Saint Pierre e Miquelon|Stati Uniti d'America|Aruba|Bahamas|Costa Rica|Cuba|Repubblica Dominicana|El Salvador|Giamaica|Guatemala|Haiti|Honduras|Belize|Messico|Nicaragua|Panama|Isole Turks e Caicos|Barbados|Grenada|Isole Vergini britanniche|Dominica|Santa Lucia|Saint Vincent e Grenadine|Anguilla|Isole Cayman|Montserrat|Antigua e Barbuda|Saint Kitts e Nevis|Argentina|Bolivia|Brasile|Cile|Colombia|Ecuador|Guyana|Suriname|Isole Falkland (Malvine)|Paraguay|Perù|Trinidad e Tobago|Uruguay|Venezuela|Australia|Isole Cook (NZ)|Figi|Isole Marshall|Nauru|Nuova Caledonia|Nuova Zelanda|Isole Pitcairn|Polinesia francese|Isole Salomone|Samoa|Tonga|Wallis e Futuna|Papua Nuova Guinea|Kiribati|Tuvalu|Vanuatu|Palau|Stati Federati di Micronesia|Sud Sudan\",\n            \"provinceOrCountry\": \"ALADATBEBGVADKFOFIFRDEGIUKGRIEISLILUMTIMMCNONLPLPTROSMESSECHHUUABYMDEELVLTMKHRSIBARUSKCZRSME  PSAFSABHBTMMBNKHLKCNCYKRKPAEPHTWJPJOINIDIRIQILKWLALBMVMNNPOMPKQASYTHTLTRYEMYSGBDVNAMAZGEKZKGTJTMUZNADZAOBICMCVCFTDKMCGCDCIBJETGAGMGHGNGWGQKELRLYMGMWMLMAMRMUMZNENGEGZWRWEHSHSTSCSNSLSOZASDSZTGTNUGBFZMTZBWLSDJERBMCAGLPMUSAWBSCRCUDOSVJMGTHTHNBZMXNIPATCBBGDVGDMLCVCAIKYMSAGKNARBOBRCLCOECGYSRFKPYPETTUYVEAUCKFJMHNRNCNZPNPFSBWSTOWFPGKITVVUPWFMSS\"\n        },\n        {\n            \"belfioreCode\": \"00200300900b00c00l00v01401a01e01v02202e02f02m02q02v03303803i04504c04e04g04k04n04o05805905a06706h06j06k06l06r07n07o07q08408k08l08n09109a09j09n09s0a20ab0ag0am0at0b10b40bc0bq0bt0cb0ck0cm0co0cq0cr0d00d10d40da0dc0dq0e20e80e90el0f30fd0fi0fk0fo0fp0fu0g10gc0gv0h10h40hc0he0hf0hj0i60i70i90ij0ik0im0iq0j00jg0jj0jp0jv0k10k20k40k80k90ke0kj0l30l70l80la0ld0lg0ll0ln0m70mb0mj0mk0mm0mn0n80nh0ni0nm0nv0om0ot0p30p60p70p80pm0po0ps0q10q60q70q80qq0qu0r10r20r30r40r50r70r90ro0rq0s30s40s50sb0sc0sj0sl0sr0ss0su0sv0t00t50t70t80tf0tn0u60u70u90uk0up0v20v50vc0vj0vl0vu10310f10l10n10s10t11311411911a11g11i11m12112412512712812f12k12p13213513713d13f13g13j13k13q13s13v14314b14c14g14m14p15115215515615m15o15q15r16616816a16p16s16t17417517917c17f17p17t18318a18b18i18s19419619819919d19m19r19s19u19v1a01a31a41a91af1as1at1ba1bp1bv1c61cd1ce1cu1d91de1dg1di1dj1e61e71e81ef1eg1eh1en1ev1f41fd1fe1fj1g91gb1go1h01h31h71hf1hh1hs1hv1i01i11ib1ie1im1ip1j61jk1jm1jp1k11k41k91l41l61lh1li1lp1m01m91mb1mj1mm1mn1mp1mt1n11n41na1nd1nf1nq1o11o81oe1oj1om1ot1p71p91pa1pj1ps1pv1q71qi1qs1rk1rl1s61sm1tc1ti1tl1tn1to1tv1u81ub1uh1ul1v01vd1vr20d20k20n20t21721j22022c22j22k22q22s23023223723j23k23o23r24324424624f24g24h24k25u26926g26o27527927n27r28128m28t29e29j29m29q29u29v2a62ab2an2at2b12b22bg2bn2bp2br2bv2c22cd2ci2ck2cm2cn2cu2d02d12d32d92db2dr2en2eq2eu2f72fi2g22gc2gf2gj2gq2gu2h02h52h92ha2hb2hf2hj2hp2hu2i22ic2in2ja2jb2jf2jq2jv2k02k22k42k62ki2l02l12lb2le2lh2ls2m12m22m92ma2n22n42ne2nf2nl2np2o62o92ob2oc2oe2of2og2oh2oi2ol2oo2oq2pd2pp2pq2q12q92qb2qc2qg2qi2qq2qr2r12r32r42r92rb2rc2rk2ru2s02s12s52s92sh2sl2sm2sn2sq2td2ti2tl2tq2tt2u92uh2un2uo2uv2v72vd2vj2vn2vr2vt30130230830b30c30i30j30p30q31031c31l31q31v32232432a32c32g32h32j32l32m32o32r32s32v33133533633833e33f33n33q34634c34d34f34k34o34p35335935a35g35h35i35k35m35u35v36a36c36i36j36l36o36u36v37537637a37b37c37h37o37q37u38738838938c38e38f38l38v39239339839939a39f39i39m39r39t3a13a43a53a83ac3ad3ah3al3ap3aq3b13b33b83bb3bd3be3bf3bm3bo3bp3c43ca3cm3cn3cp3ct3da3di3dr3ds3dt3dv3e13e53e93ef3eg3f63fb3fk3ft3fv3g03ge3gh3gi3gj3gp3gq3h03h23h43h93hb3hf3hg3hh3hq3i03i93ib3ig3il3ji3jj3k13k43k93ka3kb3kc3ke3kh3kr3kv3l33ls3m23m33mg3mj3mo3mu3n13n83nc3nn3np3nt3nu3o03o63oh3oq3p53p83pf3q43qc3qf3qi3r13r33r53re3ri3s53sh3si3sl3sn3t23ti3u03u33ua3uj3ur3v93vb3vc3vd3vg3vv40340940e40g40l40n40p41141741a41c41m41n42242642e42f42g42l42n42q42u43643j43q43s43u44144n45145645c45j45k45l45m45n45u46546846a46e46f46k46o46r46s46u46v47247447b47o47r48348748948q49149f49k49o49r4a24ab4ao4aq4as4au4b14b44b74bc4bd4bk4bt4bu4cf4cj4cl4cn4cs4d44d94dd4dh4dl4dm4e14e84ec4en4eo4es4f14f44f64f94fa4fm4fp4fr4fs4g14g64g84gb4gk4gn4gq4gs4gt4h14h24h34hd4hh4hi4hn4hr4i04i44ie4ig4io4ip4ir4it4iu4iv4j64j84jd4jg4jh4jl4jn4jo4js4k34k44k54k84kj4kq4kt4ku4l04l64l74l84ld4lo4ls4lt4m24mn4mo4mq4mr4ms4mv4n04ne4nh4np4nt4o34o74oq4ov4p24pd4ph4pk4pu4q74q94qe4qf4qk4qm4r44r64rp4sg4sm4sq4sr4t24t74tc4tf4tg4tp4u04u14u44u64ud4uf4ug4uj4uk4ul4un4v34v64vf50150450850n50u51751851c51h51m51p51t52152b52e52f52k52r52s52v53653b53j53l54454554754g54p55255555655955b55c55g55i55k55m55n55q56256j56m56r56t57557657957i58k58q58u59459h59n59s59u5aj5aq5au5b05b45bd5c15cl5dj5e95eg5ek5ep5ff5fh5g15g35g95gd5gf5gh5gi5gk5gr5gv5he5hj5hr5ht5hu5i35i45i65ii5in5jd5je5jp5jr5jt5jv5k35k85k95ku5l05l25lb5lc5lf5lk5lr5lt5lv5m15m35ma5md5mq5mt5mu5mv5n45nd5nh5nj5nn5nt5o05o85o95oh5ol5ov5p85pg5pp5pq5q15q25qh5qj5ql5r05ru5s15s85sb5sd5sh5sj5t35t45t55t75t95tc5tj5tl5to5tp5tt5u55u95uc5ue5uj5uk5uq5v05vf5vk5vq60u60v61061161461662662862b62d62n62s63663g63t64764t65665965a65i65p65s66566766966k66l67167567767m67s67v68068168968e68m68p68r69869g69j69s6a06a46a66a86aq6b76c56c86c96cb6cg6ck6cm6co6cq6d26d36d76d96dd6di6dl6do6dp6dq6e36e76ep6f96fd6fe6fg6fh6fk6fu6gb6gc6gj6gl6h16h76hc6hd6hi6hk6hl6hn6hq6hr6i36ia6ib6ic6ii6ij6io6ip6is6iu6j36j76jq6jt6jv6kq6l36l86lc6lg6lp6lt6mf6ms6n06nl6ns6nv6o36o66og6oi6ot6p26p46p66pc6pn6q76q86qd6qk6qr6r06r16r46r86rf6rg6rh6rr6rv6s46s76s96sa6sd6se6sh6si6sk6so6sp6sq6sr6t76t86ta6tc6tk6tl6tr6tv6u16u76u86ub6uj6uk6ul6ut6uv6v36v66v96vd6vj6vm6vq6vs6vv70170270370470a70b70d70m70n70p70t71171871h71v72072272772972g72h72j72s72t73e73f73j73q73r73s73v74074174974a74l74q75175475b75h75l75n75o75u76076l76s77577n77r78679179879f79k79q79v7a87ag7am7ap7ar7bn7bp7bs7bu7bv7c57cb7cj7co7cr7cu7d27d37dc7dd7dg7dj7dl7dt7e07e37e87ea7ek7el7em7eo7f07f17f37f57f87fc7ff7fg7fk7g07g57gc7gh7gi7gp7gt7gv7h67h97ha7hg7hp7hs7ht7hu7i37i47i67i77ii7j07k97km7ko7kt7l97le7ln7lo7lq7lt7lv7m27m77me7mu7n17n47n57n77nb7nl7ns7nu7oa7ob7oc7oe7oi7ou7p07p47pc7pr7pu7q17q67q97qa7qd7qk7ql7qm7r17r67r77r97rc7rf7s07s47s57s67sa7se7sh7sj7sl7sn7sr7su7t47t57t87ta7tg7tv7u67uv7v17v77vk7vq80380880c80h80j80q80u80v81281381581b81f81h81l81m81q81s82182d82e82g82t83983b83f83p84e84i84k84n84p84t85385685h85q85r85v86186286386b86e86m87387b87o87u88288888a88b88q89189889b89f89k89m89p89t8a18a28a38a48a58a68ac8ad8ag8au8b38b68b88bd8bg8bo8bs8bu8bv8c38c78c88cb8ck8d88d98db8dc8df8du8ea8ei8ep8eu8f08f28f88fm8g68g98gf8gi8gr8gt8h18h48ha8ho8hq8hr8hs8hu8i08i18i28i48i58i88ig8io8ir8j78jb8je8jg8ji8k18k28k38k48k58ka8kd8ke8kr8l68li8lj8lp8m18m28m48mh8mj8mo8n38n58nc8ng8no8nu8o18o78ob8oc8oj8on8or8os8otantao4aodaokaolaopap1ap3ap4ap5apbapcapdapeapkapraq0aq4aq5aq7aq8aqjaqkaqnaqqaqraqtar3ar6araarfaroarqartarvas1as5ascasnaspasqasrat2at3atbatsatuau1au8au9av0av2av4avhavsavtb00b0bb0jb0ob0pb1fb1hb1mb1ob21b2ab2db2fb2gb2mb2nb2qb30b38b3ab3bb3db3eb3fb3gb3lb3pb3rb3ub3vb42b43b4db4pb4ub5cb5jb60b61b69b6bb6kb6pb6ub73b75b7gb7ub80b8ab8eb8nb8sb8tb8ub91b97b98ba1ba3baibambaobaqbavbb2bb5bb6bbebbgbbjbbkbblbbtbbubc0bc1bc2bc4bc9bcbbcdbcebcfbcqbcvbd3bd8bdcbdebdfbdhbdlbdpbe2be5be6be9bekbfabfbbfcbfdbffbfgbfhbfjbfnbfobfqbg6bgabgdbgebgfbghbgibgkbgmbgobh5bhabhdbhebhgbhhbhobhvbi9bifbinbiobiubivbj3bjcbjjbjlbjnbjobjvbk6bk7bkabkebkhbklbknbkqbksbkvbl5bljblobmpbn6bnabnkbnobntbo1bo2bo3bo4bo5bo6bo7bo8boebofbohbombotbp0bp2bp4bpabpbbpcbpkbpnbq3bqbbqgbqibqlbr0br1br6br7brebrkbrlbrnbrqbrtbs0bs4bsebslbsqbsvbt0bt1bt3bt6btebuuc0bc0gc0hc0j\",\n            \"creationDate\": \"00of01520pa1002b0quf0lad002b002b002b002b08dr002b002b002b002b0lad0lcu0lcu0152002b0o1500pi002b002b0lcu0lad002b002b002b0lcu002b0lad002b002b0lad002b002b002b00qa0lad0lad002b002b002b0lcu0lad0lcu002b002b002b0lcu0rpq002b002b002b002b002b002b04fq0o52002b002b0i0d0i0d002b0lad0lad0nuc002b0rd3002b02340a0e002b0o1b002b0lcu0lcu002b0lcu002b0234002b002b02tq03ii002b07qb0nrq002b002b002b0o8i002b002b06e5002b0lad0lcu02340bd9002b002b002b002b002b002b002b002b002b002b002b002b02gh002b0lad002b002b0lcu002b002b002b002b002b002b0mfe023400nj0lcu0lcu00mn0h4h002b0lad0oao0lp7002b002b0nvv0lad0lad002b06ub002b02340lcu0lcu002b002b002b002b0lcu002b0o280lad02lu002b002b002b0nuc0lcu002b002b002b0lad0lad002b0lad067c002b0lad002b002b002b00nj0lad002b03th029t02bl002b002b0o2b0lcu002b002b0ihi02340lad002b00of002b0lad0caj002b002b023407kl002b0lad0nv9002b0lcu002b002b0lad002b002b002b00of017l023402340lcu0lcu002b00md00of0lad0q1v002b002b002b002b002b002b002b002b0nvj002b0lcu0lcu002b002b002b0lcu002b02340lad002b02ap002b01bu002b002b0lo602s5002b0guo060b02n6002b0234002b0lad002b07ko002b002b002b002b0lad0lcu002b002b002b0b8501pf109000mu002b002b002b002b002b0lad00qn0ben002b00of00mn00qa00mu0lad002b0lcu067u0lcu0o6g002b0lcu002b002b002b002b0lad0lcu00nc002b002b002b002b002b002b0nvh0lcu002b0lcu0nsh0a360lcu002b00l600mn00nc029t002b0lad002b002b002b002b002b002b002b002b002b0lcu002b002b02fs002b0472002b02340234002b0ocb002b0o7i00md0o15002b002b014d00of0lad002b002b00of002b01bu0lad002b00mn002b002b002b0lad0lad03ii002b0lad002b0o0q002b0lcu002b00sr0lad002b002b0234002b002b03oq002b0o3m00mn034j0lad00md002b002b0o0q0lcu002b002b00o800l600o800o800sr00mn02r9002b04jd02570lad002b00mn0nsl002b002b0lcu002b0lad002b0lcu00tn0lcu0lad002b013j0lad01og0lad0nrn0ocd002b0lad002b0lad0nt7002b002b0lcu0o1400qa00sr002b027k0nr0057i002b0nrq0lad0o1s002b0lcu002b00nu002b0lcu03dc073m0lad00mn02340lad0lad0lad002b002b002b002b0nse0lad002b0lcu002b023402340lad0lcu002b002b0o14002b002b0n2r04gb0lad0lcu002b0lad0lad002b02r902ut002b002b0lad07l30lad03vn06910lad002b002b0lad002b0lad0lad00sr002b002b0lad002b0lad0lad0lcu002b002b002b023410mr002b02340lad002b002b002b04c2002b002b0lad014d0lcu00nu002b06tb0lcu0lad0234002b0b850lad002b002b002b00jl002b0lad0lad0lcu0lcu00of002b002b00l60lad0lad002b002b0lcu02lu002b002b002b0lcu002b02en002b0er7002b0lad002b00mn002b002b0234002b0234002b00o80lad002b0lad0nq6002b002b0ntf002b002b002b0lad0lad0lad0lad002b002b0lad0lad0lad0lcu00sr002b0nub002b002b0lcu0lad002b0sfs0nov002b0lcu0lcu0lcu002b0lad0234002b00js00js0lad002b0lp7002b0lcu002b02fs002b02fs0lcu002b0lcu0ctn0lad002b0lcu002b002b0lad0lad0gbf002b0m4q0lcu002b002b002b002b002b002b00of002b002b002b0lad002b002b0lcu002b023404k90lad002b0lad0nqq02c30234002b002b0obk0lcu0lad0nu90133002b05qt002b031t002b002b09st0lad002b0mh5002b0lcu0lad002b0lad002b0lad002b002b002b0lcu00mn014d0h4h08d90n7s002b0lad04ch0234002b002b080e002b002b0o3q002b0lad002b002b002b0o52017l0lad0lcu002b0lcu0lcu01pf002b0o1r002b002b04jd01kl002b0lad002b0lcu0603002b002b002b002b002b002b002b00of002b002b0s5h0lcu002b0lcu002b002b0lcu002b002b002b002b0lcu014d002b002b002b002b0lcu0lcu00mn002b0234002b0lad002b00of0o2b0lad002b02ap0lad0lcu002b002b002b03ii002b002b0lad0lad0ntf0lad002b002b002b0lad0lcu0lcu0lcu002b002b00q006em002b002b002b002b002b002b002b0lcu02340ntm0lad002b0o690lcu002b002b0lad0b4o0lad0lcu02340lcu0o01002b0oc20o4i00mn002b0lad0lad002b0lcu0lad002b0lad0lcu002b002b0lad002b0lo60lad002b002b0b790lad0lad0nvv002b06qf002b002b0lcu08ul002b0o1r002b0234002b002b002b002b002b0lad002b002b0lad002b002b002b00sr0lcu0lcu0lad0lad002b0nvj0lad002b02340lad002b002b0lcu002b002b00of00mn0lad002b002b002b0lcu002b002b002b00qn0lcu002b0lgg002b0lad002b02340lcu0lcu0lad002b002b002b002b002b0lad0o3802sg002b002b0lad0lad02340lad0lad0lcu0lcu0lad0lad002b002b002b0lad0lad0lad002b0lad02340lad002b0lcu0lad0lad00sr002b002b00qa00ht0lad002b0307002b002b0234002b05mg0lad0lad0lcu0lcu0lad00kv002b002b002b0lad0lad0lcu02340234002b002b0o2t002b002b0lcu02340lad002b0eke002b0nth002b0lad002b086114ip002b0lad002b002b002b0lad1374080e0234002b002b0lad002b002b002b0lad002b0lad0o200lad002b00nj043m03oq0a5m00sr00mu002b0nvv0lad002b002b002b0lad0lad002b013q002b00sr0lad0lad0lad002b045k0lad0ocs002b0lcu0lad002b00l30lcu002b0lad002b0lad0lad002b0lcu00if002b0lu40lcu002b0lcu002b002b002b0lcu02bs002b002b002b002b002b002b002b002b002b002b0lad0lad002b0lcu0234002b002b002b002b0lad02sg0234002b002b0lcu002b002b02s90lcu0lad002b0lad002b0lad02340mg6002b002b0s51002b002b002b002b0lad002b0lad0lad0lad0lad0234002b00of002b002b002b002b002b002b002b0nmg002b00nj002b002b0lad0lcu002b014d052j002b0lad002b00lo0lcu002b002b002b002b002b00of0nof0lad0lcu00qa002b002b0lcu0lcu0lcu002b002b0lad002b06cj02en002b002b002b002b0ock06ub0o0i0lcu0lad002b002b002b0lcu02bs002b002b02c3002b00of0lad002b00o8002b002b002b0ob90lad04tm002b0234002b002b03cc032h002b0lad02fs0lad0lcu00sr00of002b002b002b002b002b002b0o9n002b00qa002b002b00sr0lad002b023400of002b002b002b002b0lcu002b029t002b023402vn0nuo0lad049i0lad002b0lcu00of0ni3002b0lcu002b002b002b0lcu002b002b002b002b0lad0lcu0lad0lcu0lcu0lcu002b0lcu002b002b057i0lcu002b02sg0r170nsh002b00mn0lcu0a4q002b002b002b0lad002b002b0in10lcu002b002b002b0lcu0lcu0lad0lad00l3002b002b0lad0lad0lad0lad002b0oaa0lad002b0lad0lad002b0lad0lad002b002b0lad002b002b0lcu0lad002b0oao0lcu002b0nrg0lad002b002b002b02340234002b002b002b0nuo002b002b002b07tr02340lad02bs002b002b02bs002b0234002b002b0lad01or0lad0234002b0nub00of0lcu002b0lad0lad0lad0lcu01330lad002b002b002b002b0ob8002b0lad02340lad00mu002b0o0q002b0lad0lcu002b002b002b0lad002b07kh07kh0lad052j002b00mn0lad03450nuo002b0nvj0234002b0h4h00mn002b0nr5002b03ii002b002b002b023403070lcu014d00qn0lad00mn0lcu0lad0lad0lad002b0lcu0lad002b002b002b0o37002b002b002b002b002b002b002b002b0lad002b0oc90lcu0lcu002b002b002b002b002b002b0137002b0lcu02tj0lcu0arc0lcu002b00of002b0lcu002b002b0234017l026o0o0q002b002b02340lcu0lcu002b002b0o38002b0lad0o37014d052j0lcu002b00nj0lad002b002b02bs00sr0lad0lad0lcu0nvj0lad002b0lad002b002b002b05so002b002b00qa017l00l600lo03cc0lad01v20lad002b0lad00q0046400nj0lad0np902n30lad0lcu0obh002b02bs00o800md04as02bs0lcu0234002b01pm002b00o800qa0lcu002b00pt002b0lad0lcu002b0lcu0234002b002b002b00pi00qa0lad002b002b0lcu00jl00mn002b06ub002b00pi0nhk0lcu0lad02bs013j0lad052j002b0o7g002b0234002b0o3m00of0lcu00mn0lad002b00sr00lo02ap0nvj0qhf002b00qa002b0adp0nnv0lcu00sr002b0lad0lad002b002b0lcu00nu002b00q00lcu0lad0lad002b00of002b00l60lad002b002b002b0lad00md002b002b00tn002b002b0o37002b002b0lad002b0lad0lcu002b002b0lcu0lcu002b0lcu0lcu002b0lcu002b002b0lad0lad002b0lcu002b00qa0lcu0lad002b0o50002b0lcu002b00o80lad04260lad0lcu002b002b0lad002b0v0c02h8002b0lp7002b002b0lcu0lad002b0298002b002b0lcu0lad0lcu0lad0lcu002b002b002b002b002b002b002b002b002b0lcu0lad002b002b002b002b002b002b002b002b002b002b0lad002b002b0lad00sr002b002b002b002b0lad0o01002b0lad0lcu0lad0o1s0lad0lad002b002b0lad0lcu002b0lad0lad0nti002b0lad0lad002b0lcu002b0lad02340lcu0lad0lad0bd902ut0lad002b0lad002b0lad0lcu002b0lad002b02340lad0lad0lad0lcu0lcu002b002b002b0lad002b0lad002b0nub0lad0lad002b002b0lad0lcu0lcu0lad002b002b0lad002b002b002b03mr002b002b002b002b002b0472002b0lad002b002b0lad002b002b002b002b00pi002b029801pn002b0o9a002b02s90lad002b0lcu02sg0lad0g4u140j002b0234002b002b0lcu0234002b002b0lad0lad0lad002b014d0lcu002b0lcu002b002b002b0lcu002b08c90lad00mu002b0lad0lp70lad0ocn002b0lad0lcu002b0lad02340lad0lad0lad002b023400l6002b002b0o5e002b02340nqr002b0234002b0234002b0lad0lad0lad002b002b002b002b02340lad002b0lad002b0o3h002b0820002b002b0o5203uv0fpn0fpn0lad002b00of00qa002b002b002b002b0lcu00q00lcu0lad002b0lcu0lcu0lcu002b0lad002b0lad0lad002b002b02fs0lad002b0bnq002b0lad002b01pm02s9002b0lad0lad0lad0lad0lad0lad0lad0lad0lcu02ap002b002b0o2t002b0lcu0ns60lad002b002b002b0lad002b0lad0lcu002b002b0lcu0nuu0lad0lad0lcu002b002b002b002b002b002b002b0lad0lcu00md0lcu0lcu002b00nu002b0lad002b0lcu002b0lcu002b002b0lcu0lcu0lad002b0lcu0o9q02340nvv002b002b002b002b0lcu002b002b002b002b0lad002b0sp11fc81h730nns0o5o\",\n            \"dataSource\": \"8\",\n            \"expirationDate\": \"0nuo0o7a0utk0o201nki0o9b1nki0nsm1ofi0mfc0mci0o5o0o1r0o4f0nva0nuo0nuu0utk0o110nr10ucp0o1d0tet0o7i0nqf0o4i0o500nm90o2a0utk1obc0oca1nvv0o1d0o5e0nvj0nm60nm60o1r1n940ntf0o840och0o0r0o0q0o5p0utk0o1e0o3i0n700pa10uc40ntb0o4f0o3q0o7i0nt70o4f0o5e0ul80npg0nkr0nrq0nst0o3h0o9v0o4f0ulp0nst0utk0nup1mtn0oaf0o770udp1obc0nm10o4i0nub0nuu0o750nin0nt70ntj0mci0o110o1s1n941mia0npg0nt80oa111kj0np70np70nst0o6916co0utk1o1e1obc1nki0nse0nsf0o390o8r0o8r0nrg067c0n4s0nsh0ntu0o1s0o290o1d16b00o9a1mjc0o3q0ocs0n701mia0o0i1mjc0rme0o8h0o5o0o710moh0utk0rc81obc0nuu1mtn0urg0och0nu90o5o0uu31l4l0nvk0o3h0o640o371obc0nvv0o0q0nq30nvn0no304c10ns60nsj0uls1l4l0nov0nsj0ni40nt20ul60utk0nst0nst0ntb1n940o4f0nup0o9v0n700nq41n940nu40nss0nrg0nvk0o010pq81mjc1obc0o380re10me00uv60o420nq20nqq0o140nov0o650n700ntb0o671n940o5e0nve0nve0o8g0o7i0o0f0o840v4e0o7d0o4i0tet0o2t1n941nvv0o3p1mjc0o5o0occ0o5o0o8s0o420o0i0ntv0utk0o201n940utk0nj50nss0o530oba0o7l0nse0nnt0oci12e00ntf0utk0o0d0o2c0o0q0nub19et0o1r0mfe0ntg1n940nov0nvk0o390o2a0nm80n1p1obc0nup0o3q0o3h0nrg03jv0nlc0ntf0ned1ocp0o8h0ntq1obc0mff0nve1n940utk0no10nqq0o000nk50ocs12nn0nqe1nvv0npg0oa00o521nvv0o9b0tet0o0q1obc0nst0obb1n940obv0nvj0ocn1kp81oc90o1t0v1j0rko0utk0n6h0ob80o4i1obc0o8s0utk0nr00nnv02fr02fr0qss0o7k0o3q0uc019et0nsj0utk12dn0nub0nog0o1d0me00nse0nva1obc0o380o4f0ntp0ntb0o5o0nnc0o2t0nuo0o5o0o0i0o0q0ntb0nu90nt10o7j1nvv0o9a0o531fsf1fsf0oaf0vqp0nu40udp0q370v1e02l004i00o0i1nvv16co06r50o0j0o1r0rc81noe0sdl0nm70o501nvv0ntf0obv0o8s0o9h0nsl1mia0oan0o290utk1mia0utk04710nhl0o9n1obc0o371mju0omh0ouu0o7d0ocu0v4v0nm90mfc0o4i1mia0o020o1s0qhq0utk0qb90ob90oci0me00o3i0ocv1nvv0o4g0o140o370nnv0nnv0nhm1nvv0nsm1obc1nki0nqq0utk0o0i0o0r0nu40o420nva0moh0o3m0nst0oco0o3m1nvv1n940ocd0ur00ocu0oca0nvv1n940v3p0no00o280utk15mn1obc0nth0oa01oc911o30nhl0oc00uqr0p9i0uij0o7i0utk0o0f0nbk0nth0utk0mci0scc0mff0nj50nd70o4f0o030o9h0nu40o010nuo0o390v0m1n940o690utk0nva0o0e1oc90nup19et0o1d1mjc0uv60tet0nrq0utk0nsj0ntg0nuu0nlr0ned0o3m0o2a0o711mia1h39083e0o7e0nvk0n2h1n940o0e0ocb0nhk0nhl0oap0ntv0ob90nuo0njf0o380nqc0o9h03mr0nvj0o3m0utk0nvj0nrq0o000nov1l4l0o8q1ocu1n940o7c1lhb0o3q1fpe0o0r0o0h1mtn0ntg0utk1o2o1mjc0n700o4i0o1t0o1s0nsf0nk50oan0no91n940o750o370tch0o1t0o0r0nuo0utk0o140scc0o8r0me00o8s0o140nva0o6h0o0g0o380nsi0ocb0mff0utk0mci1oc91mia1mia0nm90nuo0ntf0oa00o270oda0nvo1n940rpu0nva1ocb1n940o7j0mdc0uun0o7i0ntg1obc1nki0o380nue1mtn0o8r1n940o010nm90o1r0o5e0o650o8r0o0q0nu40o7i0uq00me70me70utk1n940o2c0utk0sfs0o4f0o420o420o370nnp1n941fpe0ocp0nr10npb1mtn0nq30o750nm90o0g1mjc1obc0oco0l360o4i0nua0utk0njk0o7j0ob90utk0nvc0o380ntt0o8q0ntf0obv0utk0o0d0nq30nq30nq30ntg0nuo0o5f0o521mia0o0f02tp0o8s0o2t1obc0nm10nsm1nap0nd71n940nu40o290ugc0o0s1nmd0nqf0o7i0ul80utk1n940v3g1mia0o1e0nhl0nhl0nhl0o2c1nki0ob80o650n400utk0nq41o0u1n940nuv0o9h04in0oce0o2c0o390o3p0utk0o4f0o6g1obc0ntg0sdl0ntg0o5e0nss1nap0o5202fs0s0a0o0h0o200vp30qtt0o030nrd10gg0nse0ub90o020oan0o1t0nvn0nuu0o420o110o0q0uft0o9a0nnv0nnv0o7l0nst0ned02s80utk1obc0oca1nvv0nmu0o011n940mfc1lhb0o841mjc0o0h0u820utk0ob80ntb1mjc1mtn0ntf0o3p0o3p0o4f0tch0o420mci0nt10nvn0obv0o0q0o0d0utk0o531n941nm10nq61n941lhb0mci0uec0mr00o3p0nov0nup19et0v4n0nq60o500o120nvc0njf1n940o140u0d0ocv0o530nt70nvc0o290o0g0utk0o420o660gbf1mia0o180o7k0rv31nvv0o1d0nvj0nvj0nrq0p4k0o000uc80o8s02sj0vqp19et0o7i0o4f1ner0gim0o9h0o1202mc0utk0uvr0mci0utk0uns1nki0mfc0o211n941mia0nf91n941nvv0ntg0utk0nth0nvv0ocv0rk40o420nvk0o0q1mjc1ocp0o9g0ntt0v0m1n9410pg0o750o180o0g0oba0o5e12641n941o0u0nsk0q3h0nun0nuo0nvj1n940nsj0o710nnc0nm10o820oa00nss0o370ntf0ntt0o010o0r1l4l0o031kbu1mju0o1t0o7i1mia0o0d0r690o8p0o6g0oc90o650o3i1ocb0o280nhl0o1s0nr01obc0nu90o0g0nss0nss0nss0nvj0oba1ocu0utk0utk0o9o0ntg1mjc0nst0o1d0o380o8s11210o2u0nrq0o1c0o4f0o290o110mdc0mdc0o3i0o4i0o710ntg0o0q0o7j0o0f0o7j0mff0o9g0o1s0ocq0nth0nnc0nvk19et0nvt0o030nog0obb0n6h0od70oa10o7q0nsj1ocu1mia0nr10o3o02u40ff70o5e0ned0utk0utk0ntg0o280no00o0r0o1d0ned0o4i0o0q1o1e1oc90nno1n7v0vpa0nqu0nue0utk0nd70o5e1obc0nrq1obc0uob1mjc0nvk0o391mia1mia02sl0o4i0nno0nrv0ocp0o4i1nki0s0a0ptd0o4f0qtt0o9v0o7k0n700o0q1l4l0nip0o9b0ugc0o8r0o7i0o290o7j0o7j1ocu0nth0nvv0nov0uns1n940nmh0ob30o0q0oan1n941nki1nvv0o3o0o1s0o1c0o0r0o0r0see0rd10oca0uft1n9419et0o9h0ntb1nki0utk0nst0o4i1mia0o4f0o7e06kt0o0r1n940o140o710utk0oc00ntb1mia0o3h1h390utk0nin1mhd1mhd0nub0nr00rrc0oa002t80oa00odd0mfe0o650o7e0m9v0sp11o1e1h730o6h0no90o3q0o7e1nvv0mfe0obv0o3q0o0h0o520nst0mci0nov1n940ntq1obc0o710o9h0o8s0utk0n700s2e0u3k1nvv16fk0o380mci0o9n0o3n0o8s0mff0nnc0oc30o420oco0nm90ob80o520rr20nr10od70ntg0o2c11210ntb0o150me70nnc0o9g0o0i0oc90nt10o1b0me00o7j0nsk0o750utk0ntg1nki0oco0nm10nsi0nm711t10oca0utk0o7i01oq0o110nss0nss0utk0o8s1mjc1n940nsm0o8s1oc90npg0o8p0o6g0o0q0uld0rv30uu30o0r17f30o010nhl1mjc0utk0nlc0oa00o7i0o1t0obb0o140o9g025c0o5k1obc1nvv1noe0uue0o9n0n700nnv0m8l1nki0nnc1muk1nvv0ouu0nc60o7j0o9v0o000nu40nsf0nsl1obc1nki0o9c0o010nuv12931mia0nq20o380me00o0q0o5e0nbk0ob90obu0o0f0nir0jlm0nhl0nhl048e1nvv1nki1nap0o111n941l4l1n940o4f0nsj0utk1mjc0nlr1nvv19et0o0q01of0r820utk046g1h731nki0o3h0ntg0o370o1t0utk0o420ntf0nnv0ntb0me01mia0nu90utk02c61n940uvs12520nrq0o180mmk0n700o520n4s0o500nuo0o2b03dc0rmr0utk0me00nrv0nvd0utk0nm80ned1nvv0ob80n700o520ob91mtn0p9i0o7e1mia0q9k0nvk0l7h0n2g0o650nup0nuu1n940o6g1ofi0o4f1ncm0npg0o011n940o530uob0utk0obb0uma0o7i0o1s0o1s0o3o0o8s1nap0nm90nvv1obc0uu40o2802sj0n701mjc1mi60o650nlc0n700o370nin1n940o0g0nvc0o531n940nhk0nvl0nno0nub1nki0mfc0utk0o8s0o030o5p0o5p0moh0ntq0ned0r7n0njf0ntb0ntb11vb02te0o1t1nvv0o9g0o820o3m0ucp0o0f0nvt0utk0nrd1nvv1nvv0o9h0o751nvv1nvv0o1c0o1c1mia1obc0o9b0n7011dk0nun16uf1mia0ndv1obc0oa00oam120m02fs0o120o1d0nno0o2t0o8s0nrg0nhl0nss0npg0ned0ocb0o0g0o9g0o8s1n940nn60nuu0mff0nnv0nof0o3o0uc81o2o0o7i0nm20nm21muk0o1s0o640obu0n2r0n460uq00utk0utk0o380oco1obc0o390o141nvv0nog0nuc0nuu0o140o0i0ocn0nqf0nrg0ntu0o380nhk0o7o0o5o1o1e0nnv0hfi0utk1nki0o530nvn0ntf0utk0nnv16fk0uls0ntg0o840uc90ntu0o1b0utk1nvv0o2b18ht04in0o021nm10nub0o9o0o840utk0um70nvl1nki0o9o0mfc0n4s0me01nki0n88051o0och0nnv0o7c0m9v0tch0nvo0o291mtn02ll0n7p1nki0o110o0f0o7e123o0o280ocb0utk0ur00ocv0nin0nua0o0q0nqq0nin0utk1oc903db0tch0fs50nua1n940o4i0n700o0i1mia0o9o0nhk0n4s0utk0o9n0obh0o010nth0o3h0n700oan06hh1iko0utk0o710ntu0nqc0oba1nki0od912e10utk0ocb1o1e0ocn0o4f0o1b0nsj112203db0nlc0o2a1iko0nsj0nhl0gic0sha1mia0np30m9v0nov0uu416fk0npb0n700o641nap1mjc0o3q0nu90o010o9h0o1t0nuv0ntp0utk0o0202c60o970utk0nuc0ned0me70nuc0npg0nvk0o9n1obc1mia0o0i0oc30oam1h390obv0o110nof0o0f0uq11mia0nsi0o9h0o7j0nuu0o420nmu0o1e0o0h0nog1mia0nuu0o380nbk0nss0o2c0ocp0o8r0o3h0no00o420o9g1nki0utk0nuu1n9411220rf30o0i1noe0ocv0o4f1nki0o8s0utk0ocv0n700o4i0nog18hn0fs50nr10oc21mtn02ls0nf91n940noo1mia0npb0nu40o0d0ntg0o4i1mtn0moh0nbk0ntu1obc0nua0o7i0nuo0o500ntg0nvc0utk0nfu1obc0o5g0o5g153h1obc0o2b0o650o710od706kt1n940o111noe0ocq0nvc0o390nsm0nvc0o730o7b11b41mia0o7e0nm80nuo0ulb0mss1n940o530n700nvj0o370nqq0o8s0o7b0ur00no11mtn0oca0o0h1kp80o390ntg0o8s0utk0o7e1n941obc0no20ntf0o010o8r0nuo0nvt0utk0utk0nvl0n401mia1n940o4i0o650o0g0ns60o730nt70o281n940o0r0oca0o7i0urg1l4l1l4l0o380nup0ob90utk0utk1n940nvn0o3o0o8r046v0me00o370oaj0o730o290nhl0nvn0o010oaj0o380o7q0o3p0ntu1n941obc0nov0o0f0o0f0o3h0o9g1mia0o281nvv0uu61mjc0mci0o7e1noe0nu91o0u1mtn0o3h1obc0nok16o50rfc0nlr0ntf1oc91obc0nrq0o8r1n940p9i0o9a0kbv0o3i0rfc19et0ock0nse0o0q0o370ocv0o0j0o831obc0obh1n940utk0nvt0qhf0nu40oan0utk1obc0o1t0on60ocq0mfe0nuv0rhs0rpu0o010oa01obc11o20o8q0rp211c81mjc1oc90njf1mtn1obc0oan0oan0o1t0nt70o2t0o5002641mi60o2b0nsk1n940o381mjc0nsj0o9g0oba0nrq13if0fpo1mjc1mjc0o290pq80rcq0o031mia0nu41oci0nub0o0d0obg0o0g0o7e0ocp19et0o7g0ntb1obc1mtn1nvv0o0r1n9403jv0o3n0o0i0o8s0o6h0o3q0q370o8s1n94141q0mci0o4j0o8s0o7q1nvv16b01n941n941n940nuu0nf90nvn0o7o0ntp0uun0nrq19et0utk0o1c0nu90o380o0f1n940ocb0nvl0utk0o010nu91o0u0udc0ned0ob90o010o7c0o7c0nqr0nqs0nnc0nsf0nq20o7i0utk0o0q0utk0utk0ntf0eqa0oco0p9i0o2a0o3o0ntt0pa10nt10n700o0q0o421obc0o1b0utk11vc0nd70v3l1oci0nn01n9402t50utk0oco0o2c0o1s0nrq1n940nnp0utk1g1l1obc10b411ip\",\n            \"name\": \"Abbadia Sopra Adda|Abbadia Alpina|Abbazia|Abbiateguazzone|Abetone|Acereto|Acquacanina|Acqualunga|Acquarica Del Capo|Acquate|Affori|Agaro|Agnellengo|Agnona|Agrano|Agrone|Aiba|Aidussina|Aiello In Calabria|Aizurro|Albanova|Albaretto Valle Di Macra|Albate|Albegno|Alber Di Sesana|Albes|Albese|Albogasio|Albogno|Albona|Alice Superiore|Alliz|Alluvioni Cambio|Alma|Almazzago|Alone|Alzano Maggiore|Alzano Sopra|Alzate Con Linduno|Amblar|Andogno|Andonno|Andorno Cacciorna|Anfurro|Anicova Corada|Anterselva|Antignana|Antronapiana|Anzino|Apparizione|Apriano|Apuania|Ara|Aranco|Arbizzo|Arcellasco|Arcumeggia|Ardena|Bressana|Arienzo San Felice|Arischia|Arixi|Arizzano Inferiore|Arizzano Superiore|Armio|Armo|Arnago|Bondo Breguzzo|Arolo|Arsia|Arto|Arzene|Arzeno Doneglia|Asnago|Atella Di Napoli|Auditore|Auremo Di Sopra|Aurisina|Auzate|Auzza|Avenone|Avesa|Avuglione E Vernone|Bagaggera|Baggio|Bagnaja|Bagnasco Dasti|Porretta Terme|Casciana Terme|Bagno|Baiedo|Baio Dora|Bairo Torre|Ballabio Inferiore|Ballabio Superiore|Ballarate|Balsamo|Banco|Barbana Distria|Barbarano Vicentino|Barberino Val Delsa|Barchi|Barco|Barcone|Bardassano|Bardino Nuovo|Bardino Vecchio|Baresi|Bargano|Barra|Barsizza|Bartesate|Barza|Barzaniga|Barzola|Baselga Di Vezzano|Baselica Bologna|Bastida De Dossi|Battaglia Della Bainsizza|Bauso|Bavari|Bazzano|Beaulard|Bellagio|Bellizzi Irpino|Bellombra|Belluno Veronese|Bel Prato|Berdo San Giovanni|Bergogna|Bernate Rosales|Berra|Bersezio|Bersone|Beseno|Bersezio Del Quarnaro|Bestagno|Beura|Bevilacqua Boschi|Bezzecca|Biacesa|Biegno|Bieno|Biestro|Bigarello|Biglia|Bigliana|Biglio|Binanuova|Bindo|Bisio|Bisterza|Bizzozero|Bleggio|Bleggio Inferiore|Boara Polesine|Bobbiate|Boccolo De Tassi|Bodio|Bogliasco Pieve|Bogliuno|Bognanco Dentro|Bognanco Fuori|Bogno|Bolbeno|Bolentina|Boleto|Bollone|Bolzaneto|Bondione|Bondo|Bondo Petello|Bonzo|Bordogna|Borghetto San Nicolo|Borghetto|Borgio|Borgoforte|Borgofranco Sul Po|Borgonato|Borgo Panigale|Borgo Santagata|Borgounito|Boriano|Bornate|Bornato|Borsano|Borsea|Borzago|Borzoli|Bosco Valtravaglia|Boscomare|Bosentino|Bottarone|Botticino Mattina|Botticino Sera|Bottrighe|Bousson|Bovile|Bozzana|Bracca Di Costa Serina|Branduzzo|Brazzano|Breccia|Breglia|Breguzzo|Breia|Brembate Di Sotto|Brembilla|Brenno Useria|Sombreno|Brentino|Breonio|Brestovizza In Valle|Bretto|Brianzola|Briga Marittima|Brignano Del Curone|Brione|Brioni Maggiore|Brisino|Brissago|Brovello|Brovida|Brozzi|Brozzo|Bruntino|Brusaschetto|Brusasco Cavagnolo|Buccinigo|Bucuie|Budagne|Buggiolo|Bugiallo|Bugnate|Buie Distria|Bulgorello|Burano|Burgusio|Busana|Buso Sarzano|Bussana|Bussolino Gassinese|Buttogno|Campoverde|Caccia|Ca Dandrea|Caddo|Cadegliano|Cadero Con Graglio|Ca De Stefani|Ca De Tedioli|Ca Di David|Cadignano|Cadine|Cadrezzate|Ca Emo|Cagliano|Cagno|Cajello|Cajonvico|Calavino|Cal Di Canale|Calepio|Calino|Calogna|Calolzio|Calvaruso|Calvi San Nazzaro|Camagna Di Torino|Camairago|Camarda|Camasco|Camignone|Caminata|Caminata In Tures|Camnago Volta|Camnago Faloppia|Camo|Campagnano Vedasca|Campello Monti|Campiglia Cervo|Campo Canavese|Campo|Campochiesa|Campolongo Al Torre|Campolongo Sul Brenta|Camporosso In Valcanale|Campospinoso Albaredo|Campovico|Canale Disonzo|Candeasco|Candelara|Canepa|Canevino|Canezza|Canfanaro|Canneto Di Bari|Cannitello|Canova Del Morbasco|Cansero|Cantonale|Capiago|Capiate|Capitello|Capodistria|Capolago|Caporetto|Capriano Azzano|Capriate Dadda|Capriva Nel Carso|Capronno|Caramagna Ligure|Carate Lario|Carbonara Di Bari|Carbonara Di Po|Carcano|Carciato|Carcina|Cardana|Cardezza|Carella Con Mariaga|Careno|Carezzano Superiore|Cargiago|Carida|Carlazzo Valsolda|Camigna|Carobbio|Caronno Corbellaro|Carpaneta Con Dosimo|Carpasio|Carpignago|Carpugnino|Carrara San Giorgio|Carrara Santo Stefano|Cartari E Calderara|Carugo Arosio|Carzago Della Riviera|Casalba|Casale Cremasco|Casaleggio Castellazzo|Casalorzo Geroldi|Casalpoglio|Casanova Lanza|Casasco Dintelvi|Casez|Casirago|Casletto|Caslino Al Piano|Casnate|Casole Bruzio|Casotto|Cassago|Cassano Albese|Cassano Spinola|Cassina Mariaga|Cassine Gandine|Castagne|Castelbello|Castel Cellesi|Castel Colonna|Casteldarne|Castel De Ratti|Castel Dobra|Castelfranco Di Sopra|Castel Iablanizza|Castel Lambro|Castellammare Adriatico|Castellano|Castellar|Castellaro De Giorgi|Castellavazzo|Castellengo|Castelletto Monforte|Castelletto Po|Castelletto Villa|Castelli Cusiani|Castello Valsolda|Castello Sopra Lecco|Castello|Castello Di Serravalle|Castellone Al Volturno|Castellonorato|Castelluccio|Castelnuovo Distria|Castelponzone|Castelruggiero|Castel San Pietro Monferrato|Castelvecchio Di Santa Maria Maggiore|Castelvero Dasti|Castiglione Dasti|Castiglione Dintelvi|Castiglione Dossola|Castione Veronese|Castrezzone|Cataforio|Catona|Cauria|Cavacurta|Cavaglio San Donnino|Cavaglio Spoccia|Cavallasca|Cavandone|Cave Auremiane|Caversaccio|Covelano|Cavona|Ceconico|Ceglie Del Campo|Ceglie|Celentino|Cellina|Cella Di Bobbio|Celledizzo|Cellio|Cembra|Cenate|Cenate Dargon|Cenesi|Cengles|Cenova|Centa San Nicolo|Centrisola|Cepino|Cerchiate|Cernizza Goriziana|Cernusco Montevecchia|Cerreto Castello|Cerro Lago Maggiore|Cervarolo|Lentiai|Cesello Brianza|Cesi|Cesnola|Ceto Cerveno|Ceves|Challant Saint Anselme Et Challant Saint Victor|Champlas Du Col|Cherso|Chiabrano|Chiaiano Ed Uniti|Chianchetelle|Chiapovano|Chiaravalle Milanese|Chiavazza|Chienis|Chignolo Verbano|Chirignago|Chizzola|Ciago|Ciardes|Cignano|Ciliverghe|Cima|Cimamulera|Cimbergo Paspardo|Cimego|Cinisello|Circhina|Cireggio|Ciseriis|Cismon Del Grappa|Issengo|Cittanova Distria|Civello|Civenna|Cividate Malegno|Civiglio|Cizzago|Clana|Clusane Sul Lago|Clusio|Cobbia|Cocquio|Cognola|Cogolo|Coimo|Coiromonte|Colbordolo|Colcavagno|Colciago|Coldrano|Col Di Rodi|Colfosco|Collagna|Segnacco|Colle In Casies|Collescipoli|Collestatte|Colli In Pusteria|Cologna|Cologna Gavazzo|Cologna In Giudicarie|Colognola Del Piano|Colombaro|Col San Giovanni|Colsano|Comairano|Comano|Comasine|Comeno|Comero|Comezzano|Comnago|Concadirame|Concei|Concenedo|Conco|Condino|Conio|Consiglio Di Rumo|Consonno|Contarina|Contra|Corciago|Coredo|Corenno Plinio|Corgnale|Corigliano Calabro|Cornale|Cornigliano Ligure|Corona|Curon|Correzzo|Cortabbio|Corte|Corti In Pusteria|Cortenedolo|Corteolona|Corteranzo|Corticelle Pieve|Cortile San Martino|Corvara In Passiria|Corzes|Cosbana Del Collio|Cossana|Due Cossani|Cossila|Cossirano|Costa Doneglia|Costasavina|Covelo|Crana Gattugno|Cravegna|Creda|Credera|Cremezzano|Cremnago|Crenna|Crenovizza|Crescenzago|Crespano Del Grappa|Crespellano|Crespina|Cressogno|Creto|Crevenna|Crevola Sesia|Croce|Croce Di Mosso|Crocetta|Crosa|Crosara|Crusinallo|Cuccaro Monferrato|Cunevo|Cuquello|Quarazze|Curdomo|Curnasco|Cursolo|Cursolo Orasso|Cutigliano|Cuzzago|Dagnente|Daone|Dardine|Dare|Darzo|Dasio|Degagna|Deggiano|Dercolo|Dermulo|Descla|Desenzano Al Serio|Desertes|Dezzo Di Scalve|Diano Borello|Diano Calderina|Dignano Distria|Dimaro|Dissimo|Divaccia Grotte Del Timavo|Divaccia San Canziano|Doccio|Dole|Dol Grande|Dol Ottelza|Domusnovas Canales|Don|Donada|Donelasco|Donigala Fenughedu|Donigala Siurgus|Dorsino|Dozio|Draguccio|Drano|Dresenza|Drezzo|Drizzona|Drusacco|Duemiglia|Duino|Dusino|Duttogliano|Elena|Elle|Ellera|Elsane|Endenna|Endine|Enguiso|Eores|Erba Incino|Erbanno|Erpelle Cosina|Ersel In Monte|Escovedu|Esino Inferiore|Esino Superiore|Esio|Esmate|Fabiasco|Fabbrica Durini|Fabbriche Di Vallico|Faetto|Fagnano Sul Naviglio|Falesina|Fallascoso|Falmenta|Famie|Farvengo|Farra Dalpago|Favaro Veneto|Faver|Faverzano|Favogna Di Sotto|Favria Oglianico|Feletto Umberto|Felonica|Fenile|Fenils|Fertilia|Fianona|Fiera Di Primiero|Mirabello Comasco|Figline Valdarno|Figu|Finalborgo|Finale Marina|Finale Pia|Finero|Fiordimonte|Fiorenzuola Di Focara|Fisto|Fiumana|Fiume|Fiumenero|Fiumicello|Flavon|Flecchia|Fleres|Foce|Foiana|Folsogno|Fomarco|Fondra|Fontana Del Conte|Foresto Sesia|Foresto Di Susa|Formignana|Fornero|Forni Di Val Dastico|Forno|Forno|Forno Alpi Graje|Forno Di Zoldo|Forotondo|Fossa Guazzona|Fossarmato|Fosseno|Frascata|Frassinello Olivola|Frassinere|Fraveggio|Frerola|Frignano Maggiore|Frontignano|Frontone Serra|Fuipiano Al Brembo|Fundres|Fusine In Valromana|Gabbioneta|Gabria|Gabrovizza|Gadesco|Gaggino|Gaiola Moiola|Galdo|Gallico|Gallina|Galluzzo|Garabiolo|Gardolo Al Piano|Garegnano|Gargaro|Gattico|Gauna|Gavazzana|Gazzada|Gazzelli|Genzone|Germanedo|Germasino|Gerolanuova|Gerosa|Ghevio|Ionia|Gimino|Ginestreto|Goiaci|Gironico|Giuncugnano|Godovici|Goglione Sopra|Goglione Sotto|Goido|Golese|Goriano|Gorlaprecotto|Gornate Superiore|Gorrino|Gorzone|Gottro|Gozza|Gracova Serravalle|Graglia Piana|Granaglione|Grancona|Grandola|Grauno|Gravedona|Greco Milanese|Gressoney|Gries|Grignano|Grignano Di Polesine|Grimaldo|Grisignana|Grisolia Cipollina|Grona|Groppo|Grotte Santo Stefano|Grumello De Zanchi|Grumello Del Piano|Grumes|Grumo|Guardia Piemontese Terme|Gudon|Guidomandri|Gurone|Iatrinoli|Iavre|Idresca Disonzo|Idria|Idria Di Sotto|Imberido|Incino|Incisa In Val Darno|Indovero|Intimiano|Intra|Introzzo|Inverso Porte|Invorio Inferiore|Invorio Superiore|Inzino|Ioannis|Ipplis|Irgoli Di Galtelli|Ischia|Isola Balba|Isola Comacina|Isola Distria|Isola San Giulio|Isolella|Ivano Fracena|Jerago Con Besnate Ed Orago|Lacinigo|Laglesie San Leopoldo|San Giorgio Di Lago|Lagosta|Laino Bruzio|Lambrate|Lanischie|Lanza|Lanzo Dintelvi|Laorca|Lappago|Lardaro|Lari|Lase|Lasino|Laterina|Laudes|Laurana|Laveno|Lavina|Lazfons|Villabella|Ledine|Legos|Lemna|Lenno|Osmate|Lenzima|Lenzumo|Lesa Belgirate|Lessona|Letojanni Gallodoro|Levrange|Lezza|Libussina|Licignano Di Napoli|Licusati|Lieto Colle|Ligonchio|Ligosullo|Limonta|Linate Al Lambro|Lingueglietta|Linzanico|Lisanza|Lisignago|Lissago|Livemmo|Lizzana|Lizzola|Locadi|Locarno|Locate Bergamasco|Locavizza Di Aidussina|Locavizza Di Canale|Locca|Lodrone|Lomaniga|Lomaso|Lon|Lonato|Longarone|Longiaru|Lorentino|Lorenzana|Lose|Loseto|Lottulo|Loveno Grumello|Loveno Sopra Menaggio|Lover|Lozzo|Lu|Lucernate|Lucinico|Lucino|Ludriano|Lugnacco|Vazia|Luico|Lumezzane Pieve|Lumezzane San Sebastiano|Lumezzane Santapollonio|Lundo|Lusciano E Ducenta|Lusiana|Lussingrande|Lussinpiccolo|Lutago|Luzzogno|Maccagno|Maccagno Inferiore|Maccio|Maderno|Madrano|Madruzzo|Maggianico|Magno Sopra Inzino|Magognino|Magras|Magre|Magre Vicentino|Maia Alta|Maia Bassa|Malborghetto|Malchina|Malgolo|Mallas|Malpotremo|Malvino|Maniglia|Mantana|Manzano|Marano|Maranola|Maranza|Marcellise|Marco|Marcorengo|Maresego|Mareta|Margone|Mariano Al Brembo|Marmorito|Maro Castello|Martina Olba|Masciago Milanese|Masi Di Vigo|Masnago|Mason Vicentino|Massa Fiscaglia|Massama|Massa Superiore|Masse Di San Martino|Masse Di Siena|Mastellina|Mattarello|Matteria|Mattuglie|Mazia|Mazzo Milanese|Mazzoleni E Falghera|Mazzunno|Meano|Meano|Mechel|Medana|Megliadino San Fidenzio|Mel|Melezet|Menarola|Mendatica Montegrosso|Mentoulles|Mercurago|Merna|Mestre|Mestriago|Meugliano|Mezzana Superiore|Mezzani|Mezzano Imer|Mezzegra|Mezzolago|Migiandone|Migliarino|Migliaro|Mignette|Millan Sarnes|Millaures|Milzanello|Minoprio|Miola|Mirabello|Mirabello Ed Uniti Di Pavia|Mizzole|Moano|Mocchie|Moerna|Moiana|Molassana|Molina|Molina Di Ledro|Molini Di Colognola|Molini Di Tures|Molino Alzano|Mollaro|Mollieres|Molo Di Borbera|Montegrazie|Moltedo Superiore|Molvena|Mombello Lago Maggiore|Monasterolo Torinese|Monate|Novello Monchiero|Monclassico|Mondonico|Mondonio|Mondrone|Monghezzo Di Fuori|Montagne|Montalcino|Montalto Ligure|Montalero|Montano Comasco|Montassilone|Monte Di Mezzodi|Monte Di Tramontana|Montecatini Di Val Di Nievole|Montecelio|Montechiaro|Montechiaro Denice|Monte Colombo|Monte Di Capodistria|Montefontana|Montegrino|Montemaggiore Al Metauro|Montenero Didria|Monte Ossolano|Monteponente|Monterado|Montes|Monte San Candido|Montesanto Vigi|Monte San Vito|Montescudo|Montesicuro|Montesilvano Marina|Montespino|Montestrutto|Monte Urabice|Monteveglio|Monteviasco|Montiglio|Montona|Montorio Veronese|Montoro Inferiore|Montoro Superiore|Montrigiasco|Montrone|Montu Berchielli|Morca|Moregnano|Morondo|Morosolo|Mortano|Mortaso|Morter|Mortizza|Moschiena|Mossano|Mosso Santa Maria|Mozzio|Mu|Muceno|Mules|Villa Poma|Murano|Muriaglio|Musadino|Muscoli Strassoldo|Musellaro|Musignano|Musocco|Nacla San Maurizio|Nanno|Nava|Nave San Rocco|Navono|Naz|Negarine|Neresine|Nervi|Nese|Nettunia|Nibbiano|Nicastro|Nigoline|Niguarda|Noarna|Nocco|Nogare|Nomesino|Noriglio|Novacella|Novale|Novareglia|Novate Brianza|Novillara|Nozza|Nuchis|Nuraxinieddu|Olba|Olcio|Olgia|Olgiate Calco|Olginasio|Tavernette|Olivastri|Oltrepovo|Oltresarca|Oltresonzia|Oltressenda Bassa|Oltrona Al Lago|Ombriano|Oneglia|Onies|Onno|Ono Degno|Opacchiasella|Orasso|Orciano Di Pesaro|Oreno|Orezzo|Oriano|Oriano Di Brianza|Orino Azzio|Oris|Orsera|Orta Novarese|Orti|Ossanesga|Ossecca Vittuglie|Ossegliano San Michele|Ossero|Ossolaro|Ossuccio|Padergnone|Padernello|Paderno Cremonese|Paderno Del Grappa|Paganica|Paglieres|Paisco|Palanzo|Palazzo Piverone|Pallanza|Palvareto|Paniqua|Pannone|Pantasina|Papigno|Pare|Parenzo|Parona Di Valpolicella|Parone|Parravicino|Rivolto|Passerano|Paterno Dancona|Patone|Patrignone|Pavone Dalessandria|Pecco|Pecorara|Pedace|Pedanea|Pederzano|Pegli|Pellaro|Pellestrina|Pellio Intelvi|Penzano|Perego|Pergine Valdarno|Perno|Perra|Persico|Persone|Perteole|Peschiera Maraglio|Pessina Valsassina|Pezzoro|Piadena|Piagge|Piaggine Soprane|Pianavia|Pianceri|Pian Dartogne|Pian Di Sco|Piane Sesia|Pian Gaiano|Piani|Piano Porlezza|Piano|Pianura|Piavon|Piazza Santo Stefano|Piazzo|Piazzo Alto|Piazzo Basso|Piediluco|Piedimonte Del Calvario|Pietra Gavina|Pieve Di Coriano|Pievebovigliana|Pieve Dalpago|Pieve Delmona|Pieve Di Bono|Pieve Di Ledro|Ramiseto|Pilcante|Pilzone|Pinguente|Pino Sulla Sponda Del Lago Maggiore|Pione|Piovera|Pirano|Pirri|Piscinola|Piscopio|Pisino|Pissarello|Pistolesa|Piteglio|Pizzocorno|Planol|Planina|Plata|Plezzo|Pliscovizza Della Madonna|Pocrai Del Piro|Podargoni|Podraga|Poggi|Poggio Berni|Poggio Fidoni|Pola|Polengo|Polesine Parmense|Pometo|Poncarale Flero|Pontagna|Ponte Lambro|Pontebba Nova|Pontedecimo|Ponte Di Nossa|Ponticelli|Ponzate|Por|Portese|Porto Dadda|Porto Civitanova|Portole|Porto Maurizio|Porzano|Poscante|Postumia Grotte|Poverio|Povo|Pozza Di Fassa|Pozzo Alto|Pra|Prandaglio|Pranzo|Praso|Prati|Prato Alla Drava|Pratovecchio|Pratovecchio Stia|Pre|Precotto|Pregasina|Preghena|Preglia|Premione|Preore|Presegno|Presicce|Presson|Prestine|Preturo|Prevacina|Prezzo|Priacco|Priero Montezemolo|Primano|Primeglio Schierano|Primiero|Prio|Provaglio Sopra|Provaglio Sotto|Provezze|Prun|Puos Dalpago|Puria|Quaglietta|Quaregna|Quarna|Quarti|Quartiano|Quarto Dei Mille|Virgilio|Quero|Quetta|Quinto Di Valpantena|Quinto Al Mare|Quinzanello|Quinzano Veronese|Quittengo|Raccolana|Radicena|Raffa|Ragoli|Ragusa Ibla|Riscone|Ramo Di Palo|Ramponio|Ramponio Verna|Rancio Di Lecco|Ranziano|Ranzi Pietra|Ranzo|Rasun Di Sopra|Rasun Di Sotto|Retacevo In Monte|Ravellino|Ravina|Rebbio|Redona|Remedello Sopra|Remedello Sotto|Renate Veduggio|Rescalda|Resia|Revere|Reviano Folas|Revigliasco Torinese|Rezzonico|Rhemes|Riclaretto|Ridanna|Rifembergo|Rigosa|Rima San Giuseppe|Rimasco|Rina|Rinco|Rio Nellelba|Rio Marina|Riomolino|Ripalta Nuova|Ripe|Riva Valdobbia|Riva Di Tures|Rivarolo Ligure|Riva Santo Stefano|Rivera|Riviera Dadda|Rivignano|Rivoltella|Ro|Rocca Pietra|Roccacaramanico|Rocca Del Colle|Roccaguglielma|Roccalvecce|Roccapiatta|Rochemolles|Rocchetta Cengio|Rodda|Rodengo|Roditti|Roggiano Valtravaglia|Roio Piano|Romagnano|Romano Brianza|Romans|Romarzolo|Roncogno|Roncone|Rongio|Ronzina|Ronzo|Rosali|Rosciate|Rosingo|Rosora Mergo|Rossano|Rossino|Rota Dentro|Rota Fuori|Rovagnate|Rovate|Rovegro|Rovenna|Rover Carbonare|Roversano|Rovetta Con Fino|Rovigno Distria|Rozzo|Rubbiano|Ruginello|Ruino|Rumianca|Runo|Sabbia|Sabbio Bergamasco|Sabbioncello|Sable Grande|Sacconago|Saga|Sagliano Di Crenna|Sagoria San Martino|Saiano|Sala Al Barro|Salabue|Salcano|Sale Castelnuovo|Salecchio|Saletto|Salice Calabro|Salina|Salona Disonzo|Saltara|Salto|Salvaterra|Samaria|Sambasso|Sambatello|Sambiase|Sambuco Pietraporzio|Sambughetto|Samoclevo|Samo Di Calabria|San Bartolomeo Valmara|San Bernardino|San Daniele Del Carso|San Fedele Intelvi|San Felice Di Scovolo|San Felice|San Francesco Dalbaro|San Gallo|San Germano Dei Berici|San Gervasio Dadda|San Giacomo|San Giacomo|San Giacomo In Colle|San Gillio Torinese|San Giorgio|San Giorgio Di Pesaro|San Giovanni|San Giovanni Alla Castagna|San Giovanni A Teduccio|San Giovanni Battista|San Giovanni Dasso|San Giovanni Di Galermo|San Giovanni Reatino|San Giuseppe Di Casto|Villa San Giuseppe|San Lazzaro Reale|San Lazzaro Alberoni|San Lazzaro Parmense|San Leonardo|San Leucio|San Lorenzo In Banale|San Lorenzo Mondinari|San Lugano|San Marcello Pistoiese|San Martino Al Cimino|San Martino Di Perrero|San Martino Al Monte|San Martino De Calvi|San Martino In Beliseto|San Martino In Casies|San Martino Quisca|San Marzano Moasca|San Marzanotto|San Massimo Alladige|San Michele Dasti|San Michele Prazzo|San Michele In Teverina|San Michele Extra|San Michele Di Postumia|San Nazario|San Novo|San Pancrazio Parmense|San Pantaleo|San Paolo Della Valle|San Paolo Cervo|San Pelagio|San Pier Darena|San Pier Fedele|San Piero A Sieve|San Pietro|San Pietro Di Gorizia|San Pietro A Patierno|San Pietro Del Carso|San Pietro Di Barbozza|San Pietro Di Monterosso|San Pietro Dorzio|San Pietro Irpino|San Ponzo Semola|San Quirico In Val Polcevera|San Sigismondo|San Silvestro|Santabbondio|Santa Croce Di Aidussina|Santeufemia Della Fonte|Santagata Sopra Cannobio|Santagata Irpina|Santa Giulia|Santagostino|Santalbano Di Bobbio|Santa Luce Orciano|Santa Lucia Disonzo|Santa Maddalena In Casies|Santa Margherita Dadige|Santa Margherita Di Bobbio|Santa Margherita|Santa Maria Della Croce|Santa Maria Del Monte|Santa Maria Di Rovagnate|Santa Maria In Prato|Santa Maria In Stelle|Santa Maria Maggiore E Crana|Santa Maria Rezzonico|Santambrogio Olona|Santandrea Di Gorizia|Santandrea Di Vallefredda|Santandrea In Monte|Santangelo In Lizzola|Santantonio Dadda|Santantonio A Trebbia|Santapollinare Con Selva|Santa Valeria|Santeufemia Lamezia|Santicolo|Santilario Ligure|Santino|Zoldo Alto|Santomobono Terme|Santo Spirito Della Bainsizza|Santo Stefano Del Monte Degli Angeli|Santo Stefano Di Briga|San Valentino Al Brennero|San Valentino Alla Mutta|San Vero Congius|San Vigilio|Sanvincenti|San Vincenzo Al Volturno|San Vito E Modesto|San Vito In Monte|San Vito Di Vipacco|Saone|Sardagna|Sarola|Sartirana Briantea|Sassa|Sasso Di Bordighera|Sasso|Sassocorvaro|Savigno|Savoulx|Scaleres|Scaletta Uzzone|Scandeluzza|Scannabue|Scano Al Brembo|Scanzo|Scaria|Scarnafigi Ruffia|Scarperia|Scarpizzolo|Sciaves|Scavolino|Scelmo|Scherbina|Schianno|Schieranco|Scodovacca|Scoppo|Torriana|Scrilla|Sebreghe|Secondigliano|Sedula|Seghebbia|Segno|Segno|Seio|Selino|Sella Delle Trincee|Sellere|Selve Marcone|Senosecchia|Seo|Seppiana|Seprio|Serbariu|Serpenizza|Serra Pedace|Serravalle Dasti|Serravalle Alladige|Serrungarina|Serso|Sesana|Sessant|Sestri Ponente|Sevignano|Sforzatica|Siamanna Siapiccia|Sicci San Biagio|Sili|Silun Montaquila|Sillano|Silvella|Senadole|Siror|Sisini|Sissa|Siurgus|Siviano|Slappe Zorzi|Slingia|Slivia|Smarano|Smeria|Soccavo|Solanas|Solbiate|Solbrito|Solomiac|Solto|Solzago|Somana|Somendenna|Sonzia|Sopramonte|Soprana|Sopraponte|Soprazocco|Sorbano|Sorbolo|Sorbolongo|Sorli|Sovazza|Spadafora San Martino|Spadafora San Pietro|Spera|Spezzano Grande|Spezzano Piccolo|Spinga|Spino Al Brembo|Spinone|Spoccia|Stabello|Staghiglione|Stava|Stazzona Germasino|Stia|Stilves|Storie|Strada|Strambino Romano|Stramentizzo|Strigno|Stropino|Struppa|Stumiaga|Sturia Delle Fusine|Suna|Susa|Tabla|Tagliolo Belforte|Tagliuno|Taio|Tanas|Tapigliano|Tapogliano|Tappia|Tarces|Tarcetta|Tarnova Della Selva|Tarres|Tassullo|Tavarnelle Val Di Pesa|Tavernola San Felice|Tavodo|Tavole|Tavon|Tavordo|Telves|Temenizza|Tenda|Teodone|Teodorano|Teor|Terlago|Termenago|Termon|Ternova Disonzo|Torrenova Di Bisterza|Terrasa|Terrati|Terrazzano|Terres|Terzano|Tesido|Thures|Tiarno|Tiarno Di Sopra|Tiarno Di Sotto|Timoline|Tina|Tiso|Tolmino|Tomadio|Tonadico|Torba|Torbiato|Torra|Torradello|Torrazza|Torre Beretti|Torre Del Mangano|Torre Del Monte|Torre De Ratti|Torre Orsina|Torre Uzzone|Torria|Torriano|Toscolano|Toss|Trabuchello|Traffiume|Transacqua|Trausella|Travedona|Traversa|Traverse|Trebbiano Nizza|Trebecco|Trecasali|Tredossi|Tremenico|Tremezzina|Tremezzo|Trenno|Trens|Trenta|Trenta Disonzo|Treppo Carnico|Tres|Tresche Conca|Tresigallo|Tresilico|Tretto|Trevano|Trevisago|Tribussa|Trichiana|Trivero|Trobaso|Tuenetto|Tuenno|Tunes|Turago Bordone|Turro Milanese|Ugovizza Valbruna|Uggiate|Umago|Unchio|Urio|Ussolo|Ustie|Vaglierano|Vagna|Valas|Vico Canavese|Valchiusella|Valda|Valdarsa|Valgiovo|Valdigna Daosta|Vallalta|Vallarga|Valle Distria|Valle Mosso|Vallelunga|Vallenoncello|Valles|Valle San Felice|Valle San Silvestro|Valle Superiore Mosso|Vallonara|Valloria Marittima|Valmaggia|Valmala|Val Marchirolo|Valprato|Valrovina|Valsaviore|Valsecca|Valstagna|Valtesse|Valvasone|Valverde|Vandoies Di Sopra|Vandoies Di Sotto|Vanga|Vararo|Varengo|Vargo|Varoni|Vas|Vasio|Vassena|Vattaro|Veccana|Veddasca|Velate|Vellano|Vellego|Vello|Venegono|Verderio|Verderio Inferiore|Verderio Superiore|Verdesina|Verezzi|Villa Vergano|Vergano Novarese|Vergemoli|Vergobbio|Vermezzo|Verna|Verpogliano|Verrua Siccomario|Versa|Versciaco|Vertemate|Verteneglio|Vertoiba In Campi Santi|Vertovino|Veruno|Vervo|Vestreno|Vezzano|Vezzano|Vezzi|Vezzo|Vho|Viarago|Viceno|Viconago|Vidolasco|Vigalzano|Viganella|Vigatto|Vigentino|Viggiona|Vignola|Vigo Danaunia|Vigo Di Fassa|Vigolo Baselga|Vigolo Vattaro|Vigo Rendena|Villa Agnedo|Villa Banale|Villabassa Di Senosecchia|Villa Dadige|Villa Castelnuovo|Villa Cogozzo|Villa Corsione|Villa Dallegno|Villa Decani|Villa Del Nevoso|Villa Ottone|Villaguardia|Villalbese|Villanovetta|Villa Rendena|Villa Romano|Villa Santa Caterina|Villa Slavina|Villatalla|Villaviani|Villa Vicentina|Villa Volturno|Villazzano|Ville Del Monte|Ville Montevecchio|Ville San Pietro|Ville San Sebastiano|Villongo San Filastro|Villongo Santalessandro|Vilminore|Vimogno|Vintebbio|Vion|Vipacco|Virle Treponti|Visignano Distria|Visinada|Visino|Viticuso Ed Acquafondata|Vittadone|Vizze|Vocogno E Prestinone|Voissizza Di Comeno|Voldomino|Volosca Abbazia|Voltore|Voltri|Volzana|Voschia|Zambana|Zappello|Zara|Zavattarello Valverde|Zelarino|Zelbio Veleso|Zelo Surrigone|Zeppara|Zibello|Zivido|Zolla|Zorlesco|Zornasco|Zorzino|Zoverallo|Zuclo|Zuri|Valsantamarina|Boville|Mosso|Alme Con Villa|Rasun Valdaora\",\n            \"provinceOrCountry\": \"COTOFUVAPTBZMCBSLECOMINONOVCNOTNGOGOCSCOCECNCOBGTSBZCOCONOPLTOBZALCNTNBSBGBGNOTNTNCNVCBSGOBZPLNONOGEFUMSNOVCVACOVAVAPVCEAQCANONOVABSTNTNVAPLNOPNIMCOCEPUTSTSNOGOBSVRTOCOMIVTALBOPIAQCOTOTOCOCOVAMITNPLVIFIPUBSCOTOSVSVBGMINABGCOVACRVATNPVPVGOMEGEBOTOCOAVROVRBSFUGOCOFECNTNTNFUIMNOVRTNTNVANOSVMNGOGOCOCRCOALFUVATNTNROVAPRVAGEPLNONOVATNTNNOBSGEBGTNBGTOBGIMTNSVMNMNBSBOIMBGGOVCBSVAROTNGEVAIMTNPVBSBSROTOTOTNBGPVGOCOCOTNVCBGBGVABGVRVRGOGOCOCNALTNPLNOVANOSVFIBSBGALTOCOTSGOCOCONOPLCOVEBZREROIMTONOBSTSCRNOVAVACRPVVRBSTNVAROCOCOMIBSTNGOBGBSNOBGMEBNTOLOAQVCBSPCBZCOCOCNVANOBITOTNSVUDVIUDPVSOGOIMPSGEPVTNPLBARCCRCRMICOCOSAPLVAGOBSBGTSVAIMCOBAMNCOTNBSVANOCOCOALNORCCOGOBGVACRIMPVNOPDPDIMCOBSCECRNOCRMNCOCOTNCOCOCOCOCSVICOCOALCOCRTNBZVTANBZALGOARFUPVTETNCNPVBLVCCNPVVCNOCOCOTNBOCBLTPZFUCRSAALIMALALCONOVRBSRCRCBZLONOVBCONOTSCOBZVAGOBAFUTNVAPVTNVCTNBGBGSVBZIMTNBGBGMIGOCOBIVAVCBLCOPGTOBSBZAOTOPLTONAAVGOMIVCTNNOVETNTNBZBSBSCONOBSTNMIGONOUDVIBZPLCOCOBSCOBSFUBSBZGOVATNTNNONOPUATCOBZIMBZREUDBZPGPGBZCOTNTNBGBSTOBZPVTNTNGOBSBSNOROTNCOVITNIMCOCOROCONOTNCOTSCSPVGEGOBZVRCOBGBZBSPVALBSPRBZBZGOTSVAVCBSIMTNTNNONOGOCRBSCOMITSMITVBOPICOTNCOVCCOVCROBIVINOALTNALBZBGBGNOVBPTNONOTNTNTNTNCOBSTNTNTNGOBGTOBGIMIMPLTNNOTSTSVCGOGOGOCATNROPVCACATNCOPLCOGOCOCRTOCRTSALTSLTBZSVFUBGBGTNBZCOBSPLGOCACOCONOBGVACOLUTOMITNCHVBTSBSBLVETNBSBZTOUDMNTOTOCEPLTNCOFICAGEGEGENOMCPSTNFOFUBGUDTNVCBZGEBZNONOBGFUVCTOFENOVINOTNTOBLALCRPVNOALALTOTNBGCEBSPSBGBZUDCRGOGOCRCOCNSARCRCFIVATNMIGONOTOALVAIMPVCOCOBSBGNOCTPLPSGOCOLUGOBSBSPVPRGOMIVACNBSCOGOGONOBOVICOTNCOMIAOBZBGROBZPLCSCOALVTBGBGTNTNCSBZMEVARCTNGOGOGOCOCOFICOCONOLCTONONOBSUDUDNUTNMICOPLNOVCTNMIBZUDTVZACSMIPLMECOCOBZTNPITSTNARBZFUVAIMBZALGOTNCOCOVATNTNNOBIMEBSCOGONASACOREUDCOMIIMCOVATNVABSTNBGMEVCBGGOGOTNTNCOTNTNBSBLBZBGPIGOBACNBSCOTNVAALMIUDCOBSTORIGOBSBSBSTNCEVIPLPLBZNOVAVACOBSTNTNCOBSNOTNBZVIBZBZUDTSTNBZCNALTOBZTNTNLTBZVRTNTOPLBZTNBGALIMSVMITNVAVIFECAROSISITNTNFUFUBZMIBGBSTOTNTNGOPDBLTOSOIMTONOGOVETNTOVAPRTNCOTNNOFEFEMIBZTOBSCOTNFEPVVRIMTOTNCOGECOTNBGBZALTNTOALIMIMVIVATOVACNTNCOALTOBZTNSIIMALCOBZBZBZPTRMBZALRNPLBZVAPUGONOBZANTNBZPGGORNANPEGOTOGOBOVAATPLVRAVAVNOBAPVVCAPVCVAFOTNBZPCFUVIBINOBSVABZMNVETOVAUDPEVAMITSTNCOTNBSBZVRPLGEBGRMPCCZBSMITNNOTNTNTNBZVITOCOPSBSSSCASVCONOCOVATOIMBGTNGOBGVACRIMBZCOBSGONOPUMIBGBSCOVABZPLNORCBGGOGOPLCRCOTNBSCRTVAQCNBSCOTONOCRGOTNIMPGCOPLVRVCCOUDALANTNAPALTOPCCSTOTNGERCVECOCOLCARCNTNCRBSUDBSCOBSCRPUSAIMVCBSARVCBGIMCOTNNATVCOTOBGBGPGUDPVMNMCBLCRTNTNRETNBSPLVAPRALPLCANACZPLPVBIPTPVBZGOBZGOGOGORCGOIMRNRIPLCRPRPVBSBSCOUDGEBGNACOTNBSMIMCPLIMBSBGTSTSTNTNPSGEBSTNTNBZBZARARTNMITNTNNOTNTNBSLETNBSAQGOTNTOCNFUALTNTNBSBSBSVRBLCOAVBINOALMIGEMNBLTNVRGEBSVRBIUDRCBSTNSRBZROCOCOCOGOSVTNBZBZFUCOTNCOBGBSBSMIMIBZMNTNTOCOAOTOBZGOBGVCVCBZALLILIBZCRANVCBZGEIMTOBGUDBSFEVCPEBGFRVTTOTOSVUDBSTSVAAQTNCOGOTNTNTNCOGOTNRCBGALANCSBGBGBGLCVANOCOTNFOBGPLPLCRMIPVNOVAVCBGCOGOVAGOPVFUBSCOALGOTONOPDRCMEGOPUTOROGOGORCCZCNNOTNRCNOCRGOCOBSBZGEBGVIBGBZTNTSTOBZPUBZCONAGESICTPGVCRCIMPCPRBZCETNCRBZPTVTTOBZBGCRBZGOATALVRALCNVTVRTSVIMIPRCAALBITSGERCFIBZGONATSTVCNBGAVPVGEBZCHCOGOBSNOAVSVFEPVPIGOBZPDPVTNCRVACOMIVRNOCOVAUDFRBZPUBGPCROCOCZBSGENOBLBGGOBGMEBZBZCABSPLCBCRTRGOTNTNIMCOAQIMTNPUBOTOBZCNATCRBGBGCOCNFIBSBZPSTNGOVANOUDTSRNGOGONAGOCOSVTNTNBGGOBGBITSTNVBCOCAGOCSALTNPUTNTSALGETNBGCACACAPLLUCRTSTNCAPRCABSGOBZTSTNFUNACACOALTOBGCOCOBGGOTNBIBSBSFOPRPSALNOMEMETNCSCSBZBGBGNOBGPVBZCOARBZTSTNTOTNTNNOGETNGONOTNBZALBGTNBZNOUDNOBZUDGOBZTNFIAVTNIMTNCOBZGOCNBZFOUDTNTNTNGOFUPVCSMITNBSBZTOTNTNTNBSTOBZGOTSTNVABSTNPVIMPVPVPVALPGCNIMPVBSTNBGNOTNTOVACOTOPVPCPRCRLCCOCOMIBZCSGOUDTNVIFERCVICOVAGOBLBINOTNTNBZPVMIUDCOPLNOCOCNGOALNOBZTOTOTNPLBZAOBGBZPLBIBZUDBZTNBZVCVIIMVCCNVATOVIBSBGVIBGPNPVBZBZBZVAALALBNBLTNCOTNVAVAVAPTSVBSVACOLCLCTNSVCONOLUVAMICOGOPVGOBZCOPLGOGONOTNLCBZTNGENOCRTNNOVACRTNVBPRMINOTNTNTNTNTNTNTNTNTSROTOBSATBSPLFUBZIMCOCNTNCOBZTSIMIMUDCETNTNGOIMIMBGBGBGCOVCTNGOBSPLPLCOFRMIBZNOGOVAFUVAGEGOGOTNCRZAPVVECOMICAPRMIGOMINOBGNOTNCAFURMBIBGBZ\"\n        },\n        {\n            \"belfioreCode\": \"00100400500600700800a00d00e00f00g00h00i00j00k00m00n00o00p00q00r00s00t01001101201301601701801901b01c01d01f01g01h01i01j01k01l01m01n01o01p01q01r01s01t01u02002102302402502602702802a02b02c02d02g02h02i02j02k02l02n02o02p02r02s02t02u03003103203403503603703903a03b03c03d03e03f03g03h03j03k03l03m03n03o03p03q03r03s03t03u03v04004104204304404604704904a04b04f04h04i04l04m04p04q04r04t04u04v05005105205305405505605705b05c05d05f05g05h05i05j05k05l05m05n05o05p05q05r05s05t05v06006106206306406506606806906a06b06c06d06e06f06g06i06m06n06o06p06q06s06t06u06v07007107207307407507607707907a07b07c07d07e07f07g07h07i07j07k07l07m07p07r07s07t07u07v08008108208308508608708808908a08b08c08d08e08f08g08h08i08j08m08o08p08q08r08s08t08u08v09009209309409509609709809909b09c09d09e09f09g09h09i09k09l09m09o09p09q09r09t09u09v0a00a10a30a40a50a60a70a80a90aa0ac0ad0ae0af0ah0ai0aj0ak0al0an0ao0ap0aq0ar0as0au0av0b00b20b30b50b60b70b80bb0bd0be0bf0bg0bh0bi0bj0bk0bl0bm0bn0bo0bp0br0bs0bu0bv0c10c20c30c40c50c60c70c80c90ca0cc0cd0ce0cf0cg0ch0ci0cj0cl0cn0cp0cs0ct0cu0cv0d20d30d50d60d80d90db0dd0de0df0dg0dh0di0dj0dk0dl0dm0dn0do0dp0dr0ds0dt0du0dv0e00e10e30e40e50e60e70ea0eb0ec0ed0ee0ef0eg0eh0ei0ej0ek0em0en0eo0ep0eq0er0es0et0eu0ev0f00f10f20f40f50f60f70f80f90fa0fb0fc0fe0ff0fg0fh0fj0fl0fm0fn0fq0fr0fs0ft0fv0g00g20g30g40g50g60g70g80g90ga0gb0gd0ge0gf0gg0gh0gi0gj0gk0gl0gm0gn0go0gp0gq0gr0gs0gt0gu0h00h20h30h60h70h80h90hb0hd0hg0hh0hi0hk0hl0hm0hn0ho0hp0hq0hr0hs0ht0hu0hv0i00i10i20i30i40i50i80ia0ib0ic0id0ie0if0ig0ih0ii0il0in0io0ip0ir0is0it0iu0iv0j10j20j40j50j60j70j80j90ja0jb0jd0jh0ji0jk0jl0jm0jn0jo0jq0jr0jt0ju0k00k30k50k60k70ka0kb0kc0kd0kf0kg0kh0ki0kk0kl0km0kn0ko0kp0kq0kr0ks0kt0ku0kv0l10l20l40l50l60l90lb0lc0le0lf0lh0li0lj0lk0lm0lo0lp0lq0lr0ls0lt0lu0lv0m00m10m20m30m40m50m60m80m90ma0mc0md0me0mf0mg0mh0mi0ml0mo0mp0mq0mr0ms0mt0mu0mv0n00n10n20n30n40n50n60n70n90na0nb0nd0ne0nf0ng0nj0nk0nl0nn0no0np0nq0nr0ns0nt0nu0o00o10o20o30o40o50o60o80o90oa0ob0oc0od0oe0of0og0oh0oi0oj0ok0ol0on0oo0op0oq0or0os0ou0ov0p10p20p40p50p90pa0pb0pc0pd0pf0pg0ph0pi0pj0pk0pl0pn0pp0pq0pr0pv0q00q20q30q40q50q90qa0qb0qc0qd0qe0qf0qg0qh0qi0qj0qk0ql0qm0qn0qo0qp0qr0qt0qv0r00r60r80ra0rc0rd0re0rg0rh0ri0rj0rk0rl0rn0rp0rr0rs0rt0ru0rv0s00s10s20s60s70s80s90sa0sd0se0sf0sg0si0sk0sm0sn0so0sq0st0t10t20t30t40t90tc0td0te0tg0th0ti0tj0tk0tl0tm0to0tp0tq0tr0ts0tt0tu0tv0u00u10u20u30u40u50u80ua0ub0uc0ud0uf0ug0uh0ui0uj0ul0um0un0uo0uq0ur0us0ut0uu0uv0v00v10v30v40v60v70v90va0vb0vd0ve0vf0vg0vh0vi0vk0vm0vn0vo0vp0vq0vr0vs0vt10010110210410510610710910a10b10c10d10e10g10h10i10j10k10m10o10p10r10u10v11011111211511611711811b11c11d11e11f11h11j11k11l11n11o11p11q11r11s11t11u12012312612912a12b12c12d12e12g12h12i12j12l12m12n12o12q12r12s12t12u13013113313413613813913b13c13e13h13i13l13m13n13o13p13t13u14014114214414514614714814914a14d14e14f14h14j14k14l14n14o14q14r14s14t14u14v15015315415715815915a15b15c15d15e15g15h15i15j15k15l15n15p15s15t15u15v16016116216316416516716916b16c16d16e16g16i16j16k16l16m16n16o16q16r16u16v17017117217317717817a17b17d17e17g17h17i17j17k17l17m17o17q17r17s17u17v18018118218418518618718818918c18d18e18f18g18h18k18l18m18n18o18p18q18t18u18v19019119219319519719e19g19k19n1a11a21a51a61a71a81aa1ab1ad1ae1ag1ah1ai1ak1al1am1an1ao1ap1ar1au1av1b01b11b21b31b41b51b61b71b81b91bb1bc1bd1be1bf1bg1bh1bi1bj1bk1bl1bm1bn1bo1bq1br1bs1bt1bu1c01c11c21c51c71c81c91ca1cb1cf1cg1ch1ci1cj1ck1cl1cm1cn1co1cp1cq1cr1cs1ct1cv1d01d11d21d31d41d51d61d71d81da1dc1dd1df1dh1dk1dl1dm1dn1dp1dq1dr1ds1dt1du1dv1e01e11e21e41e51e91ea1eb1ec1ed1ee1ei1ej1ek1el1em1eo1ep1eq1er1es1et1eu1f01f11f21f31f51f61f71f81f91fa1fb1fc1ff1fg1fh1fi1fk1fl1fm1fn1fo1fp1fq1fr1fs1ft1fu1fv1g01g11g21g31g41g51g61g71g81ga1gd1ge1gf1gh1gi1gj1gk1gl1gn1gp1gq1gr1gs1gt1gu1gv1h11h21h41h51h61h81h91ha1hb1hc1hd1he1hg1hi1hj1hk1hl1hm1hn1ho1hp1hq1hr1ht1hu1i21i31i41i51i61i71i81i91ia1ic1id1if1ig1ih1ii1ij1ik1il1io1iq1ir1is1it1iu1iv1j01j11j21j31j41j51j71j81j91ja1jb1jc1jd1je1jf1jg1jh1ji1jj1jl1jn1jo1jq1js1jt1ju1jv1k01k21k31k51k61k71k81ka1kb1kc1kd1ke1kf1kg1kh1ki1kk1kl1km1kn1ko1kp1kq1kr1ks1kt1ku1kv1l01l11l21l51l71l81l91la1lb1lc1ld1le1lf1lg1lj1lk1ll1lm1ln1lo1lq1lr1ls1lt1lu1lv1m11m21m31m41m51m61m71m81ma1mc1md1me1mf1mg1mh1mk1ml1mo1mq1mr1ms1mu1mv1n01n21n31n51n61n71n81n91nb1nc1ne1ng1nh1ni1nj1nk1nl1nm1nn1no1np1nr1ns1nt1nu1nv1o01o21o31o41o61o71o91oa1ob1oc1od1of1og1oh1oi1ok1ol1oo1op1oq1or1os1ou1ov1p01p11p21p31p41p51p61p81pb1pc1pe1pf1pg1ph1pi1pk1pl1pm1pn1po1pq1pr1pt1pu1q01q11q21q31q41q51q61q81q91qa1qb1qc1qd1qe1qf1qg1qh1qj1qk1ql1qm1qn1qo1qp1qq1qr1qt1qu1qv1r01r11r21r31r41r51r61r71r81r91ra1rb1rc1rd1re1rf1rg1rh1ri1rj1rm1rn1ro1rq1rr1rs1rt1ru1rv1s01s11s21s31s41s51s71s81s91sc1sd1se1sf1sg1sh1si1sj1sk1sl1sn1sp1sq1sr1ss1st1su1t01t11t21t31t41t61t71t81t91ta1tb1td1te1tf1tg1th1tj1tm1tp1tq1tr1ts1tu1u01u11u31u41u51u61u71u91ua1uc1ud1ue1uf1ui1uj1uk1um1un1ut1uu1v41v61v81vb1ve1vh1vi1vl1vm1vo1vp1vs1vt1vu1vv20020120220320420520720820920a20b20c20e20f20g20h20i20j20l20m20o20p20q20r20s20u20v21021121221321521621921a21b21d21e21g21h21i21k21l21m21n21o21p21q21r21s21u21v22122222322422522622722822922a22b22d22e22f22g22h22i22l22m22n22o22p22r22t22u22v23123323423523823923a23b23c23d23e23g23h23i23l23m23n23p23s23t23u23v24024124224524724824924a24b24c24d24e24i24j24l24m24n24o24p24q24r24s24t24u24v25025125225325525625725825925a25b25c25e25f25g25h25i25j25k25l25m25n25o25r25s25t26026126226326426526626726826a26b26c26d26e26f26j26l26m26n26p26q26r26s26t26u26v27027127227327427627727827a27b27c27d27e27f27g27h27i27j27k27l27m27o27p27q27s27t27u27v28028228328428528628728828928a28b28c28d28e28f28h28i28j28k28l28n28p28q28r28s28u28v29029129229329429529629729829929a29b29c29d29f29g29h29i29k29l29n29o29p29r29s29t2a12a22a42a72a82a92aa2ac2ad2ae2af2ag2ah2aj2ak2al2am2ao2ap2aq2ar2as2au2b02b42b52b62b72b82b92ba2bc2bd2be2bf2bh2bi2bk2bl2bm2bo2bq2bs2bt2bu2c02c32c42c52c62c72c82c92ca2cb2cc2ce2cf2cg2ch2cl2co2cp2cq2cr2ct2cv2d22d52d62d72d82da2dc2de2df2dg2dh2di2dj2dk2dl2dm2dn2do2dp2ds2dt2du2dv2e02e12e22e42e52e62e72e82e92ea2eb2ec2ed2ee2ef2eg2eh2ei2ej2ek2el2em2eo2ep2er2es2et2ev2f02f12f22f32f42f52f62f82f92fa2fb2fc2fd2fe2ff2fg2fh2fj2fk2fl2fm2fn2fo2fp2fq2fr2fs2ft2fu2fv2g02g12g32g42g52g62g72g82g92gd2ge2gg2gh2gi2gk2gl2gm2gn2go2gp2gr2gs2gt2gv2h12h22h32h42h62h72h82hc2hd2he2hg2hh2hi2hk2hl2hm2hn2ho2hq2hr2hs2ht2hv2i02i12i32i42i52i62i72i82i92ia2ib2id2ie2if2ig2ih2io2ip2iq2ir2is2it2iu2iv2j02j12j22j32j42j52j62j72j92jc2jd2je2jg2jh2ji2jj2jk2jl2jm2jn2jo2jp2js2jt2ju2k12k32k72k82k92ka2kb2kc2kd2ke2kf2kg2kh2kj2kk2kl2km2kn2ko2kp2kq2kr2ks2kt2ku2kv2l22l32l42l52l62l72l82l92la2lc2ld2lf2li2lj2lk2ll2lm2ln2lo2lp2lq2lr2lt2lu2lv2m02m32m42m52m62m72m82mb2mc2md2me2mf2mg2mh2mi2mj2mk2ml2mm2mo2mp2mq2mr2ms2mt2mu2mv2n02n12n32n52n62n72n82n92na2nb2nc2nd2ng2nh2nj2nk2nm2nn2nq2nr2ns2nt2nu2nv2o02o12o22o32o42o52o72o82oa2od2oj2ok2om2on2op2os2ot2ou2ov2p02p22p32p42p52p62p72p82p92pa2pb2pc2pe2pg2ph2pi2pj2pk2pl2pm2pn2po2pr2ps2pt2pu2pv2q02q22q32q42q52q62q82qa2qd2qe2qf2qh2qk2ql2qm2qn2qo2qp2qs2qu2qv2r02r22r52r62r72r82ra2rd2re2rf2rg2rh2ri2rj2rl2rm2rn2ro2rp2rq2rr2rs2rt2rv2s22s42s62s72s82sa2sb2sc2sd2se2sf2sg2si2sj2sk2so2sp2sr2ss2st2su2sv2t02t12t22t32t42t62t72t82ta2tb2tc2te2tf2tg2th2tj2tk2tm2tn2tr2ts2tu2tv2u02u12u22u32u42u52u62u72u82ua2ub2uc2ud2ue2ug2ui2uj2uk2ul2um2up2ut2uu2v02v12v22v32v42v52v62v82v92va2vb2vc2ve2vg2vh2vi2vl2vm2vo2vp2vq2vs30030330430530630730930a30d30e30f30g30h30k30l30m30n30o30r30s30t30u30v31131331431531631731831931a31d31e31f31g31h31i31j31k31m31n31o31r31s31t31u32032132332532632732832932b32d32e32f32i32k32n32p32q32t32u33033233333433733933b33c33d33g33h33i33j33k33l33o33p33r33s33t33u33v34034134234334434534734834934a34b34e34g34h34i34j34l34m34n34q34r34s34t34u34v35035135235435535635735b35c35d35e35f35j35l35n35o35p35q35r35s35t36036136236336436536636736836936d36e36f36g36h36k36m36n36p36q36r36s36t37037137237337437737837937d37e37f37g37i37j37k37l37m37n37p37r37s37t37v38038138238338438538638a38b38d38g38h38i38j38k38m38n38o38r38s38t38u39039139439539639739b39c39d39e39g39h39j39k39n39o39p39q39s39u39v3a03a23a33a63a73a93aa3ab3ae3af3ag3ai3aj3ak3am3an3ao3ar3as3at3au3av3b03b23b43b53b63b73b93ba3bc3bg3bh3bi3bj3bk3bl3bn3bq3br3bs3bt3bu3bv3c03c13c23c33c53c63c73c83c93cb3cc3cd3ce3cf3cg3ch3ci3cj3ck3cl3co3cq3cr3cs3cu3cv3d03d13d23d33d43d53d63d73d83d93db3dd3de3df3dg3dh3dk3dl3dm3dn3do3dp3dq3du3e03e23e33e43e63e73e83ea3eb3ec3eh3ei3ej3ek3el3em3en3eo3ep3eq3er3es3et3eu3ev3f03f13f23f33f53f73f83f93fa3fc3fd3fe3ff3fg3fh3fi3fj3fl3fm3fn3fo3fp3fq3fr3fu3g13g23g33g43g53g63g73g83g93ga3gb3gc3gd3gf3gg3gk3gl3gm3gn3go3gr3gs3gt3gu3gv3h13h33h53h63h73h83hc3hd3he3hi3hj3hk3hl3hm3hn3ho3hp3hr3hs3ht3hu3i13i23i33i43i53i63i73i83ic3id3ie3if3ih3ii3ij3ik3im3in3io3ip3iq3ir3is3it3iu3iv3j03j13j23j33j43j53j63j83j93ja3jb3jd3je3jf3jg3jh3jk3jl3jm3jn3jo3jp3jq3jr3js3jt3ju3jv3k03k23k33k53k63k73k83kd3kf3kg3ki3kj3kk3kl3km3kn3ko3kp3kq3ks3kt3ku3l03l13l23l43l53l63l73l83la3lb3lc3ld3le3lf3lg3lh3li3lj3lk3ll3lm3ln3lo3lp3lq3lr3lt3lu3lv3m03m13m43m53m63m73m83m93ma3mb3mc3md3me3mf3mh3mi3mk3ml3mm3mn3mp3mq3mr3ms3mt3mv3n03n23n33n43n53n63n73n93na3nb3nd3nf3ng3nh3ni3nj3nk3nl3nm3no3nq3nr3ns3nv3o13o23o33o43o53o73o83o93oa3ob3oc3od3oe3of3og3oi3oj3ok3ol3om3on3oo3op3or3os3ot3ou3ov3p03p13p23p33p43p63p73p93pa3pb3pc3pd3pe3pg3ph3pi3pj3pk3pm3pn3po3pp3pq3pr3pt3pu3pv3q13q23q33q53q63q73q83q93qb3qd3qe3qg3qh3qj3qk3ql3qm3qn3qo3qq3qr3qs3qt3qu3qv3r23r43r63r73r83r93ra3rb3rc3rd3rf3rg3rk3rl3rm3rn3ro3rp3rq3rr3rs3rt3ru3rv3s03s13s23s33s43s63s73s83s93sa3sc3sd3se3sf3sg3sj3sk3sm3sp3sq3sr3ss3st3su3sv3t13t33t43t63t73t83t93ta3tb3tc3td3te3tf3tg3th3tj3tk3tl3tm3tn3to3tp3tq3tr3ts3tt3tu3tv3u13u23u43u53u63u73u83u93ub3uc3ud3uf3ug3uh3ui3uk3ul3um3un3uo3up3uq3us3ut3uu3uv3v03v13v23v33v43v53v63v73v83va3ve3vf3vh3vi3vj3vk3vl3vm3vn3vo3vp3vq3vr3vs3vt3vu40040240440540640740840a40b40d40f40h40i40j40k40m40o40q40s40t40u40v41041241341441541641841b41d41e41f41g41h41i41j41k41l41o41p41q41r41s41u41v42042142342442542742842942a42b42c42d42h42i42j42k42m42o42p42r42s42t42v43043143343443743843943a43b43c43d43e43f43g43h43i43k43l43m43n43o43p43r43t43v44044244344444544644844944a44b44c44d44e44f44g44h44i44j44k44l44m44o44p44q44r44s44t44v45045245345545745845945a45d45e45f45g45h45i45o45p45q45r45s45t45v46046146246346446746946b46d46g46h46i46j46l46m46n46p46q46t47047147347547647747847947a47c47d47e47f47g47h47i47j47k47l47m47n47p47q47s47t47u47v48148248448648848b48c48d48e48f48g48h48i48j48k48l48m48n48o48p48r48s48t48u49249349449549649749849949a49b49c49d49e49g49h49i49j49l49m49n49p49q49s49t49u49v4a04a14a34a44a54a64a74a84a94aa4ac4ad4ae4af4ag4ah4ai4aj4ak4al4am4an4ap4ar4at4av4b04b24b34b64b84b94ba4bb4be4bf4bg4bh4bi4bj4bl4bm4bn4bo4bp4bq4br4bs4bv4c04c14c24c34c44c54c64c74c84c94ca4cb4cc4cd4ce4cg4ch4ci4ck4cm4co4cp4cq4cr4ct4cu4d04d24d34d54d64d74d84da4db4dc4de4df4dg4di4dj4dk4dn4do4dp4dq4dr4ds4dt4du4dv4e04e24e34e44e54e64e74e94ea4eb4ed4ee4ef4eg4ei4ej4ek4el4em4ep4eq4er4et4eu4f04f24f54f74f84fb4fc4fd4fe4ff4fg4fh4fi4fk4fl4fn4fo4fq4ft4fu4fv4g04g24g34g54g74g94ga4gc4gd4ge4gf4gg4gh4gi4gj4gl4gm4go4gp4gr4gu4gv4h04h44h54h64h74h84h94hb4hc4he4hf4hg4hj4hk4hl4hm4ho4hp4hq4hs4ht4hv4i14i24i34i54i64i74i84i94ia4ib4ic4id4if4ih4ii4ij4ik4il4im4in4iq4is4j04j14j24j34j44j54j74j94ja4jb4jc4je4jf4ji4jj4jk4jm4jp4jq4jr4ju4jv4k04k14k24k64k74k94ka4kb4kc4kd4ke4kf4kg4kh4ki4kl4km4kn4ko4kp4kr4ks4kv4l14l24l44l54l94la4lb4lc4le4lf4lg4lh4li4lj4lk4ll4lm4ln4lp4lq4lr4lu4lv4m04m14m34m44m54m64m74m84m94ma4mb4mc4md4me4mf4mg4mh4mi4mj4mk4ml4mp4mt4mu4n14n24n34n44n54n64n74n84n94na4nb4nc4nf4ng4ni4nj4nk4nl4nm4nn4no4nq4nr4ns4nu4nv4o04o14o24o44o54o64o84o94oa4ob4oc4od4oe4of4og4oi4oj4ok4ol4on4oo4op4or4os4ot4ou4p04p14p34p44p54p64p74p84p94pa4pb4pc4pe4pf4pg4pi4pj4pl4pn4pp4pq4pr4ps4pt4pv4q04q14q24q34q44q54q64q84qa4qb4qc4qd4qg4qh4qi4qj4ql4qn4qo4qp4qq4qr4qs4qt4qu4qv4r04r14r24r34r54r74r84ra4rb4rc4rd4re4rf4rg4rh4ri4rj4rk4rl4rm4rn4ro4rq4rr4rs4rt4ru4rv4s04s14s24s34s54s64s74s94sa4sb4sc4sd4se4sf4sh4si4sj4sk4sl4sn4so4sp4ss4st4su4sv4t04t14t34t44t54t64t84t94tb4td4th4ti4tj4tk4tl4tm4tn4to4tq4tr4ts4tt4tu4tv4u24u34u54u74u84u94ua4ub4uc4ue4uh4ui4um4uo4up4uq4ur4us4ut4uu4uv4v04v14v44v54v74v84v94va4vc4vd4ve4vg4vh4vi4vj4vk4vl4vm4vn4vo4vp4vq4vr4vs4vt4vu4vv50050250350550650750a50b50c50d50e50f50g50h50i50j50k50l50o50p50q50r50s50t50v51051151251351451551651951a51d51f51g51i51j51k51l51n51o51u51v52052252352452552652752852952a52c52g52h52i52j52l52m52n52o52p52q52t52u53053153253353453553753853953a53d53e53f53g53h53m53n53o53p53q53r53s53u53v54054154254354654854954a54b54c54d54e54f54h54i54j54k54l54m54n54o54q54r54s54t54u54v55055155355455755855a55d55e55f55h55j55l55o55p55r55s55t55u55v56056156356456556656756856a56b56c56d56e56f56g56h56i56k56l56n56o56p56q56s56u56v57257357457757857a57b57c57d57e57f57g57h57j57k57l57n57o57p57q57r57s57t57u57v58058158258358458558658758858958a58b58e58f58g58h58i58j58l58m58n58o58p58r58s58t58v59059159259359659759859959b59c59e59f59g59i59j59k59l59m59o59p59q59t5a05a15a25a35a55a65a85a95aa5ac5ad5ae5af5ag5ah5ai5ak5al5am5an5ao5ap5ar5as5at5av5b15b25b35b55b65b75b85b95ba5bb5bc5be5bf5bg5bh5bj5bk5bl5bm5bn5bo5bp5bq5br5bs5bt5bu5bv5c05c25c35c45c55c65c75c85c95ca5cb5cc5cd5ce5cf5cg5ci5cj5ck5cm5cn5co5cp5cr5cs5ct5cu5cv5d05d15d25d45d55d65d75d85d95da5db5dc5dd5de5df5dg5dh5dk5dl5dm5dn5do5dp5dq5dr5ds5dt5du5dv5e05e15e25e45e55e65e85ea5eb5ec5ed5ee5eh5ei5ej5el5em5en5eo5eq5er5es5et5eu5ev5f05f15f35f45f55f65f75f85f95fa5fb5fc5fe5fg5fi5fj5fk5fl5fm5fn5fp5fq5fr5fs5ft5fv5g05g25g45g55g65g75g85ga5gc5ge5gg5gj5gl5gm5gn5go5gp5gs5gt5gu5h05h15h25h35h45h55h65h75h85ha5hb5hc5hd5hf5hg5hh5hi5hl5hm5hn5ho5hp5hq5hs5i05i15i25i55i75i85i95ia5ib5ic5id5ie5if5ig5ih5ij5ik5il5im5io5ip5iq5ir5is5it5iu5iv5j05j15j25j35j45j55j65j75j85j95ja5jb5jc5jf5jg5jh5ji5jj5jk5jl5jm5jn5jq5js5ju5k05k15k25k45k55k65k75ka5kb5kc5kd5ke5kf5kg5kh5kj5kk5kl5kn5ko5kp5kq5ks5kt5kv5l15l35l55l65l75l95la5le5lg5lh5li5lj5ll5lm5ln5lo5lp5lq5ls5lu5m25m45m55m65m75m85m95mb5mc5me5mf5mg5mh5mi5mj5mk5ml5mm5mn5mo5mp5mr5ms5n05n15n25n35n55n65n75n85n95na5nb5nc5ne5nf5ng5ni5nk5nl5nm5no5np5nq5nr5ns5nu5nv5o15o25o35o45o55o65o75oa5ob5oc5od5oe5og5oi5oj5ok5om5on5oo5op5oq5or5os5ot5ou5p05p15p25p35p45p55p65p75p95pa5pb5pc5pd5pe5pf5ph5pj5pl5pm5pn5po5pr5ps5pt5pu5pv5q05q35q45q55q65q85q95qa5qb5qc5qd5qe5qf5qg5qi5qk5qm5qn5qo5qp5qq5qr5qs5qt5qu5qv5r15r25r35r45r55r65r75r85r95ra5rb5rc5rd5re5rf5rh5ri5rj5rk5rl5rm5rn5ro5rp5rq5rr5rs5rv5s05s25s35s45s55s65s75s95sa5sc5se5sf5sg5si5sk5sl5sn5so5sp5sq5sr5ss5st5su5sv5t05t15t25t65t85ta5td5te5tf5tg5th5ti5tk5tm5tn5tq5tr5ts5tu5tv5u05u15u25u35u45u65u75u85ua5ud5uf5ug5uh5ui5um5un5up5ur5us5ut5uu5uv5v15v25v35v45v55v65v75v85v95va5vb5vc5vd5ve5vg5vh5vi5vj5vl5vm5vn5vo5vp5vr5vs5vt5vu5vv60060160260360460560660760860960a60b60c60d60e60f60g60h60j60k60l60m60n60o60p60q60r60t61261361561761861961a61b61c61d61e61f61g61h61i61j61k61l61m61n61o61p61q61r61s61t61u61v62062162262362462562762962a62c62e62f62g62h62i62j62k62l62m62o62p62q62t62u63063163263363763863963a63b63c63d63e63f63h63i63j63k63l63m63n63o63q63r63s63u63v64064164264364464564664864964a64b64c64d64e64f64g64h64i64j64k64l64m64n64o64p64q64r64s64u64v65065165265365465565765865b65c65d65e65f65g65j65k65l65n65o65q65r65t65u65v66066166266366466666866a66b66c66d66e66g66h66i66m66n66p66q66s66t66v67067267367467667867967a67b67d67e67f67g67h67i67j67k67l67n67o67p67q67r67t67u68268368468668768868a68b68c68f68g68h68i68j68k68l68o68q68s68t68u68v69069169269369469569669769969a69b69c69d69e69f69h69i69k69l69m69n69o69p69q69r69t69u69v6a16a36a56a76aa6ab6ac6ad6ae6af6ag6ah6ai6aj6ak6al6am6an6ao6ap6ar6as6at6au6av6b06b16b26b36b46b66b86b96ba6bb6bc6bd6be6bf6bg6bh6bi6bj6bk6bl6bm6bn6bo6bp6bq6br6bs6bt6bu6c06c16c46c66c76ca6cc6cd6ce6cf6ch6ci6cj6cl6cn6cp6cr6cs6ct6cu6cv6d06d16d46d56d66d86da6db6dc6de6df6dg6dh6dj6dk6dm6dn6dr6ds6dt6du6dv6e06e16e26e46e56e66e86e96ea6eb6ec6ed6ee6ef6eg6eh6ei6ej6ek6el6em6en6eo6eq6er6es6et6eu6ev6f06f16f26f36f46f56f66f76f86fa6fb6fc6ff6fi6fj6fl6fm6fn6fo6fp6fq6fr6ft6g06g16g26g36g46g56g66g76g86g96ga6gd6ge6gf6gg6gh6gi6gk6gm6go6gp6gq6gr6gs6gt6gu6gv6h06h26h36h46h56h66h86h96ha6hb6he6hf6hg6hh6hj6hm6ho6hp6hs6ht6hu6hv6i06i16i26i46i66i76i86i96id6ie6if6ig6ih6ik6il6im6in6iq6ir6it6iv6j06j16j26j46j56j66j86j96ja6jb6jc6jd6je6jf6jg6jh6ji6jj6jk6jl6jm6jn6jo6jp6jr6js6ju6k06k16k26k36k46k56k66k76k86k96ka6kb6kc6kd6ke6kf6kg6kh6ki6kj6kk6kl6km6kn6ko6kp6kr6ks6kt6ku6kv6l06l16l26l46l56l66l76l96la6lb6ld6le6lf6lh6li6lk6ll6lm6ln6lo6lq6lr6ls6lu6lv6m06m16m26m36m46m56m66m76m86ma6mb6mc6md6me6mg6mh6mi6mj6ml6mm6mn6mo6mp6mq6mr6mt6mu6mv6n16n26n66n76n86n96na6nb6ne6nf6nk6nm6nn6no6np6nq6nr6nt6nu6o06o16o26o46o56o76o86o96oa6ob6oc6od6oe6of6oh6oj6ok6ol6om6on6oo6op6or6os6ou6ov6p06p16p36p56p76p96pa6pb6pd6pf6pg6ph6pi6pj6pk6pl6pm6po6pp6pq6ps6pt6pu6pv6q06q16q26q36q46q56q66q96qa6qb6qc6qe6qf6qg6qh6qi6qj6ql6qn6qp6qq6qs6qu6qv6r26r36r56r66r76r96ra6rb6rc6rd6re6ri6rj6rk6rl6rm6rp6rq6rs6rt6ru6s06s26s36s56s66s86sc6sf6sg6sj6sl6sm6sn6ss6st6su6sv6t06t16t26t46t56t66t96tb6td6te6tf6tg6th6ti6tj6tm6tn6to6tp6tq6ts6tt6tu6u06u26u36u46u56u66ua6ud6ue6uf6ug6uh6ui6um6un6uo6up6uq6ur6us6uu6v46v76va6vb6vc6ve6vf6vg6vh6vi6vk6vl6vn6vp6vr6vt6vu70070570670770870970c70e70f70g70h70i70j70k70l70o70q70r70s70u70v71071271371471571671771a71b71c71d71e71g71i71j71k71l71m71n71o71p71r71s71t71u72172372472672872a72b72c72d72e72f72i72l72m72n72o72p72q72r72u72v73073173273373473573673773873973a73b73c73d73g73h73i73k73l73m73n73o73p73t73u74274374474574674774874b74c74f74g74h74i74j74k74n74o74p74r74s74t74u74v75075275375575675775875975a75c75d75e75f75g75i75j75k75m75p75q75r75s75t75v76176276376476576676776976b76c76d76f76g76h76i76j76k76m76n76o76p76q76r76t76u76v77077177277377477677777877977a77b77c77d77e77f77g77h77i77j77k77l77m77o77p77q77s77t77u77v78078178278378478578778878978a78c78d78e78f78g78h78i78j78k78l78m78n78o78p78q78r78s78t78u78v79079279379479579679979a79b79c79e79g79h79i79j79l79m79n79o79p79s79t79u7a07a17a27a37a47a57a67a77a97aa7ac7ad7ae7af7ah7ai7aj7ak7al7an7ao7aq7as7at7au7av7b17b27b37b57b77b87b97bb7bc7bd7be7bf7bg7bh7bi7bj7bk7bl7bm7bo7bq7br7bt7c07c17c27c37c47c67c77c87c97ca7cc7cd7ce7cg7ch7ci7ck7cl7cm7cn7cp7cq7cs7ct7cv7d07d17d47d57d67d77d87d97da7de7df7dh7di7dk7dm7dn7do7dp7dq7ds7du7dv7e27e47e57e67e77e97eb7ec7ed7ee7ef7eg7eh7ei7ej7en7ep7eq7er7es7et7eu7ev7f27f47f67f77f97fa7fb7fd7fe7fh7fi7fl7fm7fn7fo7fp7fq7fr7fs7ft7fu7fv7g17g27g37g47g67g77g87g97ga7gb7gd7ge7gf7gj7gk7gl7gm7gn7go7gq7gr7gs7gu7h07h17h27h37h47h57h77h87hb7hc7hd7he7hf7hh7hi7hj7hk7hl7hm7hn7ho7hq7hr7hv7i07i17i27i57i87i97ia7ib7ic7id7ig7ij7ik7il7im7in7io7ip7iq7ir7is7it7iu7iv7j17j27j37j47j57j67j77j87j97ja7jb7jd7je7jf7jg7jh7ji7jj7jk7jl7jm7jn7jo7jp7jq7jr7js7jt7ju7jv7k07k17k27k37k47k67k77k87ka7kb7kc7kd7ke7kf7kg7kh7ki7kj7kl7kn7kp7kq7kr7ks7ku7kv7l07l17l27l37l47l57l67l77l87la7lb7lc7lf7lg7lh7li7lj7lk7ll7lm7lp7lr7ls7lu7m07m17m37m47m57m67m87m97ma7mb7mc7md7mf7mg7mh7mi7mj7mk7ml7mm7mn7mo7mp7mq7mr7ms7mt7mv7n27n37n67n87n97na7nc7nd7ne7nf7ng7nh7ni7nj7nk7nm7no7np7nq7nr7nt7nv7o07o17o27o37o47o57o67o77o87o97od7of7og7oh7oj7ok7ol7om7on7op7oq7os7ov7p17p27p37p57p67p77p87p97pa7pb7pd7pe7pg7ph7pi7pj7pk7pl7pm7pn7po7pq7ps7pt7pv7q27q37q57q77q87qb7qc7qe7qg7qh7qi7qj7qn7qo7qp7qq7qr7qs7qt7qu7qv7r07r27r37r57r87ra7rd7re7rg7rh7rj7rk7rl7rm7ro7rp7rq7rr7rs7rt7ru7rv7s17s27s77s87s97sc7sf7si7sk7sm7so7sp7sq7ss7st7sv7t07t27t67t77t97tb7tc7td7te7th7ti7tj7tk7tl7tm7tn7to7tp7tq7tr7ts7tt7tu7u07u17u27u37u47u57u77u87u97ua7ub7uc7ue7uf7ug7uh7uj7uk7um7un7uo7up7uq7ur7us7ut7uu7v27v37v47v57v67v87v97va7vb7vc7vd7ve7vf7vg7vh7vi7vj7vl7vm7vn7vo7vp7vr7vs7vt7vu7vv80080180480580680780980a80b80d80e80f80g80i80l80m80n80o80p80r80s80t81081181681881981a81c81d81e81g81i81j81k81n81o81p81r81t81u81v82082282382482582682782882982a82f82h82i82j82k82l82m82n82o82p82q82r82s82u82v83083183283383483583683883a83c83d83e83g83h83i83j83k83l83m83n83o83q83r83s83t83u83v84084184284484684784884984a84c84d84f84g84h84j84l84m84o84q84r84s84u84v85085185285485585785885985a85b85c85d85f85g85i85j85k85l85m85n85o85p85t85u86086486586686786886986a86c86g86h86i86j86k86l86n86o86p86q86r86s86u86v87087187287487587687787887987a87c87d87e87f87g87h87i87j87k87l87m87n87p87q87r87s87t87v88088188388488588688788988c88d88e88f88g88h88i88j88k88l88m88n88o88p88r88s88t88u88v89089289389489589689789989a89c89d89e89g89h89i89j89l89n89o89q89r89u89v8a08a78a88aa8ab8ae8af8ah8ai8aj8ak8al8am8an8ao8ap8aq8ar8as8at8av8b08b18b28b48b58b78b98ba8bb8bc8be8bf8bh8bi8bj8bk8bl8bm8bn8bp8bq8br8bt8c08c18c28c48c58c68c98cc8cd8ce8cf8cg8ch8ci8cj8cl8cm8cn8co8cp8cq8cr8cs8ct8cu8cv8d08d18d28d38d48d58d68d78da8dd8de8dg8dh8di8dj8dk8dl8dm8dn8do8dp8dq8dr8ds8dt8dv8e08e18e28e38e48e58e68e78e88e98eb8ec8ed8ee8ef8eg8eh8ej8ek8el8em8en8eq8er8es8et8ev8f18f48f58f68f78f98fa8fb8fc8fe8ff8fg8fh8fi8fk8fl8fn8fo8fp8fq8fr8fs8ft8fu8fv8g08g18g28g38g58g78g88ga8gb8gc8gd8ge8gg8gh8gj8gk8gl8gm8gn8go8gp8gq8gs8gu8gv8h08h28h38h58h68h78h88h98hb8hc8hd8he8hf8hg8hh8hi8hk8hl8hm8hn8hp8ht8hv8i38i68i78i98ia8ib8ic8id8ie8if8ih8ii8ij8im8in8ip8iq8is8it8iu8iv8j08j18j28j38j48j58j88j98jc8jd8jf8jh8jj8jk8jl8jm8jn8jo8jp8jq8jr8js8jt8ju8jv8k08k68k78k88k98kb8kc8kf8kg8kh8ki8kj8kk8kl8km8kn8ko8kp8kq8ks8kt8ku8kv8l08l18l28l38l48l58l78l88l98la8lb8lc8ld8le8lf8lg8lh8lk8ll8lm8ln8lo8lr8ls8lt8lu8lv8m08m38m58m68m78m88m98ma8mb8mc8md8me8mf8mg8mi8mk8ml8mn8mp8mq8mr8ms8mt8mu8mv8n08n18n28n48n78n88n98na8nb8nd8ne8nf8nh8ni8nj8nk8nl8nm8nn8np8nq8nr8ns8nv8o08o28o38o48o58o88o98oa8od8oe8of8og8oh8oi8ok8ol8om8oo8op8oq8ou8ov8p08p18p28p38p48p58p6anqanransanuanvao0ao1ao2ao3ao5ao6ao7ao8ao9aoaaobaocaoeaofaogaohaoiaojaomaooaoqaoraosaotaouaovap0ap2ap6ap7ap8ap9apaapfapgaphapiapjaplapmapnapoappapqaptapuapvaq1aq2aq3aq6aq9aqaaqbaqcaqdaqeaqfaqgaqhaqiaqlaqmaqoaqpaqsaquaqvar0ar1ar2ar4ar5ar7ar8ar9arbarcardareargarhariarjarkarlarmarnarrarsaruas0as2as3as4as6as7as8as9asaasbasdaseasgashasiasjaskaslasmasoassastasuasvat0at1at4at5at6at7at8at9ataatcatdateatfatgathatiatjatkatlatmatnatoatpatqatrattatvau0au2au3au4au5au6au7auaaubaucaudaueaufaugauhauiaujaukaulaunauoaupaurausautauuauvav1av3av5av6av7av8av9avbavcavdaveavfavgaviavjavkavlavmavoavpavqavravuavvb01b03b05b06b07b08b09b0ab0cb0db0eb0fb0gb0hb0ib0kb0lb0mb0nb0qb0rb0sb0tb0ub0vb10b11b12b13b15b16b17b18b19b1ab1bb1cb1db1eb1gb1ib1jb1kb1lb1nb1pb1qb1rb1sb1tb1ub1vb20b22b23b24b25b26b27b28b29b2bb2cb2eb2hb2ib2jb2kb2lb2pb2rb2sb2tb2vb31b33b34b36b37b39b3cb3hb3ib3jb3kb3mb3nb3ob3qb3sb3tb40b41b44b45b46b47b48b49b4ab4bb4cb4eb4fb4gb4hb4ib4jb4lb4mb4nb4ob4qb4rb4sb4tb4vb50b51b52b53b54b55b56b57b58b59b5ab5bb5db5eb5fb5gb5kb5lb5nb5ob5pb5qb5rb5sb5tb5ub5vb62b63b64b65b66b67b68b6ab6cb6db6eb6fb6gb6hb6ib6jb6lb6mb6ob6qb6rb6sb6tb6vb70b71b72b74b76b78b79b7ab7bb7cb7db7eb7fb7hb7ib7jb7kb7lb7nb7ob7pb7qb7rb7sb7tb7vb81b82b84b85b86b87b88b89b8bb8cb8db8fb8hb8ib8jb8kb8ob8pb8qb8rb8vb90b92b93b94b95b96b99b9ab9bb9cb9db9eb9fb9gb9hb9ib9jb9kb9lb9mb9nb9ob9pb9qb9rb9sb9tb9ub9vba0ba2ba4ba5ba6ba7ba9baababbacbadbaebafbahbajbakbalbanbapbarbasbatbaubb0bb1bb4bb7bb8bb9bbabbbbbcbbdbbfbbhbbibbmbbnbbobbpbbqbbrbbsbbvbc3bc5bc6bc7bc8bcabccbcgbchbcibcjbckbclbcmbcnbcobcpbcrbcsbctbcubd0bd1bd2bd5bd6bd7bd9bdabdbbddbdgbdibdjbdkbdmbdnbdobdqbdrbdtbdubdvbe0be1be3be4be7be8beabebbecbedbeebefbegbehbeibejbelbembenbeobepbeqberbesbetbeubevbf0bf1bf2bf3bf4bf5bf6bf7bf8bf9bfebfibfkbflbfpbfrbfsbftbfubfvbg0bg1bg2bg3bg4bg5bg7bg8bg9bgbbgcbggbgjbglbgnbgpbgqbgsbgtbgubgvbh0bh1bh2bh3bh4bh6bh7bh8bh9bhbbhcbhfbhibhjbhkbhlbhmbhnbhpbhqbhrbhsbhtbhubi0bi1bi2bi3bi4bi5bi6bi7bi8biabibbiebigbihbiibijbikbipbiqbisbitbj0bj1bj2bj4bj6bj7bj8bj9bjabjbbjdbjebjfbjgbjhbjibjkbjmbjpbjqbjrbjsbk0bk1bk2bk3bk4bk5bk8bk9bkbbkcbkdbkfbkgbkibkjbkkbkmbkobkpbkrbktbkubl0bl1bl2bl3bl6bl7bl8bl9blablbblcbldbleblfblgblhblkbllblmblnblpblrblsbltblublvbm0bm1bm2bm3bm4bm5bm6bm7bm9bmabmbbmcbmdbmebmfbmgbmhbmibmjbmkbmlbmmbmnbmobmqbmrbmubmvbn2bn3bn4bn7bn9bnbbndbnebnfbngbnhbnibnjbnlbnmbnnbnpbnqbnrbnsbnubnvbo0bo9boabobbocbodbogboibokbolbonbopboqborbosboubovbp1bp3bp5bp6bp7bp8bp9bpdbpebpfbpgbphbpibpjbplbpmbpobppbpqbprbpsbptbpubpvbq0bq2bq4bq5bq6bq7bq8bq9bqabqcbqdbqebqfbqhbqjbqkbqmbqnbqobqpbqqbqrbqsbqtbqubqvbr2br3br4br5br8brabrbbrcbrdbrfbrgbrhbrjbrmbrobrpbrsbrubs1bs2bs3bs5bs6bs7bs8bs9bsabsbbscbsdbsgbshbsibsjbskbsmbsnbsobspbsrbssbstbsubt2bt4bt5bt7bt8bt9btabtbbtcbtfbtgbthbtibtjbtkbtlbtmbutbuvbv0bv1bv2bv3bv4bv5bv6bv7bv8bv9bvabvbbvcbvdbvebvfbvgbvhbvibvjbvkbvlbvmbvnbvobvpbvqbvrbvsbvtbvubvvc00c01c02c03c04c06c07c09c0ac0cc0dc0ec0fc0kc0lc0nc0oc0pc0qc0rc0sc0tc0uc0vc10c11c12c13c14c15c16c17c18c19c1ac1bc1cc1dc1ec1fc1gc1hc1ic1jc1kc1lc1mc1nc1oc1pc1qc1rc1sc1tc1uc1vc20c21c22c23c24c25c26c27c28c29c2ac2bc2cc2dc2ec2fc2gc2hc2ic2jc2kc2lc2mc2nc2oc2pc2qc2rc2sc2tc2uc2vc30c31c32c33c34c35c36c37c38c39c3ac3bc3cc3dc3ec3fc3gc3hc3ic3jc3kc3lc3mc3nc3oc3pc3qc3rc3sc3tc3uc3vc40c41c42c43c44c45c46c47c48c49c4ac4bc4c\",\n            \"creationDate\": \"0234002b0nun02ap002b002b02u8002b002b002b002b002b002b002b002b0lad002b002b002b002b002b002b002b0eq9002b002b002b02li02fs03ii002b002b01or002b00lk00nc00ks002b002b002b002b03ii0nr0002b002b002b0234002b023403ii002b002b002b002b002b002b0ir8002b002b0234002b002b002b00lk002b023403ii002b02sc00qa002b002b002b0234002b0h9j002b002b002b012m0o110lcu002b002b002b002b0bhp002b002b002b002b012k0lad014d002b01bu002b027k002b03ii002b122r002b002b002b00sr00mn00pt046400pi00sr02bs00kh00md0o38002b00nj0c4t002b0o500234002b00mu0lad002b002b0234002b002b002b002b002b02tf002b002b002b0472002b02fs0lad0lad002b00nc002b00nu002b04f3002b002b002b00o8002b002b0nrc002b002b002b00o800mn002b0hlm002b002b002b002b023409f2002b03ii002b08ic002b08ic002b0234002b002b002b002b002b002b00o800mn00l600mn02c3002b002b002b02340234002b002b002b077o002b002b02r9002b0nm6014d002b002b002b0234002b043e002b002b002b002b05gr002b002b002b0lad0234002b03ii002b002b002b002b0lad002b002b0ocg002b002b0234002b002b0lad002b002b002b002b0234002b002b002b0865046n002b00o800of02b7002b002b002b0lad082403ii046k071k002b002b002b0o1d002b00sr00mn002b03ii017l014d002b002b002b002b002b0lad027r002b06g40mf4002b002b002b0qrj002b00l600qn0lcu00mn002b002b0b81002b02340o0q0p0g002b002b0234002b002b002b002b0123002b0arg002b0lad039n0234031k03450234002b002b002b002b002b002b00tn002b002b002b002b002b002b002b002b002b002b02r902ap03ii002b002b002b002b0nss05jg002b002b002b002b002b03ii002b002b002b002b002b002b002b002b002b02h802lu00nj00lk02340529002b042i02340234002b03ii0234023404av002b002b0lag002b002b02340234002b002b024v00l6002b0234002b0h4h01bu02li0234002b002b002b002b06us002b002b05kq002b002b07lk06tb002b002b002b002b02ut002b0234002b002b002b077o002b002b023400k3002b06060lad002b002b002b002b002b002b0234002b002b07lk0lad002b002b002b002b002b00o800sr00kh02c3002b002b002b002b0kn0002b0lad002b02ap0234002b002b002b002b002b00pi00nj017l02c3002b002b0dbv0fso002b0361002b00lk00pt02bs00j700md00md00lo00kh02ap02340bqo03ii002b002b002b002b002b002b002b002b00md00mu00mu002b031k0np6002b002b002b002b002b002b002b002b002b02r9002b0eel0234002b002b002b04ec1i8n002b01bu002b002b045k002b002b002b002b002b0lad0234002b0234002b002b002b002b0234002b002b002b002b002b002b002b002b002b00nc00js002b002b002b002b0eer002b002b002b002b002b002b002b002b002b002b002b002b002b002b0472002b002b0lad002b002b00l6002b023403ii02en067u03ii011l03ii03ii002b00md002b08l8002b0234002b0ocg0470002b03ii002b002b002b002b002b0lad075l002b002b002b002b002b02bs00nj00mn00l30472002b002b002b002b11u8073q002b00kv00qa002b002b0234002b00nj00nu00nc00mn014d0456002b002b00of00o800ks00pt00pt00md002b002b00mn00md0c70002b002b002b002b08t4002b01520b09002b002b046h002b002b0234002b002b002b002b02sj00lr002b002b0234002b00o800of00tn002b002b02t0002b002b0lad002b0gil002b002b08li002b0o5n002b002b0234002b002b002b002b002b002b002b002b002b002b002b0g4u002b002b0234002b03ii002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b04nr002b002b002b0lad002b002b002b02h8002b002b002b002b002b0lad002b00nj00lr002b0nss002b002b002b002b002b02u4002b0401002b002b07rg002b002b03ii002b0lad002b02c303ii002b0hu0002b024f002b002b002b0ael0234002b0lad002b002b002b002b002b002b002b055509dk002b02340234002b002b0kti002b002b002b002b00qa05mq00nj00qn002b002b002b002b002b0pq80lad0dbv002b002b002b02h800pi0bpl002b01pf002b002b002b002b00mu002b002b0o7300o800pi02vi002b002b00of002b002b002b002b026408a3002b08bp02ut002b002b0472002b002b002b002b002b023401pf002b002b002b002b0234023400o80234002b05on05on002b0v40002b002b002b002b128712nn002b0nve002b002b002b0grv002b002b002b002b002b02340234002b02li002b002b03ii002b0lad002b002b002b002b002b002b002b02h802n3002b0234002b0o3p002b002b002b0234002b0lad002b002b0o5o0lad03fo002b06ub0lad0o5e0lad023408dr0lad002b002b002b002b002b002b0uu9002b00sr0o20002b00nu002b002b002b02sl002b0nss002b002b002b002b0234002b002b002b02s9002b0lad002b002b0o52002b024s0234002b03i4002b002b002b002b0lad002b002b002b002b002b002b002b002b08ic002b002b002b002b002b03dc002b002b002b0234132902s713c507vf00sr002b002b0234002b002b002b002b002b002b002b002b002b00mn002b002b002b002b002b002b002b002b002b002b002b002b0vue002b002b002b0a9b002b0234002b002b031k002b029t023400mu002b036o09f20c4m002b002b002b002b002b002b0o3q01p2002b0lad06pa002b03vi002b002b002b002b002b00l6017l0lad002b002b0lad002b002b002b02tf06ub002b002b0234002b002b002b002b002b002b002b002b002b002b0c4803ii0lad08ej0inh002b002b002b002b002b0lad002b00ks0lad023402340lad002b002b0b0905qt00pi002b002b002b002b002b0lad0nk4002b002b002b002b002b002b002b01uo023402340861002b002b002b002b002b0234002b002b00nu00mn00q0002b002b002b002b002b002b002b002b002b002b002b002b0cpl002b002b002b00of00sr048q002b002b002b002b002b002b0234002b02c3002b002b002b002b02b700lk045k002b00md00kh002b002b002b00q0002b017l017l00kh0o8p02c3002b002b0lad002b017l002b002b002b002b02340lad002b002b002b0o7d002b02bs002b1055002b002b0234002b089v002b002b002b00nu00tn002b02b7002b002b03ks0bvb0234002b002b002b002b00qn00of02340234002b024f002b002b0lad002b002b0234049q0lad02340lad002b002b0234002b002b00pi00mu0675002b002b002b002b002b00q003ii0234002b002b03ii002b002b002b002b02vi002b02li08te002b002b002b0a3600nc01bu002b0ffl002b002b002b00nj014d00q0048q002b0can03ii002b002b002b002b002b023405mg002b002b13ie002b08cc03ii02vi002b0o7j002b002b002b002b002b02ap03ii002b0n0d002b0g4u002b002b002b002b002b002b002b02en002b02fs0fh7002b00q0002b02mu045603ii07lr002b03ii002b002b002b00l6002b0lad00kh00nj0nub00ko002b002b002b002b02bs002b002b0lcu002b002b00sr017l002b00md002b0lad12jh04pa002b002b02t00nse002b002b002b002b03ii00of00js00mn00pi002b002b02340rf2002b0234002b0152002b002b002b002b002b002b002b002b002b002b002b002b0ffl002b002b002b002b002b002b002b002b002b0lad002b0o0q002b0234002b03i4002b002b002b02bs002b0h9j0lad0nu9002b002b002b02tf002b002b002b002b002b002b002b002b002b02ig002b00nu00qa047208br00nu00sr049c002b002b002b02340c4m002b002b002b002b002b0234002b002b002b0234002b002b002b002b0lad002b002b002b03vf002b002b002b002b002b0ceo00mn02c7002b002b002b0b4h02tf02rb02bs0do502h8002b0q3700nj00qa002b023403dc00mn002b002b002b002b002b002b0bi0002b02ut002b00nj02c802li002b00nc00l600nu00pt02li002b02li023409mc00pt002b00l600l6002b002b002b002b002b002b002b00qa00qa002b03ii002b002b002b08ic002b002b067102c3002b04uc05on0ugn002b002b002b002b002b0n0d002b03oo0bkp00q000nu00mu002b01kl002b0234002b002b002b0cl700sr07mb0rc8002b00pi00nc002b00k3002b0eke00pi02tf002b002b002b02340nm600nu00nc00of00nc02tf002b002b002b0c4803dc002b002b002b002b002b00lr00tn0234002b00sr0234002b0ceo002b00o80152002b002b01j2014d002b06e502340234002b0234002b0o9g002b00o8002b002b002b013700nj002b0234002b002b029t02340no1002b002b002b002b002b08bp002b002b0q3700lk00qn002b00sr014d002b05dl002b0lad002b002b00nu00ks00pt00l602en002b013f00md03ii002b04i10234002b05l00234002b002b002b002b002b00nu002b002b002b0urg002b002b02tf002b002b002b002b0jb800o800qa01bu02fs002b002b002b0o7d002b002b002b002b03o2002b002b002b002b002b002b00nu00md069100l600sr0lad002b002b002b0ntu00k30lad09f20lad03th08j2002b002b0bn4002b002b03ii002b002b002b0o3o017l002b00l600l60ag500md02ap0lad02c3002b03ls00of013j00js00q002bs002b002b002b002b002b002b002b002b002b03ii002b0o7n002b0aqf03c5002b002b002b002b002b002b0557002b0lad002b00nc002b002b02in00ks047p0ihg002b03ii0o01002b002b002b002b002b00qa0g8i002b002b002b00mn00nu00pt002b00mn00lo06ku002b002b002b002b002b00q000mn00nu00of00nc00qa00pi00nj00l300mu00tn053r002b036o02li02ap002b03ii002b002b00sr002b01or002b002b00sr00sr02340epj002b002b002b0b21002b002b002b046k03so07n8002b002b002b00l600qn002b002b002b002b002b002b002b002b04ph0cf3002b046h00l3002b002b00qa002b02bs0lad002b002b002b002b0lad002b0b4o0234023402c3002b023403oq0aep0lad0lad02s900q0002b002b0lad002b002b02li002b00of00of00sr02bs03ii002b0b75002b002b002b002b02340151002b013f00l6002b00o802tj002b002b002b002b00o800md00l600qa00mn03ii03ii00lo00sr002b002b002b0234002b0234002b002b002b002b05aj002b002b002b01pf03ii002b0a4q00mn002b002b002b002b002b002b0152002b002b023405so002b002b02340234002b02li002b03mr00mu002b00of00pi002b002b002b02t0002b002b002b002b002b093i002b002b024s00of00nu00q000o8002b00md002b002b013700pt06dd00l302bs002b002b0oaj002b079n0234002b002b002b002b002b002b03ii002b002b002b0lcu002b002b002b002b002b00of03cc002b02t0002b002b002b002b002b002b027k002b0234002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b002b002b07bj002b023401od00pt002b002b002b002b002b002b0lad068m002b002b023414f806q6002b002b017l00pi0234002b02340lcu002b002b0hu0002b0lad00md00nc00mu02c3002b00o800lk002b002b002b002b002b002b04k60eol0234002b002b002b002b03ii002b002b002b002b002b002b002b0234002b002b002b002b002b02340lad002b08ah02lf002b002b0o69002b002b002b002b0lad02bs02b7002b0d9i0v4n002b002b002b002b002b002b10i60lad00sr00qa002b002b03dc02en002b00o8049c002b002b0234002b002b002b002b002b002b002b002b002b0lad002b023400sr09a4002b002b03ii002b03ii002b014d014d002b059303ii00lo00nu00j7002b002b03ii002b0lag002b03ii002b002b002b02340234002b002b0lad00nc002b0lad002b00tn002b002b002b054j0nlr002b0234002b002b032802s90234002b002b0ksm002b002b0234002b002b002b0mem02fs002b0bhp002b002b00nu00k302en002b0ntp0bnq002b002b002b002b0v3f0qiu002b002b002b03ii0gim002b002b002b002b002b002b0lad002b03jv00lk00tn002b12an0123002b002b0234002b002b02bs002b00sr024s02bs03ii002b002b002b002b002b002b002b002b002b0kt8002b02340c410234002b0nrq002b002b002b00pt02li0o5e08hk0bk6002b0nm8002b023400lk00nu0i150234002b002b02r901v4002b002b002b002b0234002b002b002b002b002b0234055r06rq002b002b002b002b002b002b002b002b002b002b02s8002b002b06rg023403ii002b02340234023409l600mu00mn002b03ii002b00lo002b002b002b00nc00nu002b03ls0lcu002b002b002b002b023406hv00md045t002b023402sg0205023403lh002b002b0234002b002b002b002b002b002b0lad002b002b002b002b002b02fs02hs0o38002b002b002b002b002b002b00o80lad02s5002b002b0lad05on002b02340bmi00l600sr002b0152002b002b002b002b002b002b002b00of01bu02ap0234002b00q0002b002b038i03ea002b08e80234002b002b002b002b002b002b002b0ag5002b002b002b002b002b0234002b002b0o38052j002b0bnq002b002b002b002b002b002b023406iv0234002b002b002b00mn002b0l0b002b002b002b002b002b002b0eq5002b002b0aod0lad002b002b023400mn002b002b002b11o2002b002b002b00md002b03o2002b002b002b00lk00fa002b002b002b002b002b0ael0o1s002b023403th002b002b026s00mn002b002b0vc6002b002b126m002b0lad12jp0nog0lad0234002b002b0apg002b002b002b002b002b002b002b002b002b002b063a002b002b002b002b0lad002b02l1002b002b002b00jl002b002b05ha002b00nj00mn002b03ls03ls002b0bgb0234002b002b002b002b002b0lad0lcu002b002b02340234002b002b0lcu0fs40lcu0234002b002b002b0234002b08c9002b002b002b0371002b002b002b002b0ekl01pm002b02li002b002b002b002b02n2002b002b002b0lad0234002b0lad002b002b002b002b002b023412810o4i002b002b002b0nu9002b002b0lad002b12q6002b002b002b002b002b0o3802340234002b002b002b002b0234002b02340234002b002b002b002b0234002b00js002b002b002b002b0nq202fs002b0234002b002b0nnc00of002b002b049q002b02vp0234002b0lad002b002b02340o0q002b00nc00qn0be20lad002b023414v700of00nc002b04mm002b002b002b0o0q03ii0lad002b0234002b002b03oo017l00qa00q0002b002b0234002b002b002b02fs03ii0lcu02en002b002b002b002b00qa04he002b002b002b0345002b002b002b002b002b0234002b002b002b002b03ii002b002b0614002b002b002b0415002b002b0234002b00of00pi014d002b002b002b002b002b0456002b002b0lad002b002b0234002b09f20lad0lad002b01kl002b02ap02b700mn01330uuj03ii02am002b002b01or03ii002b10ek03mr089s002b002b00tn0nhk00sr00of00sr00mn00mu01qv0361002b002b032l002b002b0234002b00mn00m6002b002b0234002b002b02nu002b002b002b002b002b002b002b0lcu002b00lo00nu0lad002b002b0234002b0lag002b0vtt002b0lad002b002b00nu08bp0234002b002b002b023400qa00mn002b002b02340234002b00ko00j7002b002b0234002b002b0c48002b002b002b002b002b00sr0234002b002b00nu002b002b002b03ii00e3002b002b002b002b0lad002b02340234023402340cji00sr0bnq0ili0lad002b002b002b002b002b00nc00nu02b702b7002b013300q00aef0234002b0234002b002b002b002b002b002b002b04c200nj015202am06hh00nc00pt00pt002b002b002b002b002b03ii002b0lad06d500tn002b002b002b03f800nu00q000q000q002ap002b08ul02ut002b0234002b002b002b0ob9002b002b002b0234002b002b002b03ii002b002b002b002b002b002b023403ii0lad002b0ksm002b002b002b002b002b002b002b0nvn002b002b10i10o11002b0ctn002b02tq002b002b00mn017l00lo002b002b03280234002b002b002b0lad00qn002b002b002b002b002b002b02tf03ii00of002b002b002b046k002b002b02bs0v4t0234002b002b10pg002b002b0234002b002b029f002b0k46002b0234002b002b002b0234002b002b002b002b002b002b00qa0152002b0234002b002b002b002b0lad002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b002b03ii002b002b002b06k50nmu002b023402bs09oh02li00ks002b0234002b03ii002b002b002b002b04io002b002b049i002b002b0ft100sr03ii002b002b002b002b002b002b002b00sr002b002b002b002b002b002b002b002b00mn002b002b002b0234002b002b00nu00q0002b002b002b002b002b002b002b13bh01u2002b002b002b002b002b002b002b002b002b159o002b002b002b00nc00ko00qn00pt00l600pt002b002b0lad002b002b002b002b00nu002b00nu046k002b002b002b047203i4002b0lad002b002b002b0lad059i02en002b002b03th002b002b002b0234002b002b002b002b002b05la002b03ii08v6002b002b002b0lcu002b0jng03dc002b002b002b149j002b002b0234002b002b002b002b002b002b0lcu0lcu03ii002b03ii002b002b00lo002b002b0593002b0nq6002b002b002b02340imk002b002b002b002b0ihi002b00nc00mn002b02r9002b002b002b002b002b002b002b002b002b0234002b03th002b0lad0234002b002b02c30v4n07qs002b002b002b002b02lj09mc002b002b002b002b002b002b08ee002b002b002b002b002b03ii002b002b002b0234002b02fs002b00qn00nc01370234002b002b002b002b002b002b002b002b03ii002b002b002b0234002b00nu002b002b002b002b002b002b002b002b002b002b002b002b002b002b02li0rd006t803mr002b002b002b002b002b002b002b002b002b002b06c70234002b002b0lad01or0me00o7k12nn00o8002b00of002b002b002b002b002b002b046h002b03dc0nvj002b0h4h002b002b002b0c77002b002b002b0456002b002b0lad002b002b002b00o800nu031400qa00sr00sr002b002b002b0234002b002b0o3p0234002b043e05r40pbl002b002b002b002b002b002b002b002b002b0234002b002b002b002b002b002b002b03ii0gil002b01od002b0mdv002b06pv002b002b02tq00nc002b0lad002b002b002b0234002b002b002b002b002b0lad002b002b03dc002b002b002b0lad0lad002b002b00nu002b002b002b023400nj056l0d0i002b0lad002b002b0472002b002b002b002b00mu002b002b002b0d0i002b002b0lad002b002b002b002b002b0234002b03ii002b002b002b0pk10234002b002b023400pt00mn0lad002b002b002b057i002b03oo002b023402340lad0lad002b002b0nth002b002b0lad02340frj00qn002b002b002b002b0234002b0234002b002b002b002b02kp0hfh002b002b002b002b02t0002b002b002b002b002b002b00nj00md002b002b002b002b002b002b0cqt002b03np002b0234002b10pg002b002b002b002b002b002b002b0lad0cji002b00j7002b002b02u40do5049q002b002b135m002b0234002b002b02ut0234002b002b00nj00md002b0472002b002b026o002b002b002b002b01bu002b02uj0mfe002b002b0lad002b0lad002b00qa02sg002b036o069g002b002b00of00kv002b002b002b002b002b05nk002b002b002b08g601p2002b002b002b002b002b0lad002b02tq002b002b0234002b02fs002b002b002b00of04ec00q00234002b0234002b02340234002b00sr09f200q000mn002b002b002b002b002b002b002b02h802bs002b03ii00nc08cc002b002b002b002b002b002b03be00q0002b02h80a0s002b0ccs002b0nss002b002b002b002b0uus002b083f002b002b002b002b0ufs0lad063h002b02340234002b0lad002b002b002b002b002b002b002b002b002b002b002b00ko002b002b002b002b0o1d002b002b02lm002b0nuo03ii0c480lad002b002b002b002b002b00lk00md00md00l302rh00q012lr002b002b002b002b023402tt02c3002b002b0o28002b0234002b05ha002b002b002b002b02sl08g6002b002b0c9n0o3h02340lad002b002b002b002b0hfh002b002b002b002b0ntf002b0234002b0lad002b002b002b002b002b002b002b002b002b002b00of00qa002b002b002b002b002b002b023402um002b0234002b002b0234023403ii002b002b002b002b00mn00nu00qa048t0biv02bs02c3002b002b002b002b03dc03th002b0hgn002b002b002b002b089h0bvb002b002b002b02340lad002b02en002b002b002b06e5002b02li00mn0lcu002b002b002b0v7a002b03ii0lad002b002b03th002b01pm002b002b0234002b002b002b002b002b002b002b03ii002b02340lad023400mu002b0152002b00md14fr1288002b002b002b02sg002b00l300pt0472002b002b002b002b002b002b00of0234002b02h802340234002b137a002b002b00lk00qn02on00q0002b002b06id002b002b002b0234036o002b002b002b00l6002b0lad002b002b08d9002b002b002b002b002b002b002b11o200sr002b044v002b00l6002b0lad00sr00js00mu002b002b0lcu04ih002b02rv002b02li002b08dr02340234002b0234002b002b002b002b002b002b002b002b0qu4002b002b0lgt00l600nc017l002b002b002b0234002b0lad002b002b002b002b002b002b0cec0234002b0lad002b002b002b002b0ggd032l002b002b002b0234002b002b002b0234002b002b002b002b002b002b002b002b01pf0234002b002b00qa0lad002b04d00234002b002b0lad002b0lad002b002b0lad002b002b0234002b002b002b002b002b002b002b002b002b04ec06ku002b002b00mn00nu002b11i9002b002b023402s700nc0152002b06ju002b002b02fs00mn00mn00o800nu0472002b002b0234002b00tn036o002b07fu07kv002b002b002b002b002b002b002b002b06id002b002b0lad002b023405la002b02h8002b0o1r002b026o023400sr00l600nc002b002b002b002b002b002b002b0fbd0aqf002b002b002b00nc002b002b002b0lad002b002b002b002b002b00o800mu002b002b002b002b002b002b002b002b00o800md00mu00sr00md00md02h8002b002b002b002b002b002b002b00o8002b002b002b002b002b002b002b0lcu002b00md00pt0234002b002b002b00nj002b002b0371002b0lad002b002b002b002b0c4t002b0lcu0bf500lk01370234002b002b002b002b002b002b002b0lad002b0234002b002b05dl03jv002b078r002b00o800md00pi002b002b002b002b002b025d012m00pi047700mu002b03dc002b01370o1s002b002b002b002b002b00md002b002b00sr02c30234002b002b00l600pi002b077o002b002b002b00q0002b030b00nj06pa0v4n002b02340234002b00o800o8061m002b002b002b03ii002b002b002b002b002b002b002b0234002b0ge902ii002b002b03f700nu00nu002b002b002b03ii00sr00lk00q002ut03ii00nu00mn02bs002b002b002b002b031a02340234002b002b002b002b0dda002b002b002b0ntb00o800mu0kov002b0nu4002b03ii002b0bf500nu00kl00q000q000jl00q0002b03ii002b00sr002b002b00md00q0002b00nu002b01bu00md002b002b002b002b002b002b02in002b00kl002b0ekj002b002b002b0234002b002b002b002b07ii002b002b002b002b002b049c002b002b002b002b02en01p2002b002b002b002b03ii015200k303ii00nu00md00qa00sr03ii13m502nb00nq00mn07jp046k00pi002b013300mn002b002b002b00q0002b00mu002b0265002b002b002b002b002b002b002b002b002b002b03ea002b002b002b002b002b0g5h002b002b002b002b002b067j00pi05mg002b07kv0234002b002b002b002b002b0bkp002b00q006tb002b014d0bqk03ii0234002b002b002b002b024s03th002b00o800sr002b0lcu002b002b002b036101fe002b01or002b002b0hlm002b03be0234002b002b0lad023403ii002b002b002b03ii002b03oq002b00sr00pi03ii002b00nu00of00q0013300nu002b0234002b002b0b6n002b0234002b002b00sr002b0lad0lcu02h802lu002b002b002b002b002b002b002b002b002b002b002b002b002b002b0234002b002b0lcu002b00pt00nu02sj002b002b002b09dk0a5m002b002b002b002b00lo00qn002b01pf002b0234002b0234002b002b02c3002b0lad0lad023401og002b002b002b0ekj057i002b002b002b002b0lad002b002b0o9g03ii05k9002b0234002b002b002b03ii002b002b03ii002b03ii023402ut002b002b037103ii002b002b002b002b002b002b02no002b002b002b002b002b002b0234002b002b00pt002b0234002b002b002b00nu00q0002b002b002b002b002b00pt02340lad02bs02c300nc002b002b002b0bpl0lad002b002b002b002b00mu002b03ii002b0o52002b002b002b0lad002b0lad0lad00l6002b00lo00sr0234002b01p2002b02bs02b7023400nj01v400mn03dc002b002b00js002b002b002b036o002b002b002b002b02hc002b002b002b002b002b002b12jt002b002b0234002b002b002b002b0234002b002b002b002b002b002b002b0152002b002b00mn002b00jl002b002b03au002b00pi047h00pi00mn00of002b002b002b00pi002b002b00qn00nc0nsj0afm002b002b002b002b002b002b00o800sr002b002b00of002b002b002b002b0ccs03ii002b002b002b002b00q0002b002b002b002b023400qn00pt0lad002b002b002b002b00kh002b023406hv002b002b0gp2002b002b00nj00sr0152002b046n002b002b0234002b002b002b002b002b002b002b023400q008dr002b002b002b00mn00l6002b0o7i03ii002b002b05930lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02340me700qn00nj02bs0lad0234002b024g0lad002b002b0hcc002b002b02li0234002b002b002b0bf8002b002b002b002b002b002b002b03th002b002b002b002b002b00tn00ks002b002b002b0lgt002b002b002b002b002b00md00of08u00o8r002b0234002b002b002b002b0234002b002b002b0j35002b0234002b002b00lk00nu0o6g002b002b12js0gim002b002b002b002b002b131i002b00pf00nc00mu002b00j700mn00sr02c3002b002b002b002b03ii002b03ii002b002b002b002b00nc00tn0234002b00js00js002b002b002b00nc00l30cec002b002b0lad0234002b0lad0234002b002b04d00lad02me002b002b03ne002b002b002b002b002b002b11i9002b0234002b002b002b0lad002b002b002b06pk002b002b01pm04fq002b002b002b002b002b002b002b0603002b02340234002b0oba002b02bl002b002b0234002b002b0133002b00qn03ii05bf002b002b002b0234002b0123002b002b0b4h002b080e02c300l300mu00q0002b002b002b002b002b002b02340lad002b0234002b002b002b002b002b05la002b0lad002b002b03cc002b0lad0lad002b002b00q0002b002b002b002b002b002b002b002b02340lad0do5002b12q1002b002b002b0lad002b002b002b002b002b002b002b023400mu00nj0c60002b0o7j002b0o710o75002b002b002b002b002b023406hh02fs002b002b002b002b00qn02bs0c83002b002b002b002b002b002b002b002b002b03dc02kv002b0mg6002b00nu002b002b002b00nu00qn002b002b02t8002b002b002b002b073m002b00nu00qn0234002b002b002b0nvn02bs002b0o9c049q00lk06ub002b002b00nj002b14dh002b00nc002b00of00lo002b002b0234002b002b023400ks01mu01p203ii002b002b002b024k002b00sr00ks00pi002b07lu002b002b002b002b002b002b002b00js00mn00mn002b002b002b002b00l600qa002b002b002b002b002b002b002b002b098u0bmi002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b00l600kv02s80fso0alb0234002b0234002b02c0002b03f8025p02lt002b0lad002b0o3803ii002b00js00lk00nc002b002b002b002b002b03mu002b06d5002b00o8002b02c30lad002b00md00mu002b0314002b02bs002b002b002b0234023405pt002b03ii002b02b7002b03rh0bhp002b002b002b061t002b02li002b002b002b002b002b002b002b002b002b002b002b002b0c700234002b002b002b002b0234077o002b03ii002b002b029t1492002b002b002b002b002b002b002b057a002b002b002b002b12bt002b002b002b002b002b002b0234002b002b0234023403ii002b132300nc07ka002b002b002b00pt002b002b05pm002b002b002b002b002b002b0234002b03d9002b002b00o80lad002b0rla002b0o0c002b002b02li002b002b002b002b002b0234002b002b0ihg01520lad023407vf0i140234002b002b002b002b002b002b002b02340o17002b002b02340o3h002b002b002b023406i6002b002b002b002b03th07nb0qip002b00sr002b002b002b00o800lk044702h8002b002b002b002b0inh023403r40234002b002b0234002b002b002b002b00j708bl002b00of00sr0234002b002b002b0234002b02340be5061410ek002b04c2002b002b0o8g002b002b0234002b0234002b12an0lad002b002b002b002b023402340234002b0234002b002b002b00kv02c3002b002b002b002b0234002b02rv02c3002b0234002b002b002b002b0o0q002b002b0c60002b002b0234002b002b002b002b002b00nu0d9i00qn00sr03i40gf2002b00q000qa02c30oc900kl00qn0234002b002b0234002b002b0lad0lad002b002b0234002b002b002b036o002b002b002b002b002b023406c7002b002b068m06i606gi002b0o3p002b002b00mn00mn002b002b002b002b03ii002b002b002b03ii0o1r002b0lad002b002b002b0v6v002b0o8r002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b0v35023400js002b002b002b03vf002b002b002b0234002b02h801bu02c300l302340lad002b002b002b002b0lad002b002b002b002b0b81023401or00mn002b002b00of002b002b002b002b002b002b002b002b002b002b002b002b11io002b002b002b0234002b002b0234002b002b002b002b02c3002b002b0be5002b002b023401uo02li002b0a6m002b002b00kh01or002b002b002b02340ntb002b002b0lad023402tf0234002b0234002b002b002b00o802md0lad002b002b002b0kem0o2b002b002b002b002b002b03ii002b002b002b002b002b002b0m2m00qa02vi002b0234002b051o0lad002b00q000l604ae0234002b002b014d0lad03ii002b002b002b03mr08dr014d002b002b002b002b0o1b002b0b75002b002b002b03ii002b002b028o00l60lad002b002b00o80ajn002b002b002b00mu0jbj02li002b002b002b0234002b002b002b002b03oo02bs00tn002b02vc002b002b002b002b002b002b002b03dc00md03dc05on002b002b002b061m00pt002b002b002b002b08aa03ii002b07i1002b002b002b002b002b002b002b0gp2002b0ha5002b00qn03ii002b00nj00md017l002b002b03ii002b03ii002b002b002b06sf002b03ii002b002b002b002b002b002b002b01or002b03ii002b002b002b002b002b002b002b03ii002b002b046k002b05ct002b002b002b002b002b002b002b002b00pt00pt089s00mn00l600pi002b002b002b002b002b0314002b002b002b0lad0nrg002b0mdv002b02li002b002b002b017l002b002b002b002b002b03ii00nu002b002b002b08ee00qa00nu002b0lad002b002b00sr00mu02h80o0g002b0lad002b002b002b06pa05o1002b002b0lad002b0lcu0lad023403ii00sr00qa0h9j00qa00mu02bs0234002b002b002b002b002b0lad002b002b002b0234002b002b002b0g90002b002b002b002b00l600o800kh00pt0234002b002b002b002b02c3002b002b0nm100pt02ut002b002b002b002b002b0234002b002b07fu05s8023402340lad023402c306gi0lad0675002b03ii0234002b023403f80234002b002b0lcu002b002b002b002b0lad0jj80lad002b002b002b002b00nc00nu0pto013302li002b0234023403ii002b002b00qa0lcu0lad002b002b002b002b002b002b002b002b00o800ks00of00qa02tf00nc002b00pt002b002b0234002b002b002b002b00md002b002b00q000mu002b0v4l023401330152002b02bs002b0234002b002b002b0lad002b002b002b002b002b002b0bs206jk02mh002b00kl0b5h023402tq002b002b012m015203ii002b00nc002b002b0lad002b002b002b00of002b002b002b002b002b023400lk00md029t0u810uma002b002b0o63017l01bu00l605o1002b0234002b002b0lad0lcu00mu002b01kl002b00nu00mn002b002b01df00mn00pi00l3036100qa00nj03cl002b0cs8013300nc002b002b00o800md067502fs02c300nc00qn002b002b002b023400mn015200nu03dc0234002b00nc00j700mn048f0o2b00nc002b002b002b0234002b0lcu002b00nj131j002b002b002b002b0123002b0lad03mr002b0aod00nj00lk014d01520m0c002b002b002b002b002b00o800nu00pt00lo029t00l300pi00lo00pt017l00mu03th002b0234002b0234002b07lu002b002b002b00q000pt0234002b002b0m0c03ii06g40234002b002b002b002b0cf3002b002b0234002b00nc002b0bgv0c4801df002b00mu002b027k002b00mn00nu045k00nc023400ks002b02340nvn002b002b0lad00l6030b002b002b002b0lcu002b03ii002b002b002b002b00qn00nu00l3002b002b00m602en002b002b002b0d9s0lad0lad00tn013j00nu00nc02ap00mu02c3049c023402li02fs0234002b02sj002b002b00o8015200l3002b00mu002b00sr00n800pt013700mu002b002b00qn00mn00md02b70lad0o7h002b00tn12nn00sr002b00nc00l600j700sr00sr0gs50i62002b002b02h813dj00lo00of00l600mn0nu9002b0lcu049i002b02h800mn00nj02rv002b00tn002b002b0o0i0234023408ej002b023403th002b002b002b02sj0234002b002b0234002b015200kh02en03ii00mu002b00nu00lk002b002b02ig00k30234002b002b002b002b002b002b00o800nu00pt002b00of05pm00mu00kh00nj002b00tn00pt002b1iko002b002b002b002b002b00ks00pt00pt0ine0lad014d00pi017l00q000sr07so002b002b015201bu11i9002b06r9002b00of00ks00m600l600q0002b002b002b002b002b01uo002b0234023401mu00md00pi017l0v6g0mf4002b01a600pt02en00nc01370ocn02s7002b00j704720blb002b002b0234002b002b0gil02340o29002b002b0hfh0vld00nu00mu02bs076v002b002b0c7l00nu0gib00sr002b00nu014d02bs013701or002b002b002b002b002b002b08n0002b002b002b002b002b002b0o8r002b002b00mu002b0n0d002b002b0137002b002b002b002b00nc002b015200jl0q4600lk00md00nc00sr023400pt00js00pt002b02rh068m002b132b00nc00nu002b00nu00qn002b002b00pt00kh002b067c0234002b002b002b03ii02340lad00nc00nc013j00qn00lr00q000qa046k002b002b002b002b002b03mr0234002b023400nu00nu002b0234002b00nu017l0vj4002b029700pt00nu0133042802c3002b02340lcu023410lp00lk0152002b0lad06jn023403dc00pi02en023400pt0234002b002b03ii0234002b002b002b02340lad002b002b002b0234002b002b002b0lad02tj002b002b002b002b00pi002b002b002b002b002b002b002b00nu002b002b002b002b023407kl002b036o002b02bs002b00kl00lk00mn0bkp002b002b02340lcu002b0v3f002b002b00pt002b002b002b0bhp00pt0v4l002b002b002b002b057a002b00js002b0nof002b13g6002b002b0lad002b06c70c7l00nu0234002b002b02340234002b002b002b002b002b13og002b002b002b002b002b002b002b002b002b0234002b0lad002b002b002b002b002b02340234002b002b002b002b002b002b0lag03ii0lad03140234002b002b02h306ku002b002b12880lad02340lad0bgb0234002b002b002b002b14fg002b18hs0lad002b002b002b002b002b002b00of02tn002b002b002b002b0234002b002b03i4023402m3002b002b002b002b0234002b03ii0234002b002b00nu05ue002b002b002b002b00o80ahk002b002b002b002b002b002b002b002b002b00nj00md00q000kl029t00tn002b002b002b03ii002b07er01bu002b002b002b002b00pt02fs032802c30lad02tj002b02t50qbc002b002b02s9002b002b00js00kv002b002b002b002b002b002b002b02t5002b03ii0lad0lcu03ii002b18hn002b002b002b002b002b05mg002b002b0lad002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b002b02nu002b002b002b002b002b0npa002b0lad0ksm02340234002b00lk00lo002b002b0234002b0ksm002b02fs002b0fpn0be2002b002b002b0234002b02li002b002b002b002b002b002b0nuo002b07hj002b00l300nc023403ku03ku002b01pf0234002b002b002b002b002b03ii002b0lad002b002b00mn00nu002b002b02fs0234002b002b002b060l03so002b002b002b002b002b002b002b002b02ln02340234002b002b0lad002b002b03i4002b0234002b002b0234002b0od7002b002b002b04t4002b002b002b002b002b002b0o110o6500q000nu002b03th002b002b002b0234002b002b002b025d02mu0o38002b002b002b002b002b0lad0lad002b0234002b002b002b002b0cdl08ic002b02340lcu002b002b002b002b002b002b0lad0lad002b002b0234002b002b002b002b002b0fs4002b0lad0234002b002b002b03ii02340lad002b002b002b002b002b002b002b002b002b002b002b03ii002b002b002b002b002b0h9j002b02tq002b002b002b002b03ii002b002b002b0a6m0234002b03ii0234002b0234002b002b002b002b0234002b0234002b002b002b002b002b002b02340234002b03jv07bv002b002b0234002b002b0lcu0234002b002b002b0nvc002b0234002b002b002b002b00sr08ic002b002b002b002b002b002b02h80q2h002b14kj0lad0lad002b002b0lad0lad0234002b002b002b002b0lad0lad002b0lad00pt002b002b002b002b0bcr03ii0lad002b02mp014600nj00pt017l002b02b70lgt0234002b002b002b0inh002b0lcu0lad002b0lad0lad03ii002b002b002b002b02340234002b002b002b002b002b002b002b002b002b002b0lad054q0lad002b0lad002b002b03ii00tn08br00nu00nu002b002b05j3002b002b03ii002b002b0234002b02340o7q002b002b002b002b01bu00sr03u30lad002b002b00l600nc002b002b00nu0a6i002b002b002b002b02fs002b002b0bk6002b002b002b002b002b0kt8002b017l00md046k00sr05on0234002b02340o37002b002b002b002b002b002b02fs002b002b002b002b0234047202340mdv002b002b002b002b063h002b002b002b00md002b06hh047205di02bs03ii00nu00pi05j911es02s5002b0234002b002b002b0470002b002b002b002b002b002b0sgn03ii0o380bqk00qa00sr002b002b002b0lad002b02340234002b002b002b002b02n911bq002b002b0234002b002b06e5002b0nov002b002b0234002b0234002b002b002b002b0234002b002b0234002b12eo04q0002b002b0lad002b002b0234002b05so02u402ap002b024k002b0234002b046k002b002b08bl0234002b002b0297023400kv00kv00md02s9002b0234002b002b002b04t4002b0234002b0lcu002b002b002b12q303ea002b002b002b023403np002b03ii0234002b002b0lad002b002b002b002b002b00mn002b047202s90lad002b002b002b002b002b002b002b053r0lad02sl002b002b002b002b0lcu002b03jv002b002b002b0234002b002b0rfc03f7002b0lad002b002b002b0234002b0od7002b002b002b002b002b002b0606002b002b02tf002b002b002b002b002b0ihg002b002b0c830133002b002b0lad002b002b00o800pt002b00md0vk7002b002b00mn0nq40o110bkp002b02340lad0sdl002b002b002b002b002b0arc002b0p9h023401og03th002b03ii002b002b002b002b002b0lad002b002b002b002b002b002b002b002b0234002b0lad002b029700l600pi00tn0o9n002b002b03ii002b0oca002b13qg0gib002b01fe03ii03ii002b002b12nn03mr002b002b023403ii002b078d00mn00mu00nj002b002b002b03ii0o0i002b002b002b002b002b0ntf002b002b002b002b10740oam16bk002b054500kv00qa002b002b002b04ih002b002b04gb002b0lad002b00e6002b03i402340lad002b048f002b002b002b002b002b0234002b00of00mn03q0002b01pf0234002b002b044v002b01bu03ii04720bgb02c30lad002b002b002b07i1002b002b002b002b002b002b07s3002b002b0v6j00nc002b002b0234002b0lad0rv2002b002b002b01og002b002b002b002b002b002b03oq0lad002b002b03dc03mr002b002b002b002b002b03ii0234002b002b002b00mu0obg0ocp002b002b002b0234002b002b0234002b002b002b002b0234002b002b03ii002b00pi00md00qa03vf03jv02li002b002b002b002b002b036o002b002b02r9002b002b023400nj00l6046k002b002b002b02sj09pb08ej03ii04720234002b002b00nc00mn00tn002b0ekt0234002b002b002b002b02bs00o800qa002b03ii0314002b11io002b002b002b023406pa002b002b002b02340234002b00nu00mn00sr054q02c302340ale0lad002b002b0ntp0n880ist002b002b002b15p4002b002b002b0234002b02en0oc90234002b002b00nc00o80bqo02bs00nj02bs0ocs002b0234002b0o1d0lad002b002b002b002b002b002b002b0234002b03cq002b0lad066u00l600md00qa067c00qa02bs0cdl002b08oh002b00qn0234002b002b0234002b002b002b002b046h00lo002b08in0ajn002b002b002b002b002b002b002b002b002b002b0257002b0hlm002b002b002b002b002b002b002b002b0234002b002b0lcu02340nqr02340nnc002b002b002b002b002b002b02no002b002b002b0lad0152002b002b002b0lcu002b002b0472002b002b03ii0eq9023403ii002b024f002b002b07ql002b002b04890234002b002b02tj00tn0234002b0eei002b0234002b13c5002b0lad10va03od0234002b002b002b002b002b023403th030b02s500mn00l6002b002b002b0klc002b002b03ii002b002b0234002b002b03mr002b002b02sl002b002b02s0002b002b002b002b002b0234023402340lad03dc002b0234002b08l8002b06t8002b002b002b002b023402340234002b002b02340234073m002b002b002b162q16fk153215kj16rh170l170l16ju002b0a5m18gd18nm18om18p0180j18po180j18ps18pg17de18pg18pg17ls183q18gd195518in1a371a671a671a6719mv1a7b1a9n1ah61al51ak71atf1bi81c0c1c6j1cbi1clj1dem1dgb1dgb1dgb1e191e3f1eq41f6c1fsf1g5i1h3917f31h9u1i6t1kp81kbu1l4l1l4l1lhb1nnt1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mia1mhd1mia1mi61mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mjc1mju1mtn1mtn1mtn1mtn1mtn1muk1n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941n941nap1nap1nki1nki1nki1nki1nki1nki1nki1nki1nm11noe1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1nvv1o0u1o0u1o1e1o1e1o2o1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1obc1ocb1oc91oc91oc91oci1ocp1ocu1ocu1ofi\",\n            \"dataSource\": \"0\",\n            \"name\": \"Abano Terme|Abbadia Cerreto|Abbadia Lariana|Abbadia San Salvatore|Abbasanta|Abbateggio|Abbiategrasso|Abriola|Acate|Accadia|Acceglio|Accettura|Acciano|Accumoli|Acerenza|Cermes|Acerno|Acerra|Aci Bonaccorsi|Aci Castello|Aci Catena|Acireale|Aci Santantonio|Acquafondata|Acquaformosa|Acquafredda|Acqualagna|Acquanegra Sul Chiese|Acquanegra Cremonese|Acquapendente|Acquappesa|Acquaro|Acquasanta Terme|Acquasparta|Acquaviva Picena|Acquaviva Delle Fonti|Acquaviva Platani|Acquaviva Collecroce|Acquaviva Disernia|Acqui Terme|Acri|Acuto|Adelfia|Adrano|Adrara San Martino|Adrara San Rocco|Adria|Adro|Affi|Affile|Afragola|Africo|Agazzano|Agerola|Aggius|Agira|Agliana|Agliano Terme|Aglie|Agna|Agnadello|Agnana Calabra|Agnone|Villa Latina|Agnosine|Agordo|Agosta|Agra|Agrate Brianza|Agrate Conturbia|Agrigento|Agropoli|Agugliano|Agugliaro|Ayas|Aicurzio|Aidomaggiore|Aidone|Aielli|Aiello Del Sabato|Aiello Calabro|Aiello Del Friuli|Aieta|Ailano|Ailoche|Aymavilles|Airasca|Airola|Airole|Airuno|Aisone|Ala Dei Sardi|Ala|Ala Di Stura|Alagna|Alagna Valsesia|Alanno|Alano Di Piave|Alassio|Alatri|Alba|Alba Adriatica|Albagiara|Albairate|Albanella|Albano Santalessandro|Albano Vercellese|Albano Di Lucania|Albano Laziale|Albaredo Arnaboldi|Albaredo Per San Marco|Albaredo Dadige|Albareto|Albaretto Della Torre|Albavilla|Albenga|Albera Ligure|Alberobello|Alberona|Albese Con Cassano|Albettone|Albi|Albiano Divrea|Albiano|Albiate|Albidona|Albignasego|Albinea|Albino|Albiolo|Albissola Marina|Albisola Superiore|Albizzate|Albonese|Albosaggia|Albugnano|Albuzzano|Alcamo|Alcara Li Fusi|Aldeno|Aldino|Ales|Alessandria Della Rocca|Alessandria|Alessandria Del Carretto|Alessano|Alezio|Alfano|Alfedena|Alfianello|Alfiano Natta|Alfonsine|Alghero|Algua|Ali|Alia|Aliano|Alice Bel Colle|Alice Castello|Alife|Ali Terme|Alimena|Aliminusa|Allai|Allein|Alleghe|Allerona|Alliste|Allumiere|Alme|Villa Dalme|Almenno San Bartolomeo|Almenno San Salvatore|Almese|Alonte|Alpette|Alpignano|Alseno|Alserio|Altamura|Altare|Altavilla Monferrato|Altavilla Irpina|Altavilla Milicia|Altavilla Silentina|Altavilla Vicentina|Altidona|Altilia|Altino|Altissimo|Altivole|Alto|Altofonte|Altomonte|Altopascio|Alviano|Alvignano|Alvito|Alzano Scrivia|Alzano Lombardo|Alzate Brianza|Amalfi|Amandola|Amantea|Amaro|Amaroni|Amaseno|Amato|Amatrice|Ambivere|Ameglia|Amelia|Amendolara|Ameno|Amorosi|Cortina Dampezzo|Ampezzo|Anacapri|Anagni|Ancarano|Ancona|Andali|Andalo Valtellino|Andalo|Andezeno|Andora|Andorno Micca|Andrano|Andrate|Andreis|Andretta|Andria|Andriano|Anela|Anfo|Angera|Anghiari|Angiari|Angolo Terme|Angri|Angrogna|Anguillara Veneta|Anguillara Sabazia|Annicco|Castello Di Annone|Annone Di Brianza|Annone Veneto|Anoia|Antegnate|Antey Saint Andre|Anterivo|La Magdeleine|Anticoli Corrado|Fiuggi|Antignano|Antillo|Antonimina|Antrodoco|Antrona Schieranco|Anversa Degli Abruzzi|Anzano Del Parco|Anzano Di Puglia|Anzi|Anzio|Anzola Dellemilia|Anzola Dossola|Aosta|Apecchio|Apice|Apiro|Apollosa|Appiano Sulla Strada Del Vino|Appiano Gentile|Appignano|Appignano Del Tronto|Aprica|Apricale|Apricena|Aprigliano|Aprilia|Aquara|Aquila Darroscia|Laquila|Aquileia|Aquilonia|Aquino|Aradeo|Aragona|Aramengo|Arba|Tortoli|Arborea|Arborio|Arbus|Arcade|Arce|Arcene|Arcevia|Archi|San Nicolo Darcidano|Arcidosso|Arcinazzo Romano|Arcisate|Arco|Arcola|Arcole|Arconate|Arcore|Arcugnano|Ardara|Ardauli|Ardenno|Ardesio|Ardore|Arena|Arena Po|Arenzano|Arese|Arezzo|Argegno|Argelato|Argenta|Argentera|Arguello|Argusto|Ari|Ariano Irpino|Ariano Nel Polesine|Ariccia|Arielli|Arienzo|Arignano|Aritzo|Arizzano|Arlena Di Castro|Arluno|Armeno|Armento|Armo|Armungia|Arnara|Arnasco|Arnad|Arnesano|Arola|Arona|Arosio|Arpaia|Arpaise|Arpino|Arqua Petrarca|Arqua Polesine|Arquata Scrivia|Arquata Del Tronto|Arre|Arrone|Arzago Dadda|Arsago Seprio|Arsie|Arsiero|Arsita|Arsoli|Arta Terme|Artegna|Artena|Artogne|Arvier|Arzachena|Arzana|Arzano|Arzergrande|Arzignano|Ascea|Asciano|Ascoli Piceno|Ascoli Satriano|Ascrea|Asiago|Asigliano Vercellese|Asigliano Veneto|Sinalunga|Asola|Asolo|Casperia|Assago|Assemini|Assisi|Asso|Assolo|Assoro|Asti|Asuni|Ateleta|Atella|Atena Lucana|Atessa|Atina|Atrani|Atri|Atripalda|Attigliano|Attimis|Atzara|Augusta|Auletta|Aulla|Aurano|Aurigo|Auronzo Di Cadore|Ausonia|Austis|Avegno|Avelengo|Avella|Avellino|Averara|Aversa|Avetrana|Avezzano|Aviano|Aviatico|Avigliana|Avigliano|Avio|Avise|Avola|Avolasca|Azeglio|Azzanello|Azzano Dasti|Azzano San Paolo|Azzano Mella|Azzano Decimo|Azzate|Azzio|Azzone|Baceno|Bacoli|Badalucco|Badia|Badia Pavese|Badia Polesine|Badia Calavena|Badia Tedalda|Badolato|Bagaladi|Bagheria|Bagnacavallo|Bagnaria|Bagnara Di Romagna|Bagnara Calabra|Bagnaria Arsa|Bagnasco|Bagnatica|Bagni Di Lucca|Montecatini Terme|San Giuliano Terme|Bagno A Ripoli|Bagno Di Romagna|Bagnoli Irpino|Bagnoli Del Trigno|Bagnoli Di Sopra|Bagnolo Mella|Bagnolo Cremasco|Bagnolo Piemonte|Bagnolo Del Salento|Bagnolo In Piano|Bagnolo Di Po|Bagnolo San Vito|Bagnone|Bagnoregio|Bagolino|Baia E Latina|Baiano|Bajardo|Bairo|Baiso|Balangero|Baldichieri Dasti|Baldissero Dalba|Baldissero Canavese|Baldissero Torinese|Balestrate|Balestrino|Ballabio|Ballao|Balme|Balmuccia|Balocco|Balsorano|Balvano|Balzola|Banari|Banchette|Villa Verde|Bannio Anzino|Banzi|Baone|Baradili|Baragiano|Baranello|Barano Dischia|Baranzate|Barasso|Baratili San Pietro|Barbania|Barbara|Barbarano Romano|Barbaresco|Barbariga|Barbata|Barberino Di Mugello|Barbianello|Barbiano|Barbona|Barcellona Pozzo Di Gotto|Barcis|Bard|Bardello|Bardi|Bardineto|Bardolino|Bardonecchia|Bareggio|Barengo|Baressa|Barete|Barga|Bargagli|Barge|Barghe|Bari|Bari Sardo|Bariano|Baricella|Barile|Barisciano|Barlassina|Barletta|Barni|Barolo|Barone Canavese|Baronissi|Barrafranca|Barrali|Barrea|Barumini|Barzago|Barzana|Barzano|Barzio|Basaluzzo|Bascape|Baschi|Basciano|Baselga Di Pine|Baselice|Basiano|Basico|Basiglio|Basiliano|Vasanello|Bassano Bresciano|Bassano Del Grappa|Bassano Romano|Tronzano Lago Maggiore|Bassano In Teverina|Bassiano|Bassignana|Bastia Mondovi|Bastia Umbra|Bastida Pancarana|Bastiglia|Battaglia Terme|Battifollo|Battipaglia|Battuda|Baucina|Boville Ernica|Bauladu|Baunei|Baveno|Bedero Valcuvia|Bedizzole|Bedollo|Bedonia|Bedulita|Bee|Beinasco|Beinette|Belcastro|Belfiore|Belforte Monferrato|Belforte Del Chienti|Belforte Allisauro|Belgioioso|Belgirate|Bella|Bellano|Bellante|Bellaria Igea Marina|Bellegra|Bellino|Bellinzago Lombardo|Bellinzago Novarese|Bellona|Bellosguardo|Belluno|Bellusco|Belmonte Piceno|Belmonte Del Sannio|Belmonte Calabro|Belmonte Castello|Belmonte Mezzagno|Belmonte In Sabina|Belpasso|Belsito|Belvedere Ostrense|Belveglio|Lizzano In Belvedere|Belvedere Di Spinello|Belvedere Marittimo|Belvedere Langhe|Belvi|Bema|Bene Lario|Bene Vagienna|Benestare|Benetutti|Benevello|Benevento|Benna|Bentivoglio|Berbenno|Berbenno Di Valtellina|Berceto|Berchidda|Beregazzo Con Figliaro|Bereguardo|Bergamasco|Bergamo|Bergantino|Bergeggi|Bergolo|Berlingo|Bernalda|Bernareggio|Bernate Ticino|Bernezzo|Bertinoro|Bertiolo|Bertonico|Berzano Di San Pietro|Berzano Di Tortona|Berzo San Fermo|Berzo Demo|Berzo Inferiore|Besana In Brianza|Besano|Besate|Besenello|Besenzone|Besnate|Besozzo|Bessude|Bettola|Bettona|Beura Cardezza|Bevagna|Beverino|Bevilacqua|Biancavilla|Bianchi|Bianco|Biandrate|Biandronno|Bianzano|Bianze|Bianzone|Biassono|Bibbiano|Bibbiena|Bibbona|Bibiana|Biccari|Bicinicco|Bidoni|Blera|Biella|Bienno|Bieno|Bientina|Binago|Binasco|Binetto|Bioglio|Bionaz|Bione|Birori|Bisaccia|Bisacquino|Bisceglie|Bisegna|Bisenti|Bisignano|Bistagno|Bisuschio|Bitetto|Bitonto|Bitritto|Bitti|Bivona|Bivongi|Bizzarone|Bleggio Superiore|Blello|Blessagno|Blevio|Boara Pisani|Bobbio|Bobbio Pellice|Boca|Bocchigliero|Boccioleto|Bocenago|Bodio Lomnago|Boffalora Dadda|Boffalora Sopra Ticino|Bogliasco|Bognanco|Bogogno|Bojano|Boissano|Bolano|Bolgare|Bollate|Bollengo|Nova Siri|Bologna|Bolognano|Bolognetta|Bolognola|Bolotana|Bolsena|Boltiere|Bolzano|Bolzano Novarese|Bolzano Vicentino|Bomarzo|Bomba|Bompensiere|Bompietro|Bomporto|Bonarcado|Bonassola|Bonate Sotto|Bonate Sopra|Bonavigo|Bondeno|Bondone|Bonea|Bonefro|Bonemerse|Bonifati|Bonito|Bonnanaro|Bono|Bonorva|Bonvicino|Borbona|Borca Di Cadore|Bordano|Bordighera|Bordolano|Bore|Boretto|Borgarello|Borgaro Torinese|Borgetto|Borghetto Di Vara|Borghetto Darroscia|Borghetto Lodigiano|Borgo Velino|Borghetto Di Borbera|Borghetto Santo Spirito|Borghi|Borgia|Borgiallo|Borgio Verezzi|Borgo Valsugana|Borgo A Mozzano|Borgorose|Borgo Dale|Borgo Di Terzo|Motteggiana|Suardi|Borgofranco Divrea|Borgolavezzaro|Borgo San Giovanni|Borgomale|Borgomanero|Borgomaro|Borgomasino|Borgone Susa|Borgonovo Val Tidone|Borgo Pace|Borgo Priolo|Borgoratto Alessandrino|Borgoratto Mormorolo|Borgoricco|Borgo San Dalmazzo|Fidenza|Borgo San Giacomo|Borgo San Lorenzo|Borgo San Martino|Borgo San Siro|Borgosatollo|Borgosesia|Borgo Val Di Taro|Borgo Ticino|Borgo Tossignano|Borgo Vercelli|Bormida|Bormio|Bornasco|Borno|Boroneddu|Borore|Borrello|Borriana|Borso Del Grappa|Bortigali|Bortigiadas|Borutta|Borzonasca|Bosa|Bosaro|Boschi Santanna|Bosco Marengo|Bosco Chiesanuova|Bosconero|Boscoreale|Boscotrecase|Bosia|Bosio|Bosisio Parini|Bosnasco|Bossico|Bossolasco|Botricello|Botrugno|Bottanuco|Botticino|Bottidda|Bova|Bovalino|Bova Marina|Bovegno|Boves|Bovezzo|Bovino|Bovisio Masciago|Bovolenta|Bovolone|Bozzole|Bozzolo|Bra|Bracca|Bracciano|Bracigliano|Braies|Brallo Di Pregola|Brancaleone|Brandico|Brandizzo|Branzi|Braone|Brebbia|Breda Di Piave|Castelverde|Bregano|Breganze|Bregnano|Brembate|Brembate Di Sopra|Brembio|Breme|Brendola|Brenna|Brennero|Breno|Brenta|Brentino Belluno|Brentonico|Brenzone Sul Garda|Brescello|Brescia|Bresimo|Bressana Bottarone|Bressanone|Bressanvido|Bresso|Brez|Brezzo Di Bedero|Briaglia|Briatico|Bricherasio|Brienno|Brienza|Briga Alta|Briga Novarese|Brignano Gera Dadda|Brignano Frascata|Brindisi|Brindisi Montagna|Brinzio|Briona|Brione|Briosco|Brisighella|Brissago Valtravaglia|Brissogne|Brittoli|Brivio|Broccostella|Brogliano|Brognaturo|Brolo|Brondello|Broni|Bronte|Bronzolo|Brossasco|Brosso|Brovello Carpugnino|Brozolo|Brugherio|Brugine|Brugnato|Brugnera|Bruino|Brumano|Brunate|Brunello|Brunico|Bruno|Brusaporto|Brusasco|Brusciano|Brusimpiano|Brusnengo|Brusson|Bruzolo|Bruzzano Zeffirio|Bubbiano|Bubbio|Buccheri|Bucchianico|Bucciano|Buccinasco|Buccino|Bucine|Budduso|Budoia|Budoni|Budrio|Buggerru|Buggiano|Buglio In Monte|Bugnara|Buguggiate|Buja|Bulciago|Bulgarograsso|Bultei|Bulzi|Buonabitacolo|Buonalbergo|Montebello Sul Sangro|Buonconvento|Buonvicino|Burago Di Molgora|Burcei|Burgio|Burgos|Buriasco|Burolo|Buronzo|Busachi|Busalla|Busano|Busca|Buscate|Buscemi|Buseto Palizzolo|Busnago|Bussero|Busseto|Bussi Sul Tirino|Busso|Bussolengo|Bussoleno|Busto Arsizio|Busto Garolfo|Butera|Buti|Buttapietra|Buttigliera Alta|Buttigliera Dasti|Buttrio|San Paolo Dargon|Cabella Ligure|Castello Cabiaglio|Cabiate|Cabras|Caccamo|Poggio Sannita|Caccuri|Cadegliano Viconago|Cadelbosco Di Sopra|Cadeo|Caderzone Terme|Cadoneghe|Cadorago|Caerano Di San Marco|Cafasse|Caggiano|Cagli|Cagliari|Caglio|Cagnano Varano|Cagnano Amiterno|Cagno|Caianello|Caiazzo|Caines|Caino|Caiolo|Cairano|Cairate|Cairo Montenotte|Caivano|Calabritto|Calalzo Di Cadore|Calamandrana|Calamonaci|Calangianus|Calanna|Calasca Castiglione|Calascibetta|Calascio|Calasetta|Calatabiano|Calatafimi Segesta|Lungavilla|Calcata|Calceranica Al Lago|Calci|Calciano|Calcinaia|Calcinate|Calcinato|Calcio|Calco|Caldaro Sulla Strada Del Vino|Caldarola|Calderara Di Reno|Caldes|Caldiero|Caldogno|Caldonazzo|Calendasco|Calenzano|Calestano|Calice Ligure|Calice Al Cornoviglio|Calimera|Calitri|Calizzano|Callabiana|Calliano|Calliano|Calolziocorte|Calopezzati|Calosso|Caloveto|Caltabellotta|Caltagirone|Caltanissetta|Caltavuturo|Caltignaga|Calto|Caltrano|Calusco Dadda|Caluso|Calvagese Della Riviera|Calvanico|Calvatone|Calvello|Calvene|Calvenzano|Calvera|Calvi|Calvi Risorta|Calvi Dellumbria|Calvignano|Calvignasco|Calvisano|Calvizzano|Camagna Monferrato|Camaiore|Camandona|Camastra|Cambiago|Cambiano|Cambiasca|Camburzano|Santelena Sannita|Camerana|Camerano|Camerano Casasco|Camerata Picena|Camerata Cornello|Camerata Nuova|Cameri|Camerino|Camerota|Camigliano|Camini|Camino|Camino Al Tagliamento|Camisano|Camisano Vicentino|Cammarata|Camogli|Chamois|Campagna|Campagna Lupia|Castel Campagnano|Campagnano Di Roma|Campagnatico|Campagnola Cremasca|Campagnola Emilia|Campana|Camparada|Campegine|Campello Sul Clitunno|Campertogno|Campi Salentina|Campi Bisenzio|Campiglia Marittima|Valprato Soana|Campiglia Dei Berici|Campiglione Fenile|Campione Ditalia|Campitello Di Fassa|Campli|Campo Calabro|Campobasso|Campobello Di Licata|Campobello Di Mazara|Campochiaro|Campodarsego|Campodenno|Campo Di Giove|Campodimele|Campodipietra|Campo Di Trens|Campodolcino|Campodoro|Campofelice Di Roccella|Campofelice Di Fitalia|Campofilone|Campofiorito|Campoformido|Campofranco|Campo Ligure|Campogalliano|Champorcher|Campolattaro|Campoli Del Monte Taburno|Campoli Appennino|Campolieto|Campolongo Maggiore|Campomaggiore|Campomarino|Campomorone|Campo Nellelba|Camponogara|Campora|Camporeale|Camporgiano|Camporosso|Camporotondo Etneo|Camporotondo Di Fiastrone|Camposampiero|Campo San Martino|Camposano|Camposanto|Campospinoso|Campotosto|Campo Tures|Camugnano|Canale|Canale Dagordo|Canale Monterano|Canal San Bovo|Canaro|Canazei|Cancellara|Cancello Ed Arnone|Canda|Candela|Candelo|Candia Lomellina|Candia Canavese|Candiana|Candida|Candidoni|Candiolo|Canegrate|Canelli|Orvinio|Canepina|Caneva|Canicatti|Canicattini Bagni|Canino|Canischio|Canistro|Canna|Cannalonga|Cannara|Cannero Riviera|Canneto Sulloglio|Canneto Pavese|Cannobio|Cannole|Canolo|Canonica Dadda|Canosa Di Puglia|Canosa Sannita|Canosio|Cansano|Cantagallo|Cantalice|Cantalupa|Cantalupo Ligure|Cantalupo Nel Sannio|Cantalupo In Sabina|Mandela|Cantarana|Cantello|Canterano|Cantiano|Cantoira|Cantu|Canzano|Canzo|Caorle|Caorso|Capaccio Paestum|Capaci|Capalbio|Capannoli|Capannori|Capena|Capergnanica|Capestrano|Capiago Intimiano|Capistrano|Capistrello|Capitignano|Capizzi|Capizzone|Ponte Nelle Alpi|Capodimonte|Capo Di Ponte|Capo Dorlando|Capodrise|Capoliveri|Capolona|Caponago|Caporciano|Caposele|Capoterra|Capovalle|Cappadocia|Cappella Maggiore|Cappella Cantone|Cappella De Picenardi|Cappelle Sul Tavo|Capracotta|Capraia E Limite|Capraia Isola|Capralba|Capranica Prenestina|Capranica|Marzabotto|Caprarica Di Lecce|Caprarola|Caprauna|Caprese Michelangelo|Caprezzo|Capri Leone|Capri|Capriana|Capriano Del Colle|Capriata Dorba|Capriate San Gervasio|Capriati A Volturno|Caprie|Capriglia Irpina|Capriglio|Caprile|Caprino Veronese|Caprino Bergamasco|Capriolo|Capriva Del Friuli|Capua|Capurso|Caraffa Di Catanzaro|Caraffa Del Bianco|Caraglio|Caramagna Piemonte|Caramanico Terme|Carano|Carapelle|Carapelle Calvisio|Carasco|Carassai|Carate Brianza|Carate Urio|Caravaggio|Caravate|Caravino|Caravonica|Carbognano|Carbonara Scrivia|Villasimius|Carbonara Di Nola|Carbonara Al Ticino|Carbonate|Carbone|Carbonera|Carbonia|Carcare|Carceri|Carcoforo|Cardano Al Campo|Carde|Cardeto|Cardinale|Cardito|Careggine|Carema|Carenno|Carentino|Careri|Caresana|Caresanablot|Carezzano|Carfizzi|Cargeghe|Cariati|Carife|Carignano|Carimate|Carinaro|Carini|Carinola|Carisio|Carisolo|Carlantino|Carlazzo|Carlentini|Carlino|Carloforte|Carlopoli|Carmagnola|Carmiano|Carmignano|Carmignano Di Brenta|Carnago|Carnate|Cornedo Allisarco|Carobbio Degli Angeli|Carolei|Carona|Caronia|Caronno Pertusella|Caronno Varesino|Carosino|Carovigno|Carovilli|Carpaneto Piacentino|Carpanzano|Carpegna|Carpenedolo|Carpeneto|Carpi|Carpiano|Carpignano Salentino|Carpignano Sesia|Cura Carpignano|Carpineti|Carpineto Sinello|Carpineto Della Nora|Carpineto Romano|Carpino|Carpinone|Carrara|Carre|Carrega Ligure|Carro|Carrodano|Carrosio|Carru|Carsoli|Cartigliano|Cartignano|Cartoceto|Cartosio|Cartura|Carugate|Carugo|Carunchio|Carvico|Carzano|Casabona|Casacalenda|Casacanditella|Casagiove|Casalanguida|Casalattico|Casalbeltrame|Casalbordino|Casalbore|Casalborgone|Casalbuono|Casalbuttano Ed Uniti|Casal Cermelli|Casalciprano|Casal Di Principe|Casalduni|Casale Litta|Casale Corte Cerro|Casale Di Scodosia|Casale Marittimo|Casale Sul Sile|Casalecchio Di Reno|Casale Cremasco Vidolasco|Casaleggio Boiro|Casaleggio Novara|Casale Monferrato|Casaleone|Casaletto Lodigiano|Casaletto Spartano|Casaletto Ceredano|Casaletto Di Sopra|Casaletto Vaprio|Casalfiumanese|Casalgrande|Casalgrasso|Casal Velino|Casalincontrada|Casalino|Casalmaggiore|Casalmaiocco|Casalmorano|Casalmoro|Casalnoceto|Villapiana|Casalnuovo Monterotaro|Casalnuovo Di Napoli|San Paolo Albanese|Casaloldo|Casalpusterlengo|Casalromano|Casalserugo|Pozzaglio Ed Uniti|Trinitapoli|Casaluce|Casalvecchio Di Puglia|Casalvecchio Siculo|Casalvieri|Casalvolone|Casalzuigno|Casamarciano|Casamassima|Casamicciola Terme|Casandrino|Casanova Lerrone|Casanova Elvo|Casanova Lonati|Casape|Casapinta|Casaprota|Casapulla|Casarano|Casargo|Casarile|Casarza Ligure|Casarsa Della Delizia|Casasco|Casatenovo|Casatisma|Casavatore|Casazza|Cascia|Casciago|Cascina|San Giacomo Vercellese|Cascinette Divrea|Casei Gerola|Caselette|Casella|Caselle Lurani|Caselle In Pittari|Caselle Torinese|Caselle Landi|Scandicci|Caserta|Casier|Casignana|Casina|Castelsilano|Castel Di Casio|Casirate Dadda|Caslino Derba|Casnate Con Bernate|Casnigo|Casola In Lunigiana|Casola Di Napoli|Casola Valsenio|Casole Delsa|Casoli|Casorate Sempione|Casorate Primo|Casorezzo|Casoria|Casorzo|Caspoggio|Cassacco|Cassago Brianza|Cassano Irpino|Cassano Delle Murge|Cassano Valcuvia|Cassano Allionio|Cassano Dadda|Cassano Magnago|Cassaro|Cassiglio|Pero|Cassina De Pecchi|Cassina Rizzardi|Cassinasco|Cassina Valsassina|Cassine|Cassinelle|Cassinetta Di Lugagnano|Cassino|Cassola|Cassolnovo|Castel Castagna|Castagnaro|Castagneto Carducci|Castagneto Po|Castagnito|Castagnole Monferrato|Castagnole Piemonte|Castagnole Delle Lanze|Castana|Castellumberto|Castano Primo|Casteggio|Castegnato|Castegnero|Castelbaldo|Castel Baronia|Castelbelforte|Castelbellino|Castelbello Ciardes|Castelbianco|Castel Boglione|Castel Bolognese|Castelbottaccio|Castelbuono|Castelcivita|Servigliano|Castelcovati|Castelcucco|Casteldaccia|Castel Daiano|Castel Dario|Castel Dazzano|Castelli Calepio|Casteldelci|Casteldelfino|Castel Del Giudice|Castel Del Monte|Castel Del Piano|Castel Del Rio|Casteldidone|Castel Di Ieri|Castel Di Iudica|Castel Di Lama|Castel Di Lucio|Castel Di Sangro|Castel Di Sasso|Castel Di Tora|Castelfidardo|Castelfiorentino|Castel Focognano|Castelfondo|Castelforte|Castelfranci|Castelfranco In Miscano|Castelfranco Emilia|Castrolibero|Castel Vittorio|Castelfranco Veneto|Castelfranco Di Sotto|Castel Frentano|Castel Gabbiano|Castel Gandolfo|Castel Giorgio|Castel Goffredo|Castelgomberto|Castelgrande|Castel Guelfo Di Bologna|Castelguglielmo|Castelguidone|Castellabate|Castellafiume|Castellalfero|Castellalto|Castellammare Di Stabia|Castellammare Del Golfo|Castellamonte|Castellana Grotte|Castellana Sicula|Castellaneta|Castellania Coppi|Castellanza|Castellarano|Castellar Guidobono|Castellaro|Castellarquato|Castellazzara|Castellazzo Bormida|Castellazzo Novarese|Castelleone Di Suasa|Castelleone|Castellero|Castelletto Cervo|Castelletto Derro|Castelletto Di Branduzzo|Castelletto Dorba|Castelletto Merli|Castelletto Molina|Castelletto Monferrato|Castelletto Stura|Castelletto Sopra Ticino|Castelletto Uzzone|Castelli|Castellina In Chianti|Castellinaldo Dalba|Castellina Marittima|Castellino Del Biferno|Castellino Tanaro|Castelliri|Castello Del Matese|Castelveccana|Castel Condino|Castello Dagogna|Castello Dargile|Castello Dellacqua|Castello Di Brianza|Castello Di Cisterna|Castello Molina Di Fiemme|Castello Di Godego|Castello Tesino|Castellucchio|Castelmauro|Castelluccio Dei Sauri|Castelluccio Inferiore|Castelverrino|Castelluccio Superiore|Castelluccio Valmaggiore|Castel Madama|Castel Maggiore|Castelmagno|Castelmarte|Castelmassa|Castel Mella|Castelmezzano|Castelmola|Castel Morrone|Castelnovetto|Castelnuovo Di Ceva|Castelnovo Bariano|Castelnuovo|Castelnovo Del Friuli|Castelnovo Di Sotto|Castelnovo Ne Monti|Castelnuovo Bozzente|Castelnuovo Della Daunia|Castelnuovo Parano|Castelnuovo Di Farfa|Castelnuovo Del Garda|Castelnuovo Belbo|Castelnuovo Berardenga|Castelnuovo Bocca Dadda|Castelnuovo Bormida|Castelnuovo Calcea|Castelnuovo Cilento|Castelnuovo Don Bosco|Castelnuovo Di Conza|Castelnuovo Di Garfagnana|Castelnuovo Di Porto|Castelnuovo Magra|Castelnuovo Nigra|Castelnuovo Rangone|Castelnuovo Scrivia|Castelnuovo Di Val Di Cecina|Castelpagano|Castelpetroso|Castelpizzuto|Castelplanio|Castelpoto|Castelraimondo|Castel Ritaldi|Castel Rocchero|Castelrotto|Castel Rozzone|Castel San Giorgio|Castel San Giovanni|Castel San Lorenzo|Castel San Niccolo|Castel San Pietro Terme|Castel San Pietro Romano|Castelsantangelo Sul Nera|Castel Santangelo|Castel Santelia|Castel San Vincenzo|Castelsaraceno|Castelsardo|Castelseprio|Castelspina|Casteltermini|Castelvecchio Di Rocca Barbena|Castelvecchio Calvisio|Castelvecchio Subequo|Castelvenere|Verres|Castelvetere Sul Calore|Castelvetere In Val Fortore|Caulonia|Castelvetrano|Castelvetro Di Modena|Castelvetro Piacentino|Castel Viscardo|Castelvisconti|Castel Volturno|Castenaso|Castenedolo|Chatillon|Castiglione Dei Pepoli|Castiglione Di Sicilia|Castiglione Messer Marino|Castiglione Olona|Castiglione Cosentino|Castiglione Chiavarese|Castiglione Di Garfagnana|Castiglione Dadda|Castiglione Del Genovesi|Castiglione Torinese|Castiglione A Casauria|Castiglione Del Lago|Castiglione Della Pescaia|Colledara|Castiglione Delle Stiviere|Castiglione Dorcia|Castiglione Falletto|Castiglione In Teverina|Castiglione Messer Raimondo|Castiglione Tinella|Castiglion Fibocchi|Castiglion Fiorentino|Castignano|Castilenti|Castino|Castione Della Presolana|Castione Andevenno|Castions Di Strada|Castiraga Vidardo|Casto|Castorano|Castrezzato|Castri Di Lecce|Castrignano De Greci|Castrignano Del Capo|Castro|Castro Dei Volsci|Castrocaro Terme E Terra Del Sole|Castrocielo|Castrofilippo|Enna|Castronno|Castronovo Di Sicilia|Castronuovo Di Santandrea|Castropignano|Castroreale|Castroregio|Castrovillari|Catania|Catanzaro|Catenanuova|Catignano|Cattolica Eraclea|Cattolica|Cautano|Cava Manara|Cava De Tirreni|Cavaglia|Cavaglietto|Cavaglio Dagogna|Cavagnolo|Cavaion Veronese|Cavalese|Cavallerleone|Cavallermaggiore|Cavallino|Cavallirio|Cavareno|Cavargna|Cavaria Con Premezzo|Cavarzere|Cavaso Del Tomba|Cavasso Nuovo|Cavatore|Jesolo|Cavazzo Carnico|Cave|Cavedago|Cavedine|Cavenago Dadda|Cavenago Di Brianza|Cavernago|Cavezzo|Cavizzana|Cavour|Cavriago|Cavriana|Cavriglia|Cazzago San Martino|Cazzago Brabbia|Cazzano Santandrea|Cazzano Di Tramigna|Ceccano|Cecima|Cecina|Cedegolo|Cedrasco|Cefala Diana|Cefalu|Ceggia|Ceglie Messapica|Celano|Celenza Sul Trigno|Celenza Valfortore|Celico|Cella Monte|Cella Dati|Cellamare|Cellara|Cellarengo|Cellatica|Celle Enomondo|Celle Di Macra|Celle Di San Vito|Celle Ligure|Celle Di Bulgheria|Celleno|Cellere|Cellino San Marco|Cellino Attanasio|Cenadi|Cenate Sopra|Cenate Sotto|Cencenighe Agordino|Cene|Ceneselli|Cengio|Centallo|Cento|Centola|Centuripe|Centrache|Cepagatti|Ceppaloni|Ceppo Morelli|Ceprano|Cerami|Ceranesi|Cerano Dintelvi|Cerano|Ceranova|Ceraso|Cercemaggiore|Cercenasco|Cercepiccola|Cerchiara Di Calabria|Cerchio|Cercino|Cercivento|Cercola|Cerda|Ceres|Cerea|Ceregnano|Cerenzia|Ceresara|Cereseto|Ceresole Alba|Ceresole Reale|Cerete|Cerreto Grue|Ceretto Lomellina|Cergnago|Ceriale|Ceriana|Ceriano Laghetto|Cerignale|Cerignola|Cerisano|Cermenate|Cermignano|Cerreto Laziale|Cernobbio|Cernusco Lombardone|Cernusco Sul Naviglio|Cerreto Desi|Cerreto Sannita|Cerreto Di Spoleto|Cerreto Dasti|Cerreto Guidi|Cerretto Langhe|Cerrina Monferrato|Cerrione|Cerro Tanaro|Cerro Al Volturno|Cerro Al Lambro|Cerro Maggiore|Cerro Veronese|Cersosimo|Certaldo|Certosa Di Pavia|Cerva|Cervara Di Roma|Cervarese Santa Croce|Cervaro|Cervasca|Cervatto|Cerveno|Cervere|Cervesina|Cerveteri|Cervia|Cervicati|Cervignano Dadda|Cervignano Del Friuli|Cervinara|Cervino|Cervo|Cerzeto|Cesa|Cesana Brianza|Cesana Torinese|Cesano Boscone|Cesano Maderno|Cesara|Cesaro|Cesate|Cesena|Cesenatico|Cesinali|Cesiomaggiore|Cesio|Cessalto|Cessaniti|Cessapalombo|Cessole|Cetara|Ceto|Cetona|Cetraro|Ceva|Cevo|Challand Saint Anselme|Challand Saint Victor|Chambave|Champdepraz|Charvensod|Cherasco|Cheremule|Chialamberto|Chiampo|Chianche|Chianciano Terme|Chianni|Chianocco|Chiaramonte Gulfi|Chiaramonti|Chiarano|Chiaravalle|Chiaravalle Centrale|Chiari|Chiaromonte|Chiauci|Chiavari|Chiavenna|Chiaverano|Chienes|Chieri|Chiesa In Valmalenco|Chiesanuova|Chies Dalpago|Chiesina Uzzanese|Chieti|Chieuti|Chieve|Chignolo Disola|Chignolo Po|Chioggia|Chiomonte|Chions|Chiopris Viscone|Chitignano|Chiuduno|Chiuppano|Chiuro|Chiusa|Chiusa Di Pesio|Chiusa Sclafani|Chiusa Di San Michele|Chiusaforte|Chiusanico|Chiusano Dasti|Chiusano Di San Domenico|Chiusavecchia|Chiusdino|Chiusi|Chiusi Della Verna|Chivasso|Cianciana|Canossa|Crocetta Del Montello|Cibiana Di Cadore|Cicagna|Cicala|Cicciano|Cicerale|Ciciliano|Cicognolo|Ciconio|Cigliano|Ciglie|Cigognola|Cigole|Cilavegna|Cimadolmo|Cimbergo|Cimina|Ciminna|Cimitile|Tavernole Sul Mella|Cimolais|Cimone|Cinaglio|Cineto Romano|Cingia De Botti|Cingoli|Cinigiano|Cinisello Balsamo|Cinisi|Cino|Cinquefrondi|Cintano|Cinte Tesino|Cinto Euganeo|Cinto Caomaggiore|Cinzano|Ciorlano|Santa Maria Del Cedro|Cipressa|Circello|Cirie|Cirigliano|Cirimido|Ciro|Ciro Marina|Cis|Cisano Bergamasco|Cisano Sul Neva|Ciserano|Cislago|Cisliano|Cison Di Valmarino|Cissone|Cisterna Dasti|Cisterna Di Latina|Cisternino|Citerna|Cittadella|Citta Della Pieve|Citta Di Castello|Cittaducale|Cittanova|Cittareale|Citta Santangelo|Cittiglio|Civate|Civezza|Civezzano|Civiasco|Cividale Del Friuli|Cividate Al Piano|Cividate Camuno|Civita|Civitacampomarano|Civita Castellana|Civita Dantino|Lanuvio|Civitaluparella|Civitanova Del Sannio|Civitanova Marche|Civitaquana|Duronia|Civitavecchia|Civitella In Val Di Chiana|Civitella Messer Raimondo|Civitella Di Romagna|Civitella Alfedena|Civitella Casanova|Civitella Dagliano|Civitella Del Tronto|Civitella Paganico|Civitella Roveto|Civitella San Paolo|Civo|Claino Con Osteno|Ubiale Clanezzo|Claut|Clauzetto|Clavesana|Claviere|Cles|Cleto|Clivio|Cloz|Clusone|Coassolo Torinese|Coazze|Coazzolo|Coccaglio|Cocconato|Cocquio Trevisago|Cocullo|Codevigo|Codevilla|Codigoro|Codogne|Codogno|Codroipo|Codrongianos|Coggiola|Cogliate|Cogne|Cogoleto|Cogollo Del Cengio|Cogorno|Colazza|Colere|Colfelice|Coli|Colico|Collalto Sabino|Collarmele|Collazzone|Colle Sannita|Colle Di Val Delsa|Colle Umberto|Collebeato|Colle Brianza|Collecchio|Collecorvino|Colle Danchise|Colledimacine|Colledimezzo|Colle Di Tora|Colleferro|Collegiove|Collegno|Collelongo|Collepardo|Collepasso|Collepietro|Colleretto Castelnuovo|Colleretto Giacosa|Collesalvetti|Colle San Magno|Collesano|Colle Santa Lucia|Colletorto|Collevecchio|Colli Del Tronto|Colli A Volturno|Colliano|Colli Sul Velino|Collinas|Collio|Collobiano|Colloredo Di Monte Albano|Colmurano|Colobraro|Cologna Veneta|Cologne|Cologno Al Serio|Cologno Monzese|Colognola Ai Colli|Colonna|Colonnella|Colonno|Colorina|Colorno|Colosimi|Colturano|Colzate|Comabbio|Comacchio|Comano|Comazzo|Comeglians|Santo Stefano Di Cadore|Comelico Superiore|Comerio|Comezzano Cizzago|Comignago|Comiso|Comitini|Comiziano|Commessaggio|Commezzadura|Como|Compiano|Comunanza|Valsolda|Comun Nuovo|Cona|Conca Della Campania|Conca Dei Marini|Conca Casale|Concamarise|Concerviano|Concesio|Concordia Sagittaria|Concordia Sulla Secchia|Concorezzo|Condofuri|Condove|Condro|Conegliano|Confienza|Configni|Conflenti|Coniolo|Conselice|Conselve|Contessa Entellina|Contigliano|Contrada|Controguerra|Controne|Contursi Terme|Conversano|Conza Della Campania|Conzano|Copertino|Copiano|Copparo|Corana|Corato|Corbara|Corbetta|Corbola|Corchiano|Corciano|Cordenons|Cordignano|Cordovado|Coreglia Ligure|Coreglia Antelminelli|Coreno Ausonio|Corfinio|Cori|Coriano|Corigliano Dotranto|Corinaldo|Corio|Corleone|Corleto Perticara|Corleto Monforte|Courmayeur|Cormano|Cormons|Corna Imagna|Cornalba|Cornaredo|Cornate Dadda|Cornedo Vicentino|Cornegliano Laudense|Corneliano Dalba|Tarquinia|Corniglio|Corno Di Rosazzo|Corno Giovine|Cornovecchio|Cornuda|Morimondo|Correggio|Correzzana|Correzzola|Corrido|Corridonia|Corropoli|Corsano|Corsico|Corsione|Cortaccia Sulla Strada Del Vino|Cortale|Cortandone|Cortanze|Cortazzone|Corte Brugnatella|Corte De Cortesi Con Cignone|Corte De Frati|Corte Franca|Cortemaggiore|Cortemilia|Corteno Golgi|Cortenova|Cortenuova|Corte Palasio|Cortiglione|Cortina Sulla Strada Del Vino|Cortino|Cortona|Corvara|Corvara In Badia|Corvino San Quirico|Corzano|Coseano|Cosenza|Cosio Darroscia|Cosio Valtellino|Cosoleto|Cossano Canavese|Cossano Belbo|Cossato|Cosseria|Cossignano|Cossogno|Cossoine|Cossombrato|Costa Vescovato|Costa Valle Imagna|Costa Di Rovigo|Costabissara|Costacciaro|Costa De Nobili|Costa Di Mezzate|Costa Serina|Costa Masnaga|Costanzana|Costarainera|Costa Volpino|Costermano Sul Garda|Costigliole Dasti|Costigliole Saluzzo|Cotignola|Crotone|Cotronei|Cottanello|Covo|Cozzo|Craco|Crandola Valsassina|Cravagliana|Cravanzana|Craveggia|Creazzo|Crecchio|Credaro|Credera Rubbiano|Crema|Cremella|Cremenaga|Cremeno|Cremia|Cremolino|Cremona|Cremosano|Crescentino|Crespadoro|Crespiatica|Crespino|Cressa|Crevacuore|Crevalcore|Crevoladossola|Crispano|Crispiano|Crissolo|Crocefieschi|Crodo|Crognaleto|Cropalati|Cropani|Crosia|Crosio Della Valle|Crotta Dadda|Crova|Croviana|Crucoli|Cuasso Al Monte|Veronella|Cuccaro Vetere|Cucciago|Cuceglio|Cuggiono|Cugliate Fabiasco|Cuglieri|Cugnoli|Cumiana|Cumignano Sul Naviglio|Cunardo|Cuneo|Cunico|Cuorgne|Cupello|Cupra Marittima|Cupramontana|Curcuris|Cureggio|Curiglia Con Monteviasco|Curinga|Curino|Curno|Curon Venosta|Cursi|Curtarolo|Curtatone|Curti|Cusago|Cusano Mutri|Cusano Milanino|Cusino|Cusio|Custonaci|Cutro|Cutrofiano|Cuveglio|Cuvio|Daiano|Dairago|Dalmine|Dambel|Danta Di Cadore|Darfo Boario Terme|Dasa|Davagna|Daverio|Davoli|Dazio|Decimomannu|Decimoputzu|Decollatura|Dego|Deiva Marina|Delebio|Delia|Delianuova|Deliceto|Dello|Demonte|Denice|Denno|Dernice|Derovere|Deruta|Dervio|Desana|Desenzano Del Garda|Desio|Desulo|Diamante|Scigliano|Diano Dalba|Teggiano|Diano Arentino|Diano Castello|Diano Marina|Diano San Pietro|Dicomano|Dignano|Dinami|Dipignano|Diso|Divignano|Dizzasco|Dobbiaco|Doberdo Del Lago|Dogliani|Dogliola|Dogna|Dolce|Dolceacqua|Dolcedo|Dolegna Del Collio|Dolianova|San Dorligo Della Valle Dolina|Dolo|Dolzago|Domanico|Domaso|Domegge Di Cadore|Domicella|Domodossola|Domus De Maria|Domusnovas|Donnas|Donato|Dongo|Donori|Dorgali|Dorio|Dormelletto|Dorno|Dorzano|Dosolo|Dossena|Dosso Del Liro|Doues|Dovadola|Dovera|Dozza|Dragoni|Drapia|Drena|Drenchia|Dresano|Dro|Dronero|Druento|Druogno|Dualchi|Dubino|Dueville|Dugenta|Duino Aurisina|Dumenza|Duno|Durazzano|Dusino San Michele|Eboli|Edolo|Egna|Elice|Elini|Ello|Elmas|Elva|Emarese|Empoli|Endine Gaiano|Enego|Enemonzo|Entracque|Entratico|Envie|Episcopia|Eraclea|Erba|Erbe|Erbezzo|Erbusco|Erchie|Erice|Erli|Erto E Casso|Erve|Esanatoglia|Escalaplano|Escolca|Exilles|Esine|Esino Lario|Esperia|Esporlatu|Este|Esterzili|Etroubles|Eupilio|Fabbrica Curone|Fabbrico|Fabriano|Fabrica Di Roma|Fabrizia|Fabro|Faedis|Faedo Valtellino|Faedo|Faenza|Faeto|Fagagna|Faggeto Lario|Faggiano|Fagnano Castello|Fagnano Alto|Fagnano Olona|Fai Della Paganella|Faicchio|Falcade|Falciano Del Massico|Falconara Marittima|Falconara Albanese|Falcone|Faleria|Falerna|Falerone|Fallo|Faloppio|Falvaterra|Falzes|Fanano|Fanna|Fano|Fano Adriano|Fara Gera Dadda|Fara Olivana Con Sola|Fara Novarese|Fara In Sabina|Fara Filiorum Petri|Fara San Martino|Fara Vicentino|Fardella|Farigliano|Farindola|Farini|Farnese|Farra Disonzo|Farra Di Soligo|Fasano|Fascia|Fauglia|Faule|Favale Di Malvaro|Valsinni|Favara|Favignana|Favria|Orco Feglino|Feisoglio|Feletto|Felino|Felitto|Felizzano|Feltre|Fenegro|Fenestrelle|Fenis|Ferentillo|Ferentino|Ferla|Fermignano|Fermo|Ferno|Feroleto Antico|Feroleto Della Chiesa|Pianopoli|Ferrandina|Ferrara|Ferrara Di Monte Baldo|Ferrazzano|Ferrera Di Varese|Ferrera Erbognone|Moncenisio|Ferrere|Ferriere|Ferruzzano|Fraconalto|Fiamignano|Fiano Romano|Fiano|Fiastra|Fiave|Poggio San Vicino|Ficarazzi|Ficarolo|Ficarra|Ficulle|Fie Allo Sciliar|Fierozzo|Fiesco|Fiesole|Fiesse|Fiesso Umbertiano|Fiesso Dartico|Figino Serenza|Figline Vegliaturo|Gonnosno|Filacciano|Filadelfia|Filago|Filandari|Filattiera|Filettino|Filetto|Filiano|Filighera|Filignano|Filogaso|Filottrano|Finale Emilia|Finale Ligure|Fino Del Monte|Fino Mornasco|Fiorano Al Serio|Fiorano Modenese|Fiorano Canavese|Fiorenzuola Darda|Firenze|Firenzuola|Firmo|Fisciano|Fiumalbo|Fiumara|Fiume Veneto|Fiumedinisi|Fiumefreddo Di Sicilia|Fiumefreddo Bruzio|Fiuminata|Fivizzano|Flaibano|Flero|Floresta|Floridia|Florinas|Flumeri|Fluminimaggiore|Flussio|Fobello|Foggia|Foglianise|Fogliano Redipuglia|Foglizzo|Foiano Della Chiana|Foiano Di Val Fortore|Folgaria|Folignano|Foligno|Follina|Follo|Follonica|Fombio|Fondachelli Fantina|Fondi|Fondo|Fonni|Fontainemore|Fontana Liri|Fontanelice|Fontanafredda|Fontanarosa|Fontanella|Fontanellato|Fontanelle|Fontaneto Dagogna|Fontanetto Po|Fontanigorda|Fontanile|Fontaniva|Fonte|Fontecchio|Fontechiari|Fontegreca|Fonteno|Fontevivo|Fonzaso|Foppolo|Forano|San Giovanni Teatino|Force|Forchia|Forcola|Fordongianus|Forenza|Foresto Sparso|Forgaria Nel Friuli|Forino|Forio|Forli Del Sannio|Forli|Forlimpopoli|Formazza|Formello|Formia|Formicola|Formigara|Formigine|Formigliana|Fornace|Fornelli|Tonezza Del Cimone|Forni Avoltri|Forni Di Sopra|Forni Di Sotto|Forno Canavese|Fornovo San Giovanni|Fornovo Di Taro|Forte Dei Marmi|Fortezza|Fortunago|Forza Dagro|Fosciandora|Fosdinovo|Fossa|Fossalto|Fossacesia|Fossalta Di Piave|Fossalta Di Portogruaro|Fossano|Fossato Serralta|Fossato Di Vico|Montebello Jonico|Fosso|Fossombrone|Foza|Frabosa Soprana|Frabosa Sottana|Fragagnano|Fragneto Labate|Fragneto Monforte|Fraine|Framura|Francavilla Bisio|Francavilla Dete|Francavilla Fontana|Francavilla Angitola|Francavilla Al Mare|Francavilla Marittima|Francavilla Di Sicilia|Francavilla In Sinni|Francica|Francofonte|Francolise|Frascaro|Frascarolo|Frascati|Frascineto|Frassilongo|Frassinelle Polesine|Frassinello Monferrato|Frassineto Po|Frassinetto|Frassino|Frassinoro|Frasso Telesino|Frasso Sabino|Umbertide|Fratta Todina|Fratta Polesine|Frattamaggiore|Frattaminore|Fratte Rosa|Frazzano|Fregona|Fresagrandinaria|Fresonara|Frigento|Frignano|Villa Di Briano|Frinco|Frisa|Frisanco|Front|Frontino|Frontone|Frosinone|Frosolone|Frossasco|Frugarolo|Fubine Monferrato|Fucecchio|Fuipiano Valle Imagna|Fumane|Fumone|Funes|Furci|Furci Siculo|Furnari|Furore|Furtei|Fuscaldo|Fusignano|Fusine|Futani|Gabbioneta Binanuova|Gabiano|Gabicce Mare|Gaby|Gadesco Pieve Delmona|Gadoni|Gaeta|Gaggi|Gaggiano|Gaggio Montano|Gaglianico|Gagliano Castelferrato|Gagliano Aterno|Gagliano Del Capo|Gagliato|Gagliole|Gaiarine|Gaiba|Gaiola|Gaiole In Chianti|Gairo|Gais|Galati Mamertino|Galatina|Galatone|Galatro|Galbiate|Galeata|Galgagnano|Gallarate|Gallese|Galliate Lombardo|Galliate|Galliavola|Gallicano|Gallicano Nel Lazio|Gallicchio|Galliera|Galliera Veneta|Gallinaro|Gallio|Gallipoli|Gallo Matese|Gallodoro|Galluccio|Galtelli|Galzignano Terme|Gamalero|Gambara|Gambarana|Gambasca|Gambassi Terme|Gambatesa|Gambellara|Gamberale|Gambettola|Gambolo|Gambugliano|Gandellino|Gandino|Gandosso|Gangi|Garaguso|Garbagna|Garbagna Novarese|Garbagnate Milanese|Garbagnate Monastero|Garda|Gardone Riviera|Gardone Val Trompia|Garessio|Gargallo|Gargazzone|Gargnano|Garlasco|Garlate|Garlenda|Garniga Terme|Garzeno|Garzigliana|Gasperina|Gassino Torinese|Gattatico|Gatteo|Gattinara|Gavardo|Gavello|Gaverina Terme|Gavi|Gavignano|Gavirate|Gavoi|Gavorrano|Gazoldo Degli Ippoliti|Gazzada Schianno|Gazzaniga|Gazzo|Gazzo Veronese|Gazzola|Gazzuolo|Gela|Gemmano|Gemona Del Friuli|Gemonio|Genazzano|Genga|Genivolta|Genola|Genoni|Genova|Genuri|Genzano Di Lucania|Genzano Di Roma|Gera Lario|Gerace|Locri|Geraci Siculo|Gerano|Gerenzago|Gerenzano|Gergei|Germagnano|Germagno|Germignaga|Gerocarne|Gerola Alta|Gerre De Caprioli|Gesico|Gessate|Gessopalena|Gesturi|Gesualdo|Ghedi|Ghemme|Ghiffa|Ghilarza|Ghisalba|Ghislarengo|Giacciano Con Baruchella|Giaglione|Gianico|Giano Vetusto|Giano Dellumbria|Giardinello|Giardini Naxos|Giarole|Giarratana|Giarre|Giave|Giaveno|Giavera Del Montello|Giba|Gibellina|Gifflenga|Giffone|Giffoni Sei Casali|Giffoni Valle Piana|Gignese|Gignod|Gildone|Gimigliano|Ginestra|Ginestra Degli Schiavoni|Ginosa|Gioi|Gioia Del Colle|Gioia Sannitica|Gioia Dei Marsi|Gioia Tauro|Gioiosa Marea|Gioiosa Ionica|Giove|Giovinazzo|Giovo|Girasole|Girifalco|Gissi|Giuggianello|Giugliano In Campania|Giuliana|Giuliano Teatino|Giuliano Di Roma|Giulianova|Giungano|Giurdignano|Giussago|Giussano|Giustenice|Giustino|Giusvalla|Givoletto|Gizzeria|Glorenza|Sesta Godano|Godega Di Santurbano|Godiasco Salice Terme|Godrano|Goito|Golasecca|Golferenzo|Gombito|Gonars|Goni|Gonnosfanadiga|Gonnesa|Gonnoscodina|Gonnostramatza|Gonzaga|Gordona|Gorga|Gorgo Al Monticano|Gorgoglione|Gorgonzola|Goriano Sicoli|Gorizia|Gorlago|Gorla Maggiore|Gorla Minore|Gorle|Gornate Olona|Gorno|Goro|Gorreto|Gorzegno|Gosaldo|Gossolengo|Gottasecca|Gottolengo|Govone|Gozzano|Gradara|Gradisca Disonzo|Grado|Gradoli|Graffignana|Graffignano|Graglia|Gragnano|Gragnano Trebbiense|Grammichele|Grana|Granarolo Dellemilia|Grandate|Grandola Ed Uniti|Graniti|Granozzo Con Monticello|Grantola|Grantorto|Granze|Grassano|Grassobbio|Gratteri|Gravellona Lomellina|Gravellona Toce|Gravere|Gravina In Puglia|Gravina Di Catania|Grazzanise|Grazzano Badoglio|Greccio|Greci|Greggio|Gremiasco|Gressan|Gressoney La Trinite|Gressoney Saint Jean|Greve In Chianti|Grezzago|Grezzana|Griante|Gricignano Di Aversa|Grignasco|Grigno|Grimacco|Grimaldi|Grinzane Cavour|Grisignano Di Zocco|Grisolia|Grizzana Morandi|Grognardo|Gromo|Grondona|Grone|Grontardo|Gropello Cairoli|Gropparello|Groscavallo|Grosio|Grosotto|Grosseto|Grosso|Grottaferrata|Grottaglie|Grottaminarda|Grottammare|Grottazzolina|Grotte|Grotte Di Castro|Grotteria|Grottole|Grottolella|Gruaro|Grugliasco|Grumello Cremonese Ed Uniti|Grumello Del Monte|Grumento Nova|Grumo Appula|Grumo Nevano|Grumolo Delle Abbadesse|Guagnano|Gualdo|Gualdo Cattaneo|Gualdo Tadino|Gualtieri|Gualtieri Sicamino|Guamaggiore|Guanzate|Guarcino|Guardabosone|Guardamiglio|Guardavalle|Guarda Veneta|Guardea|Guardia Piemontese|Guardiagrele|Guardialfiera|Guardia Lombardi|Guardia Perticara|Guardiaregia|Guardia Sanframondi|Guardistallo|Guarene|Guasila|Guastalla|Guazzora|Gubbio|Gudo Visconti|Guglionesi|Guidizzolo|Guidonia Montecelio|Guiglia|Siziano|Guilmi|Gurro|Guspini|Gussago|Gussola|Hone|Jacurso|Idro|Iglesias|Igliano|Ilbono|Illasi|Illorai|Imbersago|Imer|Imola|Imperia|Impruneta|Inarzo|Incisa Scapaccino|Incudine|Induno Olona|Ingria|Intragna|Introbio|Introd|Introdacqua|Inverigo|Inverno E Monteleone|Inverso Pinasca|Inveruno|Invorio|Inzago|Jolanda Di Savoia|Ionadi|Irgoli|Irma|Irsina|Isasca|Isca Sullo Ionio|Ischia|Ischia Di Castro|Ischitella|Iseo|Isera|Isernia|Isili|Isnello|Isola Dasti|Isola Di Capo Rizzuto|Isola Del Liri|Isola Del Cantone|Madesimo|Isola Del Gran Sasso Ditalia|Isolabella|Isolabona|Isola Del Giglio|Isola Della Scala|Isola Delle Femmine|Isola Del Piano|Isola Di Fondra|Isola Vicentina|Isola Dovarese|Isola Rizza|Isola Santantonio|Isole Tremiti|Isorella|Ispani|Ispica|Ispra|Issiglio|Issime|Isso|Issogne|Vasto|Istrana|Itala|Itri|Ittireddu|Ittiri|Ivrea|Izano|Jelsi|Jenne|Jerago Con Orago|Jerzu|Jesi|Joppolo|Joppolo Giancaxio|Jovencan|Labico|Labro|La Cassa|Lacchiarella|Lacco Ameno|Lacedonia|Laces|Laconi|Laerru|Laganadi|Laghi|Laglio|Lagnasco|Lago|Lagonegro|Lagosanto|Lagundo|Lajatico|Laigueglia|Lainate|Laino|Laino Borgo|Laino Castello|Laion|Laives|Lallio|La Loggia|Lama Dei Peligni|La Maddalena|Lama Mocogno|Lambrugo|Lamon|La Morra|Lampedusa E Linosa|Lamporecchio|Lamporo|Lana|Lanciano|Landiona|Landriano|Langhirano|Langosco|Lanusei|Lanzada|Lanzo Torinese|Lapedona|Lapio|Lappano|Larciano|Lardirago|Larino|Lasa|La Salle|Lascari|Lasnigo|La Spezia|Las Plassas|Lastebasse|Lastra A Signa|Latera|Laterza|La Thuile|Latiano|Latina|Latisana|Latronico|Lattarico|Lauco|Laureana Di Borrello|Laureana Cilento|Lauregno|Laurenzana|Lauria|Lauriano|Laurino|Laurito|Lauro|Lavagna|Lavagno|La Valle Agordina|La Valle|Lavarone|Lavello|Lavena Ponte Tresa|Laveno Mombello|Lavenone|Laviano|Lavis|Lazise|Lazzate|Lecce Nei Marsi|Lecce|Lecco|Leffe|Leggiuno|Legnago|Legnano|Legnaro|Lei|Leini|Leivi|Lemie|Lendinara|Leni|Lenna|Leno|Lenola|Lenta|Lentate Sul Seveso|Lentella|Lentini|Leonessa|Leonforte|Leporano|Lequile|Lequio Tanaro|Lequio Berria|Lercara Friddi|Lerici|Lerma|Lesa|Lesegno|Lesignano De Bagni|Terenzo|Lesina|Lesmo|Lessolo|Lestizza|Letino|Letojanni|Lettere|Lettomanoppello|Lettopalena|Levanto|Levate|Leverano|Levice|Levico Terme|Levone|Lezzeno|Liberi|Librizzi|Licata|Licciana Nardi|Licenza|Licodia Eubea|Lierna|Lignana|Lignano Sabbiadoro|Lillianes|Limana|Limatola|Limbadi|Limbiate|Limena|Limido Comasco|Limina|Limone Sul Garda|Limone Piemonte|Limosano|Linarolo|Linguaglossa|Lioni|Lipari|Lipomo|Lirio|Liscate|Liscia|Lisciano Niccone|Lisio|Lissone|Milena|Liveri|Livigno|Livinallongo Del Col Di Lana|Livo|Livo|Livorno|Livorno Ferraris|Livraga|Lizzanello|Lizzano|Loano|Loazzolo|Locana|Locate Varesino|Locate Di Triulzi|Locatello|Loceri|Locorotondo|Loculi|Lode|Lodi|Lodine|Lodi Vecchio|Lodrino|Lograto|Loiano|Lomagna|Lomazzo|Lombardore|Lombriasco|Lomello|Lona Lases|Lonate Ceppino|Lonate Pozzolo|Londa|Longano|Longare|Longhena|Longi|Longiano|Longobardi|Longobucco|Longone Al Segrino|Porto Azzurro|Longone Sabino|Lonigo|Loranze|Loreggia|Loreglia|Lorenzago Di Cadore|Loreo|Loreto|Loreto Aprutino|Loria|Loro Ciuffenna|Loro Piceno|Lorsica|Losine|Lotzorai|Lovere|Lovero|Lozio|Lozza|Lozzo Di Cadore|Lozzo Atestino|Lozzolo|Lubriano|Lucca Sicula|Lucca|Lucera|Lucignano|Lucinasco|Lucito|Luco Dei Marsi|Lucoli|Lugagnano Val Darda|Lugnano In Teverina|Lugo|Lugo Di Vicenza|Luino|Luisago|Lula|Lumarzo|Lumezzane|Lunamatrona|Lunano|Lungro|Luogosano|Luogosanto|Lupara|Lurago Derba|Lurago Marinone|Lurano|Luras|Lurate Caccivio|Lusciano|Luserna|Luserna San Giovanni|Lusernetta|Lusevera|Lusia|Lusiglie|Luson|Lustra|Luvinate|Luzzana|Luzzara|Luzzi|Maccastorna|Macchia Disernia|Macchiagodena|Macchia Valfortore|Macello|Macerata|Macerata Campania|Macerata Feltria|Macherio|Maclodio|Macomer|Macra|Macugnaga|Maddaloni|Madignano|Madone|Madonna Del Sasso|Maenza|Mafalda|Magasa|Magenta|Maggiora|Magherno|Magione|Magisano|Magliano Di Tenna|Magliano Alpi|Magliano Alfieri|Magliano In Toscana|Magliano De Marsi|Magliano Sabina|Magliano Romano|Magliano Vetere|Maglie|Magliolo|Maglione|Magnacavallo|Magnago|Magnano In Riviera|Magnano|Magomadas|Magre Sulla Strada Del Vino|Magreglio|Majano|Maida|Maiera|Maierato|Maiolati Spontini|Maiolo|Maiori|Mairago|Mairano|Maissana|Malagnino|Malalbergo|Malborghetto Valbruna|Malcesine|Male|Malegno|Maleo|Malesco|Maletto|Malfa|Malgesso|Malgrate|Malito|Mallare|Malles Venosta|Malnate|Malo|Malonno|Malosco|Maltignano|Malvagna|Malvicino|Malvito|Mammola|Mamoiada|Manciano|Mandanici|Mandas|Mandatoriccio|Mandello Del Lario|Mandello Vitta|Manduria|Manerba Del Garda|Manerbio|Manfredonia|Mango|Mangone|Maniago|Manocalzati|Manoppello|Mansue|Manta|Mantello|Mantova|Manzano|Manziana|Mapello|Mara|Maracalagonis|Maranello|Marano Sul Panaro|Marano Di Napoli|Marano Ticino|Marano Equo|Marano Lagunare|Marano Di Valpolicella|Marano Vicentino|Marano Marchesato|Marano Principato|Maranzana|Maratea|Marcallo Con Casone|Marcaria|Marcedusa|Marcellina|Marcellinara|Marcetelli|Marcheno|Marchirolo|Marciana|Marciana Marina|Marcianise|Marciano Della Chiana|Marcignago|Marcon|Marebbe|Marene|Mareno Di Piave|Marentino|Maretto|Margarita|Margherita Di Savoia|Margno|Mariana Mantovana|Mariano Comense|Mariano Del Friuli|Marianopoli|Mariglianella|Marigliano|Marina Di Gioiosa Ionica|Marineo|Marino|Marlengo|Marliana|Marmentino|Marmirolo|Marmora|Marnate|Marone|Maropati|Marostica|Marradi|Marrubiu|Marsaglia|Marsala|Marsciano|Marsico Nuovo|Marsicovetere|Marta|Martano|Martellago|Martello|Martignacco|Martignana Di Po|Martignano|Martina Franca|Martinengo|Martiniana Po|Martinsicuro|Martirano|Martirano Lombardo|Martis|Martone|Marudo|Maruggio|Marzano Di Nola|Marzano Appio|Marzano|Marzi|Marzio|Masate|Mascali|Mascalucia|Maschito|Masciago Primo|Maser|Masera|Masera Di Padova|Maserada Sul Piave|Masi|Masio|Masi Torello|Maslianico|Masone|Massa Fermana|Massa Dalbe|Massa|Massa Martana|Massa E Cozzile|Massafra|Massalengo|Massa Lombarda|Massa Lubrense|Massa Marittima|Massanzago|Massarosa|Massazza|Massello|Masserano|San Marco Evangelista|Massignano|Massimeno|Massimino|Massino Visconti|Massiola|Masullas|Matelica|Matera|Mathi|Matino|Matrice|Mattie|Mattinata|Mazara Del Vallo|Mazzano|Mazzano Romano|Mazzarino|Mazzarra Santandrea|Mazze|Mazzin|Mazzo Di Valtellina|Meana Sardo|Meana Di Susa|Meda|Mede|Medea|Medesano|Medicina|Mediglia|Medolago|Medole|Medolla|Meduna Di Livenza|Meduno|Megliadino San Vitale|Meina|Melara|Melazzo|Meldola|Mele|Melegnano|Melendugno|Meleti|Melfi|Melicucca|Melicucco|Melilli|Melissa|Melissano|Melito Irpino|Melito Di Napoli|Melito Di Porto Salvo|Melizzano|Melle|Mello|Silea|Melpignano|Meltina|Melzo|Menaggio|Menconico|Mendatica|Mendicino|Menfi|Mentana|Meolo|Merana|Merano|Merate|Mercallo|Mercatello Sul Metauro|Mercatino Conca|Novafeltria|Mercato San Severino|Mercato Saraceno|Mercenasco|Mercogliano|Mereto Di Tomba|Mergo|Mergozzo|Meri|Merlara|Merlino|Merone|Mesagne|Mese|Mesenzana|Mesero|Mesola|Mesoraca|Messina|Mestrino|Meta|Mezzago|Mezzana Mortigliengo|Mezzana|Mezzana Bigli|Mezzana Rabattone|Mezzane Di Sotto|Mezzanego|Mezzanino|Mezzano|Mezzenile|Mezzocorona|Mezzojuso|Mezzoldo|Mezzolombardo|Mezzomerico|Miagliano|Miane|Miasino|Miazzina|Micigliano|Miggiano|Miglianico|Miglierina|Miglionico|Mignanego|Mignano Monte Lungo|Milano|Milazzo|Mileto|Milis|Militello In Val Di Catania|Militello Rosmarino|Millesimo|Milo|Milzano|Mineo|Minerbe|Minerbio|Minervino Murge|Minervino Di Lecce|Minori|Minturno|Minucciano|Mioglia|Mira|Mirabella Eclano|Mirabella Imbaccari|Mirabello Monferrato|Mirabello Sannitico|Miradolo Terme|Miranda|Mirandola|Mirano|Mirto|Misano Di Gera Dadda|Misano Adriatico|Misilmeri|Misinto|Missaglia|Missanello|Misterbianco|Mistretta|Moasca|Moconesi|Modena|Modica|Modigliana|Tavazzano Con Villavesco|Modolo|Modugno|Moena|Moggio|Moggio Udinese|Moglia|Mogliano|Mogliano Veneto|Mogorella|Ruinas|Mogoro|Moiano|Moimacco|Moio De Calvi|Moio Alcantara|Moio Della Civitella|Moiola|Mola Di Bari|Molare|Molazzana|Molfetta|Molinara|Molinella|Molini Di Triora|Molino Dei Torti|Molise|Moliterno|Mollia|Porto Empedocle|Molochio|Molteno|Moltrasio|Molveno|Mombaldone|Mombarcaro|Mombaroccio|Mombaruzzo|Mombasiglio|Mombello Monferrato|Mombello Di Torino|Mombercelli|Momo|Mompantero|Mompeo|Momperone|Monacilioni|Monale|Monasterace|Monastero Bormida|Monastero Di Vasco|Monastero Di Lanzo|Monasterolo Del Castello|Monasterolo Casotto|Monasterolo Di Savigliano|Monastier Di Treviso|Monastir|Moncalieri|Moncalvo|Moncestino|Monchiero|Monchio Delle Corti|Moncrivello|Moncucco Torinese|Mondaino|Mondavio|Mondolfo|Mondovi|Mondragone|Moneglia|Monesiglio|Monfalcone|Serramazzoni|Monforte Dalba|Monforte San Giorgio|Monfumo|Mongardino|Monghidoro|Mongiana|Mongiardino Ligure|Montjovet|Mongiuffi Melia|Mongrando|Mongrassano|Monguelfo Tesido|Monguzzo|Moniga Del Garda|Monleale|Monno|Monopoli|Monreale|Monrupino|Monsampietro Morico|Monsampolo Del Tronto|Monsano|Monselice|Monserrato|Monsummano Terme|Monta|Montabone|Montacuto|Montafia|Montagano|Montagna|Montagna In Valtellina|Montagnana|Montagnareale|Montaguto|Montaione|Montalbano Jonico|Montalbano Elicona|Ostra|Montaldeo|Montaldo Bormida|Montaldo Di Mondovi|Montaldo Torinese|Montaldo Roero|Montaldo Scarampi|Montale|Montalenghe|Montallegro|Montalto Delle Marche|Montalto Uffugo|Montalto Pavese|Montalto Di Castro|Montalto Dora|Montanaro|Montanaso Lombardo|Montanera|Montano Antilia|Montano Lucino|Montappone|Montaquila|Montasola|Montauro|Montazzoli|Monte Cremasco|Monte Argentario|Montebello Della Battaglia|Montebello Di Bertona|Montebello Vicentino|Montebelluna|Montebruno|Montebuono|Montecalvo Irpino|Montecalvo Versiggia|Montecalvo In Foglia|Montecarlo|Montecarotto|Montecassiano|Montecastello|Monte Castello Di Vibio|Montecastrilli|Montecatini Val Di Cecina|Monte Cavallo|Montecchia Di Crosara|Montecchio|Montecchio Emilia|Montecchio Maggiore|Montecchio Precalcino|Monte Cerignone|Montechiaro Dasti|Montechiaro Dacqui|Montichiari|Montechiarugolo|Monteciccardo|Montecilfone|Monte Compatri|Montecopiolo|Montecorice|Montecorvino Pugliano|Montecorvino Rovella|Montecosaro|Montecrestese|Montecreto|Monte Di Malo|Montedinove|Monte Di Procida|Montedoro|Montefalcione|Montefalco|Montefalcone Appennino|Montefalcone Di Val Fortore|Montefalcone Nel Sannio|Montefano|Montefelcino|Monteferrante|Montefiascone|Montefino|Montefiore Dellaso|Montefiore Conca|Montefiorino|Monteflavio|Monteforte Irpino|Monteforte Cilento|Monteforte Dalpone|Montefortino|Montefranco|Montefredane|Montefusco|Montegabbione|Montegalda|Montegaldella|Montegallo|Monte Giberto|Montegioco|Montegiordano|Montegiorgio|Montegranaro|Montegridolfo|Monte Grimano Terme|Montegrino Valtravaglia|Montegrosso Dasti|Montegrosso Pian Latte|Montegrotto Terme|Monteiasi|Monte Isola|Montelabbate|Montelanico|Montelapiano|Monteleone Di Fermo|Vibo Valentia|Monteleone Di Puglia|Monteleone Di Spoleto|Monteleone Sabino|Monteleone Rocca Doria|Monteleone Dorvieto|Montelepre|Montelibretti|Montella|Montello|Montelongo|Montelparo|Montelupo Albese|Montelupo Fiorentino|Montelupone|Montemaggiore Belsito|Montemagno|Santarcangelo Trimonte|Montemale Di Cuneo|Montemarano|Montemarciano|Monte Marenzo|Montemarzino|Montemesola|Montemezzo|Montemignaio|Montemiletto|Pollenza|Montemilone|Montemitro|Montemonaco|Montemurlo|Montemurro|Montenars|Montenero Di Bisaccia|Montenerodomo|Montenero Sabino|Montenero Val Cocchiara|Ostra Vetere|Monteodorisio|Roseto Degli Abruzzi|Montepaone|Monteparano|Monte Porzio|Monte Porzio Catone|Monteprandone|Montepulciano|Monterchi|Montereale|Montereale Valcellina|Monterenzio|Monteriggioni|Monte Rinaldo|Monte Roberto|Monteroduni|Monte Romano|Monteroni Di Lecce|Monteroni Darbia|Monterosi|Monterosso Calabro|Monterosso Grana|Monterosso Al Mare|Monterosso Almo|Monterotondo|Monterotondo Marittimo|Monterubbiano|Monte San Biagio|Monte San Giacomo|Monte San Giovanni In Sabina|Monte San Giovanni Campano|Monte San Giusto|Monte San Martino|Montesano Salentino|Montesano Sulla Marcellana|Monte San Pietrangeli|Monte San Pietro|Monte San Savino|Monte Santa Maria Tiberina|Monte Santangelo|Potenza Picena|Monte San Vito|Montesarchio|Montescaglioso|Montescano|Montescheno|Montescudaio|Montese|Montesegale|Montesilvano|Montespertoli|Monteu Da Po|Monte Urano|Monteu Roero|Montevago|Montevarchi|Montevecchia|Monteverde|Monteverdi Marittimo|Monteviale|Monte Vidon Combatte|Monte Vidon Corrado|Montezemolo|Monti|Montiano|Monticello Dalba|Monticelli Pavese|Monticelli Dongina|Monticelli Brusati|Monticello Brianza|Monticello Conte Otto|Monticiano|Montieri|Montignoso|Montirone|Montodine|Montoggio|Montone|Montopoli In Val Darno|Montopoli Di Sabina|Montorfano|Montorio Nei Frentani|Montorio Al Vomano|Montorio Romano|Montorso Vicentino|Montottone|Montresta|Montu Beccaria|Monvalle|Monza|Monzambano|Monzuno|Morano Sul Po|Morano Calabro|Moransengo|Moraro|Morazzone|Morbegno|Morbello|Morciano Di Romagna|Morciano Di Leuca|Morcone|Mordano|Morengo|Mores|Moresco|Moretta|Morfasso|Morgano|Morgex|Morgongiori|Mori|Moriago Della Battaglia|Moricone|Morigerati|Morino|Moriondo Torinese|Morlupo|Mormanno|Mornago|Mornese|Mornico Al Serio|Mornico Losana|Morolo|Morozzo|Morra De Sanctis|Morro Dalba|Morro Reatino|Morro Doro|Morrone Del Sannio|Morrovalle|Morsano Al Tagliamento|Morsasco|Mortara|Mortegliano|Morterone|Moruzzo|Moscazzano|Moschiano|Mosciano Santangelo|Moscufo|Moso In Passiria|Mossa|Motta Di Livenza|Motta Baluffi|Motta Camastra|Motta Daffermo|Motta De Conti|Mottafollone|Mottalciata|Motta Montecorvino|Motta San Giovanni|Motta Santa Lucia|Motta Santanastasia|Motta Visconti|Mottola|Mozzagrogna|Mozzanica|Mozzate|Mozzecane|Mozzo|Muccia|Muggia|Muggio|Mugnano Del Cardinale|Mugnano Di Napoli|Mulazzano|Mulazzo|Mura|Muravera|Murazzano|Salcedo|Murello|Murialdo|Murisengo|Murlo|Muro Leccese|Muro Lucano|Muros|Muscoline|Musei|Musile Di Piave|Musso|Mussolente|Mussomeli|Pineto|Muzzana Del Turgnano|Muzzano|Nago Torbole|Nalles|Nanto|Napoli|Narbolia|Narcao|Nardo|Nardodipace|Narni|Naro|Narzole|Nasino|Naso|Naturno|Nave|Navelli|Naz Sciaves|Nazzano|Ne|Nebbiuno|Negrar Di Valpolicella|Neirone|Neive|Nembro|Nemi|Nemoli|Neoneli|Nepi|Nereto|Nerola|Nervesa Della Battaglia|Nerviano|Nespolo|Nesso|Netro|Nettuno|Neviano|Neviano Degli Arduini|Neviglie|Niardo|Nibbiola|Nibionno|Nichelino|Nicolosi|Nicorvo|Nicosia|Nicotera|Niella Belbo|Niella Tanaro|Nimis|Niscemi|Nissoria|Nizza Di Sicilia|Nizza Monferrato|Noale|Noasca|Nocara|Nocciano|Nocera Terinese|Nocera Umbra|Nocera Inferiore|Nocera Superiore|Noceto|Noci|Nociglia|Noepoli|Nogara|Nogaredo|Nogarole Rocca|Nogarole Vicentino|Noicattaro|Nola|Nole|Noli|Nomaglio|Nomi|Nonantola|None|Nonio|Noragugume|Norbello|Norcia|Norma|Nosate|Ponte Nossa|Notaresco|Noto|Nova Milanese|Novaledo|Novalesa|Nova Levante|Nova Ponente|Novara Di Sicilia|Novara|Novate Milanese|Novate Mezzola|Nove|Novedrate|Novellara|Novello|Noventa Padovana|Noventa Di Piave|Noventa Vicentina|Novi Ligure|Novi Di Modena|Novi Velia|Noviglio|Novoli|Nucetto|Nughedu Santa Vittoria|Nughedu San Nicolo|Nule|Nulvi|Numana|Nuoro|Nurachi|Nuragus|Nurallao|Nuraminis|Nureci|Nurri|Nus|Nusco|Nuvolento|Nuvolera|Nuxis|Occhieppo Inferiore|Occhieppo Superiore|Occhiobello|Occimiano|Ocre|Odalengo Grande|Odalengo Piccolo|Oderzo|Odolo|Ofena|Offagna|Offanengo|Offida|Offlaga|Oggebbio|Oggiona Con Santo Stefano|Oggiono|Oglianico|Ogliastro Cilento|Oyace|Olbia|Olcenengo|Oldenico|Oleggio|Oleggio Castello|Olevano Di Lomellina|Olevano Romano|Olevano Sul Tusciano|Olgiate Comasco|Olgiate Molgora|Olgiate Olona|Olginate|Oliena|Oliva Gessi|Olivadi|Oliveri|Oliveto Lucano|Oliveto Citra|Oliveto Lario|Olivetta San Michele|Olivola|Ollastra|Ollolai|Ollomont|Olmedo|Olmeneta|Olmo Gentile|Olmo Al Brembo|Oltre Il Colle|Oltressenda Alta|Oltrona Di San Mamette|Olzai|Ome|Omegna|Omignano|Onani|Onano|Oncino|Oneta|Onifai|Oniferi|Ono San Pietro|Onore|Onzo|Opera|Opi|Oppeano|Oppido Lucano|Oppido Mamertina|Ora|Orani|Oratino|Orbassano|Orbetello|Orciano Pisano|Orero|Orgiano|Pieve Fissiraga|Orgosolo|Oria|Oricola|Origgio|Orino|Orio Litta|Orio Al Serio|Orio Canavese|Oriolo|Oriolo Romano|Oristano|Ormea|Ormelle|Ornago|Ornavasso|Ornica|Orosei|Orotelli|Orria|Orroli|Orsago|Orsara Bormida|Orsara Di Puglia|Orsenigo|Orsogna|Orsomarso|Orta Di Atella|Orta Nova|Ortacesus|Orta San Giulio|Orte|Ortelle|Ortezzano|Ortignano Raggiolo|Ortisei|Ortona|Ortona Dei Marsi|Luni|Ortovero|Ortucchio|Ortueri|Orune|Orvieto|Orzinuovi|Orzivecchi|Osasco|Osasio|Oschiri|Osidda|Osiglia|Osilo|Osimo|Osini|Osio Sopra|Osio Sotto|Osnago|Osoppo|Ospedaletti|Ospedaletto Dalpinolo|Ospedaletto Lodigiano|Ospedaletto Euganeo|Ospedaletto|Ospitale Di Cadore|Ospitaletto|Ossago Lodigiano|Ossana|Ossi|Ossimo|Ossona|Ostana|Ostellato|Ostiano|Ostiglia|Ostuni|Otranto|Otricoli|Ottaviano|Ottana|Ottati|Ottiglio|Ottobiano|Ottone|Oulx|Ovada|Ovaro|Oviglio|Ovindoli|Ovodda|Ozegna|Ozieri|Ozzano Monferrato|Ozzano Dellemilia|Ozzero|Pabillonis|Paceco|Pace Del Mela|Pacentro|Pachino|Paciano|Padenghe Sul Garda|Paderna|Paderno Franciacorta|Paderno Dadda|Paderno Dugnano|Paderno Ponchielli|Robbiate|Padova|Padria|Padula|Paduli|Paesana|Paese|Pagani|Paganico Sabino|Pagazzano|Pagliara|Paglieta|Pagnacco|Pagno|Pagnona|Pago Del Vallo Di Lauro|Pago Veiano|Paisco Loveno|Paitone|Paladina|Palagano|Palagianello|Palagiano|Palagonia|Palaia|Palanzano|Palata|Palau|Palazzago|Palazzo Pignano|Palazzo San Gervasio|Palazzo Canavese|Palazzo Adriano|Palazzolo Sulloglio|Palazzolo Vercellese|Palazzolo Acreide|Palazzolo Dello Stella|Palazzuolo Sul Senio|Palena|Palermiti|Palermo|Palestrina|Palestro|Paliano|Palizzi|Pallagorio|Pallanzeno|Pallare|Palma Di Montechiaro|Palma Campania|Palmanova|Palmariggi|Palmas Arborea|San Giovanni Suergiu|Palmi|Palmiano|Palmoli|Palo Del Colle|Palomonte|Palombara Sabina|Palombaro|Palosco|Palu Del Fersina|Palu|Paludi|Plaus|Paluzza|Pamparato|Pancalieri|Pancarana|Panchia|Pandino|Panettieri|Panicale|Villaricca|Pannarano|Panni|Pantelleria|Pantigliate|Paola|Paolisi|Valderice|Papasidero|Papozze|Parabiago|Parabita|Paratico|Parcines|Parella|Parenti|Parete|Pareto|Parghelia|Parlasco|Parma|Parodi Ligure|Paroldo|Parolise|Parona|Parrano|Parre|Partanna|Partinico|Paruzzaro|Parzanica|Pasian Di Prato|Pasiano Di Pordenone|Paspardo|Passerano Marmorito|Passignano Sul Trasimeno|Passirano|Pastena|Pastorano|Pastrengo|Pasturana|Pasturo|Paternopoli|Paterno|Paterno Calabro|Patrica|Pattada|Patti|Patu|Pau|Paularo|Pauli Arbarei|San Nicolo Gerrei|Paulilatino|Paullo|Paupisi|Pavarolo|Pavia|Pavia Di Udine|Pavone Del Mella|Pavone Canavese|Pavullo Nel Frignano|Pazzano|Peccioli|Pecetto Di Valenza|Pecetto Torinese|Pedara|Pedaso|Pedavena|Pedemonte|San Paolo|Pederobba|Pedesina|Pedivigliano|Pedrengo|Peglio|Peglio|Pegognaga|Peia|Peio|Pelago|Pella|Pellegrino Parmense|Pellezzano|Pellizzano|Pelugo|Penango|Poggiridenti|Penna In Teverina|Pennabilli|Pennadomo|Pennapiedimonte|Penna San Giovanni|Penna Santandrea|Penne|Pentone|Perano|Perarolo Di Cadore|Perca|Percile|Perdasdefogu|Perdaxius|Perdifumo|Pereto|Perfugas|Pergine Valsugana|Pergola|Perinaldo|Perito|Perledo|Perletto|Perlo|Perloz|Pernumia|Perosa Canavese|Perosa Argentina|Perrero|San Giovanni In Persiceto|Persico Dosimo|Pertengo|Pertica Alta|Pertica Bassa|Pertosa|Pertusio|Perugia|Pesaro|Pescaglia|Pescantina|Pescara|Pescarolo Ed Uniti|Pescasseroli|Pescate|Pesche|Peschici|Peschiera Borromeo|Peschiera Del Garda|Pescia|Pescina|Pescocostanzo|Pesco Sannita|Pescolanciano|Pescopagano|Pescopennataro|Pescorocchiano|Pescosansonesco|Pescosolido|Pessano Con Bornago|Pessina Cremonese|Pessinetto|Petacciato|Turania|Petilia Policastro|Petina|Petralia Soprana|Petralia Sottana|Petrella Tifernina|Petrella Salto|Petriano|Petriolo|Petritoli|Petrizzi|Petrona|Petruro Irpino|Pettenasco|Pettinengo|Pettineo|Pettoranello Del Molise|Pettorano Sul Gizio|Pettorazza Grimani|Peveragno|Pezzana|Pezzaze|Pezzolo Valle Uzzone|Piacenza Dadige|Piacenza|Piaggine|Valle Dellangelo|Piana Di Monte Verna|Piana Crixia|Piana Degli Albanesi|Pontboset|Pian Camuno|Piancastagnaio|Piancogno|Piandimeleto|Piane Crati|Pianella|Pianello Del Lario|Pianello Val Tidone|Pianengo|Pianezza|Pianezze|Pianfei|Pianico|Pianiga|San Benedetto Val Di Sambro|Piano Di Sorrento|Pianoro|Piansano|Piantedo|Piario|Piasco|Piateda|Piatto|Piazza Brembana|Piazza Armerina|Piazza Al Serchio|Piazzatorre|Piazzola Sul Brenta|Piazzolo|Picciano|Picerno|Picinisco|Pico|Piea|Piedicavallo|Piedimonte Matese|Piedimonte Etneo|Piedimonte San Germano|Piedimulera|Piegaro|Pienza|Pieranica|Pietramontecorvino|Pietra Ligure|Pietrabbondante|Pietrabruna|Pietracamela|Pietracatella|Pietracupa|Pietradefusi|Pietra De Giorgi|Pietraferrazzana|Satriano Di Lucania|Pietrafitta|Pietragalla|Pietralunga|Pietra Marazzi|Pietramelara|Pietranico|Pietrapaola|Pietrapertosa|Pietraperzia|Pietraporzio|Pietraroja|Pietrarubbia|Pietrasanta|Pietrastornina|Pietravairano|Pietrelcina|Pieve Di Teco|Pieve Emanuele|Pieve Albignola|Pieve A Nievole|Pieve Del Cairo|Pieve Di Cadore|Pieve Di Cento|Pieve Di Soligo|Pieve Ligure|Pieve Dolmi|Pieve Fosciana|Pievepelago|Pieve Porto Morone|Pieve San Giacomo|Pieve Santo Stefano|Pieve Tesino|Pieve Torina|Pieve Vergonte|Piglio|Pigna|Pignataro Maggiore|Pignataro Interamna|Pignola|Pignone|Pigra|Pila|Pimentel|Pimonte|Pinarolo Po|Pinasca|Pincara|Pinerolo|Pino Dasti|Pino Torinese|Pinzano Al Tagliamento|Pinzolo|Piobbico|Piobesi Dalba|Piobesi Torinese|Piode|Pioltello|Piombino|Piombino Dese|Pioraco|Piossasco|Piova Massaia|Piove Di Sacco|Piovene Rocchette|Piozzano|Piozzo|Priverno|Piraino|Pisa|Pisano|Pisoniano|Piscina|Pisciotta|Pisogne|Pisticci|Pistoia|Pitigliano|Piubega|Piuro|Piverone|Pizzale|Pizzighettone|Pizzo|Pizzoferrato|Pizzoli|Pizzone|Pizzoni|Placanica|Plataci|Platania|Plati|Taipana|Plesio|Ploaghe|Plodio|Pocapaglia|Pocenia|Podenzana|Podenzano|Pofi|Poggiardo|Poggibonsi|Poggio Rusco|Poggio A Caiano|Poggio Bustone|Poggio Catino|Poggiodomo|Poggiofiorito|Poggio Imperiale|Poggiomarino|Poggio Mirteto|Poggio Moiano|Poggio Nativo|Poggio Picenze|Poggioreale|Poggio Renatico|Poggiorsini|Poggio San Lorenzo|Poggio San Marcello|Pogliano Milanese|Pognana Lario|Pognano|Pogno|Pojana Maggiore|Poirino|Polaveno|Polcenigo|Polesella|Poli|Polia|Policoro|Polignano A Mare|San Pietro In Cerro|Polinago|Polino|Polistena|Polizzi Generosa|Polla|Pollein|Pollena Trocchia|Pollica|Pollina|Pollone|Pollutri|Polonghera|Polpenazze Del Garda|Polverara|Polverigi|Pomarance|Pomaretto|Pomarico|Pomaro Monferrato|Pomarolo|Pombia|Pomezia|Pomigliano Darco|Pompei|Pompeiana|Pompiano|Pomponesco|Pompu|Poncarale|Ponderano|Ponna|Ponsacco|Ponso|Pontassieve|Pont Canavese|Ponte|Ponte In Valtellina|Ponte Gardena|Pontebba|Ponte Buggianese|Pontecagnano Faiano|Pontecchio Polesine|Pontechianale|Pontecorvo|Pontecurone|Pontedassio|Ponte Dellolio|Pontedera|Ponte Di Legno|Ponte Di Piave|Ponte Lambro|Pontelandolfo|Pontelatone|Pontelongo|Ponte Nizza|Pontenure|Ponteranica|Pont Saint Martin|Ponte San Nicolo|Ponte San Pietro|Pontestura|Pontevico|Pontey|Ponti|Ponti Sul Mincio|Pontida|Pontinia|Pontinvrea|Pontirolo Nuovo|Pontoglio|Pontremoli|Ponza|Ponzano Monferrato|Ponzano Di Fermo|Ponzano Romano|Ponzano Veneto|Ponzone|Popoli|Poppi|Porano|Porcari|Porcia|Stella Cilento|Pordenone|Porlezza|Pornassio|Porpetto|Portacomaro|Portalbera|Porte|Portici|Portico Di Caserta|Portico E San Benedetto|Portigliola|Porto Ceresio|Porto Valtravaglia|Portobuffole|Portocannone|Portoferraio|Portofino|Portogruaro|Portomaggiore|Porto Mantovano|Porto Recanati|Porto San Giorgio|Porto Santelpidio|Portoscuso|Porto Tolle|Porto Torres|Portovenere|Porto Viro|Portula|Posada|Posina|Positano|Possagno|Posta|Posta Fibreno|Postal|Postalesio|Postiglione|Postua|Potenza|Pove Del Grappa|Povegliano|Povegliano Veronese|Poviglio|Povoletto|Pozzaglia Sabina|Pozzallo|Pozzilli|Pozzo Dadda|Pozzoleone|Pozzolengo|Pozzol Groppo|Pozzolo Formigaro|Pozzomaggiore|Pozzonovo|Pozzuoli|Pozzuolo Martesana|Pozzuolo Del Friuli|Pradalunga|Pradamano|Pradleves|Sasso Marconi|Pragelato|Pray|Praia A Mare|Praiano|Pralboino|Prali|Pralormo|Pralungo|Pramaggiore|Pramollo|Prarolo|Prarostino|Prasco|Prascorsano|Prata Di Principato Ultra|Prata Sannita|Prata Dansidonia|Prata Camportaccio|Prata Di Pordenone|Pratella|Pratiglione|Prato|Prato Sesia|Prato Carnico|Prato Allo Stelvio|Pratola Serra|Pratola Peligna|Pravisdomini|Prazzo|Samo|Precenicco|Preci|Predappio|Predazzo|Predoi|Predore|Predosa|Preganziol|Pregnana Milanese|Prela|Premana|Premariacco|Premeno|Premia|Premilcuore|Premolo|Premosello Chiovenda|Preone|Prepotto|Pre Saint Didier|Preseglie|Presenzano|Presezzo|Pressana|Pretoro|Prevalle|Prezza|Priero|Prignano Sulla Secchia|Prignano Cilento|Primaluna|Priocca|Priola|Prizzi|Proceno|Procida|Propata|Proserpio|Prossedi|Provaglio Val Sabbia|Provaglio Diseo|Proves|Provvidenti|Prunetto|Puegnago Sul Garda|Puglianello|Pula|Pulfero|Pulsano|Pumenengo|Pusiano|Putifigari|Putignano|Quadrelle|Quadri|Quagliuzzo|Qualiano|Quaranti|Quargnento|Quarna Sopra|Quarna Sotto|Quarona|Quarrata|Quart|Quarto|Quarto Daltino|Quartu Santelena|Quartucciu|Quassolo|Quattordio|Quattro Castella|Quiliano|Quincinetto|Quindici|Quingentole|Quintano|Quinto Di Treviso|Quinto Vercellese|Quinto Vicentino|Quinzano Doglio|Quistello|Rabbi|Racale|Racalmuto|Racconigi|Raccuja|Racines|Radda In Chianti|Raddusa|Radicofani|Radicondoli|Raffadali|Ragogna|Ragusa|Ruviano|Raiano|Ramacca|Rancio Valcuvia|Ranco|Randazzo|Ranica|Ranzanico|Ranzo|Rapagnano|Rapallo|Rapino|Rapolano Terme|Rapolla|Rapone|Rassa|Rasun Anterselva|Rasura|Ravanusa|Ravarino|Ravascletto|Ravello|Ravenna|Raveo|Raviscanina|Re|Rea|Realmonte|Reana Del Rojale|Reano|Recale|Recanati|Recco|Recetto|Recoaro Terme|Redavalle|Redondesco|Refrancore|Refrontolo|Regalbuto|Reggello|Reggio Nellemilia|Reggio Di Calabria|Reggiolo|Reino|Reitano|Remanzacco|Remedello|Renate|Rende|Renon|Resana|Rescaldina|Resia|Ercolano|Resiutta|Resuttano|Retorbido|Revello|Revigliasco Dasti|Revine Lago|Revo|Rezzago|Rezzato|Rezzo|Rezzoaglio|Val Rezzo|Rhemes Notre Dame|Rhemes Saint Georges|Rho|Riace|Rialto|Riano|Riardo|Ribera|Ribordone|Ricadi|Ricaldone|Riccia|Riccione|Ricco Del Golfo Di Spezia|Ricengo|Ricigliano|Riese Pio X|Riesi|Rieti|Rifiano|Rifreddo|Rignano Sullarno|Rignano Garganico|Rignano Flaminio|Rigolato|Rimella|Rimini|Rio Saliceto|Rio Di Pusteria|Riofreddo|Riola Sardo|Riolo Terme|Riolunato|Riomaggiore|Rionero In Vulture|Rionero Sannitico|Ripabottoni|Ripacandida|Ripalimosani|Ripalta Arpina|Ripalta Cremasca|Ripalta Guerina|Riparbella|Ripa Teatina|Ripatransone|Ripe San Ginesio|Ripi|Riposto|Rittana|Rivamonte Agordino|Riva Ligure|Riva Del Garda|Riva Di Solto|Rivalba|Rivalta Bormida|Rivalta Di Torino|Rivanazzano Terme|Riva Presso Chieri|Rivara|Rivarolo Canavese|Rivarolo Del Re Ed Uniti|Rivarolo Mantovano|Rivarone|Rivarossa|Rive|Rive Darcano|Rivello|Rivergaro|Rivisondoli|Rivodutri|Rivoli|Rivoli Veronese|Rivolta Dadda|Rizziconi|Roana|Roaschia|Roascio|Rovasenda|Roasio|Roatto|Robassomero|Robbio|Robecchetto Con Induno|Robecco Doglio|Robecco Sul Naviglio|Robecco Pavese|Robella|Robilante|Roburent|Rocca Pietore|Roccavaldina|Roccabascerana|Roccabernarda|Roccabianca|Roccabruna|Rocca Canavese|Rocca Canterano|Roccacasale|Roccafluvione|Rocca Ciglie|Rocca Darazzo|Rocca Darce|Roccadaspide|Rocca De Baldi|Rocca De Giorgi|Rocca Devandro|Rocca Di Botte|Rocca Di Cambio|Rocca Di Cave|Rocca Di Mezzo|Rocca Di Neto|Rocca Di Papa|Roccafiorita|Roccaforte Ligure|Roccaforte Mondovi|Roccaforte Del Greco|Roccaforzata|Roccafranca|Roccagiovine|Roccagloriosa|Roccagorga|Rocca Grimalda|Rocca Imperiale|Roccalbegna|Roccalumera|Roccamandolfi|Rocca Massima|Roccamena|Roccamonfina|Roccamontepiano|Roccamorice|Roccanova|Roccantica|Roccapalumba|Rocca Pia|Roccapiemonte|Rocca Priora|Roccarainola|Roccaraso|Roccaromana|Rocca San Casciano|Rocca San Felice|Rocca San Giovanni|Rocca Santa Maria|Rocca Santo Stefano|Roccascalegna|Roccasecca|Roccasecca Dei Volsci|Roccasicura|Rocca Sinibalda|Roccasparvera|Roccaspinalveti|Roccastrada|Rocca Susella|Roccaverano|Roccavignale|Roccavione|Roccavivara|Roccella Valdemone|Roccella Ionica|Rocchetta A Volturno|Rocchetta E Croce|Rocchetta Nervina|Rocchetta Di Vara|Rocchetta Belbo|Rocchetta Ligure|Rocchetta Palafea|Rocchetta Santantonio|Rocchetta Tanaro|Rodano|Roddi|Roddino|Rodello|Rodengo|Rodengo Saiano|Rodero|Rodi Milici|Rodi Garganico|Rodigo|Roe Volciano|Rofrano|Rogeno|Roggiano Gravina|Roghudi|Rogliano|Rognano|Rogno|Rogolo|Roiate|Roio Del Sangro|Roisan|Roletto|Rolo|Roma|Romagnano Sesia|Romagnano Al Monte|Romagnese|Romallo|Romana|Romanengo|Romano Di Lombardia|Romano Canavese|Romano Dezzelino|Romans Disonzo|Rombiolo|Romeno|Romentino|Rometta|Ronago|Ronca|Roncade|Roncadelle|Roncaro|Roncegno Terme|Roncello|Ronchi Dei Legionari|Ronchi Valsugana|Ronchis|Ronciglione|Roncobello|Ronco Scrivia|Ronco Briantino|Ronco Biellese|Ronco Canavese|Ronco Alladige|Roncoferraro|Roncofreddo|Roncola|Rondanina|Rondissone|Ronsecco|Ronzone|Roppolo|Rora|Roure|Rosa|Rosarno|Rosasco|Rosate|Rosazza|Rosciano|Roscigno|Rose|Rosello|Roseto Valfortore|Rosignano Monferrato|Rosignano Marittimo|Roseto Capo Spulico|Rosolina|Rosolini|Rosora|Rossa|Rossana|Rossano Veneto|Rossiglione|Rosta|Rota Dimagna|Rota Greca|Rotella|Rotello|Rotonda|Rotondella|Rotondi|Rottofreno|Rotzo|Rovato|Rovegno|Rovellasca|Rovello Porro|Roverbella|Roverchiara|Rovere Della Luna|Rovere Veronese|Roveredo In Piano|Roveredo Di Gua|Rovereto|Rovescala|Rovetta|Roviano|Rovigo|Rovito|Rovolon|Rozzano|Rubano|Rubiana|Rubiera|Ruda|Rudiano|Rueglio|Ruffano|Ruffia|Ruffre Mendola|Rufina|Rumo|Ruoti|Russi|Rutigliano|Rutino|Ruvo Di Puglia|Ruvo Del Monte|Sabaudia|Sabbio Chiese|Sabbioneta|Sacco|Saccolongo|Sacile|Sacrofano|Sadali|Sagama|Sagliano Micca|Sagrado|Sagron Mis|Saint Christophe|Saint Denis|Saint Marcel|Saint Nicolas|Saint Oyen|Saint Pierre|Saint Rhemy En Bosses|Saint Vincent|Sala Monferrato|Sala Bolognese|Sala Comacina|Sala Biellese|Sala Baganza|Sala Consilina|Salbertrand|Salento|Salandra|Salaparuta|Salara|Salasco|Salassa|Salcito|Sale|Sale Delle Langhe|Sale Marasino|Salemi|Salerano Sul Lambro|Salerano Canavese|Salerno|Sale San Giovanni|Salgareda|Sali Vercellese|Salice Salentino|Saliceto|San Mauro Di Saline|Salisano|Salizzole|Salle|Salmour|Salo|Salorno|Salsomaggiore Terme|Saltrio|Saludecio|Saluggia|Salussola|Saluzzo|Salve|Savoia Di Lucania|Salvirola|Salvitelle|Salza Irpina|Salza Di Pinerolo|Salzano|Samarate|Samassi|Samatzai|Sambuca Di Sicilia|Sambuca Pistoiese|Sambuci|Sambuco|Sammichele Di Bari|Samolaco|Samone|Samone|Sampeyre|Samugheo|Sanarica|San Bartolomeo Val Cavargna|San Bartolomeo Al Mare|San Bartolomeo In Galdo|San Basile|San Basilio|San Bassano|San Bellino|San Benedetto Del Tronto|San Benedetto Belbo|San Benedetto Po|San Benedetto Dei Marsi|San Benedetto In Perillis|San Benedetto Ullano|San Benigno Canavese|San Bernardino Verbano|San Biagio Platani|San Biagio Saracinisco|San Biagio Della Cima|San Biagio Di Callalta|San Biase|San Bonifacio|San Buono|San Calogero|San Candido|San Canzian Disonzo|San Carlo Canavese|San Casciano Dei Bagni|San Casciano In Val Di Pesa|San Cataldo|San Cesario Di Lecce|San Cesario Sul Panaro|San Chirico Nuovo|San Chirico Raparo|San Cipirello|San Cipriano Daversa|San Cipriano Po|San Cipriano Picentino|San Clemente|San Colombano Certenoli|San Colombano Al Lambro|San Colombano Belmonte|San Cono|San Cosmo Albanese|San Costantino Calabro|San Costantino Albanese|San Costanzo|San Cristoforo|San Damiano Dasti|San Damiano Macra|San Damiano Al Colle|San Daniele Po|San Daniele Del Friuli|San Demetrio Corone|San Demetrio Ne Vestini|San Didero|Sandigliano|San Donaci|San Dona Di Piave|San Donato Val Di Comino|San Donato Di Ninea|San Donato Di Lecce|San Donato Milanese|Sandrigo|San Fele|San Felice Del Molise|San Felice A Cancello|San Felice Sul Panaro|San Felice Circeo|San Felice Del Benaco|San Ferdinando Di Puglia|San Fermo Della Battaglia|San Fili|San Filippo Del Mela|San Fior|San Fiorano|San Floriano Del Collio|San Floro|San Francesco Al Campo|Aglientu|San Fratello|Sanfre|Sanfront|Sangano|San Gavino Monreale|San Gemini|San Genesio Atesino|San Genesio Ed Uniti|San Gennaro Vesuviano|San Germano Vercellese|San Germano Chisone|San Gervasio Bresciano|San Giacomo Degli Schiavoni|San Giacomo Filippo|San Giacomo Delle Segnate|Sangiano|San Gillio|San Gimignano|San Ginesio|Sangineto|San Giorgio Monferrato|San Giorgio A Liri|San Giorgio Albanese|San Giorgio Ionico|San Giorgio Bigarello|San Giorgio Su Legnano|San Giorgio Di Lomellina|San Giorgio Piacentino|San Giorgio Lucano|San Giorgio Morgeto|San Giorgio Canavese|San Giorgio Della Richinvelda|San Giorgio A Cremano|San Giorgio Delle Pertiche|San Giorgio Del Sannio|San Giorgio Di Nogaro|San Giorgio Di Piano|San Giorgio In Bosco|San Giorgio La Molara|San Giorgio Scarampi|San Giorio Di Susa|San Giovanni Valdarno|San Giovanni Di Gerace|San Giovanni Al Natisone|San Giovanni A Piro|San Giovanni Bianco|San Giovanni Del Dosso|Villa San Giovanni In Tuscia|San Giovanni Gemini|San Giovanni Ilarione|San Giovanni Incarico|San Giovanni In Croce|San Giovanni In Fiore|San Giovanni In Galdo|San Giovanni In Marignano|San Giovanni La Punta|San Giovanni Lipioni|San Giovanni Lupatoto|San Giovanni Rotondo|San Giuliano Del Sannio|San Giuliano Di Puglia|San Giuliano Milanese|San Giuseppe Vesuviano|San Giuseppe Jato|San Giustino|San Giusto Canavese|San Godenzo|San Gregorio Nelle Alpi|San Gregorio Matese|San Gregorio Di Catania|San Gregorio Dippona|San Gregorio Da Sassola|San Gregorio Magno|Sanguinetto|San Lazzaro Di Savena|San Leo|San Leonardo|San Leonardo In Passiria|San Leucio Del Sannio|San Lorenzello|San Lorenzo Di Sebato|San Lorenzo Al Mare|San Lorenzo In Campo|San Lorenzo|San Lorenzo Bellizzi|San Lorenzo Del Vallo|San Lorenzo Isontino|San Lorenzo Maggiore|San Lorenzo Nuovo|San Luca|San Lucido|San Lupo|Sanluri|San Mango Sul Calore|San Mango Daquino|San Mango Piemonte|San Marcellino|San Marcello|San Marco Argentano|San Marco Dalunzio|San Marco Dei Cavoti|San Marco In Lamis|San Marco La Catola|San Martino Alfieri|San Martino In Badia|San Martino In Passiria|San Martino In Pensilis|San Martino Sulla Marrucina|San Martino Di Finita|San Martino Dagri|San Martino Di Venezze|San Martino Canavese|San Martino Al Tagliamento|San Martino Sannita|San Martino Buon Albergo|San Martino Dallargine|San Martino Del Lago|San Martino Di Lupari|San Martino In Rio|San Martino In Strada|San Martino Siccomario|San Martino Valle Caudina|San Marzano Oliveto|San Marzano Di San Giuseppe|San Marzano Sul Sarno|San Massimo|San Maurizio Canavese|San Maurizio Dopaglio|San Mauro Marchesato|San Mauro Pascoli|San Mauro Castelverde|San Mauro Forte|San Mauro Torinese|San Mauro Cilento|San Mauro La Bruca|San Michele Di Serino|San Michele Di Ganzaria|San Michele Mondovi|San Michele Al Tagliamento|San Michele Alladige|San Michele Salentino|San Miniato|Sannazzaro De Burgondi|San Nazzaro|San Nazzaro Val Cavargna|San Nazzaro Sesia|Sannicandro Di Bari|San Nicandro Garganico|San Nicola La Strada|San Nicola Dellalto|San Nicola Da Crissa|Sannicola|San Nicola Arcella|San Nicola Baronia|San Nicola Manfredi|San Nicolo Di Comelico|San Pancrazio|San Pancrazio Salentino|San Paolo Di Jesi|San Paolo Di Civitate|San Paolo Bel Sito|San Paolo Solbrito|San Pellegrino Terme|San Pier Disonzo|San Pier Niceto|San Piero Patti|San Pietro Di Cadore|San Pietro Al Tanagro|San Pietro Val Lemina|San Pietro Al Natisone|San Pietro A Maida|San Pietro Apostolo|San Pietro Avellana|San Pietro Clarenza|San Pietro Di Carida|San Pietro Di Feletto|San Pietro Di Morubio|San Pietro In Gu|San Pietro In Amantea|San Pietro In Cariano|San Pietro In Casale|San Pietro Infine|San Pietro In Guarano|San Pietro In Lama|San Pietro Mosezzo|San Pietro Mussolino|Villa San Pietro|San Pietro Vernotico|San Pietro Viminario|San Pio Delle Camere|San Polo Matese|San Polo Denza|San Polo Di Piave|San Polo Dei Cavalieri|San Ponso|San Possidonio|San Potito Ultra|San Potito Sannitico|San Prisco|San Procopio|San Prospero|San Quirico Dorcia|San Quirino|San Raffaele Cimena|Sanremo|San Roberto|San Rocco Al Porto|San Romano In Garfagnana|San Rufo|San Salvatore Monferrato|San Salvatore Telesino|San Salvatore Di Fitalia|San Salvo|San Sebastiano Curone|San Sebastiano Al Vesuvio|San Sebastiano Da Po|San Secondo Parmense|San Secondo Di Pinerolo|Sansepolcro|San Severino Marche|San Severino Lucano|San Severo|San Siro|San Sossio Baronia|San Sostene|San Sosti|San Sperate|Santa Brigida|Santa Caterina Villarmosa|Santa Caterina Dello Ionio|Santa Caterina Albanese|Santa Cesarea Terme|Santa Cristina Valgardena|Santa Cristina Gela|Santa Cristina E Bissone|Santa Cristina Daspromonte|Santa Croce Sullarno|Santa Croce Camerina|Santa Croce Del Sannio|Santa Croce Di Magliano|Santadi|Santa Domenica Talao|Santa Domenica Vittoria|Santa Elisabetta|Santa Fiora|Santa Flavia|Santagapito|Santagata Fossili|Santagata Bolognese|Santagata Di Esaro|Santagata Di Puglia|Santagata Sul Santerno|Santagata De Goti|Santagata Del Bianco|Santagata Di Militello|Santagata Feltria|Santagata Li Battiati|Santa Giuletta|Santa Giusta|Santa Giustina|Santa Giustina In Colle|Santagnello|Santalbano Stura|Santalessio Con Vialone|Santalessio In Aspromonte|Santalessio Siculo|Santalfio|Santa Luce|Santa Lucia Di Serino|Santa Lucia Del Mela|Santa Lucia Di Piave|Santa Margherita Di Belice|Santa Margherita Ligure|Santa Margherita Di Staffora|Santa Maria A Monte|Santa Maria A Vico|Santa Maria Capua Vetere|Travaco Siccomario|Santa Maria Della Versa|Santa Maria Del Molise|Santa Maria Di Licodia|Santa Maria Di Sala|Santa Maria Hoe|Santa Maria Imbaro|Santa Maria La Fossa|Santa Maria La Longa|Santa Maria Maggiore|Santa Maria Nuova|Santa Marina|Santa Marina Salina|Santa Marinella|Santambrogio Sul Garigliano|Santambrogio Di Torino|Santambrogio Di Valpolicella|Santomenna|San Tammaro|Santanastasia|Santanatolia Di Narco|Santandrea Di Conza|Santandrea Del Garigliano|Santandrea Apostolo Dello Ionio|Santandrea Frius|Santangelo Dalife|Santangelo Lodigiano|Santangelo Di Piove Di Sacco|Santangelo Lomellina|Santangelo A Cupolo|Santangelo A Fasanella|Santangelo Allesca|Santangelo A Scala|Santangelo Dei Lombardi|Santangelo Del Pesco|Santangelo Di Brolo|Santangelo Romano|Santangelo In Pontano|Santangelo In Vado|Santangelo Le Fratte|Santangelo Limosano|Santangelo Muxaro|Santa Ninfa|Santanna Dalfaedo|Santantimo|Santantioco|Santantonino Di Susa|Villa Santantonio|Santantonio Abate|Santa Paolina|Santapollinare|Santarcangelo Di Romagna|Santarcangelo|Santarpino|Santarsenio|Santa Severina|Santa Sofia Depiro|Santa Sofia|Santa Teresa Di Riva|Santa Teresa Gallura|Santa Venerina|Santa Vittoria In Matenano|Santa Vittoria Dalba|Santegidio Del Monte Albino|Santegidio Alla Vibrata|Santelena|Santelia A Pianisi|Santelia Fiumerapido|Vallefiorita|Santelpidio A Mare|Sante Marie|Santena|San Teodoro|San Teodoro|Santeramo In Colle|Santeufemia A Maiella|Santeufemia Daspromonte|Santeusanio Del Sangro|Santeusanio Forconese|Santhia|Santi Cosma E Damiano|Santilario Dello Ionio|Santilario Denza|Santippolito|Santolcese|San Tomaso Agordino|Santomero|Santonofrio|Santopadre|Santoreste|Santorso|Santorsola Terme|Santo Stefano Quisquina|Santo Stefano Del Sole|Santo Stefano Di Rogliano|Santo Stefano Di Sessanio|Santo Stefano Ticino|Santo Stefano Lodigiano|Santo Stefano Di Magra|Villa Santo Stefano|Santo Stefano Al Mare|Santo Stefano Belbo|Santo Stefano Daveto|Santo Stefano Di Camastra|Santo Stefano In Aspromonte|Santo Stefano Roero|San Stino Di Livenza|Santu Lussurgiu|Santurbano|San Valentino In Abruzzo Citeriore|San Valentino Torio|San Venanzo|San Vendemiano|San Vero Milis|San Vincenzo La Costa|San Vincenzo Valle Roveto|San Vincenzo|San Vitaliano|San Vito Di Cadore|San Vito Sullo Ionio|San Vito Chietino|San Vito Dei Normanni|San Vito Romano|San Vito Di Leguzzano|San Vito|San Vito Al Tagliamento|San Vito Al Torre|San Vito Di Fagagna|San Vito Lo Capo|San Vittore Del Lazio|San Vittore Olona|Sanza|Sanzeno|San Zeno Naviglio|San Zeno Di Montagna|San Zenone Al Lambro|San Zenone Al Po|San Zenone Degli Ezzelini|Saonara|Saponara|Sappada|Sapri|Saracena|Saracinesco|Sarcedo|Sarconi|Sardara|Sardigliano|Sarego|Sarentino|Sarezzano|Sarezzo|Sarmato|Sarmede|Sarnano|Sarnico|Sarno|Sarnonico|Saronno|Sarre|Sarroch|Sarsina|Sarteano|Sartirana Lomellina|Sarule|Sarzana|Sassano|Sassari|Sassello|Sassetta|Sassinoro|Sasso Di Castalda|Sassofeltrio|Sassoferrato|Sassuolo|Satriano|Sauris|Sauze Di Cesana|Sauze Doulx|Sava|Savelli|Saviano|Savigliano|Savignano Irpino|Savignano Sul Rubicone|Savignano Sul Panaro|Savignone|Saviore Delladamello|Savoca|Savogna|Savogna Disonzo|Savona|Scafa|Scafati|Scagnello|Scala Coeli|Scala|Scaldasole|Scalea|Scalenghe|Scaletta Zanclea|Scampitella|Scandale|Scandiano|Scandolara Ravara|Scandolara Ripa Doglio|Scandriglia|Scanno|Scano Di Montiferro|Scansano|Scanzorosciate|Scapoli|Scarlino|Scarmagno|Scarnafigi|Scena|Scerni|Scheggia E Pascelupo|Scheggino|Schiavi Di Abruzzo|Schiavon|Schignano|Schilpario|Schio|Schivenoglia|Sciacca|Sciara|Scicli|Scido|Scilla|Scillato|Sciolze|Scisciano|Sclafani Bagni|Scontrone|Scopa|Scopello|Scoppito|Scordia|Scorrano|Scorze|Scurcola Marsicana|Scurelle|Scurzolengo|Seborga|Secinaro|Secli|Secugnago|Sedegliano|Sedico|Sedilo|Sedini|Sedriano|Sedrina|Sefro|Segariu|Seggiano|Segni|Segonzano|Segrate|Segusino|Selargius|Selci|Selegas|Sellano|Sellero|Sellia|Sellia Marina|Selva Di Val Gardena|Selva Di Cadore|Selva Dei Molini|Selva Di Progno|Selvazzano Dentro|Selvino|Semestene|Semiana|Seminara|Semproniano|Senago|Senale San Felice|Senales|Seneghe|Senerchia|Seniga|Senigallia|Senis|Senise|Senna Comasco|Senna Lodigiana|Sennariolo|Sennori|Senorbi|Sepino|Sequals|Seravezza|Serdiana|Seregno|Seren Del Grappa|Sergnano|Seriate|Serina|Serino|Serle|Sermide E Felonica|Sirmione|Sermoneta|Sernaglia Della Battaglia|Sernio|Serole|Serra San Bruno|Serra Ricco|Serracapriola|Serra Daiello|Serra De Conti|Serradifalco|Serralunga Di Crea|Serralunga Dalba|Serramanna|Serramezzana|Serramonacesca|Serrapetrona|Serrara Fontana|Serra San Quirico|Serra Santabbondio|Serrastretta|Serrata|Serravalle Scrivia|Serravalle Langhe|Serravalle Pistoiese|Serravalle Di Chienti|Serravalle A Po|Serravalle Sesia|Serre|Serrenti|Serri|Serrone|Sersale|Sovramonte|Sessa Aurunca|Sessa Cilento|Sessame|Sessano Del Molise|Sestino|Sesto Campano|Sesto Ed Uniti|Sesto Fiorentino|Sesto Al Reghena|Sesto|Sesto Calende|Sestola|Sesto San Giovanni|Sestriere|Sestri Levante|Sestu|Settala|Settefrati|Settime|Settimo San Pietro|Settimo Milanese|Settimo Rottaro|Settimo Vittone|Settimo Torinese|Settingiano|Setzu|Seui|Seulo|Seveso|Sezzadio|Sezze|Sfruz|Sgonico Zgonik|Sgurgola|Siamaggiore|Siamanna|Siano|Siapiccia|Siculiana|Siddi|Siderno|Siena|Sigillo|Signa|Silandro|Silanus|Siligo|Siliqua|Silius|Sillavengo|Silvano Dorba|Silvano Pietra|Silvi|Simala|Simaxis|Simbario|Simeri Crichi|Sinagra|Sindia|Sini|Sinio|Siniscola|Sinnai|Sinopoli|Siracusa|Sirignano|Siris|Sirolo|Sirone|Sirtori|Siurgus Donigala|Sizzano|Sluderno|Smerillo|Soave|Socchieve|Soddi|Sogliano Al Rubicone|Sogliano Cavour|Soglio|Soiano Del Lago|Solagna|Solarino|Solaro|Solarolo|Solarolo Rainerio|Solarussa|Solbiate Arno|Solbiate Olona|Soldano|Soleminis|Solero|Solesino|Soleto|Solferino|Soliera|Solignano|Sulmona|Solofra|Solonghello|Solopaca|Solto Collina|Solza|Somaglia|Somano|Somma Lombardo|Somma Vesuviana|Sommacampagna|Sommariva Del Bosco|Sommariva Perno|Sommatino|Sommo|Sona|Soncino|Sondalo|Sondrio|Songavazzo|Sonico|Sonnino|Sora|Soraga Di Fassa|Soragna|Sorano|Sorbo Serpico|Sorbo San Basile|Sordevolo|Sordio|Soresina|Sorga|Sorgono|Sori|Sorianello|Soriano Calabro|Soriano Nel Cimino|Sorico|Soriso|Sorisole|Sormano|Sorradile|Sorrento|Sorso|Sortino|Sospiro|Sospirolo|Sossano|Sostegno|Sotto Il Monte Giovanni Xxiii|Sover|Soverato|Sovere|Soveria Mannelli|Soveria Simeri|Soverzene|Sovicille|Sovico|Sovizzo|Sozzago|Spadafora|Spadola|Sparanise|Sparone|Specchia|Spello|Sperlinga|Sperlonga|Sperone|Spessa|Spezzano Albanese|Spezzano Della Sila|Spiazzo|Spigno Monferrato|Spigno Saturnia|Spilamberto|Spilimbergo|Spilinga|Spinadesco|Spinazzola|Spinea|Spineda|Spinete|Spineto Scrivia|Spinetoli|Spino Dadda|Spinone Al Lago|Spinoso|Spirano|Spoleto|Spoltore|Spongano|Spormaggiore|Sporminore|Spotorno|Spresiano|Spriana|Squillace|Squinzano|Staffolo|Stagno Lombardo|Staiti|Staletti|Stanghella|Staranzano|Stazzano|Stazzema|Stazzona|Stefanaconi|Stella|Stellanello|Stelvio|Stenico|Sternatia|Stezzano|Stienta|Stigliano|Stignano|Stilo|Stimigliano|Stio|Stornara|Stornarella|Storo|Stra|Stradella|Strambinello|Strambino|Strangolagalli|Stregna|Strembo|Stresa|Strevi|Striano|Strona|Stroncone|Strongoli|Stroppiana|Stroppo|Strozza|Sturno|Subbiano|Subiaco|Succivo|Sueglio|Suelli|Suello|Suisio|Sulbiate|Sulzano|Sumirago|Summonte|Suni|Suno|Supersano|Supino|Surano|Surbo|Susa|Susegana|Sustinente|Sutera|Sutri|Sutrio|Suvereto|Suzzara|Taceno|Tadasuni|Taggia|Tagliacozzo|Taglio Di Po|Tagliolo Monferrato|Taibon Agordino|Taino|Talamello|Talamona|Talana|Taleggio|Talla|Talmassons|Tambre|Taormina|Tarano|Taranta Peligna|Tarantasca|Taranto|Tarcento|Tarsia|Tartano|Tarvisio|Tarzo|Tassarolo|Taurano|Taurasi|Taurianova|Taurisano|Tavagnacco|Tavagnasco|Tavenna|Taverna|Tavernerio|Tavernola Bergamasca|Taviano|Tavigliano|Tavoleto|Tavullia|Teana|Teano|Teglio|Teglio Veneto|Telese Terme|Telgate|Telti|Telve|Telve Di Sopra|Tempio Pausania|Temu|Tenna|Tenno|Teolo|Teora|Teramo|Terdobbiate|Terelle|Terento|Terlano|Terlizzi|Termeno Sulla Strada Del Vino|Termini Imerese|Termoli|Ternate|Ternengo|Terni|Terno Disola|Terracina|Terragnolo|Terralba|Terranuova Bracciolini|Terranova Da Sibari|Terranova Dei Passerini|Terranova Di Pollino|Terranova Sappo Minulio|Terrasini|Terrassa Padovana|Terravecchia|Terrazzo|Terricciola|Terruggia|Tertenia|Terzigno|Terzo|Terzo Daquileia|Terzolas|Terzorio|Tesero|Tesimo|Tessennano|Testico|Teti|Teulada|Teverola|Tezze Sul Brenta|Thiene|Thiesi|Tiana|Ticengo|Ticineto|Tiggiano|Tiglieto|Tigliole|Tignale|Tinnura|Tione Degli Abruzzi|Tione Di Trento|Tirano|Tires|Tiriolo|Tirolo|Tissi|Tito|Tivoli|Tizzano Val Parma|Toano|Tocco Caudio|Tocco Da Casauria|Toceno|Todi|Toffia|Toirano|Tolentino|Tolfa|Tollegno|Tollo|Tolmezzo|Tolve|Tombolo|Ton|Tonara|Tonco|Tonengo|Tora E Piccilli|Torano Castello|Torano Nuovo|Torbole Casaglia|Torcegno|Torchiara|Torchiarolo|Torella Dei Lombardi|Torella Del Sannio|Torgiano|Torgnon|Torino Di Sangro|Torino|Toritto|Torlino Vimercati|Tornaco|Tornareccio|Tornata|Tornimparte|Torno|Tornolo|Toro|Torpe|Torraca|Torralba|Torrazza Coste|Torrazza Piemonte|Torrazzo|Torre Di Ruggiero|Torre Mondovi|Torre Cajetani|Torre Di Santa Maria|Torre Annunziata|Torreano|Torre Canavese|Torrebelvicino|Torre Beretti E Castellaro|Torre Boldone|Torre Bormida|Torrebruna|Torrecuso|Torre Darese|Torre De Busi|Torre De Picenardi|Torre Del Greco|Torre De Negri|Torre De Passeri|Torre De Roveri|Torre Di Mosto|Torre Disola|Torreglia|Torregrotta|Torre Le Nocelle|Torremaggiore|Torre Orsaia|Torre Pallavicina|Torre Pellice|Torre San Giorgio|Torre San Patrizio|Torre Santa Susanna|Torresina|Torretta|Torrevecchia Teatina|Torrevecchia Pia|Torri In Sabina|Torri Del Benaco|Torrice|Torricella Peligna|Torricella Verzate|Torricella In Sabina|Torricella|Torricella Sicura|Torricella Del Pizzo|Torri Di Quartesolo|Torriglia|Torrile|Torrioni|Torrita Tiberina|Torrita Di Siena|Tortona|Tortora|Tortorella|Tortoreto|Tortorici|Torviscosa|Tuscania|Toscolano Maderno|Tossicia|Tovo San Giacomo|Tovo Di Santagata|Trabia|Tradate|Tramatza|Trambileno|Tramonti|Tramonti Di Sopra|Tramonti Di Sotto|Tramutola|Trana|Trani|Traona|Trapani|Trappeto|Trarego Viggiona|Trasacco|Trasaghis|Trasquera|Tratalias|Travagliato|Traves|Travedona Monate|Traversella|Traversetolo|Travesio|Travo|Trebaseleghe|Trebisacce|Trecastagni|Trecate|Trecchina|Trecenta|Tredozio|Treglio|Tregnago|Treia|Treiso|Tremestieri Etneo|Tremosine Sul Garda|Trentinara|Trento|Trentola Ducenta|Trenzano|Treppo Grande|Trepuzzi|Trequanda|Tresana|Trescore Balneario|Trescore Cremasco|Tresivio|Tresnuraghes|Trevenzuolo|Trevi|Trevi Nel Lazio|Trevico|Treviglio|Trevignano Romano|Trevignano|Treville|Treviolo|Treviso Bresciano|Treviso|Trezzano Rosa|Trezzano Sul Naviglio|Trezzo Tinella|Trezzo Sulladda|Trezzone|Tribano|Tribiano|Tribogna|Tricarico|Tricase|Tricerro|Tricesimo|Triei|Trieste|Triggiano|Trigolo|Trinita|Trinita Dagultu E Vignola|Trino|Triora|Tripi|Trisobbio|Trissino|Triuggio|Trivento|Trivigliano|Trivignano Udinese|Trivigno|Trivolzio|Trodena Nel Parco Naturale|Trofarello|Troia|Troina|Tromello|Trontano|Tronzano Vercellese|Tropea|Trovo|Truccazzano|Tubre|Tufara|Tufillo|Tufino|Tufo|Tuglie|Tuili|Tula|Tuoro Sul Trasimeno|Valvestino|Turano Lodigiano|Turate|Turbigo|Turi|Turri|Turriaco|Turrivalignani|Tursi|Tusa|Uboldo|Ucria|Udine|Ugento|Uggiano La Chiesa|Uggiate Trevano|Ula Tirso|Ulassai|Ultimo|Umbriatico|Urago Doglio|Uras|Urbana|Urbania|Urbe|Urbino|Urbisaglia|Urgnano|Uri|Ururi|Urzulei|Uscio|Usellus|Usini|Usmate Velate|Ussana|Ussaramanna|Ussassai|Usseaux|Usseglio|Ussita|Ustica|Uta|Uzzano|Vaccarizzo Albanese|Vacone|Vacri|Vadena|Vado Ligure|Vaglia|Vaglio Serra|Vaglio Basilicata|Vagli Sotto|Vaiano Cremasco|Vaiano|Vaie|Vailate|Vairano Patenora|Valbondione|Valbrembo|Valbrevenna|Valbrona|Valdagno|Valdaora|Valdastico|Val Della Torre|Valdengo|Valdidentro|Valdieri|Valdina|Val Di Nizza|Valdisotto|Val Di Vizze|Valdobbiadene|Valduggia|Valeggio Sul Mincio|Valeggio|Valentano|Valenza|Valenzano|Valera Fratta|Valfabbrica|Valfenera|Valfloriana|Valfurva|Valganna|Valgioie|Valgoglio|Valgrana|Valgreghentino|Valgrisenche|Valguarnera Caropepe|Vallada Agordina|Vallanzengo|Vallarsa|Vallata|Valle Di Cadore|Valle Di Maddaloni|Valle Lomellina|Valle Agricola|Valle Aurina|Vallebona|Valle Castellana|Vallecorsa|Vallecrosia|Valle Di Casies|Valledolmo|Valledoria|Vallemaio|Vallelonga|Vallelunga Pratameno|Vallepietra|Vallerano|Vallermosa|Vallerotonda|Vallesaccarda|Valle Salimbene|Valle San Nicolao|Valleve|Valli Del Pasubio|Vallinfreda|Vallio Terme|Vallo Di Nera|Vallo Della Lucania|Vallo Torinese|Valloriate|Valmacca|Valmadrera|Val Masino|Valmontone|Valmorea|Valmozzola|Valnegra|Valpelline|Valperga|Valsavarenche|Valstrona|Valtopina|Valtournenche|Valtorta|Valva|Valverde|Vandoies|Vanzaghello|Vanzago|Vanzone Con San Carlo|Vaprio Dadda|Vaprio Dagogna|Varallo|Varallo Pombia|Varano Borghi|Varano De Melegari|Varapodio|Varazze|Varco Sabino|Varedo|Varena|Varenna|Varese Ligure|Varese|Varisella|Varmo|Varna|Varsi|Varzi|Varzo|Vasia|Vastogirardi|Vauda Canavese|Vazzano|Vazzola|Vecchiano|Vedano Olona|Vedano Al Lambro|Vedelago|Vedeseta|Veduggio Con Colzano|Veggiano|Veglie|Veglio|Vejano|Veleso|Velezzo Lomellina|Velletri|Vellezzo Bellini|Velo Veronese|Velo Dastico|Velturno|Venafro|Venaus|Venaria Reale|Venarotta|Venasca|Vendone|Vendrogno|Venegono Inferiore|Venegono Superiore|Venetico|Venezia|Veniano|Venosa|Venticano|Ventimiglia Di Sicilia|Ventimiglia|Ventotene|Venzone|Verano Brianza|Verano|Verbania|Verbicaro|Vercana|Verceia|Vercelli|Vercurago|Verdellino|Verdello|Verduno|Vergato|Verghereto|Vergiate|Vermiglio|Vernante|Vernasca|Vernate|Vernazza|Vernio|Vernole|Verolanuova|Verolavecchia|Verolengo|Veroli|Verona|Verrayes|Verretto|Verrone|Verrua Savoia|Verrua Po|Vertemate Con Minoprio|Vertova|Verucchio|Vervio|Verzegnis|Verzino|Verzuolo|Vescovana|Vescovato|Vesime|Vespolate|Vessalico|Vestenanova|Vestigne|Vestone|Vetralla|Vetto|Vezza Doglio|Vezza Dalba|Vezzano Ligure|Vezzano Sul Crostolo|Vezzi Portio|Viadana|Viadanica|Viagrande|Viale|Vialfre|Viano|Viareggio|Viarigi|Vibonati|Vicalvi|Vicari|Vicchio|Vicenza|Vicoforte|Vico Del Gargano|Vico Nel Lazio|Villa Literno|Vico Equense|Vicoli|Vicolungo|Ziano Piacentino|Vicopisano|Vicovaro|Vidigulfo|Vidor|Vidracco|Vieste|Vietri Di Potenza|Vietri Sul Mare|Vigano San Martino|Vigano|Vigarano Mainarda|Vigasio|Vigevano|Viggianello|Viggiano|Viggiu|Vighizzolo Deste|Vigliano Dasti|Vigliano Biellese|Vignale Monferrato|Vignanello|Vignate|Vignola|Vignola Falesina|Vignole Borbera|Vignolo|Vignone|Vigo Di Cadore|Vigodarzere|Vigolo|Vigolzone|Vigone|Vigonovo|Vigonza|Viguzzolo|Villa Santa Lucia|Villadossola|Villa Di Chiavenna|Villa Di Tirano|Villa Santina|Villa Bartolomea|Villa Basilica|Villabassa|Villabate|Villa Biscossi|Villa Carcina|Villa Castelli|Villa Celiera|Villachiara|Villacidro|Villa Collemandina|Villa Cortese|Villa Dadda|Villadeati|Villa Del Bosco|Villa Del Conte|Villa Di Serio|Villa Estense|Villa Dogna|Villadose|Villafalletto|Villa Faraldi|Villafranca Sicula|Villafranca Dasti|Villafranca In Lunigiana|Villafranca Padovana|Villafranca Piemonte|Villafranca Di Verona|Villafranca Tirrena|Villafrati|Villaga|Villagrande Strisaili|Villa Guardia|Villa Lagarina|Villalago|Villalba|Villalfonsina|Villalvernia|Villamagna|Villamaina|Villamar|Villamarzana|Villamassargia|Villa Minozzo|Villamiroglio|Villandro|Villanova Monferrato|Villanova Del Battista|Villanova Mondovi|Villanova Dalbenga|Villanova Del Sillaro|Villanova Biellese|Villanova Di Camposampiero|Villanova Sullarda|Villeneuve|Villanova Canavese|Villanova Dardenghi|Villanova Dasti|Villanova Del Ghebbo|Villanovaforru|Villanovafranca|Villanova Marchesana|Villanova Monteleone|Villanova Solaro|Villanova Truschedu|Villanova Tulo|Villanterio|Villanuova Sul Clisi|Villaputzu|Villar Dora|Villarbasse|Villarboit|Villareggia|Villar Focchiardo|Villaromagnano|Villarosa|Villar Pellice|Villar Perosa|Villar San Costanzo|Villasalto|Villasanta|Villa San Giovanni|Villa San Secondo|Villa Santa Lucia Degli Abruzzi|Villa Santa Maria|Villa Santangelo|Villasor|Villaspeciosa|Villastellone|Villata|Villaurbana|Villavallelonga|Villaverla|Villetta Barrea|Villette|Villesse|Villimpenta|Villongo|Villorba|Vilminore Di Scalve|Vimercate|Vimodrone|Vinadio|Vinchiaturo|Vinchio|Vinci|Vinovo|Vinzaglio|Viola|Vione|Vipiteno|Virle Piemonte|Visano|Vische|Visciano|Visco|Visone|Visso|Vistarino|Vistrorio|Vita|Viterbo|Viticuso|Vito Dasio|Vitorchiano|Vittoria|Vittorio Veneto|Vittorito|Vittuone|Vitulazio|Vitulano|Viu|Vivaro Romano|Vivaro|Viverone|Vizzini|Vizzola Ticino|Vizzolo Predabissi|Vo|Vobarno|Vobbia|Vocca|Vodo Cadore|Voghera|Voghiera|Vogogna|Volano|Volla|Volongo|Volpago Del Montello|Volpara|Volpedo|Volpeglino|Volpiano|Voltaggio|Voltago Agordino|Volta Mantovana|Volterra|Voltido|Volturara Irpina|Volturara Appula|Volturino|Volvera|Vottignasco|Zaccanopoli|Zafferana Etnea|Zagarise|Zagarolo|Zambrone|Zandobbio|Zane|Zanica|Zavattarello|Zeccone|Zeddiani|Zelbio|Zelo Buon Persico|Zeme|Zenevredo|Zenson Di Piave|Zerba|Zerbo|Zerbolo|Zerfaliu|Zeri|Zermeghedo|Zero Branco|Zevio|Ziano Di Fiemme|Zibido San Giacomo|Zignago|Zimella|Zimone|Zinasco|Zoagli|Zocca|Zogno|Zola Predosa|Zollino|Zone|Zoppe Di Cadore|Zoppola|Zovencedo|Zubiena|Zuccarello|Zugliano|Zuglio|Zumaglia|Zumpano|Zungoli|Zungri|Lariano|Lamezia Terme|Santanna Arresi|Terme Vigliatore|Acquedolci|Ladispoli|Ardea|Badesi|Sicignano Degli Alburni|Molina Aterno|Scanzano Jonico|Portopalo Di Capo Passero|Avigliano Umbro|Viddalba|Casapesenna|Castro|Cellole|Porto Cesareo|San Cassiano|Vajont|Ordona|Zapponeta|Blufi|Paterno|Masainas|Mazzarrone|Ciampino|Santa Maria La Carita|Golfo Aranci|Loiri Porto San Paolo|Santantonio Di Gallura|San Ferdinando|Villaperuccio|Priolo Gargallo|Trecase|Petrosino|Tergu|Maniace|Santa Maria Coghinas|Cardedu|Torrenova|Ragalna|Castiadas|Massa Di Somma|Stintino|Piscinas|Erula|Bellizzi|San Cesareo|Fiumicino|Statte|Due Carrare|Padru|Montiglio Monferrato|Ronzo Chienis|Cavallino Treporti|Fonte Nuova|Campolongo Tapogliano|Lonato Del Garda|Ledro|Comano Terme|Gravedona Ed Uniti|Mappano|Rivignano Teor|Trecastelli|Fabbriche Di Vergemoli|Valsamoggia|Figline E Incisa Valdarno|Castelfranco Piandisco|Fiscaglia|Poggio Torriana|Sissa Trecasali|Scarperia E San Piero|Casciana Terme Lari|Crespina Lorenzana|Pratovecchio Stia|Montoro|Vallefoglia|Quero Vas|Santomobono Terme|Val Brembilla|Bellagio|Colverde|Verderio|Cornale E Bastida|Maccagno Con Pino E Veddasca|Borgo Virgilio|Tremezzina|Longarone|Valdaone|Predaia|San Lorenzo Dorsino|Valvasone Arzene|Sillano Giuncugnano|La Valletta Brianza|Altavalle|Altopiano Della Vigolana|Amblar Don|Borgo Chiese|Borgo Lares|Castel Ivano|Cembra Lisignago|Conta|Madruzzo|Porte Di Rendena|Primiero San Martino Di Castrozza|Sella Giudicarie|Tre Ville|Vallelaghi|Ville Danaunia|Ventasso|Pieve Di Bono Prezzo|Dimaro Folgarida|Polesine Zibello|Montescudo Monte Colombo|Alto Reno Terme|Borgomezzavalle|Lessona|Corteolona E Genzone|Campiglia Cervo|Val Di Zoldo|Alpago|Abetone Cutigliano|San Marcello Piteglio|Montalcino|Terre Roveresche|Colli Al Metauro|Terre Del Reno|Valfornace|Alta Valle Intelvi|Val Liona|Casali Del Manco|Alta Val Tidone|Montalto Carpasio|Cassano Spinola|Alto Sermenza|San Giovanni Di Fassa Sen Jan|Rio|Laterina Pergine Valdarno|Castelgerundo|Centro Valle Intelvi|Valvarrone|Borgo Mantovano|Alluvioni Piovera|Cellio Con Breia|Treppo Ligosullo|Fiumicello Villa Vicentina|Barbarano Mossano|Borgo Veneto|Corigliano Rossano|Valle Cannobina|Val Di Chy|Borgocarbonara|Terre Dadige|Barberino Tavarnelle|Tresignana|Riva Del Po|Sorbolo Mezzani|Solbiate Con Cagno|Sassocorvaro Auditore|Quaregna Cerreto|Valchiusa|Gattico Veruno|Valdilana|Piadena Drizzona|Colli Verdi|Lu E Cuccaro Monferrato|Borgo Valbelluna|Pieve Del Grappa|Valbrenta|Vermezzo Con Zelo|Cadrezzate Con Osmate|Colceresa|Lusiana Conco|Presicce Acquarica\",\n            \"provinceOrCountry\": \"PDLOLCSIORPEMIPZRGFGCNMTAQRIPZBZSANACTCTCTCTCTFRCSBSPUMNCRVTCSVVAPTRAPBACLCBISALCSFRBACTBGBGROBSVRRMNARCPCNASSENPTATTOPDCRRCISFRBSBLRMVAMBNOAGSAANVIAOMBORENAQAVCSUDCSCEBIAOTOBNIMLCCNSSTNTOPVVCPEBLSVFRCNTEORMISABGVCPZRMPVSOVRPRCNCOSVALBAFGCOVICZTOTNMBCSPDREBGCOSVSVVAPVSOATPVTPMETNBZORAGALCSLELESAAQBSALRASSBGMEPAMTALVCCEMEPAPAORAOBLTRLERMBGBGBGBGTOVITOTOPCCOBASVALAVPASAVIFMCSCHVITVCNPACSLUTRCEFRALBGCOSAFMCSUDCZFRCZRIBGSPTRCSNOBNBLUDNAFRTEANCZSOTNTOSVBILETOPNAVBTBZSSBSVAARVRBSSATOPDRMCRATLCVERCBGAOBZAORMFRATMERCRIVBAQCOFGPZRMBOVBAOPUBNMCBNBZCOMCAPSOIMFGCSLTSAIMAQUDAVFRLEAGATPNNUORVCSUTVFRBGANCHORGRRMVATNSPVRMIMBVISSORSOBGRCVVPVGEMIARCOBOFECNCNCZCHAVRORMCHCETONUVBVTMINOPZIMSUFRSVAOLEVBNOCOBNBNFRPDROALAPPDTRBGVABLVITERMUDUDRMBSAOSSNUNAPDVISASIAPFGRIVIVCVISIMNTVRIMICAPGCOORENATORAQPZSACHFRSATEAVTRUDNUSRSAMSVBIMBLFRNUGEBZAVAVBGCETAAQPNBGTOPZTNAOSRALTOCRATBGBSPNVAVABGVBNAIMBZPVROVRARCZRCPARAPVRARCUDCNBGLUPTPIFIFCAVISPDBSCRCNLEREROMNMSVTBSCEAVIMTORETOATCNTOTOPASVLCSUTOVCVCAQPZALSSTOORVBPZPDORPZCBNAMIVAORTOANVTCNBSBGFIPVBZPDMEPNAOVAPRSVVRTOMINOORAQLUGECNBSBANUBGBOPZAQMBBTCOCNTOSAENSUAQSULCBGLCLCALPVTRTETNBNMIMEMIUDVTBSVIVTVAVTLTALCNPGPVMOPDCNSAPVPAFRORNUVBVABSTNPRBGVBTOCNCZVRALMCPUPVVBPZLCTERNRMCNMINOCESABLMBFMISCSFRPARICTCSANATBOKRCSCNNUSOCOCNRCSSCNBNBIBOBGSOPRSSCOPVALBGROSVCNBSMTMBMICNFCUDLOATALBGBSBSMBVAMITNPCVAVASSPCPGVBPGSPVRCTCSRCNOVABGVCSOMBREARLITOFGUDORVTBIBSTNPICOMIBABIAOBSNUAVPABTAQTECSALVABABABANUAGRCCOTNBGCOCOPDPCTONOCSVCTNVALOMIGEVBNOCBSVSPBGMITOMTBOPEPAMCNUVTBGBZNOVIVTCHCLPAMOORSPBGBGVRFETNBNCBCRCSAVSSSSSSCNRIBLUDIMCRPRREPVTOPASPIMLORIALSVFCCZTOSVTNLURIVCBGMNPVTONOLOCNNOIMTOTOPCPUPVALPVPDCNPRBSFIALPVBSVCPRNOBOVCSVSOPVBSORNUCHBITVNUSSSSGEORROVRALVRTONANACNALLCPVBGCNCZLEBGBSSSRCRCRCBSCNBSFGMBPDVRALMNCNBGRMSABZPVRCBSTOBGBSVATVCRVAVICOBGBGLOPVVICOBZBSVAVRTNVRREBSTNPVBZVIMITNVACNVVTOCOPZCNNOBGALBRPZVANOBSMBRAVAAOPELCFRVIVVMECNPVCTBZCNTOVBTOMBPDSPPNTOBGCOVABZATBGTONAVABIAOTORCMIATSRCHBNMISAARSSPNSSBOSUPTSOAQVAUDLCCOSSSSSABNCHSICSMBSUAGSSTOTOVCORGETOCNMISRTPMBMIPRPECBVRTOVAMICLPIVRTOATUDBGALVACOORPAISKRVAREPCTNPDCOTVTOSAPUCACOFGAQTNCECEBZBSSOAVVASVNAAVBLATAGSSRCVBENAQSUCTTPPVVTTNPIMTPIBGBSBGLCBZMCBOTNVRVITNPCFIPRSVSPLEAVSVBIATTNLCCSATCSAGCTCLPANOROVIBGTOBSSACRPZVIBGPZBNCETRPVMIBSNAALLUBIAGMITOVBBIISCNANATANBGRMNOMCSACERCALUDCRVIAGGEAOSAVECERMGRCRRECSMBREPGVCLEFILITOVITOCOTNTERCCBAGTPCBPDTNAQLTCBBZSOPDPAPAFMPAUDCLGEMOAOBNBNFRCBVEPZCBGELIVESAPALUIMCTMCPDPDNAMOPVAQBZBOCNBLRMTNROTNPZCEROFGBIPVTOPDAVRCTOMIATRIVTPNAGSRVTTOAQCSSAPGVBMNPVVBLERCBGBTCHCNAQPORITOALISRIRMATVARMPUTOCOTECOVEPCSAPAGRPILURMCRAQCOVVAQAQMEBGBLVTBSMECELIARMBAQAVCABSAQTVCRCRPEISFILICRRMVTBOLEVTCNARVBMENATNBSALBGCETOAVATBIVRBGBSGOCEBACZRCCNCNPETNFGAQGEAPMBCOBGVATOIMVTALSUNAPVCOPZTVSUSVPDVCVACNRCCZNALUTOLCALRCVCVCALKRSSCSAVTOCOCEPACEVCTNFGCOSRUDSUCZTOLEPOPDVAMBBZBGCSBGMEVAVATABRISPCCSPUBSALMOMILENOPVRECHPERMFGISMSVIALSPSPALCNAQVICNPUALPDMICOCHBGTNKRCBCHCECHFRNOCHAVTOSACRALCBCEBNVAVBPDPITVBOCRALNOALVRLOSACRCRCRBORECNSACHNOCRLOCRMNALCSFGNAPZMNLOMNPDCRBTCEFGMEFRNOVANABANANASVVCPVRMBIRICELELCMIGEPNALLCPVNABGPGVAPIVCTOPVTOGELOSATOLOFICETVRCREKRBOBGCOCOBGMSNARASICHVAPVMINAATSOUDLCAVBAVACSMIVASRBGMIMICOATLCALALMIFRVIPVTEVRLITOCNATTOATPVMEMIPVBSVIPDAVMNANBZSVATRACBPASAFMBSTVPABOMNVRBGRNCNISAQGRBOCRAQCTAPMEAQCERIANFIARTNLTAVBNMOCSIMTVPICHCRRMTRMNVIPZBOROCHSAAQATTENATPTOBAPATAALVAREALIMPCGRALNOANCRATBIALPVALALATALCNNOCNTESICNPICBCNFRCEVATNPVBOSOLCNATNTVTNMNCBFGPZISPZFGRMBOCNCOROBSPZMECEPVCNROTNPNRERECOFGFRRIVRATSILOALATSAATSALURMSPTOMOALPIBNISISANBNMCPGATBZBGSAPCSAARBORMMCRIVTISPZSSVAALAGSVAQAQBNAOAVBNRCTPMOPCTRCRCEBOBSAOBOCTCHVACSGELULOSATOPEPGGRTEMNSICNVTTECNARARAPTECNBGSOUDLOBSAPBSLELELEBGFRFCFRAGENVAPAPZCBMECSCSCTCZENPEAGRNBNPVSABINONOTOVRTNCNCNLENOTNCOVAVETVPNALVEUDRMTNTNLOMBBGMOTNTOREMNARBSVABGVRFRPVLIBSSOPAPAVEBRAQCHFGCSALCRBACSATBSATCNFGSVSAVTVTBRTECZBGBGBLBGROSVCNFESAENCZPEBNVBFRENGECONOPVSACBTOCBCSAQSOUDNAPATOVRROKRMNALCNTOBGALPVPVSVIMMBPCFGCSCOTERMCOLCMIANBNPGATFICNALBIATISMIMIVRPZFIPVCZRMPDFRCNVCBSCNPVRMRACSLOUDAVCEIMCSCELCTOMIMBVBMEMIFCFCAVBLIMTVVVMCATSABSSICSCNBSAOAOAOAOAOCNSSTOVIAVSIPITORGSSTVANCZBSPZISGESOTOBZTOSOTOBLPTCHFGCRBGPVVETOPNUDARBGVISOBZCNPATOUDIMATAVIMSISIARTOAGRETVBLGECZNASARMCRTOVCCNPVBSPVTVBSRCPANABSPNTNATRMCRMCGRMIPASORCTOTNPDVETOCECSIMBNTOMTCOKRKRTNBGSVBGVAMITVCNATLTBRPGPDPGPGRIRCRIPEVALCIMTNVCUDBGBSCSCBVTAQRMCHISMCPECBRMARCHFCAQPEVTTEGRAQRMSOCOBGPNPNCNTOTNCSVATNBGTOTOATBSATVAAQPDPVFETVLOUDSSBIMBAOGEVIGENOBGFRPCLCRIAQPGBNSITVBSLCPRPECBCHCHRIRMRITOAQFRLEAQTOTOLIFRPABLCBRIAPISSARISUBSVCUDMCMTVRBSBGMIVRRMTECOSOPRCSMIBGVAFEMSLOUDBLBLVABSNORGAGNAMNTNCOPRAPCOBGVECESAISVRRIBSVEMOMBRCTOMETVPVRICZALRAPDPARIAVTESASABAAVALLEPVFEPVBASAMIROVTPGPNTVPNGELUFRAQLTRNLEANTOPAPZSAAOMIGOBGBGMIMBVILOCNVTPRUDLOLOTVMIREMBPDCOMCTELEMIATBZCZATATATPCCRCRBSPCCNBSLCBGLOATBZTEARPEBZPVBSUDCSIMSORCTOCNBISVAPVBSSATALBGROVIPGPVBGBGLCVCIMBGVRATCNRAKRKRRIBGPVMTLCVCCNVBVICHBGCRCRLCVALCCOALCRCRVCVILORONOBIBOVBNATACNGEVBTECSCZCSVACRVCTNKRVAVRSACOTOMIVAORPETOCRVACNATTOCHAPANORNOVACZBIBGBZLEPDMNCEMIBNMICOBGTPKRLEVAVATNMIBGTNBLBSVVGEVACZSOCASUCZSVSPSOCLRCFGBSCNALTNALCRPGLCVCBSMBNUCSCSCNSAIMIMIMIMFIUDVVCSLENOCOBZGOCNCHUDVRIMIMGOSUTSVELCCSCOBLAVVBSUSUAOBICOSUNULCNOPVBIMNBGCOAOFCCRBOCEVVTNUDMITNCNTOVBNUSOVIBNTSVAVABNATSABSBZPENULCCACNAOFIBGVIUDCNBGCNPZVECOVRVRBSBRTPSVPNLCMCSUSUTOBSLCFRSSPDSUAOCOALREANVTVVTRUDSOTNRAFGUDCOTACSAQVATNBNBLCEANCSMEVTCZFMCHCOFRBZMOPNPUTEBGBGNORICHCHVIPZCNPEPCVTGOTVBRGEPICNGEMTAGTPTOSVCNTOPRSAALBLCOTOAOTRFRSRPUFMVACZRCCZMTFEVRCBVAPVTOATPCRCALRIRMTOMCTNMCPAROMETRBZTNCRFIBSROVECOCSORRMVVBGVVMSFRCHPZPVISVVANMOSVBGCOBGMOTOPCFIFICSSAMORCPNMECTCSMCMSUDBSMESRSSAVSUORVCFGBNGOTOARBNTNAPPGTVSPGRLOMELTTNNUAOFRBOPNAVBGPRTVNOVCGEATPDTVAQFRCEBGPRBLBGRICHAPBNSOORPZBGUDAVNAISFCFCVBRMLTCECRMOVCTNISVIUDUDUDTOBGPRLUBZPVMELUMSAQCBCHVEVECNCZPGRCVEPUVICNCNTABNBNCHSPALFMBRVVCHCSMEPZVVSRCEALPVRMCSTNROALALTOCNMOBNRIPGPGRONANAPUMETVCHALAVCECEATCHPNTOPUPUFRISTOALALFIBGVRFRBZCHMEMESASUCSRASOSACRALPUAOCRNULTMEMIBOBIENAQLECZMCTVROCNSINUBZMELELERCLCFCLOVAVTVANOPVLURMPZBOPDFRVILECEMECENUPDALBSPVCNFICBVICHFCPVVIBGBGBGPAMTALNOMILCVRBSBSCNNOBZBSPVLCSVTNCOTOCZTOREFCVCBSROBGALRMVANUGRMNVABGPDVRPCMNCLRNUDVARMANCRCNSUGESUPZRMCORCRCPARMPVVASUTOVBVAVVSOCRSUMICHSUAVBSNOVBORBGVCROTOBSCEPGPAMEALRGCTSSTOTVSUTPBIRCSASAVBAOCBCZPZBNTASABACEAQRCMERCTRBATNNUCZCHLENAPACHFRTESALEPVMBSVTNSVTOCZBZSPTVPVPAMNVAPVCRUDSUSUSUORORMNSORMTVMTMIAQGOBGVAVABGVABGFEGECNBLPCCNBSCNNOPUGOGOVTLOVTBINAPCCTATBOCOCOMENOVAPDPDMTBGPAPVVBTOBACTCEATRIAVVCALAOAOAOFIMIVRCOCENOTNUDCSCNVICSBOALBGALBGCRPVPCTOSOSOGRTORMTAAVAPFMAGVTRCMTAVVETOCRBGPZBANAVILEMCPGPGREMESUCOFRVCLOCZROTRCSCHCBAVPZCBBNPICNSUREALPGMICBMNRMMOPVCHVBSUBSCRAOCZBSSUCNNUVRSSLCTNBOIMFIVAATBSVATOVBLCAOAQCOPVTOMINOMIFEVVNUBSMTCNCZNAVTFGBSTNISSUPAATKRFRGESOTETOIMGRVRPAPUBGVICRVRALFGBSSARGVATOAOBGAOCHTVMELTSSSSTOCRCBRMVANUANVVAGAORMRITOMINAAVBZORSSRCVICOCNCSPZFEBZPISVMICOCSCSBZBZBGTOCHSSMOCOBLCNAGPTVCBZCHNOPVPRPVNUSOTOFMAVCSPTPVCBBZAOPACOSPSUVIFIVTTAAOBRLTUDPZCSUDRCSABZPZPZTOSASAAVGEVRBLBZTNPZVAVABSSATNVRMBAQLELCBGVAVRMIPDNUTOGETOROMEBGBSLTVCMBCHSRRIENTALECNCNPASPALNOCNPRPRFGMBTOUDCEMENAPECHSPBGLECNTNTOCOCEMEAGMSRMCTLCVCUDAOBLBNVVMBPDCOMEBSCNCBPVCTAVMECOPVMICHPGCNMBCLNASOBLCOTNLIVCLOLETASVATTOCOMIBGNUBANUNULONULOBSBSBOLCCOTOTOPVTNVAVAFIISVIBSMEFCCSCSCOLIRIVITOPDVBBLROANPETVARMCGEBSNUBGSOBSVABLPDVCVTAGLUFGARIMCBAQAQPCTRRAVIVACONUGEBSSUPUCSAVSSCBCOCOBGSSCOCETNTOTOUDROTOBZSAVABGRECSLOISISCBTOMCCEPUMBBSNUCNVBCECRBGVBLTCBBSMINOPVPGCZFMCNCNGRAQRIRMSALESVTOMNMIUDBIORBZCOUDCZCSVVANRNSALOBSSPCRBOUDVRTNBSLOVBCTMEVALCCSSVBZVAVIBSTNAPMEALCSRCNUGRMESUCSLCNOTABSBSFGCNCSPNAVPETVCNSOMNUDRMBGSSCAMOMONANORMUDVRVICSCSATPZMIMNCZRMCZRIBSVALILICEARPVVEBZCNTVTOATCNBTLCMNCOGOCLNANARCPARMBZPTBSMNCNVABSRCVIFIORCNTPPGPZPZVTLEVEBZUDCRLETABGCNTECZCZSSRCLOTAAVCEPVCSVAMICTCTPZVATVVBPDTVPDALFECOGEFMAQMSPGPTTALORANAGRPDLUBITOBICEAPTNSVNOVBORMCMTTOLECBTOFGTPBSRMCLMETOTNSONUTOMBPVGOPRBOMIBGMNMOTVPNPDNOROALFCGEMILELOPZRCRCSRKRLEAVNARCBNCNSOTVLEBZMICOPVIMCSAGRMVEALBZLCVAPUPURNSAFCTOAVUDANVBMEPDLOCOBRSOVAMIFEKRMEPDNAMBBITNPVPVVRGEPVTNTOTNPABGTNNOBITVNOVBRILECHCZMTGECEMIMEVVORCTMESVCTBSCTVRBOBTLESALTLUSVVEAVCTALCBPVISMOVEMEBGRNPAMBLCPZCTMEATGEMORGFCLOORBATNLCUDMNMCTVORORORBNUDBGMESACNBAALLUBABNBOIMALCBPZVCAGRCLCCOTNATCNPUATCNALTOATNOTORIALCBATRCATCNTOBGCNCNTVSUTOATALCNPRVCATRNPUPUCNCEGECNGOMOCNMETVATBOVVALAOMEBICSBZCOBSALBSBAPATSFMAPANPDCAPTCNATALATCBBZSOPDMEAVFIMTMEANALALCNTOCNATPTTOAGAPCSPVVTTOTOLOCNSACOFMISRICZCHCRGRPVPEVITVGERIAVPVPULUANMCALPGTRPIMCVRTRREVIVIPUATALBSPRPUCBRMPUSASASAMCVBMOVIAPNACLAVPGFMBNCBMCPUCHVTTEAPRNMORMAVSAVRFMTRAVAVTRVIVIAPFMALCSFMFMRNPUVAATIMPDTABSPURMCHFMVVFGPGRISSTRPARMAVBGCBFMCNFIMCPAATBNCNAVANLCALTACOARAVMCPZCBAPPOPZUDCBCHRIISANCHTECZTAPURMAPSIARAQPNBOSIFMANISVTLESIVTVVCNSPRGRMGRFMLTSARIFRMCMCLESAFMBOARPGFGMCANBNMTPVVBPIMOPVPEFITOFMCNAGARLCAVPIVIFMFMCNSSFCCNPVPCBSLCVISIGRMSBSCRGEPGPIRICOCBTERMVIFMORPVVAMBMNBOALCSATGOVASOALRNLEBNBOBGSSFMCNPCTVAOORTNTVRMSAAQTORMCSVAALBGPVFRCNAVANRITECBMCPNALPVUDLCUDCRAVTEPEBZGOTVCRMEMEVCCSBIFGRCCZCTMITACHBGCOVRBGMCTSMBAVNALOMSBSSUCNVICNSVALSILEPZSSBSSUVECOVICLTEUDBITNBZVINAORSULEVVTRAGCNSVMEBZBSAQBZRMGENOVRGECNBGRMPZORVTTERMTVMIRICOBIRMLEPRCNBSNOLCTOCTPVENVVCNCNUDCLENMEATVETOCSPECZPGSASAPRBALEPZVRTNVRVIBANATOSVTOTNMOTOVBNUORPGLTMIBGTESRMBTNTOBZBZMENOMISOVICORECNPDVEVIALMOSAMILECNORSSSSSSANNUORSUSUSUORSUAOAVBSBSSUBIBIROALAQALALTVBSAQANCRAPBSVBVALCTOSAAOSSVCVCNONOPVRMSACOLCVALCNUPVCZMEMTSALCIMALORNUAOSSCRATBGBGBGCONUBSVBSANUVTCNBGNUNUBSBGSVMIAQVRPZRCBZNUCBTOGRPIGEVILONUBRAQVAVALOBGTOCSVTORCNTVMBVBBGNUNUSASUTVALFGCOCHCSCEFGSUNOVTLEFMARBZCHAQSPSVAQNUNUTRBSBSTOTOSSNUSVSSANNUBGBGLCUDIMAVLOPDTNBLBSLOTNSSBSMICNFECRMNBRLETRNANUSAALPVPCTOALUDALAQNUTOSSALBOMISUTPMEAQSRPGBSALBSLCMICRLCPDSSSABNCNTVSARIBGMECHUDCNLCAVBNBSBSBGMOTATACTPIPRCBSSBGCRPZTOPABSVCSRUDFICHCZPARMPVFRRCKRVBSVAGNAUDLEORSURCAPCHBASARMCHBGTNVRCSBZUDCNTOPVTNCRCSPGNABNFGTPMICSBNTPCSROMILEBSBZTOCSCEALVVLCPRALCNAVPVTRBGTPPANOBGUDPNBSATPGBSFRCEVRALLCAVCTCSFRSSMELEORUDSUSUORMIBNTOPVUDBSTOMORCPIALTOCTFMBLVIBSTVSOCSBGCOPUMNBGTNFINOPRSATNTNATSOTRRNCHCHMCTEPECZCHBLBZRMNUSUSAAQSSTNPUIMSALCCNCNAOPDTOTOTOBOCRVCBSBSSATOPGPULUVRPECRAQLCISFGMIVRPTAQAQBNISPZISRIPEFRMICRTOCBRIKRSAPAPACBRIPUMCFMCZCZAVNOBIMEISAQROCNVCBSCNPDPCSASACESVPAAOBSSIBSPUCSPECOPCCRTOVICNBGVEBONABOVTSOBGCNSOBIBGENLUBGPDBGPEPZFRFRATBICECTFRVBPGSICRFGSVISIMTECBCBAVPVCHPZCSPZPGALCEPECSPZENCNBNPULUAVCEBNIMMIPVPTPVBLBOTVGECRLUMOPVCRARTNMCVBFRIMCEFRPZSPCOVCSUNAPVTOROTOATTOPNTNPUCNTOVCMILIPDMCTOATPDVIPCCNLTMEPINORMTOSABSMTPTGRMNSOTOPVCRVVCHAQISVVRCCSCZRCUDCOSSSVCNUDMSPCFRLESIMNPORIRIPGCHFGNARIRIRIAQTPFEBARIANMICOBGNOVITOBSPNRORMVVMTBAPCMOTRRCPASAAONASAPABICHCNBSPDANPITOMTALTNNORMNANAIMBSMNORBSBICOPIPDFITOBNSOBZUDPTSAROCNFRALIMPCPIBSTVCOBNCEPDPVPCBGAOPDBGALBSAOALMNBGLTSVBGBSMSLTALFMRMTVALPEARTRLUPNSAPNCOIMUDATPVTONACEFCRCVAVATVCBLIGEVEFEMNMCFMFMSUROSSSPROBINUVISATVRIFRBZSOSAVCPZVITVVRREUDRIRGISMIVIBSALALSSPDNAMIUDBGUDCNBOTOBICSSABSTOTOBIVETOVCTOALTOAVCEAQSOPNCETOPONOUDBZAVAQPNCNRCUDPGFCTNBZBGALTVMIIMLCUDVBVBFCBGVBUDUDAOBSCEBGVRCHBSAQCNMOSALCCNCNPAVTNAGECOLTBSBSBZCBCNBSBNCAUDTABGCOSSBAAVCHTONAATALVBVBVCPTAONAVECACATOALRESVTOAVMNCRTVVCVIBSMNTNLEAGCNMEBZSICTSISIAGUDRGCEAQCTVAVACTBGBGIMFMGECHSIPZPZVCBZSOAGMOUDSARAUDCEVBPVAGUDTOCEMCGENOVIPVMNATTVENFIRERCREBNMEUDBSMBCSBZTVMIUDNAUDCLPVCNATTVTNCOBSIMGECOAOAOMIRCSVRMCEAGTOVVALCBRNSPCRSATVCLRIBZCNFIFGRMUDVCRNREBZRMORRAMOSPPZISCBPZCBCRCRCRPICHAPMCFRCTCNBLIMTNBGTOALTOPVTOTOTOCRMNALTOVCUDPZPCAQRITOVRCRRCVICNCNVCVCATTOPVMICRMIPVATCNCNBLMEAVKRPRCNTORMAQAPCNATFRSACNPVCEAQAQRMAQKRRMMEALCNRCTABSRMSALTALCSGRMEISLTPACECHPEPZRIPAAQSARMNAAQCEFCAVCHTERMCHFRLTISRICNCHGRPVATSVCNCBMERCISCEIMSPCNALATFGATMICNCNCNBZBSCOMEFGMNBSSALCCSRCCSPVBGSORMCHAOTORERMNOSAPVTNSSCRBGTOVIGOVVTNNOMECOVRTVBSPVTNMBGOTNUDVTBGGEMBBITOVRMNFCBGGETOVCTNBITOTOVIRCPVMIBIPESACSCHFGALLICSROSRANVCCNVIGETOBGCSAPCBPZMTAVPCVIBSGECOCOMNVRTNVRPNVRTNPVBGRMROCSPDMIPDTOREUDBSTOLECNTNFITNPZRABASABAPZLTBSMNSAPDPNRMSUORBIGOTNAOAOAOAOAOAOAOAOALBOCOBIPRSATOSAMTTPROVCTOCBALCNBSTPLOTOSACNTVVCLECNVRRIVRPECNBSBZPRVARNVCBICNLEPZCRSAAVTOVEVASUSUAGPTRMCNBASOTOTNCNORLECOIMBNCSSUCRROAPCNMNAQAQCSTOVBAGFRIMTVCBVRCHVVBZGOTOSIFICLLEMOPZPZPACEPVSARNGEMITOCTCSVVPZPUALATCNPVCRUDCSAQTOBIBRVEFRCSLEMIVIPZCBCEMOLTBSBTCOCSMETVLOGOCZTOSSMECNCNTOSUTRBZPVNAVCTOBSCBSOMNVATOSIMCCSALFRCSTAMNMIPVPCMTRCTOPNNAPDBNUDBOPDBNATTOARRCUDSABGMNVTAGVRFRCRCSCBRNCTCHVRFGCBCBMINAPAPGTOFIBLCECTVVRMSAVRBORNUDBZBNBNBZIMPURCCSCSGOBNVTRCCSBNSUAVCZSACEANCSMEBNFGFGATBZBZCBCHCSPZROTOPNBNVRMNCRPDRELOPVAVATTASACBTONOKRFCPAMTTOSASAAVCTCNVETNBRPIPVBNCONOBAFGCEKRVVLECSAVBNBLBZBRANFGNAATBGGOMEMEBLSATOUDCZCZISCTRCTVVRPDCSVRBOCECSLENOVICABRPDAQCBRETVRMTOMOAVCECERCMOSIPNTOIMRCLOLUSAALBNMECHALNATOPRTOARMCPZFGCOAVCZCSSUBGCLCZCSLEBZPAPVRCPIRGBNCBSUCSMEAGGRPAISALBOCSFGRABNRCMERNCTPVORBLPDNACNPVRCMECTPIAVMETVAGGEPVPICECEPVPVISCTVELCCHCEUDVBANSAMERMFRTOVRSACENAPGAVFRCZSUCELOPDPVBNSAAVAVAVISMERMMCPUPZCBAGTPVRNASUTOORNAAVFRRNPZCESAKRCSFCMESSCTFMCNSATEPDCBFRCZFMAQTOMESSBAPERCCHAQVCLTRCREPUGEBLTEVVFRRMVITNAGAVCSAQMILOSPFRIMCNGEMERCCNVEORPDPESATRTVORCSAQLINABLCZCHBRRMVISUPNUDUDTPFRMISATNBSVRMIPVTVPDMEUDSACSRMVIPZSUALVIBZALBSPCTVMCBGSATNVAAOCAFCSIPVNUSPSASSSVLIBNPZPUANMOCZUDTOTOTAKRNACNAVFCMOGEBSMEUDGOSVPESACNCSSAPVCSTOMEAVKRRECRCRRIAQORGRBGISGRTOCNBZCHPGPGCHVICOBGVIMNAGPARGRCRCPATONAPAAQVCVCAQCTLEVEAQTNATIMAQLELOUDBLORSSMIBGMCSUGRRMTNMITVCARISUPGBSCZCZBZBLBZVRPDBGSSPVRCGRMIBZBZORAVBSANORPZCOLOORSSSUCBPNLUSUMBBLCRBGBGAVBSMNBSLTTVSOATVVGEFGCSANCLALCNSUSAPEMCNAANPUCZRCALCNPTMCMNVCSASUSUFRCZBLCESAATISARISCRFIPNBZVAMOMITOGECAMIFRATCAMITOTOTOCZSUSUSUMBALLTTNTSFRORORSAORAGSURCSIPGFIBZNUSSSUSUNOALPVTEORORVVCZMENUORCNNUCARCSRAVORANLCLCSUNOBZFMVRUDORFCLEATBSVISRMIRACRORVAVAIMSUALPDLEMNMOPRAQAVALBNBGBGLOCNVANAVRCNCNCLPVVRCRSOSOBGBSLTFRTNPRGRAVCZBILOCRVRNUGEVVVVVTCONOBGCOORNASSSRCRBLVIBIBGTNCZBGCZCZBLSIMBVINOMEVVCETOLEPGENLTAVPVCSCSTNALLTMOPNVVCRBTVECRCBALAPCRBGPZBGPGPELETNTNSVTVSOCZLEANCRRCCZPDGOALLUCOVVSVSVBZTNLEBGROMTRCRCRISAFGFGTNVEPVTOTOFRUDTNVBALNABITRKRVCCNBGAVARRMCELCSULCBGMBBSVAAVORNOLEFRLELETOTVMNCLVTUDLIMNLCORIMAQROALBLVARNSONUBGARUDBLMERICHCNTAUDCSSOUDTVALAVAVRCLEUDTOCBCZCOBGLEBIPUPUPZCESOVEBNBGSSTNTNSSBSTNTNPDAVTENOFRBZBZBABZPACBVABITRBGLTTNORARCSLOPZRCPAPDCSVRPIALNUNAALUDTNIMTNBZVTSVNUSUCEVIVISSNUCRALLEGEATBSORAQTNSOBZCZBZSSPZRMPRREBNPEVBPGRISVMCRMBICHUDPZPDTNNUATATCECSTEBSTNSABRAVCBPGAOCHTOBACRNOCHCRAQCOPRCBNUSASSPVTOBICZCNFRSONAUDTOVIPVBGCNCHBNPVBGCRNAPVPEBGVEPVPDMEAVFGSABGTOCNFMBRCNPACHPVRIVRFRCHPVRITATECRVIGEPRAVRMSIALCSSATEMEUDVTBSTESVSOPAVAORTNSAPNPNPZTOBTSOTPPAVBAQUDVBSUBSTOVATOPRPNPCPDCSCTNOPZROFCCHVRMCCNCTBSSATNCEBSUDLESIMSBGCRSOORVRPGFRAVBGRMTVALBGBSTVMIMICNMICOPDMIGEMTLEVCUDNUTSBACRCNSSVCIMMEALVIMBCBFRUDPZPVBZTOFGENPVVBVCVVPVMIBZCBCHNAAVLESUSSPGBSLOCOMIBASUGOPEMTMEVAMEUDLELECOORNUBZKRBSORPDPUSVPUMCBGSSCBNUGEORSSMBSUSUNUTOTOMCPACAPTCSRICHBZSVFIATPZLUCRPOTOCRCEBGBGGECOVIBZVITOBISOCNMEPVSOBZTVVCVRPVVTALBALOPGATTNSOVATOBGCNLCAOENBLBITNAVBLCEPVCEBZIMTEFRIMBZPASSFRVVCLRMVTSUFRAVPVBIBGVIRMBSPGSATOCNALLCSORMCOPRBGAOTOAOVBPGAOBGSACTBZMIMIVBMINOVCNOVAPRRCSVRIMBTNLCSPVATOUDBZPRPVVBIMISTOVVTVPIVAMBTVBGMBPDLEBIVTCOPVRMPVVRVIBZISTOTOAPCNSVLCVAVAMEVECOPZAVPAIMLTUDMBBZVBCSCOSOVCLCBGBGCNBOFCVATNCNPCMISPPOLEBSBSTOFRVRAOPVBITOPVCOBGRNSOUDKRCNPDCRATNOIMVRTOBSVTREBSCNSPRESVMNBGCTATTORELUATSAFRPAFIVICNFGFRCENAPENOPCPIRMPVTVTOFGPZSABGLCFEVRPVPZPZVAPDATBIALVTMIMOTNALCNVBBLPDBGPCTOVEPDALFRVBSOSOUDVRLUBZPAPVBSBRPEBSSULUMIBGALBIPDBGPDBGROCNIMAGATMSPDTOVRMEPAVINUCOTNAQCLCHALCHAVSUROSUREALBZALAVCNSVLOBIPDPCAOTOPVATROSUSUROSSCNORSUPVBSSUTOTOVCTOTOALENTOTOCNSUMBRCATAQCHAQSUSUTOVCORAQVIAQVBGOMNBGTVBGMBMICNCBATFITONOCNBSBZTOBSTONAUDALMCPVTOTPVTFRPNVTRGTVAQMICEBNTORMPNBICTVAMIPDBSGEVCBLPVFEVBTNNACRTVPVALALTOALBLMNPICRAVFGFGTOCNVVCTCZRMVVBGVIBGPVPVORCOLOPVPVTVPCPVPVORMSVITVVRTNMISPVRBIPVGEMOBGBOLEBSBLPNVIBISVVIUDBICSAVVVRMCZSUMEMERMRMSSSAAQMTSRTRSSCELECELELEPNFGFGPAPZSUCTRMNASSSSSSRCSUSRNATPSSCTSSNUMECTSUNASSSUSSSARMRMTAPDSSATTNVERMUDBSTNTNCOTOUDANLUBOFIARFERNPRFIPIPIARAVPUBLBGBGCOCOLCPVVAMNCOBLTNTNTNPNLULCTNTNTNTNTNTNTNTNTNTNTNTNTNTNTNRETNTNPRRNBOVBBIPVBIBLBLPTPTSIPUPUFEMCCOVICSPCIMALVCTNLIARLOCOLCMNALVCUDUDVIPDCSVBTOMNTNFIFEFEPRCOPUBITONOBICRPVALBLTVVIMIVAVIVILE\"\n        }\n    ],\n    \"licenses\": [\n        {\n            \"name\": \"Ministero dell'Interno\",\n            \"url\": \"https://developers.italia.it/en/anpr\",\n            \"license\": \"cc-by-4.0\",\n            \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/legalcode.it\",\n            \"termsAndConditions\": \"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\",\n            \"authors\": \"https://github.com/italia/anpr/blob/master/AUTHORS\"\n        },\n        {\n            \"name\": \"Istituto nazionale di statistica\",\n            \"url\": \"https://www.istat.it\",\n            \"license\": \"cc-by-3.0\",\n            \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/it/\",\n            \"termsAndConditions\": \"https://www.istat.it/it/note-legali\"\n        },\n        {\n            \"name\": \"Agenzia delle Entrate\",\n            \"url\": \"https://www.agenziaentrate.gov.it\",\n            \"license\": \"cc-by-4.0\",\n            \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/legalcode.it\",\n            \"termsAndConditions\": \"https://github.com/italia/anpr/blob/master/src/archivi/ANPR_archivio_comuni_legenda.md\"\n        }\n    ],\n    \"sources\": [\n        \"https://www.istat.it/it/files/2011/01/Elenco-codici-e-denominazioni-unita-territoriali-estere.zip\",\n        \"https://www.istat.it/it/files/2011/01/Elenco-Paesi-esteri-cessati.zip\",\n        \"https://www.istat.it/storage/codici-unita-amministrative/Elenco-comuni-italiani.csv\",\n        \"https://raw.githubusercontent.com/italia/anpr/master/src/archivi/ANPR_archivio_comuni.csv\"\n    ]\n};\nexport default CITIES_COUNTRIES;\n","const YEAR: string = \"[12][0-9]{3}\";\nconst MONTH: string = \"0[1-9]|1[0-2]\";\nconst DAY: string = \"0[1-9]|[12][0-9]|3[01]\";\nconst LEAP_MONTH: string = \"02\";\nconst DAYS_30_MONTHS: string = \"0[469]|11\";\nconst DAYS_31_MONTHS: string = \"0[13578]|1[02]\";\nconst MONTH_DAY: string = `(?:${MONTH})-(?:0[1-9]|[12]\\\\d)|(?:${DAYS_30_MONTHS})-30|(?:${DAYS_31_MONTHS})-3[01]`;\nconst HOURS: string = \"[01]\\\\d|2[0-3]\";\nconst MINUTES: string = \"[0-5]\\\\d\";\nconst SECONDS: string = MINUTES;\nconst MILLISECONDS: string = \"\\\\d{3}\";\nconst TIMEZONE: string = `Z|[-+](?:${HOURS})(?::?${MINUTES})?`;\nconst TIME: string = `(?:${HOURS})(?::${MINUTES}(?::${SECONDS}(\\\\.${MILLISECONDS})?)?(?:${TIMEZONE})?)?`;\nconst ISO8601_SHORT_DATE: string = `${YEAR}-(?:${MONTH_DAY})(?:T${TIME})?`;\nconst ISO8601_DATE_TIME: string = `${YEAR}(?:-(?:(?:${MONTH})|(?:${MONTH_DAY})(?:T${TIME})?))?`;\n\n/**\n * Date Matcher consts\n * @property {Object} DATE_VALIDATOR\n * @property {string} DATE_VALIDATOR.YEAR Matcher for ISO8601 4 digits year (limited to 1000-2999)\n * @property {string} DATE_VALIDATOR.MONTH Matcher for ISO8601 2 digits month (01-12)\n * @property {string} DATE_VALIDATOR.DAY Matcher for ISO8601 2 digits day (01-31)\n * @property {string} DATE_VALIDATOR.LEAP_MONTH Matcher for ISO8601 2 digits leap month\n * @property {string} DATE_VALIDATOR.DAYS_30_MONTHS Matcher for ISO8601 2 digits 30 days month\n * @property {string} DATE_VALIDATOR.DAYS_31_MONTHS Matcher for ISO8601 2 digits 31 days month\n * @property {string} DATE_VALIDATOR.MONTH_DAY Matcher for ISO8601 2 + 2 digits (28~31)month + day\n * @property {string} DATE_VALIDATOR.ISO8601_SHORT_DATE Matcher for ISO8601 date: 4+2+2 digits year + (28~31)month + day\n * @property {string} DATE_VALIDATOR.HOURS Matcher for ISO8601 2 digits hours (00-23)\n * @property {string} DATE_VALIDATOR.MINUTES Matcher for ISO8601 2 digits minutes (00-59)\n * @property {string} DATE_VALIDATOR.SECONDS Matcher for ISO8601 2 digits seconds (00-59)\n * @property {string} DATE_VALIDATOR.MILLISECONDS Matcher for ISO8601 3 digits milliseconds (000-999)\n * @property {string} DATE_VALIDATOR.TIMEZONE Matcher for ISO8601 timezone (Z or ±## or ±##:## or ±####)\n * @property {string} DATE_VALIDATOR.TIME Matcher for ISO8601 for time (T## , T##:## , T##:##:## , T##:##:##.###)\n * @property {string} DATE_VALIDATOR.ISO8601_DATE_TIME Matcher for ISO8601 date/time format\n */\nexport {\n    DAY,\n    DAYS_30_MONTHS,\n    DAYS_31_MONTHS,\n    HOURS,\n    ISO8601_DATE_TIME,\n    ISO8601_SHORT_DATE,\n    LEAP_MONTH,\n    MILLISECONDS,\n    MINUTES,\n    MONTH,\n    MONTH_DAY,\n    SECONDS,\n    TIME,\n    TIMEZONE,\n    YEAR,\n};\n","import moment, { Moment } from \"moment\";\nimport DateDay from \"./date-day.type\";\nimport { ISO8601_DATE_TIME } from \"./date-matcher.const\";\nimport DateMonth from \"./date-month.type\";\nimport MultiFormatDate from \"./multi-format-date.type\";\nexport default class DateUtils {\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * @param date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @returns Parsed Date or null if not valid\n     */\n    public static parseDate(date?: MultiFormatDate | null): Date | null {\n        if (!(\n            date instanceof Date ||\n            date instanceof moment ||\n            typeof date === \"string\" && new RegExp(`^(?:${ISO8601_DATE_TIME})$`).test(date) ||\n            Array.isArray(date) && date.length && !date.some((value) => typeof value !== \"number\" || isNaN(value))\n        )) {\n            return null;\n        }\n        try {\n            let parsedDate: Moment;\n            if (Array.isArray(date)) {\n                const [year, month = 0, day = 1] = date;\n                if (month >= 0 && month <= 11 && day > 0 && day <= 31) {\n                    parsedDate = moment(Date.UTC(year, month || 0, day || 1));\n                } else {\n                    return null;\n                }\n            } else {\n                parsedDate = moment(date);\n            }\n            return parsedDate.isValid() ? parsedDate.toDate() : null;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    public static ymdToDate(year?: number | null, month?: DateMonth | null, day?: DateDay | null): Date | null {\n        return this.parseDate([year, month, day] as number[]);\n    }\n}\n","export const CONSONANT_LIST: string = \"B-DF-HJ-NP-TV-Z\";\nexport const VOWEL_LIST: string = \"AEIOU\";\nexport const OMOCODE_NUMBER_LIST: string = \"\\\\dLMNP-V\";\nexport const OMOCODE_NON_ZERO_NUMBER_LIST: string = \"1-9MNP-V\";\nexport const OMOCODE_ZERO_LIST: string = \"0L\";\nexport const MONTH_LIST: string = \"A-EHLMPR-T\";\nexport const MONTH_30DAYS_LIST: string = \"DHPS\";\nexport const MONTH_31DAYS_LIST: string = \"ACELMRT\";\nexport const CITY_CODE_LIST: string = \"A-M\";\nexport const COUNTRY_CODE_LIST: string = \"Z\";\n\nexport const CF_NAME_MATCHER: string = `[A-Z][${VOWEL_LIST}][${VOWEL_LIST}X]|[${VOWEL_LIST}]X{2}|[${CONSONANT_LIST}]{2}[A-Z]`;\nexport const CF_SURNAME_MATCHER: string = CF_NAME_MATCHER;\nexport const CF_FULL_NAME_MATCHER: string = `(?:${CF_NAME_MATCHER}){2}`;\n\nexport const YEAR_MATCHER: string = `[${OMOCODE_NUMBER_LIST}]{2}`;\nexport const LEAP_YEAR_MATCHER: string = \"[02468LNQSU][048LQU]|[13579MPRTV][26NS]\";\nexport const MONTH_MATCHER: string = `[${MONTH_LIST}]`;\nexport const DAY_2X_MATCHER: string = \"[26NS]\";\nexport const DAY_3X_MATCHER: string = \"[37PT]\";\nexport const DAY_29_MATCHER: string = `[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1256MNRS][${OMOCODE_NUMBER_LIST}]`;\nexport const DAY_30_MATCHER: string = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}]`;\nexport const DAY_31_MATCHER: string = `[${DAY_3X_MATCHER}][${OMOCODE_ZERO_LIST}1M]`;\n\nexport const DAY_MATCHER: string = `(?:${DAY_29_MATCHER}|${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M])`;\nexport const MALE_DAY_MATCHER: string = `(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[12MN][${OMOCODE_NUMBER_LIST}]|[3P][${OMOCODE_ZERO_LIST}1M])`;\nexport const FEMALE_DAY_MATCHER: string = `(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[56RS][${OMOCODE_NUMBER_LIST}]|[7T][${OMOCODE_ZERO_LIST}1M])`;\nexport const MONTH_DAY_MATCHER: string = `${MONTH_MATCHER}(?:${DAY_29_MATCHER})|[${MONTH_30DAYS_LIST}]${DAY_30_MATCHER}|[${MONTH_31DAYS_LIST}]${DAY_31_MATCHER}`;\nexport const FULL_DATE_MATCHER: string = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[15MR][${OMOCODE_NUMBER_LIST}]|${DAY_2X_MATCHER}[0-8LMNP-U])|[${MONTH_30DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}[${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_2X_MATCHER}[9V])|(?:${LEAP_YEAR_MATCHER})B${DAY_2X_MATCHER}[9V]`;\nexport const MALE_FULL_DATE_MATCHER: string = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[1M][${OMOCODE_NUMBER_LIST}]|[2N][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][3P][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][2N][9V])|(?:${LEAP_YEAR_MATCHER})B[2N][9V]`;\nexport const FEMALE_FULL_DATE_MATCHER: string = `${YEAR_MATCHER}(?:${MONTH_MATCHER}(?:[4Q][${OMOCODE_NON_ZERO_NUMBER_LIST}]|[5R][${OMOCODE_NUMBER_LIST}]|[6S][0-8LMNP-U])|[${MONTH_30DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}]|[${MONTH_31DAYS_LIST}][7T][${OMOCODE_ZERO_LIST}1M]|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}][6S][9V])|(?:${LEAP_YEAR_MATCHER})B[6S][9V]`;\n\nexport const CITY_CODE_MATCHER: string = `[${CITY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}|[${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\nexport const COUNTRY_CODE_MATCHER: string = `${COUNTRY_CODE_LIST}[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2}`;\nexport const BELFIORE_CODE_MATCHER: string = `(?:[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]{2})|(?:[${CITY_CODE_LIST}][${OMOCODE_ZERO_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]|[${OMOCODE_ZERO_LIST}][${OMOCODE_NON_ZERO_NUMBER_LIST}]))`;\n\nexport const CHECK_DIGIT: string = \"[A-Z]\";\n\nexport const CODICE_FISCALE: string = `${CF_FULL_NAME_MATCHER}(?:${FULL_DATE_MATCHER})(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}`;\n\nexport const PARTIAL_CF_NAME_MATCHER: string = `[A-Z][${VOWEL_LIST}]?|[${CONSONANT_LIST}]{1,2}`;\nexport const PARTIAL_CF_FULL_NAME: string = `(?:${PARTIAL_CF_NAME_MATCHER})|(?:(?:${CF_NAME_MATCHER})(?:${PARTIAL_CF_NAME_MATCHER})?)`;\nexport const PARTIAL_YEAR: string = `[${OMOCODE_NUMBER_LIST}]`;\nexport const PARTIAL_MONTH_DAY: string = `${MONTH_MATCHER}[${OMOCODE_ZERO_LIST}12456MNQRS]?|[${MONTH_30DAYS_LIST}${MONTH_31DAYS_LIST}]${DAY_3X_MATCHER}`;\nexport const PARTIAL_FULL_DATE: string = `${PARTIAL_YEAR}|(?:${YEAR_MATCHER}(?:${PARTIAL_MONTH_DAY})?)`;\nexport const PARTIAL_BELFIORE_CODE_MATCHER: string = `[${CITY_CODE_LIST}${COUNTRY_CODE_LIST}](?:[${OMOCODE_NON_ZERO_NUMBER_LIST}][${OMOCODE_NUMBER_LIST}]?)?|[${COUNTRY_CODE_LIST}](?:[${OMOCODE_ZERO_LIST}][${OMOCODE_NUMBER_LIST}]?)?`;\n\nexport const PARTIAL_CF: string = `${PARTIAL_CF_FULL_NAME}|(?:${CF_FULL_NAME_MATCHER}(?:(?:${PARTIAL_FULL_DATE})|(?:${FULL_DATE_MATCHER})(?:(?:${PARTIAL_BELFIORE_CODE_MATCHER})|(?:${BELFIORE_CODE_MATCHER})${CHECK_DIGIT}?)?)?)?`;\n","enum CRC {\n    \"B\",\n    \"A\",\n    \"K\",\n    \"P\",\n    \"L\",\n    \"C\",\n    \"Q\",\n    \"D\",\n    \"R\",\n    \"E\",\n    \"V\",\n    \"O\",\n    \"S\",\n    \"F\",\n    \"T\",\n    \"G\",\n    \"U\",\n    \"H\",\n    \"M\",\n    \"I\",\n    \"N\",\n    \"J\",\n    \"W\",\n    \"Z\",\n    \"Y\",\n    \"X\",\n}\n\nexport default CRC;\n","enum BirthMonth {\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"H\",\n    \"L\",\n    \"M\",\n    \"P\",\n    \"R\",\n    \"S\",\n    \"T\",\n}\n\nexport default BirthMonth;\n","import {\n    CRC_OFFSET,\n    LASTNAME_OFFSET,\n} from \"../const/cf-offsets.const\";\nimport { PARTIAL_CF } from \"../const/matcher.const\";\nimport CRC from \"../enums/crc.enum\";\nimport generatorWrapper from \"../functions/generator-wrapper.function\";\nimport IGeneratorWrapper from \"../interfaces/generator-wrapper.interface\";\nimport CodiceFiscaleCRC from \"../types/codice-fiscale-crc.type\";\nclass CheckDigitizer {\n\n    /**\n     * Evaluate given partial CF to produce last check digit character\n     * @param codiceFiscale Partial or complete Fiscal Code to evaluate to produce last character\n     * @returns 16th CF char\n     */\n    public static checkDigit(codiceFiscale: string): CodiceFiscaleCRC | null {\n        if (typeof codiceFiscale === \"string\" && new RegExp(PARTIAL_CF).test(codiceFiscale)) {\n            const partialCF = codiceFiscale.substr(LASTNAME_OFFSET, CRC_OFFSET);\n            let partialCfValue = 0;\n            for (const charValue of this.evaluateChar(partialCF)) { partialCfValue += charValue as number; }\n            return String.fromCharCode(partialCfValue % this.CRC_MOD + this.CHAR_OFFSET) as CodiceFiscaleCRC;\n        }\n        return null;\n    }\n\n    public static evaluateChar(partialCF: string = \"\"): IGeneratorWrapper<number, 0, void> {\n      return generatorWrapper(this.evaluateCharGenerator(partialCF));\n    }\n\n    private static CHAR_OFFSET: number = 65;\n    private static CRC_MOD: number = 26;\n\n    /**\n     * Partial FiscalCode Evaluator\n     * @param Partial Fiscal Code to evaluate\n     * @yields character value odd/even\n     */\n    private static* evaluateCharGenerator(partialCF: string = \"\"): Generator {\n        if (typeof partialCF === \"string\" && partialCF.length) {\n            for (let index = 0; index < partialCF.length; index++) {\n                let char: string = partialCF[index].toUpperCase();\n                const isNumber: boolean = (/^\\d$/u).test(char);\n                if (isNumber) {\n                    // Numbers have always (odd/even) the same values of corresponding letters (0-9 => A-J)\n                    char = String.fromCharCode(parseInt(char, 10) + this.CHAR_OFFSET);\n                }\n                // Odd/Even are shifted/swapped\n                // array starts from 0, \"Agenzia delle Entrate\" documentation counts the string from 1\n                const isOdd: boolean = !(index % 2); // Odd according to documentation\n                if (isOdd) {\n                    // Odd positions\n                    yield parseInt(CRC[char as any], 10);\n                } else {\n                    // Even positions\n                    yield char.charCodeAt(0) - this.CHAR_OFFSET;\n                }\n            }\n        }\n        return 0;\n    }\n}\n\nexport default CheckDigitizer;\n","export const LASTNAME_OFFSET = 0;\nexport const LASTNAME_SIZE = 3;\nexport const FIRSTNAME_OFFSET = 3;\nexport const FIRSTNAME_SIZE = 3;\nexport const YEAR_OFFSET = 6;\nexport const YEAR_SIZE = 2;\nexport const MONTH_OFFSET = 8;\nexport const MONTH_SIZE = 1;\nexport const DAY_OFFSET = 9;\nexport const DAY_SIZE = 2;\nexport const DATE_OFFSET = YEAR_OFFSET;\nexport const DATE_SIZE = YEAR_SIZE + MONTH_SIZE + DAY_SIZE;\nexport const GENDER_OFFSET = DAY_OFFSET;\nexport const GENDER_SIZE = 1;\nexport const PLACE_OFFSET = 11;\nexport const PLACE_SIZE = 4;\nexport const CRC_OFFSET = 15;\nexport const CRC_SIZE = 1;\nexport const CF_SIZE = LASTNAME_SIZE + FIRSTNAME_SIZE + DATE_SIZE + PLACE_SIZE + CRC_SIZE;\n","enum GenderWeight {\n    \"M\" = 0,\n    \"F\" = 40,\n}\n\nexport default GenderWeight;\n","enum Omocodes {\n    \"L\",\n    \"M\",\n    \"N\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n}\n\nexport default Omocodes;\n","import { DateDay } from \"../date-utils/\";\nimport GenderWeight from \"../enums/gender-weight.enum\";\nimport Genders from \"../types/genders.type\";\n\nclass Gender {\n    public static getDay(genderDay: number): DateDay | null {\n        const plainDay = genderDay % GenderWeight.F;\n        return (plainDay > 0 && plainDay <= this.MAX_MONTH_DAY) ? plainDay as DateDay : null;\n    }\n\n    public static getGender(genderDay: number): Genders | null {\n        return this.toArray()\n            .find((gender) => genderDay >= GenderWeight[gender] &&\n                genderDay <= GenderWeight[gender] + this.MAX_MONTH_DAY)\n            || null;\n    }\n\n    public static genderizeDay(day: number, gender: Genders): number {\n        return day + GenderWeight[gender];\n    }\n\n    public static toArray(): Genders[] {\n        return [\"M\", \"F\"];\n    }\n\n    private static MAX_MONTH_DAY: number = 31;\n}\n\nexport default Gender;\n","import DiacriticRemover from \"@marketto/diacritic-remover\";\nimport moment from \"moment\";\nimport { Belfiore, BelfiorePlace } from \"../belfiore-connector\";\nimport BelfioreConnector from \"../belfiore-connector/classes/belfiore-connector.class\";\nimport {\n    CRC_OFFSET,\n    CRC_SIZE,\n    DAY_OFFSET,\n    DAY_SIZE,\n    FIRSTNAME_OFFSET,\n    FIRSTNAME_SIZE,\n    GENDER_OFFSET,\n    GENDER_SIZE,\n    LASTNAME_OFFSET,\n    LASTNAME_SIZE,\n    MONTH_OFFSET,\n    MONTH_SIZE,\n    PLACE_OFFSET,\n    PLACE_SIZE,\n    YEAR_OFFSET,\n    YEAR_SIZE,\n} from \"../const/cf-offsets.const\";\nimport { CF_FULL_NAME_MATCHER, CF_SURNAME_MATCHER } from \"../const/matcher.const\";\nimport { CONSONANT_LIST, VOWEL_LIST } from \"../const/matcher.const\";\nimport { DateDay, DateMonth, DateUtils, MultiFormatDate } from \"../date-utils\";\nimport BirthMonth from \"../enums/birth-month.enum\";\nimport GenderWeight from \"../enums/gender-weight.enum\";\nimport Omocodes from \"../enums/omocodes.enum\";\nimport IPersonalInfo from \"../interfaces/personal-info.interface\";\nimport Genders from \"../types/genders.type\";\nimport CheckDigitizer from \"./check-digitizer.class\";\nimport Gender from \"./gender.class\";\n\nconst diacriticRemover = new DiacriticRemover();\n\nexport default class Parser {\n    /**\n     * Default omocode bitmap\n     */\n    public static OMOCODE_BITMAP: number = 0b0111011011000000;\n\n    /**\n     * Convert omocode CF into plain one\n     * @param codiceFiscale Partial or complete Omocode/Regular CF to parse, starting from LastName\n     * @returns Regular CF w/o omocodes chars\n     */\n    public static cfDeomocode(codiceFiscale: string): string {\n        if (codiceFiscale && codiceFiscale.length <= YEAR_OFFSET) {\n            return codiceFiscale;\n        }\n        const deomocodedCf = this.partialCfDeomocode(codiceFiscale);\n        if (deomocodedCf.length < CRC_OFFSET) {\n            return deomocodedCf;\n        }\n        const partialDeomocodedCf = deomocodedCf.substr(LASTNAME_OFFSET, CRC_OFFSET);\n        return partialDeomocodedCf + this.appyCaseToChar(\n            CheckDigitizer.checkDigit(deomocodedCf) || \"\",\n            deomocodedCf.substr(CRC_OFFSET, CRC_SIZE),\n        );\n    }\n\n    public static cfOmocode(codiceFiscale: string, omocodeId: number): string {\n        if (!omocodeId) {\n            return this.cfDeomocode(codiceFiscale);\n        }\n        const omocodedCf = codiceFiscale.split(\"\");\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = codiceFiscale.length - 1, o = 0; i >= 0; i--) {\n            // tslint:disable-next-line: no-bitwise\n            if (2 ** i & this.OMOCODE_BITMAP) {\n                // tslint:disable-next-line: no-bitwise\n                const charToEncode: boolean = !!(omocodeId & 2 ** o);\n                const isOmocode: boolean = isNaN(parseInt(omocodedCf[i], 10));\n                if (charToEncode !== isOmocode) {\n                    const char: any = omocodedCf[i].toUpperCase();\n                    omocodedCf[i] = Omocodes[char];\n                }\n                o++;\n            }\n        }\n        const crc = omocodedCf[CRC_OFFSET];\n        if (crc) {\n            const partialCf = omocodedCf.slice(LASTNAME_OFFSET, CRC_OFFSET).join(\"\");\n            omocodedCf[CRC_OFFSET] = this.appyCaseToChar(\n                CheckDigitizer.checkDigit(partialCf) || \"\",\n                crc,\n            );\n        }\n        return omocodedCf.join(\"\");\n    }\n\n    public static cfOmocodeId(codiceFiscale: string): number {\n        const cfOmocodeBitmap = codiceFiscale.split(\"\")\n            // tslint:disable-next-line: no-bitwise\n            .filter((char, index) => 2 ** index & this.OMOCODE_BITMAP)\n            .map((char) => (/^[a-z]$/i).test(diacriticRemover[char]) ? 1 : 0)\n            .join(\"\");\n        return parseInt(cfOmocodeBitmap , 2);\n    }\n\n    /**\n     * Parse lastName information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Partial/possible lastName\n     */\n    public static cfToLastName(codiceFiscale: string): string | null {\n        if (\n            typeof codiceFiscale !== \"string\"\n            || codiceFiscale.length < (LASTNAME_OFFSET + LASTNAME_SIZE)\n            || !(new RegExp(`^(?:${CF_SURNAME_MATCHER})`, \"iu\")).test(codiceFiscale)\n        ) {\n            return null;\n        }\n\n        const lastNameCf = codiceFiscale.substr(LASTNAME_OFFSET, LASTNAME_SIZE);\n\n        const [cons = \"\"] = lastNameCf.match(new RegExp(`^[${CONSONANT_LIST}]{1,3}`, \"ig\")) || [];\n        const [vow = \"\"] = lastNameCf.match(new RegExp(`[${VOWEL_LIST}]{1,3}`, \"ig\")) || [];\n\n        const matchingLength = cons.length + vow.length;\n\n        if (matchingLength < 2 || matchingLength < 3 && lastNameCf[2].toUpperCase() !== \"X\") {\n            return null;\n        }\n\n        switch (cons.length) {\n        case 3:\n            return (cons + vow).split(\"\").join(this.JOLLY_CHAR) + this.JOLLY_CHAR;\n        case 2:\n            return `${cons[0]}${vow[0]}*${cons[1]}${this.JOLLY_CHAR}`;\n        case 1:\n            return `${cons[0]}${vow}${this.JOLLY_CHAR}`;\n        default:\n            return `${vow}${vow.length === 3 ? this.JOLLY_CHAR : \"\"}`;\n        }\n    }\n\n    /**\n     * Parse firstName information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Partial/possible firstName\n     */\n    public static cfToFirstName(codiceFiscale: string): string | null {\n        if (\n            typeof codiceFiscale !== \"string\"\n            || codiceFiscale.length < (FIRSTNAME_OFFSET + FIRSTNAME_SIZE)\n            || !(new RegExp(`^(${CF_FULL_NAME_MATCHER})`, \"iu\")).test(codiceFiscale)\n        ) {\n            return null;\n        }\n        return this.cfToLastName(codiceFiscale.substr(FIRSTNAME_OFFSET, FIRSTNAME_SIZE));\n    }\n\n    /**\n     * Parse gender information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Male or female\n     */\n    public static cfToGender(codiceFiscale: string): Genders | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (GENDER_OFFSET + GENDER_SIZE)) {\n            return null;\n        }\n        const cfGenderPart = codiceFiscale.substr(GENDER_OFFSET, GENDER_SIZE);\n        const genderInt = parseInt(this.partialCfDeomocode(cfGenderPart, GENDER_OFFSET), 10) * 10;\n        return Gender.getGender(genderInt);\n    }\n\n    /**\n     * Parse birth year information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth Year (4 digits)\n     */\n    public static cfToBirthYear(codiceFiscale: string): number | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (YEAR_OFFSET + YEAR_SIZE)) {\n            return null;\n        }\n        const cfBirthYearPart = codiceFiscale.substr(YEAR_OFFSET, YEAR_SIZE);\n        const birthYear: number = parseInt(this.partialCfDeomocode(cfBirthYearPart, YEAR_OFFSET), 10);\n\n        if (isNaN(birthYear)) {\n            return null;\n        }\n\n        const current2DigitsYear: number = parseInt(moment().format(\"YY\"), 10);\n\n        const century: number = (birthYear > current2DigitsYear ? 1 : 0) * 100;\n        return moment().subtract(current2DigitsYear - birthYear + century, \"years\").year();\n    }\n\n    /**\n     * Parse birth month information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth Month (0...11 - Date notation)\n     */\n    public static cfToBirthMonth(codiceFiscale: string): DateMonth | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (MONTH_OFFSET + MONTH_SIZE)) {\n            return null;\n        }\n\n        const cfBirthMonthPart: any = codiceFiscale.substr(MONTH_OFFSET, MONTH_SIZE).toUpperCase();\n        const birthMonth = BirthMonth[cfBirthMonthPart];\n        if (typeof birthMonth !== \"number\" || birthMonth < 0 || birthMonth > 11) {\n            return null;\n        }\n        return birthMonth as DateMonth;\n    }\n\n    /**\n     * Parse birth day information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth day (1..31)\n     */\n    public static cfToBirthDay(codiceFiscale: string): DateDay | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (DAY_OFFSET + DAY_SIZE)) {\n            return null;\n        }\n\n        const cfBirthDayPart = codiceFiscale.substr(DAY_OFFSET, DAY_SIZE);\n        const birthDay: number = parseInt(this.partialCfDeomocode(cfBirthDayPart, DAY_OFFSET), 10);\n\n        if (isNaN(birthDay)) {\n            return null;\n        }\n        return Gender.getDay(birthDay);\n    }\n\n    /**\n     * Parse birth date information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth Date\n     */\n    public static cfToBirthDate(codiceFiscale: string): Date | null {\n        const birthDay = this.cfToBirthDay(codiceFiscale);\n        if (!birthDay) {\n            return null;\n        }\n\n        const birthMonth = this.cfToBirthMonth(codiceFiscale);\n        if (typeof birthMonth !== \"number\") {\n            return null;\n        }\n\n        const birthYear = this.cfToBirthYear(codiceFiscale);\n\n        return DateUtils.ymdToDate(birthYear, birthMonth, birthDay);\n    }\n\n    /**\n     * Parse birth place information\n     * @param codiceFiscale Partial or complete CF to parse\n     * @returns Birth place\n     */\n    public static cfToBirthPlace(codiceFiscale: string): BelfiorePlace | null {\n        if (typeof codiceFiscale !== \"string\" || codiceFiscale.length < (PLACE_OFFSET + PLACE_SIZE)) {\n            return null;\n        }\n\n        const cfBirthPlacePart = codiceFiscale.substr(PLACE_OFFSET, PLACE_SIZE);\n        const belfioreCode: string = this.partialCfDeomocode(cfBirthPlacePart, PLACE_OFFSET);\n\n        const birthPlace: BelfiorePlace | undefined = Belfiore[belfioreCode];\n        if (!birthPlace) {\n            return null;\n        }\n\n        const { creationDate, expirationDate } = birthPlace;\n        if (creationDate || expirationDate) {\n            const birthDate = this.cfToBirthDate(codiceFiscale);\n            if (birthDate) {\n                let validityCheck = true;\n                if (expirationDate) {\n                    validityCheck = moment(expirationDate).isSameOrAfter(birthDate);\n                }\n                if (!validityCheck) {\n                    return null;\n                }\n            }\n        }\n        return birthPlace;\n    }\n\n    /**\n     * @param fiscalCode 16 character Codice Fiscale to decode\n     * @returns Decoded CF Info\n     */\n    public static cfDecode(fiscalCode: string): IPersonalInfo {\n        const year = this.cfToBirthYear(fiscalCode) || undefined;\n        const month = this.cfToBirthMonth(fiscalCode) || undefined;\n        const day = this.cfToBirthDay(fiscalCode) || undefined;\n        const date = DateUtils.ymdToDate(year, month, day) || undefined;\n        const place = this.cfToBirthPlace(fiscalCode);\n        const personalInfo: IPersonalInfo = {\n            firstName: this.cfToFirstName(fiscalCode) || undefined,\n            lastName: this.cfToLastName(fiscalCode) || undefined,\n\n            day,\n            month,\n            year,\n\n            date,\n\n            gender: this.cfToGender(fiscalCode) || undefined,\n            place: place ? place.name : undefined,\n\n            omocodeId: this.cfOmocodeId(fiscalCode),\n        };\n\n        if (year && month && day) {\n            personalInfo.date = new Date(Date.UTC(year, month, day));\n        }\n\n        return personalInfo;\n    }\n\n    /**\n     * Parse lastName to cf part\n     * @param lastName Partial or complete CF to parse\n     * @returns partial cf\n     */\n    public static lastNameToCf(lastName?: string | null): string | null {\n        if (!lastName || (lastName || \"\").trim().length < 2) {\n            return null;\n        }\n\n        if (!(/^[A-Z ']+$/iu).test(diacriticRemover.replace(lastName))) {\n            return null;\n        }\n\n        const consonants = this.charExtractor(lastName, CONSONANT_LIST);\n        const vowels = this.charExtractor(lastName, VOWEL_LIST);\n\n        const partialCf = (consonants + vowels)\n            .padEnd(3, \"X\").substr(0, 3);\n\n        if (partialCf.length < 3) {\n            return null;\n        }\n        return partialCf.toUpperCase();\n    }\n\n    /**\n     * Parse firstName to cf part\n     * @param firstName Partial or complete CF to parse\n     * @returns partial cf\n     */\n    public static firstNameToCf(firstName?: string | null): string | null {\n        if (!firstName || (firstName || \"\").trim().length < 2) {\n            return null;\n        }\n        const consonants = this.charExtractor(firstName, CONSONANT_LIST);\n        if (consonants.length >= 4) {\n            return (consonants[0] + consonants.substr(2, 2)).toUpperCase();\n        }\n        return this.lastNameToCf(firstName);\n    }\n\n    /**\n     * Parse year to cf part\n     * @param year Birth year 2 or 4 digit string, number above 19XX or below 100\n     * @returns partial cf\n     */\n    public static yearToCf(year: string | number): string | null {\n        let parsedYear: number;\n        if (typeof year === \"string\") {\n            parsedYear = parseInt(year, 10);\n        } else {\n            parsedYear = year;\n        }\n\n        if (!(typeof parsedYear === \"number\" && !isNaN(parsedYear) && (parsedYear >= 1900 || parsedYear < 100))) {\n            return null;\n        }\n        return `0${parsedYear}`.substr(-2);\n    }\n\n    /**\n     * Parse month information\n     * @param month Month number 0..11\n     * @returns Birth Month CF code\n     */\n    public static monthToCf(month: DateMonth | number): string | null {\n        if (month < 0 || month > 11) {\n            return null;\n        }\n\n        return BirthMonth[month] || null;\n    }\n\n    /**\n     * Parse day information\n     * @param day Day number 1..31\n     * @param gender Gender enum value\n     * @returns Birth Day CF code\n     */\n    public static dayGenderToCf(day: DateDay | number, gender: Genders): string | null {\n        if (day < 1 || day > 31) {\n            return null;\n        }\n\n        const genderValue = GenderWeight[gender as any];\n        if (typeof genderValue !== \"number\") {\n            return null;\n        }\n        return `0${day + genderValue}`.substr(-2);\n    }\n\n    /**\n     * Parse Year, Month, Day to Dated\n     * @param year 4 digits Year\n     * @param month 1 or 2 digits Month 0..11\n     * @param day 1,2 digits Day 1..31\n     * @returns Date or null if provided year/month/day are not valid\n     */\n    public static yearMonthDayToDate(\n        year: number | null | undefined,\n        month: DateMonth | null | undefined = 0,\n        day: DateDay | null | undefined = 1,\n    ): Date | null {\n        if (!year || year < 1861 || [month, day].some((param) => typeof param !== \"number\") ) {\n            return null;\n        }\n        const date = moment(Date.UTC(year, month || 0, day || 1));\n        if (!date.isValid() || date.year() !== year || date.month() !== month || date.date() !== day) {\n            return null;\n        }\n        return date.toDate();\n    }\n\n    public static parsePlace(\n        place: BelfiorePlace | string,\n        scopedBelfioreConnector: BelfioreConnector = Belfiore,\n    ): BelfiorePlace | null {\n        let verifiedBirthPlace: BelfiorePlace | null | undefined;\n        if (!place) {\n            return null;\n        } else if (typeof place === \"object\" && place.belfioreCode) {\n            verifiedBirthPlace = scopedBelfioreConnector[place.belfioreCode];\n        } else if (typeof place === \"string\") {\n            verifiedBirthPlace = scopedBelfioreConnector[place] || scopedBelfioreConnector.findByName(place);\n        }\n        return verifiedBirthPlace || null;\n    }\n\n    /**\n     * Parse a Dated and Gender information to create Date/Gender CF part\n     * @param date Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param gender Gender enum value\n     * @returns Birth date and Gender CF code\n     */\n    public static dateGenderToCf(date: MultiFormatDate, gender: Genders): string | null {\n        const parsedDate = DateUtils.parseDate(date);\n        if (!parsedDate) {\n            return null;\n        }\n\n        const cfYear = this.yearToCf(parsedDate.getFullYear());\n        const cfMonth = this.monthToCf(parsedDate.getMonth());\n        const cfDayGender = this.dayGenderToCf(parsedDate.getDate(), gender);\n\n        return `${cfYear}${cfMonth}${cfDayGender}`;\n    }\n\n    /**\n     * Parse place name and province to Belfiore code\n     * @param cityOrCountryName City or Country name\n     * @param provinceId Province code for cities\n     * @returns Matching place belfiore code, if only once is matching criteria\n     */\n    /**\n     * Parse a Date and Gender information to create Date/Gender CF part\n     * @param birthDate Date or Moment instance, ISO8601 date string or array of numbers [year, month, day]\n     * @param cityOrCountryName City or Country name\n     * @param provinceId Province code for cities\n     * @returns Matching place belfiore code, if only once is matching criteria\n     */\n    public static placeToCf(cityOrCountryName: string, provinceId?: string): string | null;\n    public static placeToCf(birthDate: MultiFormatDate, cityOrCountryName: string, provinceId?: string): string | null;\n    public static placeToCf(dateOrName: MultiFormatDate, nameOrProvince?: string, provinceId?: string): string | null {\n        const birthDate: Date | null = DateUtils.parseDate(dateOrName);\n        let name: string;\n        let province: string | undefined;\n        if (!birthDate && typeof dateOrName === \"string\") {\n            name = dateOrName;\n            province = nameOrProvince;\n        } else if (nameOrProvince) {\n            name = nameOrProvince;\n            province = provinceId;\n        } else {\n            return null;\n        }\n\n        let placeFinder: BelfioreConnector | undefined = Belfiore;\n        if (province) {\n            placeFinder = placeFinder.byProvince(province);\n        }\n        if (birthDate && placeFinder) {\n            placeFinder = placeFinder.from(birthDate);\n        }\n        if (placeFinder) {\n            const foundPlace: BelfiorePlace | null = this.parsePlace(name, placeFinder);\n            if (foundPlace) {\n                return foundPlace.belfioreCode;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Generates full CF\n     * @returns Complete CF\n     */\n    public static encodeCf({\n        lastName,\n        firstName,\n\n        year,\n        month,\n        day,\n        date,\n\n        gender,\n        place,\n\n        omocodeId = 0,\n    }: IPersonalInfo): string | null {\n        const dtParams = DateUtils.parseDate(date) || this.yearMonthDayToDate(year, month, day);\n        if (!(dtParams && lastName && firstName && gender && place)) {\n            return null;\n        }\n        const generator = [\n            () => this.lastNameToCf(lastName),\n            () => this.firstNameToCf(firstName),\n            () => this.dateGenderToCf(dtParams, gender),\n            () => this.placeToCf(dtParams, place),\n        ];\n        let cf = \"\";\n        for (const cfPartGenerator of generator) {\n            const cfValue = cfPartGenerator();\n            if (!cfValue) {\n                return null;\n            }\n            cf += cfValue;\n        }\n\n        return this.cfOmocode(cf, omocodeId);\n    }\n\n    private static JOLLY_CHAR: string = \"*\";\n\n    private static checkBitmap(offset: number): boolean {\n        // tslint:disable-next-line: no-bitwise\n        return !!( 2 ** offset & this.OMOCODE_BITMAP);\n    }\n\n    private static charOmocode(char: string, offset: number): string {\n        if ((/^[A-Z]$/giu).test(char) && this.checkBitmap(offset)) {\n            return Omocodes[char.toUpperCase() as any];\n        }\n\n        return char;\n    }\n\n    private static charExtractor(text: string, CHAR_LIST: string): string {\n        const charMatcher = new RegExp(`[${CHAR_LIST}]+`, \"ig\");\n        const diacriticFreeText = diacriticRemover.replace(text).trim();\n        const matchingChars = diacriticFreeText.match(charMatcher);\n        return (matchingChars || []).join(\"\");\n    }\n\n    /**\n     * Convert omocode full or chunk CF into plain one\n     * @param partialCodiceFiscale Partial or complete Omocode/Regular CF to parse\n     * @param offset starting point of the given chunk in the 16 char CF\n     * @returns Regular version w/o omocodes chars of the given chunk\n     */\n    private static partialCfDeomocode(partialCodiceFiscale: string, offset: number = 0): string {\n        const charReplacer = (char: string, position: number) => this.charOmocode(char, position + offset);\n        return partialCodiceFiscale.replace(/[\\dA-Z]/giu, charReplacer);\n    }\n\n    private static appyCaseToChar(targetChar: string, counterCaseChar: string): string {\n        if (targetChar && counterCaseChar) {\n            const isUpperCase = counterCaseChar[0] === counterCaseChar[0].toUpperCase();\n            const isLowerCase = counterCaseChar[0] === counterCaseChar[0].toLowerCase();\n\n            if (isUpperCase && !isLowerCase) {\n                return targetChar[0].toUpperCase();\n            } else if (!isUpperCase && isLowerCase) {\n                return targetChar[0].toLowerCase();\n            }\n        }\n        return targetChar[0];\n    }\n}\n","const INVALID_SURNAME: string = \"Provided lastName is not valid, only letters, diacritics and apostrophe allowed\";\nconst INVALID_NAME: string = \"Provided name is not valid, only letters, diacritics and apostrophe allowed\";\nconst INVALID_DAY: string = \"Provided day is not valid\";\nconst INVALID_GENDER: string = \"Provided gender is not valid\";\nconst INVALID_DAY_OR_GENDER: string = \"Provided day and/or gender are not valid\";\nconst INVALID_YEAR: string = \"Provided year is not valid, only 2 or 4 digit numbers are allowed\";\nconst INVALID_DATE: string = \"Provided date is not valid\";\nconst INVALID_PLACE_NAME: string = \"Proviced City/Country name is not valid\";\n\nexport {\n    INVALID_DATE,\n    INVALID_DAY,\n    INVALID_DAY_OR_GENDER,\n    INVALID_GENDER,\n    INVALID_NAME,\n    INVALID_PLACE_NAME,\n    INVALID_SURNAME,\n    INVALID_YEAR,\n};\n","import * as ErrorMessages from \"../const/error-messages.const\";\n\nclass CfuError extends Error {\n    constructor(errorMessage: string)\n    constructor(errorCode: string) {\n        super((Object.entries(ErrorMessages).find(([errId]) => errId === errorCode) || [])[1] || errorCode);\n    }\n}\n\nexport default CfuError;\n","import DiacriticRemover from \"@marketto/diacritic-remover\";\nimport moment from \"moment\";\nimport {\n    INVALID_DATE,\n    INVALID_DAY,\n    INVALID_DAY_OR_GENDER,\n    INVALID_GENDER,\n    INVALID_NAME,\n    INVALID_SURNAME,\n    INVALID_YEAR,\n} from \"../const/error-messages.const\";\nimport {\n    BELFIORE_CODE_MATCHER,\n    CF_NAME_MATCHER,\n    CF_SURNAME_MATCHER,\n    CHECK_DIGIT,\n    CODICE_FISCALE,\n    CONSONANT_LIST,\n    DAY_MATCHER,\n    FEMALE_DAY_MATCHER,\n    FEMALE_FULL_DATE_MATCHER,\n    FULL_DATE_MATCHER,\n    MALE_DAY_MATCHER,\n    MALE_FULL_DATE_MATCHER,\n    MONTH_MATCHER,\n    VOWEL_LIST,\n    YEAR_MATCHER,\n} from \"../const/matcher.const\";\nimport { DATE_MATCHER, DateDay, DateMonth, DateUtils, MultiFormatDate } from \"../date-utils/\";\nimport Omocodes from \"../enums/omocodes.enum\";\nimport IPersonalInfo from \"../interfaces/personal-info.interface\";\nimport Genders from \"../types/genders.type\";\nimport CfuError from \"./cfu-error.class\";\nimport Gender from \"./gender.class\";\nimport Parser from \"./parser.class\";\n\nconst diacriticRemover = new DiacriticRemover();\n\nexport default class Pattern {\n\n    /**\n     * Validation regexp for the given lastName or generic\n     * @param lastName Optional lastName to generate validation regexp\n     * @return CF Surname matcher\n     * @throw INVALID_SURNAME\n     */\n    public static cfLastName(lastName?: string): RegExp {\n        let matcher: string = CF_SURNAME_MATCHER;\n        if (lastName) {\n            if (!this.lastName().test(lastName)) {\n                throw new CfuError(INVALID_SURNAME);\n            }\n            matcher = Parser.lastNameToCf(lastName) || matcher;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given name or generic\n     * @param name Optional name to generate validation regexp\n     * @return CF name matcher\n     * @throw INVALID_NAME\n     */\n    public static cfFirstName(name?: string): RegExp {\n        let matcher: string = CF_NAME_MATCHER;\n        if (name) {\n            if (!this.lastName().test(name)) {\n                throw new CfuError(INVALID_NAME);\n            }\n            matcher = Parser.firstNameToCf(name) || matcher;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param year Optional year to generate validation regexp\n     * @return CF year matcher\n     */\n    public static cfYear(year?: number): RegExp {\n        let matcher: string = YEAR_MATCHER;\n        if (year) {\n            const parsedYear = Parser.yearToCf(year);\n            if (parsedYear) {\n                matcher = this.deomocode(parsedYear);\n            } else {\n                throw new CfuError(INVALID_YEAR);\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given month or generic\n     * @param month Optional month to generate validation regexp\n     * @return CF month matcher\n     */\n    public static cfMonth(month?: DateMonth) {\n        let matcher: string = MONTH_MATCHER;\n        if (month) {\n            matcher = Parser.monthToCf(month) || matcher;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given day or generic\n     * @param day Optional day to generate validation regexp\n     * @return CF day matcher\n     */\n    public static cfDay(day?: DateDay): RegExp {\n        let matcher = DAY_MATCHER;\n        if (day) {\n            const parsedDayM = Parser.dayGenderToCf(day, \"M\");\n            const parsedDayF = Parser.dayGenderToCf(day, \"F\");\n            if (parsedDayM && parsedDayF) {\n                const matcherM: string = this.deomocode(parsedDayM);\n                const matcherF: string = this.deomocode(parsedDayF);\n                matcher = `(?:${matcherM})|(?:${matcherF})`;\n            } else {\n                throw new CfuError(INVALID_DAY);\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param day Optional day to generate validation regexp\n     * @param gender Gender @see Genders\n     * @return CF day and gender matcher\n     */\n    public static cfDayGender(day?: DateDay, gender?: Genders): RegExp {\n        if (!gender) {\n            return this.cfDay(day);\n        }\n        let matcher;\n        if (day) {\n            const parsedDayGender = Parser.dayGenderToCf(day, gender);\n            if (parsedDayGender) {\n                matcher = this.deomocode(parsedDayGender);\n            } else {\n                throw new CfuError(INVALID_DAY_OR_GENDER);\n            }\n        } else {\n            switch (gender) {\n            case \"M\":\n                matcher = MALE_DAY_MATCHER;\n                break;\n            case \"F\":\n                matcher = FEMALE_DAY_MATCHER;\n                break;\n            default:\n                throw new CfuError(INVALID_GENDER);\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Validation regexp for the given year or generic\n     * @param date Optional date to generate validation regexp\n     * @param gender @see Genders\n     * @return CF date and gender matcher\n     */\n    public static cfDateGender(date?: MultiFormatDate | null, gender?: Genders | null): RegExp {\n        if (date && !DateUtils.parseDate(date)) {\n            throw new CfuError(INVALID_DATE);\n        }\n        if (gender && !Gender.toArray().includes(gender)) {\n            throw new CfuError(INVALID_GENDER);\n        }\n        let matcher = FULL_DATE_MATCHER;\n        if (date) {\n            const parsedDateGender = gender && Parser.dateGenderToCf(date, gender);\n            if (parsedDateGender) {\n                matcher = this.deomocode(parsedDateGender);\n            } else {\n                const parseDeomocode = (g: Genders): string => {\n                    const parsedGender = Parser.dateGenderToCf(date, g);\n                    if (!parsedGender) {\n                        throw new CfuError(INVALID_DATE);\n                    }\n                    return parsedGender && this.deomocode(parsedGender);\n                };\n                matcher = `(?:${Gender.toArray().map(parseDeomocode).join(\"|\")})`;\n            }\n        } else if (gender === \"M\") {\n            matcher = MALE_FULL_DATE_MATCHER;\n        } else if (gender === \"F\") {\n            matcher = FEMALE_FULL_DATE_MATCHER;\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * @param placeName Optional place name to generate validation regexp\n     * @return CF place matcher\n     */\n    /**\n     * @param date Optional date to generate validation regexp\n     * @param placeName Optional place name to generate validation regexp\n     * @return CF place matcher\n     */\n    public static cfPlace(placeName?: string | null): RegExp;\n    public static cfPlace(birthDate?: MultiFormatDate | null, placeName?: string | null): RegExp;\n    public static cfPlace(birthDateOrName?: MultiFormatDate | null, placeName?: string | null): RegExp {\n        let matcher = BELFIORE_CODE_MATCHER;\n        if (birthDateOrName) {\n            const birthDate: Date | null = DateUtils.parseDate(birthDateOrName);\n\n            if (birthDate && placeName) {\n                const place: string = placeName;\n                const parsedPlace = Parser.placeToCf(birthDate, place);\n                matcher = this.deomocode(parsedPlace || \"\");\n            } else if (!birthDate && typeof birthDateOrName === \"string\") {\n                const place: string = birthDateOrName;\n                const parsedPlace = Parser.placeToCf(place);\n                matcher = this.deomocode(parsedPlace || \"\");\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Generates full CF validator based on given optional input or generic\n     * @param personalInfo Input Object\n     * @return CodiceFiscale matcher\n     */\n    public static codiceFiscale(personalInfo?: IPersonalInfo): RegExp {\n        let matcher = CODICE_FISCALE;\n        if (personalInfo) {\n            const parsedCf = Parser.encodeCf(personalInfo);\n\n            if (parsedCf) {\n                matcher = this.deomocode(parsedCf);\n            } else {\n                const { lastName, firstName, year, month, day, date, gender, place } = personalInfo;\n                if (lastName || firstName || year || month || day || date || gender || place) {\n                    let dtParams: Date | null = null;\n                    if (date) {\n                        dtParams = DateUtils.parseDate(date);\n                    } else if (year) {\n                        dtParams = Parser.yearMonthDayToDate(year, month, day);\n                    }\n                    const generator: Array<() => RegExp> = [\n                        () => this.cfLastName(lastName),\n                        () => this.cfFirstName(firstName),\n                        () => this.cfDateGender(dtParams, gender),\n                        () => this.cfPlace(dtParams, place),\n                    ];\n\n                    matcher = \"\";\n                    for (const validator of generator) {\n                        const cfMatcher = validator().toString();\n                        const match = cfMatcher.match(/\\^(.+)\\$/);\n                        const cfValue: string | null | undefined = match && match[1];\n\n                        if (!cfValue) {\n                            throw new Error(`Unable to handle [${cfMatcher}]`);\n                        }\n                        matcher += `(?:${cfValue})`;\n                    }\n                    // Final addition of CheckDigit\n                    matcher += CHECK_DIGIT;\n                }\n            }\n        }\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Returns lastName validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static lastName(codiceFiscale?: string): RegExp {\n        const LETTER_SET: string = `[A-Z${diacriticRemover.matcherBy(/^[A-Z]$/ui)}]`;\n        const SEPARATOR_SET: string = \"[' ]\";\n        const ANY_LETTER: string = `(?:${LETTER_SET}+${SEPARATOR_SET}?)`;\n        let matcher: string = `${ANY_LETTER}+`;\n        if (codiceFiscale && (/^[A-Z]{1,3}/iu).test(codiceFiscale)) {\n            const lastNameCf: string = codiceFiscale.substr(0, 3);\n            const diacriticizer = (matchingChars: string) => matchingChars.split(\"\")\n                .map((char) => `[${diacriticRemover.insensitiveMatcher[char]}]`);\n\n            const [cons, vow] = [\n                `^[${CONSONANT_LIST}]{1,3}`,\n                `[${VOWEL_LIST}]{1,3}`,\n            ].map((charMatcher) => diacriticizer((lastNameCf.match(new RegExp(charMatcher, \"ig\")) || [])[0] || \"\"));\n\n            const diacriticsVowelList: string = VOWEL_LIST + diacriticRemover.matcherBy(new RegExp(`^[${VOWEL_LIST}]$`, \"ui\"));\n            const diacriticsVowelMatcher: string = `[${diacriticsVowelList}]`;\n            const midDiacriticVowelMatcher: string = `(?:${diacriticsVowelMatcher}${SEPARATOR_SET}?)*`;\n            const endingDiacritcVowelMatcher: string = `(?:${SEPARATOR_SET}?${midDiacriticVowelMatcher}${diacriticsVowelMatcher})?`;\n            switch (cons.length) {\n            case 3: {\n                const divider = midDiacriticVowelMatcher;\n                matcher = divider + cons.join(`${SEPARATOR_SET}?${divider}`) + `(?:${SEPARATOR_SET}?${LETTER_SET}*${LETTER_SET})?`;\n                break;\n            }\n            case 2: {\n                const possibilities = [\n                    `${vow[0]}${midDiacriticVowelMatcher}${SEPARATOR_SET}?${cons[0]}${midDiacriticVowelMatcher}${cons[1]}`,\n                    `${cons[0]}${SEPARATOR_SET}?` + vow.join(`${SEPARATOR_SET}?`) + `${SEPARATOR_SET}?${midDiacriticVowelMatcher}${cons[1]}`,\n                    cons.join(`${SEPARATOR_SET}?`) + `${SEPARATOR_SET}?${vow[0]}`,\n                ];\n                matcher = `(?:${possibilities.join(\"|\")})${endingDiacritcVowelMatcher}`;\n                break;\n            }\n            case 1: {\n                const possibilities = [\n                    vow.slice(0, 2).join(`${SEPARATOR_SET}?`) +\n                        midDiacriticVowelMatcher + cons.join(`${SEPARATOR_SET}?`),\n                    `${vow[0]}${SEPARATOR_SET}?` + cons.join(`${SEPARATOR_SET}?`) + vow[1],\n                    [cons[0], ...vow.slice(0, 2)].join(`${SEPARATOR_SET}?`),\n                ];\n                matcher = `(?:${possibilities.join(\"|\")})${endingDiacritcVowelMatcher}`;\n                break;\n            }\n            default:\n                matcher = `${vow.join(`${SEPARATOR_SET}?`)}${endingDiacritcVowelMatcher}`;\n            }\n        }\n\n        return this.isolatedInsensitiveTailor(` *(${matcher}) *`);\n    }\n\n    /**\n     * Returns name validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static firstName(codiceFiscale?: string): RegExp {\n        if (codiceFiscale && new RegExp(`^[A-Z]{3}[${CONSONANT_LIST}]{3}`, \"iu\").test(codiceFiscale)) {\n            const ANY_LETTER: string = `[A-Z${diacriticRemover.matcherBy(/^[A-Z]$/ui)}]`;\n            const SEPARATOR_SET: string = \"(?:'? ?)\";\n\n            const nameCf: string = codiceFiscale.substr(3, 3);\n\n            const cons: string[] = ((nameCf.match(new RegExp(`^[${CONSONANT_LIST}]{1,3}`, \"ig\")) || [])[0] || \"\")\n                .split(\"\").map((char) => `[${diacriticRemover.insensitiveMatcher[char]}]`);\n\n            const [diacriticsVowelList, diacriticsConsonantList]: string[] = [VOWEL_LIST, CONSONANT_LIST]\n                .map((chars) => chars + diacriticRemover.matcherBy(new RegExp(`^[${chars}]$`, \"ui\")));\n\n            const matcher: string = `(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*${cons[0]}${SEPARATOR_SET}(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*(?:[${diacriticsConsonantList}]${SEPARATOR_SET}(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*)?`\n                + cons.slice(1, 3).join(`(?:[${diacriticsVowelList}]+${SEPARATOR_SET})*`) + `${ANY_LETTER}*`;\n\n            return this.isolatedInsensitiveTailor(matcher);\n        }\n        return this.lastName((codiceFiscale || \"\").substr(3, 3));\n    }\n\n    /**\n     * Returns iso8601 date validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static date(codiceFiscale?: string): RegExp {\n        let matcher: string = DATE_MATCHER.ISO8601_DATE_TIME;\n        if (codiceFiscale) {\n            const parsedDate = Parser.cfToBirthDate(codiceFiscale);\n            if (parsedDate) {\n                const dateIso8601: string = parsedDate.toJSON();\n                if (moment().diff(moment(parsedDate), \"y\") < 50) {\n                    const century: number = parseInt(dateIso8601.substr(0, 2), 10);\n                    const centuries: string[] = [\n                        century - 1,\n                        century,\n                    ].map((year) => year.toString().padStart(2, \"0\"));\n                    matcher = `(?:${centuries.join(\"|\")})` + dateIso8601.substr(2, 8);\n                } else {\n                    matcher = dateIso8601.substr(0, 10);\n                }\n            }\n        }\n        return this.isolatedInsensitiveTailor(`${matcher}(?:T${DATE_MATCHER.TIME}(?:${DATE_MATCHER.TIMEZONE})?)?`);\n    }\n\n    /**\n     * Returns gender validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static gender(codiceFiscale?: string): RegExp {\n        const parsedGender = codiceFiscale && Parser.cfToGender(codiceFiscale);\n        const matcher: string = parsedGender || `[${Gender.toArray().join(\"\")}]`;\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    /**\n     * Returns place validator based on given cf or generic\n     * @param codiceFiscale Partial or complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public static place(codiceFiscale?: string): RegExp {\n        let matcher: string = \".+\";\n        const parsedPlace = codiceFiscale && Parser.cfToBirthPlace(codiceFiscale);\n\n        if (parsedPlace) {\n            const nameMatcher: string = parsedPlace.name.replace(/./gu, (c) => diacriticRemover[c] === c ? c : `[${c}${diacriticRemover[c]}]`);\n            matcher = `(?:(?:${nameMatcher})|${parsedPlace.belfioreCode})`;\n        }\n\n        return this.isolatedInsensitiveTailor(matcher);\n    }\n\n    public static deomocode(omocode: string): string {\n        return omocode.replace(/\\d/gu, (n: any) => `[${n}${Omocodes[n]}]`);\n    }\n\n    private static isolatedInsensitiveTailor(matcher: string): RegExp {\n        return new RegExp(`^(?:${matcher})$`, \"iu\");\n    }\n}\n","import moment from \"moment\";\nimport { BelfiorePlace } from \"../belfiore-connector\";\nimport {\n    CRC_OFFSET,\n    CRC_SIZE,\n    DATE_OFFSET,\n    DATE_SIZE,\n    FIRSTNAME_OFFSET,\n    FIRSTNAME_SIZE,\n    GENDER_OFFSET,\n    GENDER_SIZE,\n    LASTNAME_OFFSET,\n    LASTNAME_SIZE,\n    PLACE_OFFSET,\n    PLACE_SIZE,\n    YEAR_OFFSET,\n    YEAR_SIZE,\n} from \"../const/cf-offsets.const\";\nimport { DateUtils, MultiFormatDate } from \"../date-utils/\";\nimport IPersonalInfo from \"../interfaces/personal-info.interface\";\nimport Genders from \"../types/genders.type\";\nimport CheckDigitizer from \"./check-digitizer.class\";\nimport Parser from \"./parser.class\";\nimport Pattern from \"./pattern.class\";\n\nexport default class CFMismatchValidator {\n    constructor(private codiceFiscale: string) {}\n\n    private get hasLastName() {\n        return this.codiceFiscale.length >= (LASTNAME_OFFSET + LASTNAME_SIZE);\n    }\n\n    private get hasFirstName() {\n        return this.codiceFiscale.length >= (FIRSTNAME_OFFSET + FIRSTNAME_SIZE);\n    }\n    private get hasBirthYear() {\n        return this.codiceFiscale.length >= (YEAR_OFFSET + YEAR_SIZE);\n    }\n    private get hasBirthDate() {\n        return this.codiceFiscale.length >= (DATE_OFFSET + DATE_SIZE);\n    }\n    private get hasGender() {\n        return this.codiceFiscale.length >= (GENDER_OFFSET + GENDER_SIZE);\n    }\n    private get hasBirthPlace() {\n        return this.codiceFiscale.length >= (PLACE_OFFSET + PLACE_SIZE);\n    }\n    private get hasCRC() {\n        return this.codiceFiscale.length >= (CRC_OFFSET + CRC_SIZE);\n    }\n\n    public matchPersonalInfo(personalInfo: IPersonalInfo): boolean {\n        return Pattern.codiceFiscale(personalInfo).test(this.codiceFiscale);\n    }\n    public mismatchPersonalInfo(personalInfo: IPersonalInfo): boolean {\n        return !!(\n            this.codiceFiscale &&\n            personalInfo &&\n            personalInfo.lastName &&\n            personalInfo.firstName &&\n            (personalInfo.date || (personalInfo.day && personalInfo.month && personalInfo.year)) &&\n            personalInfo.gender &&\n            personalInfo.place &&\n            !this.matchPersonalInfo(personalInfo)\n        );\n    }\n\n    public matchLastName(lastName?: string): boolean {\n        return this.hasLastName &&\n            Pattern.lastName(this.codiceFiscale).test(lastName || \"\");\n    }\n    public mismatchLastName(lastName?: string): boolean {\n        return this.hasLastName && !!lastName && !this.matchLastName(lastName);\n    }\n\n    public matchFirstName(firstName: string): boolean {\n        return this.hasFirstName &&\n            Pattern.firstName(this.codiceFiscale).test(firstName || \"\");\n    }\n    public mismatchFirstName(firstName: string): boolean {\n        return this.hasFirstName && !!firstName && !this.matchFirstName(firstName);\n    }\n\n    public matchBirthDate(birthDate: MultiFormatDate): boolean {\n        if (this.hasBirthDate) {\n            const parsedCfDate = Parser.cfToBirthDate(this.codiceFiscale);\n            const parsedDate = DateUtils.parseDate(birthDate);\n            if (parsedCfDate && parsedDate) {\n                return moment(parsedCfDate).isSame(parsedDate, \"d\");\n            }\n        }\n        return false;\n    }\n    public mismatchBirthDate(birthDate: MultiFormatDate): boolean {\n        return this.hasBirthYear && !!DateUtils.parseDate(birthDate) && !this.matchBirthDate(birthDate);\n    }\n\n    public matchGender(gender: Genders | string): boolean {\n        return this.hasGender && Pattern.gender(this.codiceFiscale).test(gender || \"\");\n    }\n\n    public mismatchGender(gender: Genders | string): boolean {\n        return this.hasGender && !!gender && !this.matchGender(gender);\n    }\n\n    /**\n     * @param birthPlace BirthPlace, place name or BelfioreCode\n     */\n    public matchBirthPlace(birthPlace: BelfiorePlace | string): boolean {\n        if (this.hasBirthPlace && birthPlace) {\n            const matcher = Pattern.place(this.codiceFiscale);\n            const parsedBirthPlace = Parser.parsePlace(birthPlace);\n\n            return !!parsedBirthPlace && matcher.test(parsedBirthPlace.belfioreCode);\n        }\n        return false;\n    }\n    /**\n     * @param birthPlace BirthPlace, place name or BelfioreCode\n     */\n    public mismatchBirthPlace(birthPlace: BelfiorePlace | string): boolean {\n        return this.hasBirthPlace && !!birthPlace && !this.matchBirthPlace(birthPlace);\n    }\n\n    /**\n     * Check the given cf validity by form, birth date/place and digit code\n     * @param codiceFiscale Complete CF to parse\n     * @return Generic or specific regular expression\n     */\n    public get valid(): boolean {\n        if (\n            // Checking length\n            !this.hasCRC ||\n            // Checking form validity\n            !Pattern.codiceFiscale().test(this.codiceFiscale) ||\n            // Checking 16th char check digit validity\n            this.codiceFiscale.substr(CRC_OFFSET, CRC_SIZE)\n                .toUpperCase() !== CheckDigitizer.checkDigit(this.codiceFiscale) ||\n            // Checking Birth date/place validity\n            !Parser.cfToBirthPlace(this.codiceFiscale)\n        ) {\n            return false;\n        }\n        return true;\n    }\n    public get invalid(): boolean {\n        return !!this.codiceFiscale && !this.valid;\n    }\n}\n","import moment from \"moment\";\nimport {\n    Belfiore,\n    BelfioreConnector,\n    BelfiorePlace,\n} from \"../belfiore-connector\";\nimport { DateUtils, MultiFormatDate } from \"../date-utils/\";\nimport Genders from \"../types/genders.type\";\nimport CFMismatchValidator from \"./cf-mismatch-validator.class\";\nimport Parser from \"./parser.class\";\nimport Pattern from \"./pattern.class\";\n\nexport default class Validator {\n    public static codiceFiscale(codiceFiscale: string): CFMismatchValidator {\n        return new CFMismatchValidator(codiceFiscale);\n    }\n\n    public static isLastNameValid(lastName: string): boolean {\n        return Pattern.lastName().test(lastName);\n    }\n    public static isLastNameInvalid(lastName: string): boolean {\n        return !!lastName && !this.isLastNameValid(lastName);\n    }\n\n    public static isFirstNameValid(firstName: string): boolean {\n        return Pattern.firstName().test(firstName);\n    }\n    public static isFirstNameInvalid(firstName: string): boolean {\n        return !!firstName && !this.isFirstNameValid(firstName);\n    }\n\n    public static isBirthDateValid(birthDate: MultiFormatDate): boolean {\n        return !!DateUtils.parseDate(birthDate);\n    }\n    public static isBirthDateInvalid(birthDate: MultiFormatDate): boolean {\n        return !!birthDate && !this.isBirthDateValid(birthDate);\n    }\n\n    public static isGenderValid(gender: Genders | string): boolean {\n        return Pattern.gender().test(gender);\n    }\n    public static isGenderInvalid(gender: Genders | string): boolean {\n        return !!gender && !this.isGenderValid(gender);\n    }\n\n    public static isBirthPlaceValid(\n        birthPlace: BelfiorePlace | string,\n        scopedBelfioreConnector: BelfioreConnector = Belfiore,\n    ): boolean {\n        const parsedBirthPlace = Parser.parsePlace(birthPlace);\n        return !!parsedBirthPlace && !!scopedBelfioreConnector[parsedBirthPlace.belfioreCode];\n    }\n    public static isBirthPlaceInvalid(\n        birthPlace: BelfiorePlace | string,\n        scopedBelfioreConnector: BelfioreConnector = Belfiore,\n    ): boolean {\n        return !!birthPlace && !this.isBirthPlaceValid(birthPlace, scopedBelfioreConnector);\n    }\n\n    public static birthDatePlaceMatch(birthDate: MultiFormatDate, birthPlace: BelfiorePlace | string): boolean {\n        const parsedPlace = Parser.parsePlace(birthPlace);\n        return this.isBirthDateValid(birthDate) && !!parsedPlace &&\n        !!Belfiore.from(birthDate)[parsedPlace.belfioreCode];\n    }\n    public static birthDatePlaceMismatch(birthDate: MultiFormatDate, birthPlace: BelfiorePlace | string): boolean {\n        const parsedPlace = Parser.parsePlace(birthPlace);\n        return this.isBirthDateValid(birthDate) && !!parsedPlace &&\n            !this.birthDatePlaceMatch(birthDate, birthPlace);\n    }\n    public static birthPlaceDateMatch(birthPlace: BelfiorePlace | string, birthDate: MultiFormatDate): boolean {\n        return this.birthDatePlaceMatch(birthDate, birthPlace);\n    }\n    public static birthPlaceDateMismatch(birthPlace: BelfiorePlace | string, birthDate: MultiFormatDate): boolean {\n        return this.birthDatePlaceMismatch(birthDate, birthPlace);\n    }\n}\n","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/**\n * @marketto/diacritic-remover 1.0.8\n * Copyright (c) 2019, Marco Ricupero <marco.ricupero@gmail.com>\n * License: MIT\n * ===========================================\n * Latin diacritic json file use material from Wikitionary article \"Latin script\"\n * Source: https://en.wiktionary.org/wiki/Appendix:Latin_script\n * License: CC-BY-SA 3.0\n * ===========================================\n * These diacritic i18n json files use material from Wikipedia article \"Diacritic\"\n * Source: https://en.wikipedia.org/wiki/Diacritic\n * License: CC-BY-SA 3.0\n */\n'use strict';\n\nclass DiacriticAbstractHandler {\n    constructor() {\n        this.USE_VALIDATOR = false;\n        this.FALLBACK_MARKER_MATCHER = \"̸̵̶̡̢̨̛͓̳̜̪̟̠̻̖̹̣̤̙͚̱͇̬͕̰͍̮͎̝͈̫͐̂̍̅̔͋͂͗̃̈̏̎̄̿͌̑̓̈́̇̆̕͘͜͝ͅ\";\n        this.LOWERCASE_MARKER_MATCHER = \"\\\\p{M}\";\n        this.UPPERCASE_MARKER_MATCHER = \"\\\\P{M}\";\n        this.IS_MARKER_REPLACING_AVAILABLE = false;\n        try {\n            this.IS_MARKER_REPLACING_AVAILABLE = !!(new RegExp(`(${this.LOWERCASE_MARKER_MATCHER})`, \"gui\"));\n        }\n        catch (err) {\n            return;\n        }\n    }\n    get(target, prop, receiver) {\n        if (prop.length <= 1) {\n            return this.USE_VALIDATOR ? this.diacriticValidatorTrap(target, prop) : this.diacriticTrap(target, prop);\n        }\n        return Reflect.get(target, prop, receiver);\n    }\n    diacriticTrap(target, char) {\n        return char.replace(this.diacriticValidatorTrap(target, char), \"\");\n    }\n    diacriticValidatorTrap(target, char) {\n        return this.INSENSITIVE_MARKER_REGEXP;\n    }\n    get INSENSITIVE_MARKER_REGEXP() {\n        return new RegExp(this.IS_MARKER_REPLACING_AVAILABLE ?\n            `(${this.LOWERCASE_MARKER_MATCHER})` :\n            `([${this.FALLBACK_MARKER_MATCHER}]*)`, \"gui\");\n    }\n    get INSENSITIVE_MARKER_MATCHER() {\n        return this.IS_MARKER_REPLACING_AVAILABLE ?\n            `[${this.LOWERCASE_MARKER_MATCHER}${this.UPPERCASE_MARKER_MATCHER}]*` :\n            `[${this.FALLBACK_MARKER_MATCHER}${this.FALLBACK_MARKER_MATCHER.toUpperCase()}]*`;\n    }\n}\n\nclass DiacriticInsensitiveMatcherHandler extends DiacriticAbstractHandler {\n    diacriticTrap(target, char) {\n        const lowerCaseChar = super.diacriticTrap(target, char).toLowerCase();\n        const lowerCaseDiacritics = target.dictionary[lowerCaseChar] || \"\";\n        const insensitiveMatcher = new Set([\n            lowerCaseChar,\n            lowerCaseChar.toUpperCase(),\n            ...lowerCaseDiacritics,\n            ...lowerCaseDiacritics.toUpperCase(),\n        ]);\n        return [...insensitiveMatcher].sort().join(\"\");\n    }\n}\n\nclass DiacriticValidatorHandler extends DiacriticAbstractHandler {\n    constructor() {\n        super(...arguments);\n        this.USE_VALIDATOR = true;\n    }\n    diacriticValidatorTrap(target, char) {\n        const cleanChar = char.replace(super.diacriticValidatorTrap(target, char), \"\");\n        const diacritics = target.dictionary[char.toLowerCase()] || \"\";\n        let charMatcher = \"\";\n        let markerMatcher = \"\";\n        if (cleanChar || diacritics) {\n            charMatcher = `[${cleanChar}${diacritics}]`;\n            markerMatcher = this.INSENSITIVE_MARKER_MATCHER;\n            if (target.isUpperCase(cleanChar)) {\n                charMatcher = charMatcher.toUpperCase();\n            }\n        }\n        return new RegExp(`^${charMatcher}${markerMatcher}$`, \"u\");\n    }\n}\n\nclass DiacriticInsensitiveValidatorHandler extends DiacriticValidatorHandler {\n    diacriticValidatorTrap(target, char) {\n        const { source } = super.diacriticValidatorTrap(target, char);\n        return new RegExp(source, \"ui\");\n    }\n}\n\nclass DiacriticMatcherHandler extends DiacriticAbstractHandler {\n    diacriticTrap(target, char) {\n        let matcher = super.diacriticTrap(target, char);\n        const diacritics = target.dictionary[char.toLowerCase()];\n        if (diacritics) {\n            matcher += target.isUpperCase(matcher) ? diacritics.toUpperCase() : diacritics;\n        }\n        return matcher;\n    }\n}\n\nclass DiacriticMapperCore {\n    constructor(dictionary = {}) {\n        this.dictionary = dictionary;\n        this.matcher = new Proxy(this, new DiacriticMatcherHandler());\n        this.insensitiveMatcher = new Proxy(this, new DiacriticInsensitiveMatcherHandler());\n        this.validator = new Proxy(this, new DiacriticValidatorHandler());\n        this.insensitiveValidator = new Proxy(this, new DiacriticInsensitiveValidatorHandler());\n    }\n    matcherBy(regexp) {\n        const lowerCase = Object.entries(this.dictionary)\n            .filter(([key, value]) => value && regexp.test(key))\n            .map(([char, value]) => char + value);\n        const upperCase = Object.entries(this.dictionary)\n            .filter(([key, value]) => value && regexp.test(key.toUpperCase()))\n            .map(([char, value]) => (char + value).toUpperCase());\n        return [...lowerCase, ...upperCase].join(\"\");\n    }\n    replace(text) {\n        return text.replace(/./g, (char) => this[char]);\n    }\n    /**\n     * Check if the given string is uppercase\n     *\n     * @param {string} [text=''] string to check\n     * @returns {boolean} true if text is uppercase\n     * @memberof DiacriticMapperCore\n     */\n    isUpperCase(text = \"\") {\n        return text.toLowerCase() !== text;\n    }\n    /**\n     * Check if the given string is lowercase\n     *\n     * @param {string} [text=''] string to check\n     * @returns {boolean} true if text is lowercase\n     * @memberof DiacriticMapperCore\n     */\n    isLowerCase(text = \"\") {\n        return text.toUpperCase() !== text;\n    }\n}\n\n// Copyright Joyent, Inc. and other Node contributors.\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nclass DiacriticRemoverHandler extends DiacriticAbstractHandler {\n    diacriticTrap(target, char) {\n        const cleanChar = super.diacriticTrap(target, char);\n        if (!cleanChar.trim() || cleanChar.length !== 1) {\n            return cleanChar;\n        }\n        const lowerCaseChar = cleanChar.toLowerCase();\n        const [plainChar] = Object.entries(target.dictionary)\n            .find(([letter, diacritics]) => isString(diacritics) &&\n            [letter, ...diacritics].includes(lowerCaseChar)) || [cleanChar];\n        return target.isUpperCase(cleanChar) ?\n            plainChar.toUpperCase() :\n            plainChar;\n    }\n}\n\nvar i18nGlobal = {\n\t\"\": \"ʰ'ʼ·׳\"\n};\n\nvar LATIN_DICT = {\n\ta: \"àáâãäåāăąǎǟǡǻȁȃȧɐɑɒᴀᶏḁạảấầẩẫậắằẳẵặⱥａ\",\n\tae: \"æǣǽᴁᴂᴭᵆ\",\n\tb: \"ƀƃɓʙᵬᶀḃḅḇｂ\",\n\tc: \"cçćĉċčƈȼɕ̄ᴄḉｃ\",\n\td: \"dðþďđƌȡɖɗ̦ᴅᵭᶁᶑḋḍḏḑḓｄ\",\n\tdb: \"ȸ\",\n\tdz: \"ǆǳ\",\n\te: \"èéêëēĕėęěǝȅȇȩɇəɛᴇᶒḕḗḙḛḝẹẻẽếềểễệⱸｅ\",\n\teo: \"ᴔ\",\n\tf: \"fƒᵮᶂḟꜰﬀｆ\",\n\tg: \"ĝğġģǥǧǵȝɠɢᶃḡｇ\",\n\th: \"hĥħȟɦʜʰ̱ḣḥḧḩḫẖⱨｈ\",\n\ti: \"iìíîïĩīĭįıǐȉȋɨɩɪ̇ᵻᶖḭḯỉịｉ\",\n\tij: \"ĳ\",\n\tj: \"jĵǰȷɉɟʄʝ̌ᴊｊ\",\n\tk: \"ķƙǩᴋᶄḱḳḵⱪꝁｋ\",\n\tl: \"lĺļľŀłƚȴɫɬɭʟᶅḷḹḻḽⱡｌ\",\n\tlj: \"ǉ\",\n\tm: \"ɱᴍᵯᶆḿṁṃｍ\",\n\tn: \"nñńņňƞǹȵɲɳɴᵰᶇṅṇṉṋｎ\",\n\tnj: \"ŋǌ̈\",\n\to: \"òóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵᴏṍṏṑṓọỏốồổỗộớờởỡợⱺｏ\",\n\toe: \"œ\",\n\tp: \"pƥƿ̃ᴘᵱᵽᶈṕṗｐ\",\n\tq: \"ƣɋʠｑ\",\n\tqp: \"ȹ\",\n\tr: \"ŕŗřȑȓɍɼɽɾʀᵲᵳᶉṙṛṝṟꝛｒ\",\n\ts: \"sśŝşšſșȿʂʃ̩ᵴᶊṡṣṥṧṩẛꜱｓ\",\n\tss: \"ß\",\n\tt: \"tţťŧƫƭțȶʈᴛᵵṫṭṯṱẗⱦｔ\",\n\tu: \"ùúûüũūŭůűųưǔǖǘǚǜȕȗʉʊᴜᵾṳṵṷṹṻụủứừửữựｕ\",\n\tue: \"ᵫ\",\n\tuo: \"ȣ\",\n\tut: \"ᶙ\",\n\tv: \"ʋʌᴠᶌṽṿⱱⱴｖ\",\n\tw: \"ŵᴡẁẃẅẇẉẘⱳｗ\",\n\tx: \"ᶍẋẍｘ\",\n\ty: \"ýÿŷƴȳɏʏẏẙỳỵỷỹｙ\",\n\tz: \"zźżžƶƹȥɀʐʑʒᴢᵶᶎẑẓẕⱬｚ\"\n};\n\nclass DiacriticRemover extends DiacriticMapperCore {\n    constructor(...dictionaries) {\n        super();\n        const mergedDictionaries = Object.freeze((dictionaries.length ? dictionaries : [LATIN_DICT, i18nGlobal])\n            .reduce((dictMerge, currentDict) => [...dictMerge, ...Object.entries(currentDict)], [])\n            .reduce((accumulator, [letter, diacritics]) => {\n            let targetSet = accumulator.find(([targetLetter]) => targetLetter === letter);\n            if (!targetSet) {\n                targetSet = [letter, []];\n                accumulator.push(targetSet);\n            }\n            targetSet[1] = [...targetSet[1], ...diacritics];\n            return accumulator;\n        }, [])\n            .reduce((accumulator, [letter, diacritics]) => (Object.assign(Object.assign({}, accumulator), { [letter]: [...(new Set(diacritics))].sort().join(\"\") })), {}));\n        Object.defineProperty(this, \"dictionary\", {\n            configurable: false,\n            enumerable: false,\n            value: mergedDictionaries,\n        });\n        return new Proxy(this, new DiacriticRemoverHandler());\n    }\n}\n\nmodule.exports = DiacriticRemover;\n"]},"banner":"For license information please see 24.a1cb862a.chunk.js.LICENSE.txt","extractedComments":"//! moment.js\n","commentsFilename":"static/js/24.a1cb862a.chunk.js.LICENSE.txt"}