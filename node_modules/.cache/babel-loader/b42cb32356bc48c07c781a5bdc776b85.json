{"ast":null,"code":"var _s = $RefreshSig$();\nimport { auth, db } from \"../../config/firebase-config.js\";\nimport { doc } from \"firebase/firestore\";\nimport { Redirect } from 'react-router-dom';\nconst DeleteAccount = async (password, currentUser) => {\n  _s();\n  try {\n    if (!currentUser) {\n      throw new Error('Utente non autenticato');\n    }\n\n    // Verifica la password dell'utente attuale\n    const credentials = auth.EmailAuthProvider.credential(currentUser.email, password);\n    await currentUser.reauthenticateWithCredential(credentials);\n\n    // Elimina l'utente da Firebase Authentication\n    await currentUser.delete();\n\n    // Elimina l'utente da Firestore\n    const uidPatient = currentUser.uid;\n    await doc(db, 'users', uidPatient).delete();\n    const history = useHistory();\n\n    // Esegui il reindirizzamento alla pagina di login\n    history.push('/login');\n    // Restituisci true se l'eliminazione è avvenuta con successo\n    return true;\n  } catch (error) {\n    console.error('Errore durante l\\'eliminazione dell\\'account', error);\n    throw error;\n  }\n};\n_s(DeleteAccount, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", true);\n_c = DeleteAccount;\nexport default DeleteAccount;\nvar _c;\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["auth","db","doc","Redirect","DeleteAccount","password","currentUser","_s","Error","credentials","EmailAuthProvider","credential","email","reauthenticateWithCredential","delete","uidPatient","uid","history","useHistory","push","error","console","_c","$RefreshReg$"],"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/DeleteAccount.js"],"sourcesContent":["import { auth, db } from \"../../config/firebase-config.js\";\nimport { doc } from \"firebase/firestore\";\nimport { Redirect } from 'react-router-dom';\n\nconst DeleteAccount = async (password, currentUser) => {\n  try {\n    if (!currentUser) {\n      throw new Error('Utente non autenticato');\n    }\n\n    // Verifica la password dell'utente attuale\n    const credentials = auth.EmailAuthProvider.credential(currentUser.email, password);\n    await currentUser.reauthenticateWithCredential(credentials);\n\n    // Elimina l'utente da Firebase Authentication\n    await currentUser.delete();\n\n    // Elimina l'utente da Firestore\n    const uidPatient = currentUser.uid;\n    await doc(db, 'users', uidPatient).delete();\n    const history = useHistory();\n\n    // Esegui il reindirizzamento alla pagina di login\n    history.push('/login');\n    // Restituisci true se l'eliminazione è avvenuta con successo\n    return true;\n  } catch (error) {\n    console.error('Errore durante l\\'eliminazione dell\\'account', error);\n    throw error;\n  }\n};\n\nexport default DeleteAccount;\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,EAAE,QAAQ,iCAAiC;AAC1D,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,KAAK;EAAAC,EAAA;EACrD,IAAI;IACF,IAAI,CAACD,WAAW,EAAE;MAChB,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,MAAMC,WAAW,GAAGT,IAAI,CAACU,iBAAiB,CAACC,UAAU,CAACL,WAAW,CAACM,KAAK,EAAEP,QAAQ,CAAC;IAClF,MAAMC,WAAW,CAACO,4BAA4B,CAACJ,WAAW,CAAC;;IAE3D;IACA,MAAMH,WAAW,CAACQ,MAAM,CAAC,CAAC;;IAE1B;IACA,MAAMC,UAAU,GAAGT,WAAW,CAACU,GAAG;IAClC,MAAMd,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEc,UAAU,CAAC,CAACD,MAAM,CAAC,CAAC;IAC3C,MAAMG,OAAO,GAAGC,UAAU,CAAC,CAAC;;IAE5B;IACAD,OAAO,CAACE,IAAI,CAAC,QAAQ,CAAC;IACtB;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;AAACb,EAAA,CA1BIH,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}