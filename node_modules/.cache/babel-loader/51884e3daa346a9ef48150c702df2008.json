{"ast":null,"code":"import React,{useEffect}from\"react\";import Pagination from\"react-bootstrap/Pagination\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/*\n Componente che si occupa di impaginare gli elementi di una collezione\n */const PaginationComponent=_ref=>{let{itemsCount,itemsPerPage,currentPage,setCurrentPage,alwaysShown=true}=_ref;const pagesCount=Math.ceil(itemsCount/itemsPerPage);const isPaginationShown=alwaysShown?true:pagesCount>1;const isCurrentPageFirst=currentPage===1;const isCurrentPageLast=currentPage===pagesCount;const changePage=number=>{if(currentPage===number)return;setCurrentPage(number);};const onPageNumberClick=pageNumber=>{changePage(pageNumber);};const onPreviousPageClick=()=>{changePage(currentPage=>currentPage-1);};const onNextPageClick=()=>{changePage(currentPage=>currentPage+1);};const setLastPageAsCurrent=()=>{if(currentPage>pagesCount){setCurrentPage(pagesCount);}};let isPageNumberOutOfRange;const pageNumbers=[...new Array(pagesCount)].map((_,index)=>{const pageNumber=index+1;const isPageNumberFirst=pageNumber===1;const isPageNumberLast=pageNumber===pagesCount;const isCurrentPageWithinTwoPageNumbers=Math.abs(pageNumber-currentPage)<=2;if(isPageNumberFirst||isPageNumberLast||isCurrentPageWithinTwoPageNumbers){isPageNumberOutOfRange=false;return/*#__PURE__*/_jsx(Pagination.Item,{active:pageNumber===currentPage,onClick:()=>onPageNumberClick(pageNumber),children:pageNumber},pageNumber);}if(!isPageNumberOutOfRange){isPageNumberOutOfRange=true;return/*#__PURE__*/_jsx(Pagination.Ellipsis,{className:\"muted\"},pageNumber);}return null;});// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(setLastPageAsCurrent,[pagesCount]);return/*#__PURE__*/_jsx(_Fragment,{children:isPaginationShown&&/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(Pagination.Prev,{onClick:onPreviousPageClick,disabled:isCurrentPageFirst}),pageNumbers,/*#__PURE__*/_jsx(Pagination.Next,{onClick:onNextPageClick,disabled:isCurrentPageLast})]})});};export default PaginationComponent;","map":{"version":3,"names":["React","useEffect","Pagination","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PaginationComponent","_ref","itemsCount","itemsPerPage","currentPage","setCurrentPage","alwaysShown","pagesCount","Math","ceil","isPaginationShown","isCurrentPageFirst","isCurrentPageLast","changePage","number","onPageNumberClick","pageNumber","onPreviousPageClick","onNextPageClick","setLastPageAsCurrent","isPageNumberOutOfRange","pageNumbers","Array","map","_","index","isPageNumberFirst","isPageNumberLast","isCurrentPageWithinTwoPageNumbers","abs","Item","active","onClick","children","Ellipsis","className","Prev","disabled","Next"],"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Utilities/Pagination.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport PropTypes from \"prop-types\";\n\n/*\n Componente che si occupa di impaginare gli elementi di una collezione\n */\nconst PaginationComponent = ({itemsCount, itemsPerPage, currentPage, setCurrentPage, alwaysShown = true}) => {\n    const pagesCount = Math.ceil(itemsCount / itemsPerPage);\n    const isPaginationShown = alwaysShown ? true : pagesCount > 1;\n    const isCurrentPageFirst = currentPage === 1;\n    const isCurrentPageLast = currentPage === pagesCount;\n\n    const changePage = number => {\n        if (currentPage === number) return;\n        setCurrentPage(number);\n    };\n\n    const onPageNumberClick = pageNumber => {\n        changePage(pageNumber);\n    };\n\n    const onPreviousPageClick = () => {\n        changePage(currentPage => currentPage - 1);\n    };\n\n    const onNextPageClick = () => {\n        changePage(currentPage => currentPage + 1);\n    };\n\n    const setLastPageAsCurrent = () => {\n        if (currentPage > pagesCount) {\n            setCurrentPage(pagesCount);\n        }\n    };\n\n    let isPageNumberOutOfRange;\n\n    const pageNumbers = [...new Array(pagesCount)].map((_, index) => {\n        const pageNumber = index + 1;\n        const isPageNumberFirst = pageNumber === 1;\n        const isPageNumberLast = pageNumber === pagesCount;\n        const isCurrentPageWithinTwoPageNumbers =\n            Math.abs(pageNumber - currentPage) <= 2;\n\n        if (\n            isPageNumberFirst ||\n            isPageNumberLast ||\n            isCurrentPageWithinTwoPageNumbers\n        ) {\n            isPageNumberOutOfRange = false;\n            return (\n                <Pagination.Item\n                    key={pageNumber}\n                    active={pageNumber === currentPage}\n                    onClick={() => onPageNumberClick(pageNumber)}\n                >\n                    {pageNumber}\n                </Pagination.Item>\n            );\n        }\n\n        if (!isPageNumberOutOfRange) {\n            isPageNumberOutOfRange = true;\n            return <Pagination.Ellipsis key={pageNumber}\n                                        className=\"muted\"/>;\n        }\n\n        return null;\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(setLastPageAsCurrent, [pagesCount]);\n\n    return (\n        <>\n            {isPaginationShown && (\n                <Pagination>\n                    <Pagination.Prev\n                        onClick={onPreviousPageClick}\n                        disabled={isCurrentPageFirst}\n                    />\n                    {pageNumbers}\n                    <Pagination.Next\n                        onClick={onNextPageClick}\n                        disabled={isCurrentPageLast}\n                    />\n                </Pagination>\n            )}\n        </>\n    );\n};\n\nPaginationComponent.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    alwaysShown: PropTypes.bool\n};\n\nexport default PaginationComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}