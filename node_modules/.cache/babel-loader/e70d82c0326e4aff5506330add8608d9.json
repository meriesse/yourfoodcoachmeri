{"ast":null,"code":"import { config } from \"dotenv\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\n//import {getFirestore} from \"firebase/firestore\";\nimport \"dotenv/config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, initializeFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\nconfig();\n\n// Configurazione servizi Firebase\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Inizializzo Firebase\n//preferRest: true => Permette di utilizzare chiamate REST al posto del protocollo gRPC\n//const app = firebase.initializeApp(firebaseConfig, {preferRest: true});\n\n//Ottengo riferimento al servizio Firestore Database\n//export const db = getFirestore(app);\n\n//Ottengo riferimento al servizio Firebase Authentication\n//export const auth = app.auth();\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = initializeFirestore(app, {\n  experimentalForceLongPolling: true\n});\nexport { db, auth };","map":{"version":3,"names":["config","firebase","initializeApp","getFirestore","initializeFirestore","getAuth","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","auth","db","experimentalForceLongPolling"],"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/config/firebase-config.js"],"sourcesContent":["import {config} from \"dotenv\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\n//import {getFirestore} from \"firebase/firestore\";\nimport \"dotenv/config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, initializeFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\n\nconfig();\n\n// Configurazione servizi Firebase\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Inizializzo Firebase\n//preferRest: true => Permette di utilizzare chiamate REST al posto del protocollo gRPC\n//const app = firebase.initializeApp(firebaseConfig, {preferRest: true});\n\n\n//Ottengo riferimento al servizio Firestore Database\n//export const db = getFirestore(app);\n\n//Ottengo riferimento al servizio Firebase Authentication\n//export const auth = app.auth();\n\nconst app = initializeApp(firebaseConfig);\n\nconst auth = getAuth(app)\n\nconst db = initializeFirestore(app, {\nexperimentalForceLongPolling: true\n})\n\nexport { db, auth };\n"],"mappings":"AAAA,SAAQA,MAAM,QAAO,QAAQ;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B;AACA,OAAO,eAAe;AACtB,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,oBAAoB;AACtE,SAASC,OAAO,QAAQ,eAAe;AAEvCL,MAAM,CAAC,CAAC;;AAER;AACA,MAAMM,cAAc,GAAG;EACnBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,WAAW,EAAEL,OAAO,CAACC,GAAG,CAACK,+BAA+B;EACxDC,SAAS,EAAEP,OAAO,CAACC,GAAG,CAACO,6BAA6B;EACpDC,aAAa,EAAET,OAAO,CAACC,GAAG,CAACS,iCAAiC;EAC5DC,iBAAiB,EAAEX,OAAO,CAACC,GAAG,CAACW,sCAAsC;EACrEC,KAAK,EAAEb,OAAO,CAACC,GAAG,CAACa,yBAAyB;EAC5CC,aAAa,EAAEf,OAAO,CAACC,GAAG,CAACe;AAC/B,CAAC;;AAED;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA,MAAMC,GAAG,GAAGvB,aAAa,CAACI,cAAc,CAAC;AAEzC,MAAMoB,IAAI,GAAGrB,OAAO,CAACoB,GAAG,CAAC;AAEzB,MAAME,EAAE,GAAGvB,mBAAmB,CAACqB,GAAG,EAAE;EACpCG,4BAA4B,EAAE;AAC9B,CAAC,CAAC;AAEF,SAASD,EAAE,EAAED,IAAI"},"metadata":{},"sourceType":"module"}