{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../../config/firebase-config.js\";\nimport { useAuth } from \"../../context/AuthContext.js\";\nconst deleteAccount = async (password, userId) => {\n  _s();\n  try {\n    // Verifica la password dell'utente attuale\n    const {\n      currentUser\n    } = useAuth();\n    const credentials = await auth.EmailAuthProvider.credential(currentUser.email, password);\n    // const patientUserCredential = await auth.createUserWithEmailAndPassword(formData.email_paziente, randomPassword);\n    //const uidPatient = credentials.user.uid;\n    const uidPatient = currentUser.uid;\n    await user.reauthenticateWithCredential(credentials);\n\n    // Elimina l'utente da Firebase Authentication\n    await user.delete();\n\n    // Elimina l'utente da Firestore\n    await doc(db, 'users', uidPatient).delete();\n\n    // Restituisci true se l'eliminazione è avvenuta con successo\n    return true;\n  } catch (error) {\n    console.error('Errore durante l\\'eliminazione dell\\'account', error);\n    throw error;\n  }\n};\n_s(deleteAccount, \"lFaqcqpYfH+hD2+XWVfEsX3mhzk=\", false, function () {\n  return [useAuth];\n});\nexport default deleteAccount;","map":{"version":3,"names":["React","useEffect","useRef","useState","auth","db","useAuth","deleteAccount","password","userId","_s","currentUser","credentials","EmailAuthProvider","credential","email","uidPatient","uid","user","reauthenticateWithCredential","delete","doc","error","console"],"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/DeleteAccount.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {auth, db} from \"../../config/firebase-config.js\"\nimport {useAuth} from \"../../context/AuthContext.js\";\n\n\nconst deleteAccount = async (password, userId) => {\n  try {\n    // Verifica la password dell'utente attuale\n    const {currentUser} = useAuth();\n    const credentials = await auth.EmailAuthProvider.credential(currentUser.email, password);\n   // const patientUserCredential = await auth.createUserWithEmailAndPassword(formData.email_paziente, randomPassword);\n      //const uidPatient = credentials.user.uid;\n      const uidPatient = currentUser.uid;\n    await user.reauthenticateWithCredential(credentials);\n\n    // Elimina l'utente da Firebase Authentication\n    await user.delete();\n\n    // Elimina l'utente da Firestore\n    await doc(db,'users',uidPatient).delete();\n\n    // Restituisci true se l'eliminazione è avvenuta con successo\n    return true;\n  } catch (error) {\n    console.error('Errore durante l\\'eliminazione dell\\'account', error);\n    throw error;\n  }\n};\n\nexport default deleteAccount;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,SAAQC,IAAI,EAAEC,EAAE,QAAO,iCAAiC;AACxD,SAAQC,OAAO,QAAO,8BAA8B;AAGpD,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;EAAAC,EAAA;EAChD,IAAI;IACF;IACA,MAAM;MAACC;IAAW,CAAC,GAAGL,OAAO,CAAC,CAAC;IAC/B,MAAMM,WAAW,GAAG,MAAMR,IAAI,CAACS,iBAAiB,CAACC,UAAU,CAACH,WAAW,CAACI,KAAK,EAAEP,QAAQ,CAAC;IACzF;IACG;IACA,MAAMQ,UAAU,GAAGL,WAAW,CAACM,GAAG;IACpC,MAAMC,IAAI,CAACC,4BAA4B,CAACP,WAAW,CAAC;;IAEpD;IACA,MAAMM,IAAI,CAACE,MAAM,CAAC,CAAC;;IAEnB;IACA,MAAMC,GAAG,CAAChB,EAAE,EAAC,OAAO,EAACW,UAAU,CAAC,CAACI,MAAM,CAAC,CAAC;;IAEzC;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;AAACZ,EAAA,CAtBIH,aAAa;EAAA,QAGOD,OAAO;AAAA;AAqBjC,eAAeC,aAAa"},"metadata":{},"sourceType":"module"}