{"ast":null,"code":"import{collection,deleteDoc,doc,getDoc,serverTimestamp,setDoc,updateDoc}from\"firebase/firestore\";import{db}from\"../config/firebase-config\";/*\n Funzione che si occupa di memorizzare i dati di una dieta su Firestore Database\n */export async function addDiet(formData,nutrizionista){formData.data_inserimento=serverTimestamp();formData.email_nutrizionista=nutrizionista.email;formData.numero_telefono_nutrizionista=nutrizionista.telefono;formData.tipologia_dieta=nutrizionista.ruolo;await setDoc(doc(collection(db,\"diets\")),formData);}/*\n Funzione che si occupa di aggiornare i dati di una dieta memorizzata su Firestore Database\n */export async function updateDiet(formData,id){formData.data_inserimento=serverTimestamp();await updateDoc(doc(db,\"diets\",id),formData);}/*\n Funzione che si occupa di aggiornare il numero di telefono del nutrizionista su Firestore Database\n */export async function updateTelephone(formData,id){await updateDoc(doc(db,\"diets\",id),formData);}/*\n Funzione che si occupa di eliminare una dieta memorizzata su Firestore Database\n */export async function deleteDiet(id){await deleteDoc(doc(db,\"diets\",id));}/*\n Funzione che si occupa di ottenere i dati di una dieta memorizzata su Firestore Database\n */export async function getDiet(id){const docRef=doc(db,\"diets\",id);const docSnap=await getDoc(docRef);if(docSnap.exists()){console.log(\"Documento letto correttamente \");console.log(docSnap.data());return docSnap.data();}else{console.log(\"Nessun documento trovato con il codice fiscale inserito!\");}}/*\n Funzione che si occupa di codificare l'url della richiesta ricevuto il pasto in input\n */export const urlEncoded=arr=>{const regex=/,/gi;if(Array.isArray(arr)){return arr.join(\",\").replace(regex,\" and \");}else{return arr.split(\" \").join(\"%20\");}};","map":{"version":3,"names":["collection","deleteDoc","doc","getDoc","serverTimestamp","setDoc","updateDoc","db","addDiet","formData","nutrizionista","data_inserimento","email_nutrizionista","email","numero_telefono_nutrizionista","telefono","tipologia_dieta","ruolo","updateDiet","id","updateTelephone","deleteDiet","getDiet","docRef","docSnap","exists","console","log","data","urlEncoded","arr","regex","Array","isArray","join","replace","split"],"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/context/DietContext.js"],"sourcesContent":["import {collection, deleteDoc, doc, getDoc, serverTimestamp, setDoc, updateDoc} from \"firebase/firestore\";\nimport {db} from \"../config/firebase-config\";\n\n/*\n Funzione che si occupa di memorizzare i dati di una dieta su Firestore Database\n */\nexport async function addDiet(formData, nutrizionista) {\n    formData.data_inserimento = serverTimestamp();\n    formData.email_nutrizionista = nutrizionista.email;\n    formData.numero_telefono_nutrizionista = nutrizionista.telefono;\n    formData.tipologia_dieta = nutrizionista.ruolo;\n    await setDoc(doc(collection(db, \"diets\")), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare i dati di una dieta memorizzata su Firestore Database\n */\nexport async function updateDiet(formData, id) {\n    formData.data_inserimento = serverTimestamp();\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di aggiornare il numero di telefono del nutrizionista su Firestore Database\n */\nexport async function updateTelephone(formData, id) {\n    await updateDoc(doc(db, \"diets\", id), formData);\n}\n\n/*\n Funzione che si occupa di eliminare una dieta memorizzata su Firestore Database\n */\nexport async function deleteDiet(id) {\n    await deleteDoc(doc(db, \"diets\", id));\n}\n\n/*\n Funzione che si occupa di ottenere i dati di una dieta memorizzata su Firestore Database\n */\nexport async function getDiet(id) {\n    const docRef = doc(db, \"diets\", id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        console.log(\"Documento letto correttamente \");\n        console.log(docSnap.data());\n        return docSnap.data();\n    } else {\n        console.log((\"Nessun documento trovato con il codice fiscale inserito!\"));\n    }\n}\n\n/*\n Funzione che si occupa di codificare l'url della richiesta ricevuto il pasto in input\n */\nexport const urlEncoded = arr => {\n    const regex = /,/gi;\n    if (Array.isArray(arr)) {\n        return arr.join(\",\").replace(regex, \" and \");\n    } else {\n        return arr.split(\" \").join(\"%20\");\n    }\n};\n"],"mappings":"AAAA,OAAQA,UAAU,CAAEC,SAAS,CAAEC,GAAG,CAAEC,MAAM,CAAEC,eAAe,CAAEC,MAAM,CAAEC,SAAS,KAAO,oBAAoB,CACzG,OAAQC,EAAE,KAAO,2BAA2B,CAE5C;AACA;AACA,GACA,MAAO,eAAe,CAAAC,OAAOA,CAACC,QAAQ,CAAEC,aAAa,CAAE,CACnDD,QAAQ,CAACE,gBAAgB,CAAGP,eAAe,CAAC,CAAC,CAC7CK,QAAQ,CAACG,mBAAmB,CAAGF,aAAa,CAACG,KAAK,CAClDJ,QAAQ,CAACK,6BAA6B,CAAGJ,aAAa,CAACK,QAAQ,CAC/DN,QAAQ,CAACO,eAAe,CAAGN,aAAa,CAACO,KAAK,CAC9C,KAAM,CAAAZ,MAAM,CAACH,GAAG,CAACF,UAAU,CAACO,EAAE,CAAE,OAAO,CAAC,CAAC,CAAEE,QAAQ,CAAC,CACxD,CAEA;AACA;AACA,GACA,MAAO,eAAe,CAAAS,UAAUA,CAACT,QAAQ,CAAEU,EAAE,CAAE,CAC3CV,QAAQ,CAACE,gBAAgB,CAAGP,eAAe,CAAC,CAAC,CAC7C,KAAM,CAAAE,SAAS,CAACJ,GAAG,CAACK,EAAE,CAAE,OAAO,CAAEY,EAAE,CAAC,CAAEV,QAAQ,CAAC,CACnD,CAEA;AACA;AACA,GACA,MAAO,eAAe,CAAAW,eAAeA,CAACX,QAAQ,CAAEU,EAAE,CAAE,CAChD,KAAM,CAAAb,SAAS,CAACJ,GAAG,CAACK,EAAE,CAAE,OAAO,CAAEY,EAAE,CAAC,CAAEV,QAAQ,CAAC,CACnD,CAEA;AACA;AACA,GACA,MAAO,eAAe,CAAAY,UAAUA,CAACF,EAAE,CAAE,CACjC,KAAM,CAAAlB,SAAS,CAACC,GAAG,CAACK,EAAE,CAAE,OAAO,CAAEY,EAAE,CAAC,CAAC,CACzC,CAEA;AACA;AACA,GACA,MAAO,eAAe,CAAAG,OAAOA,CAACH,EAAE,CAAE,CAC9B,KAAM,CAAAI,MAAM,CAAGrB,GAAG,CAACK,EAAE,CAAE,OAAO,CAAEY,EAAE,CAAC,CACnC,KAAM,CAAAK,OAAO,CAAG,KAAM,CAAArB,MAAM,CAACoB,MAAM,CAAC,CACpC,GAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAE,CAClBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7CD,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAC3B,MAAO,CAAAJ,OAAO,CAACI,IAAI,CAAC,CAAC,CACzB,CAAC,IAAM,CACHF,OAAO,CAACC,GAAG,CAAE,0DAA2D,CAAC,CAC7E,CACJ,CAEA;AACA;AACA,GACA,MAAO,MAAM,CAAAE,UAAU,CAAGC,GAAG,EAAI,CAC7B,KAAM,CAAAC,KAAK,CAAG,KAAK,CACnB,GAAIC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,CAAE,CACpB,MAAO,CAAAA,GAAG,CAACI,IAAI,CAAC,GAAG,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAE,OAAO,CAAC,CAChD,CAAC,IAAM,CACH,MAAO,CAAAD,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,KAAK,CAAC,CACrC,CACJ,CAAC"},"metadata":{},"sourceType":"module"}