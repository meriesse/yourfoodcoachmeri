{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuth } from \"../../context/AuthContext.js\";\nimport { auth, db } from \"../../config/firebase-config.js\";\nimport { doc } from \"firebase/firestore\";\nconst DeleteAccount = async password => {\n  _s();\n  try {\n    const {\n      currentUser\n    } = useAuth(); // Chiamare useAuth all'interno della componente React\n\n    if (!currentUser) {\n      throw new Error('Utente non autenticato');\n    }\n\n    // Verifica la password dell'utente attuale\n    const credentials = auth.EmailAuthProvider.credential(currentUser.email, password);\n    await currentUser.reauthenticateWithCredential(credentials);\n\n    // Elimina l'utente da Firebase Authentication\n    await currentUser.delete();\n\n    // Elimina l'utente da Firestore\n    const uidPatient = currentUser.uid;\n    await doc(db, 'users', uidPatient).delete();\n\n    // Restituisci true se l'eliminazione è avvenuta con successo\n    return true;\n  } catch (error) {\n    console.error('Errore durante l\\'eliminazione dell\\'account', error);\n    throw error;\n  }\n};\n_s(DeleteAccount, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n_c = DeleteAccount;\nexport default DeleteAccount;\nvar _c;\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["useAuth","auth","db","doc","DeleteAccount","password","_s","currentUser","Error","credentials","EmailAuthProvider","credential","email","reauthenticateWithCredential","delete","uidPatient","uid","error","console","_c","$RefreshReg$"],"sources":["/Users/angelamariaselvaggi/Desktop/unimeri/Tesi/Applicazione/APP MERI/src/Components/Authentication/DeleteAccount.js"],"sourcesContent":["import { useAuth } from \"../../context/AuthContext.js\";\nimport { auth, db } from \"../../config/firebase-config.js\";\nimport { doc } from \"firebase/firestore\";\n\nconst DeleteAccount = async (password) => {\n  try {\n    const { currentUser } = useAuth(); // Chiamare useAuth all'interno della componente React\n\n    if (!currentUser) {\n      throw new Error('Utente non autenticato');\n    }\n\n    // Verifica la password dell'utente attuale\n    const credentials = auth.EmailAuthProvider.credential(currentUser.email, password);\n    await currentUser.reauthenticateWithCredential(credentials);\n\n    // Elimina l'utente da Firebase Authentication\n    await currentUser.delete();\n\n    // Elimina l'utente da Firestore\n    const uidPatient = currentUser.uid;\n    await doc(db, 'users', uidPatient).delete();\n\n    // Restituisci true se l'eliminazione è avvenuta con successo\n    return true;\n  } catch (error) {\n    console.error('Errore durante l\\'eliminazione dell\\'account', error);\n    throw error;\n  }\n};\n\nexport default DeleteAccount;\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,8BAA8B;AACtD,SAASC,IAAI,EAAEC,EAAE,QAAQ,iCAAiC;AAC1D,SAASC,GAAG,QAAQ,oBAAoB;AAExC,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAAAC,EAAA;EACxC,IAAI;IACF,MAAM;MAAEC;IAAY,CAAC,GAAGP,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEnC,IAAI,CAACO,WAAW,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,MAAMC,WAAW,GAAGR,IAAI,CAACS,iBAAiB,CAACC,UAAU,CAACJ,WAAW,CAACK,KAAK,EAAEP,QAAQ,CAAC;IAClF,MAAME,WAAW,CAACM,4BAA4B,CAACJ,WAAW,CAAC;;IAE3D;IACA,MAAMF,WAAW,CAACO,MAAM,CAAC,CAAC;;IAE1B;IACA,MAAMC,UAAU,GAAGR,WAAW,CAACS,GAAG;IAClC,MAAMb,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEa,UAAU,CAAC,CAACD,MAAM,CAAC,CAAC;;IAE3C;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;AAACX,EAAA,CAzBIF,aAAa;EAAA,QAESJ,OAAO;AAAA;AAAAmB,EAAA,GAF7Bf,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}