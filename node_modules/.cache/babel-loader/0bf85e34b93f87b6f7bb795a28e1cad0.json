{"ast":null,"code":"import { assert, escapeRegex } from '@hapi/hoek';\nfunction generate() {\n  const rfc3986 = {};\n  const hexDigit = '\\\\dA-Fa-f'; // HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n  const hexDigitOnly = '[' + hexDigit + ']';\n  const unreserved = '\\\\w-\\\\.~'; // unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n  const subDelims = \"!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=\"; // sub-delims = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n  const pctEncoded = '%' + hexDigit; // pct-encoded = \"%\" HEXDIG HEXDIG\n  const pchar = unreserved + pctEncoded + subDelims + ':@'; // pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n  const pcharOnly = '[' + pchar + ']';\n  const decOctect = '(?:0{0,2}\\\\d|0?[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])'; // dec-octet = DIGIT / %x31-39 DIGIT / \"1\" 2DIGIT / \"2\" %x30-34 DIGIT / \"25\" %x30-35  ; 0-9 / 10-99 / 100-199 / 200-249 / 250-255\n  rfc3986.ipv4address = '(?:' + decOctect + '\\\\.){3}' + decOctect; // IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\n  /*\n      h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal\n      ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address\n      IPv6address =                            6( h16 \":\" ) ls32\n                  /                       \"::\" 5( h16 \":\" ) ls32\n                  / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n                  / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n                  / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n                  / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n                  / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n                  / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n                  / [ *6( h16 \":\" ) h16 ] \"::\"\n  */\n  const h16 = hexDigitOnly + '{1,4}';\n  const ls32 = '(?:' + h16 + ':' + h16 + '|' + rfc3986.ipv4address + ')';\n  const IPv6SixHex = '(?:' + h16 + ':){6}' + ls32;\n  const IPv6FiveHex = '::(?:' + h16 + ':){5}' + ls32;\n  const IPv6FourHex = '(?:' + h16 + ')?::(?:' + h16 + ':){4}' + ls32;\n  const IPv6ThreeHex = '(?:(?:' + h16 + ':){0,1}' + h16 + ')?::(?:' + h16 + ':){3}' + ls32;\n  const IPv6TwoHex = '(?:(?:' + h16 + ':){0,2}' + h16 + ')?::(?:' + h16 + ':){2}' + ls32;\n  const IPv6OneHex = '(?:(?:' + h16 + ':){0,3}' + h16 + ')?::' + h16 + ':' + ls32;\n  const IPv6NoneHex = '(?:(?:' + h16 + ':){0,4}' + h16 + ')?::' + ls32;\n  const IPv6NoneHex2 = '(?:(?:' + h16 + ':){0,5}' + h16 + ')?::' + h16;\n  const IPv6NoneHex3 = '(?:(?:' + h16 + ':){0,6}' + h16 + ')?::';\n  rfc3986.ipv4Cidr = '(?:\\\\d|[1-2]\\\\d|3[0-2])'; // IPv4 cidr = DIGIT / %x31-32 DIGIT / \"3\" %x30-32  ; 0-9 / 10-29 / 30-32\n  rfc3986.ipv6Cidr = '(?:0{0,2}\\\\d|0?[1-9]\\\\d|1[01]\\\\d|12[0-8])'; // IPv6 cidr = DIGIT / %x31-39 DIGIT / \"1\" %x0-1 DIGIT / \"12\" %x0-8;   0-9 / 10-99 / 100-119 / 120-128\n  rfc3986.ipv6address = '(?:' + IPv6SixHex + '|' + IPv6FiveHex + '|' + IPv6FourHex + '|' + IPv6ThreeHex + '|' + IPv6TwoHex + '|' + IPv6OneHex + '|' + IPv6NoneHex + '|' + IPv6NoneHex2 + '|' + IPv6NoneHex3 + ')';\n  rfc3986.ipvFuture = 'v' + hexDigitOnly + '+\\\\.[' + unreserved + subDelims + ':]+'; // IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n  rfc3986.scheme = '[a-zA-Z][a-zA-Z\\\\d+-\\\\.]*'; // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n  rfc3986.schemeRegex = new RegExp(rfc3986.scheme);\n  const userinfo = '[' + unreserved + pctEncoded + subDelims + ':]*'; // userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )\n  const IPLiteral = '\\\\[(?:' + rfc3986.ipv6address + '|' + rfc3986.ipvFuture + ')\\\\]'; // IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n  const regName = '[' + unreserved + pctEncoded + subDelims + ']{1,255}'; // reg-name = *( unreserved / pct-encoded / sub-delims )\n  const host = '(?:' + IPLiteral + '|' + rfc3986.ipv4address + '|' + regName + ')'; // host = IP-literal / IPv4address / reg-name\n  const port = '\\\\d*'; // port = *DIGIT\n  const authority = '(?:' + userinfo + '@)?' + host + '(?::' + port + ')?'; // authority   = [ userinfo \"@\" ] host [ \":\" port ]\n  const authorityCapture = '(?:' + userinfo + '@)?(' + host + ')(?::' + port + ')?';\n  /*\n      segment       = *pchar\n      segment-nz    = 1*pchar\n      path          = path-abempty    ; begins with \"/\" '|' is empty\n                  / path-absolute   ; begins with \"/\" but not \"//\"\n                  / path-noscheme   ; begins with a non-colon segment\n                  / path-rootless   ; begins with a segment\n                  / path-empty      ; zero characters\n      path-abempty  = *( \"/\" segment )\n      path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\n      path-rootless = segment-nz *( \"/\" segment )\n  */\n  const segment = pcharOnly + '*';\n  const segmentNz = pcharOnly + '+';\n  const segmentNzNc = '[' + unreserved + pctEncoded + subDelims + '@' + ']+';\n  const pathEmpty = '';\n  const pathAbEmpty = '(?:\\\\/' + segment + ')*';\n  const pathAbsolute = '\\\\/(?:' + segmentNz + pathAbEmpty + ')?';\n  const pathRootless = segmentNz + pathAbEmpty;\n  const pathNoScheme = segmentNzNc + pathAbEmpty;\n  const pathAbNoAuthority = '(?:\\\\/\\\\/\\\\/' + segment + pathAbEmpty + ')'; // Used by file:///\n  // hier-part = \"//\" authority path\n  rfc3986.hierPart = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathRootless + '|' + pathAbNoAuthority + ')';\n  rfc3986.hierPartCapture = '(?:' + '(?:\\\\/\\\\/' + authorityCapture + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathRootless + ')';\n  // relative-part = \"//\" authority path-abempty / path-absolute / path-noscheme / path-empty\n  rfc3986.relativeRef = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathNoScheme + '|' + pathEmpty + ')';\n  rfc3986.relativeRefCapture = '(?:' + '(?:\\\\/\\\\/' + authorityCapture + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathNoScheme + '|' + pathEmpty + ')';\n  // query = *( pchar / \"/\" / \"?\" )\n  // query = *( pchar / \"[\" / \"]\" / \"/\" / \"?\" )\n  rfc3986.query = '[' + pchar + '\\\\/\\\\?]*(?=#|$)'; //Finish matching either at the fragment part '|' end of the line.\n  rfc3986.queryWithSquareBrackets = '[' + pchar + '\\\\[\\\\]\\\\/\\\\?]*(?=#|$)';\n  // fragment = *( pchar / \"/\" / \"?\" )\n  rfc3986.fragment = '[' + pchar + '\\\\/\\\\?]*';\n  return rfc3986;\n}\nconst rfc3986 = generate();\nexport const ipVersions = {\n  v4Cidr: rfc3986.ipv4Cidr,\n  v6Cidr: rfc3986.ipv6Cidr,\n  ipv4: rfc3986.ipv4address,\n  ipv6: rfc3986.ipv6address,\n  ipvfuture: rfc3986.ipvFuture\n};\nfunction createRegex(options) {\n  const rfc = rfc3986;\n  // Construct expression\n  const query = options.allowQuerySquareBrackets ? rfc.queryWithSquareBrackets : rfc.query;\n  const suffix = '(?:\\\\?' + query + ')?' + '(?:#' + rfc.fragment + ')?';\n  // relative-ref = relative-part [ \"?\" query ] [ \"#\" fragment ]\n  const relative = options.domain ? rfc.relativeRefCapture : rfc.relativeRef;\n  if (options.relativeOnly) {\n    return wrap(relative + suffix);\n  }\n  // Custom schemes\n  let customScheme = '';\n  if (options.scheme) {\n    assert(options.scheme instanceof RegExp || typeof options.scheme === 'string' || Array.isArray(options.scheme), 'scheme must be a RegExp, String, or Array');\n    const schemes = [].concat(options.scheme);\n    assert(schemes.length >= 1, 'scheme must have at least 1 scheme specified');\n    // Flatten the array into a string to be used to match the schemes\n    const selections = [];\n    for (let i = 0; i < schemes.length; ++i) {\n      const scheme = schemes[i];\n      assert(scheme instanceof RegExp || typeof scheme === 'string', 'scheme at position ' + i + ' must be a RegExp or String');\n      if (scheme instanceof RegExp) {\n        selections.push(scheme.source.toString());\n      } else {\n        assert(rfc.schemeRegex.test(scheme), 'scheme at position ' + i + ' must be a valid scheme');\n        selections.push(escapeRegex(scheme));\n      }\n    }\n    customScheme = selections.join('|');\n  }\n  // URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n  const scheme = customScheme ? '(?:' + customScheme + ')' : rfc.scheme;\n  const absolute = '(?:' + scheme + ':' + (options.domain ? rfc.hierPartCapture : rfc.hierPart) + ')';\n  const prefix = options.allowRelative ? '(?:' + absolute + '|' + relative + ')' : absolute;\n  return wrap(prefix + suffix, customScheme);\n}\nfunction wrap(raw, scheme = null) {\n  raw = `(?=.)(?!https?\\:/(?:$|[^/]))(?!https?\\:///)(?!https?\\:[^/])${raw}`; // Require at least one character and explicitly forbid 'http:/' or HTTP with empty domain\n  return {\n    raw,\n    regex: new RegExp(`^${raw}$`),\n    scheme\n  };\n}\nconst genericUriRegex = createRegex({});\n/**\n * Generates a regular expression used to validate URI addresses.\n *\n * @param options - optional settings.\n *\n * @returns an object with the regular expression and meta data.\n */\nexport function uriRegex(options = {}) {\n  if (options.scheme || options.allowRelative || options.relativeOnly || options.allowQuerySquareBrackets || options.domain) {\n    return createRegex(options);\n  }\n  return genericUriRegex;\n}","map":{"version":3,"names":["assert","escapeRegex","generate","rfc3986","hexDigit","hexDigitOnly","unreserved","subDelims","pctEncoded","pchar","pcharOnly","decOctect","ipv4address","h16","ls32","IPv6SixHex","IPv6FiveHex","IPv6FourHex","IPv6ThreeHex","IPv6TwoHex","IPv6OneHex","IPv6NoneHex","IPv6NoneHex2","IPv6NoneHex3","ipv4Cidr","ipv6Cidr","ipv6address","ipvFuture","scheme","schemeRegex","RegExp","userinfo","IPLiteral","regName","host","port","authority","authorityCapture","segment","segmentNz","segmentNzNc","pathEmpty","pathAbEmpty","pathAbsolute","pathRootless","pathNoScheme","pathAbNoAuthority","hierPart","hierPartCapture","relativeRef","relativeRefCapture","query","queryWithSquareBrackets","fragment","ipVersions","v4Cidr","v6Cidr","ipv4","ipv6","ipvfuture","createRegex","options","rfc","allowQuerySquareBrackets","suffix","relative","domain","relativeOnly","wrap","customScheme","Array","isArray","schemes","concat","length","selections","i","push","source","toString","test","join","absolute","prefix","allowRelative","raw","regex","genericUriRegex","uriRegex"],"sources":["../src/uri.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}